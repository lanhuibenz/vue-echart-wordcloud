{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue-echart-wordcloud.js","webpack:///webpack/bootstrap 8a3f9f3f20fd2a8c1465","webpack:///./node_modules/zrenderjs/tool/util.js","webpack:///./node_modules/zrenderjs/shape/Base.js","webpack:///./node_modules/zrenderjs/tool/area.js","webpack:///./node_modules/zrenderjs/tool/color.js","webpack:///./node_modules/echarts/config.js","webpack:///./node_modules/zrenderjs/tool/vector.js","webpack:///./node_modules/echarts/component.js","webpack:///./node_modules/zrenderjs/shape/Rectangle.js","webpack:///./node_modules/echarts/component/base.js","webpack:///./node_modules/zrenderjs/tool/event.js","webpack:///./node_modules/zrenderjs/config.js","webpack:///./node_modules/zrenderjs/loadingEffect/Base.js","webpack:///./node_modules/zrenderjs/shape/Image.js","webpack:///./node_modules/echarts/util/shape/Icon.js","webpack:///./node_modules/echarts/util/ecData.js","webpack:///./node_modules/zrenderjs/tool/env.js","webpack:///./node_modules/zrenderjs/shape/Text.js","webpack:///./node_modules/zrenderjs/tool/curve.js","webpack:///./node_modules/zrenderjs/shape/Line.js","webpack:///./node_modules/zrenderjs/shape/util/dashedLineTo.js","webpack:///./node_modules/zrenderjs/mixin/Eventful.js","webpack:///./node_modules/zrenderjs/tool/matrix.js","webpack:///./node_modules/zrenderjs/shape/Polygon.js","webpack:///./node_modules/zrenderjs/shape/Circle.js","webpack:///./node_modules/zrenderjs/zrender.js","webpack:///./node_modules/zrenderjs/tool/log.js","webpack:///./node_modules/zrenderjs/tool/guid.js","webpack:///./node_modules/zrenderjs/mixin/Transformable.js","webpack:///./node_modules/echarts/util/shape/normalIsCover.js","webpack:///./node_modules/echarts/chart.js","webpack:///./node_modules/zrenderjs/shape/Sector.js","webpack:///src/lib/VueEchartWordcloud.vue","webpack:///./node_modules/zrenderjs/dep/excanvas.js","webpack:///./node_modules/echarts/chart/base.js","webpack:///./node_modules/zrenderjs/tool/math.js","webpack:///./node_modules/zrenderjs/shape/util/PathProxy.js","webpack:///./node_modules/zrenderjs/shape/Droplet.js","webpack:///./node_modules/echarts/util/shape/Symbol.js","webpack:///./node_modules/zrenderjs/shape/util/smoothSpline.js","webpack:///./node_modules/zrenderjs/shape/util/smoothBezier.js","webpack:///./node_modules/zrenderjs/shape/Polyline.js","webpack:///./node_modules/zrenderjs/shape/ShapeBundle.js","webpack:///./node_modules/echarts/util/accMath.js","webpack:///./node_modules/zrenderjs/shape/Ring.js","webpack:///./src/lib/index.js","webpack:///./src/lib/VueEchartWordcloud.vue","webpack:///./src/lib/VueEchartWordcloud.vue?d6fc","webpack:///./src/lib/VueEchartWordcloud.vue?867a","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/echarts/echarts.js","webpack:///./node_modules/zrenderjs/Handler.js","webpack:///./node_modules/zrenderjs/Painter.js","webpack:///./node_modules/zrenderjs/Layer.js","webpack:///./node_modules/zrenderjs/Storage.js","webpack:///./node_modules/zrenderjs/Group.js","webpack:///./node_modules/zrenderjs/animation/Animation.js","webpack:///./node_modules/zrenderjs/animation/Clip.js","webpack:///./node_modules/zrenderjs/animation/easing.js","webpack:///./node_modules/echarts/chart/island.js","webpack:///./node_modules/zrenderjs/shape/Star.js","webpack:///./node_modules/zrenderjs/shape/Heart.js","webpack:///./node_modules/echarts/util/shape/MarkLine.js","webpack:///./node_modules/zrenderjs/shape/BezierCurve.js","webpack:///./node_modules/echarts/util/ecAnimation.js","webpack:///./node_modules/echarts/util/ecEffect.js","webpack:///./node_modules/echarts/util/ecQuery.js","webpack:///./node_modules/echarts/util/number.js","webpack:///./node_modules/echarts/layout/EdgeBundling.js","webpack:///./node_modules/echarts/data/KDTree.js","webpack:///./node_modules/echarts/data/quickSelect.js","webpack:///./node_modules/echarts/component/toolbox.js","webpack:///./node_modules/echarts/component/dataView.js","webpack:///./node_modules/echarts/component/title.js","webpack:///./node_modules/echarts/component/tooltip.js","webpack:///./node_modules/echarts/util/shape/Cross.js","webpack:///./node_modules/echarts/component/legend.js","webpack:///./node_modules/zrenderjs/tool/computeBoundingBox.js","webpack:///./node_modules/echarts/util/shape/Candle.js","webpack:///./node_modules/echarts/component/timeline.js","webpack:///./node_modules/echarts/util/shape/Chain.js","webpack:///./node_modules/zrenderjs/loadingEffect/Bar.js","webpack:///./node_modules/zrenderjs/loadingEffect/Bubble.js","webpack:///./node_modules/zrenderjs/loadingEffect/DynamicLine.js","webpack:///./node_modules/zrenderjs/loadingEffect/Ring.js","webpack:///./node_modules/zrenderjs/loadingEffect/Spin.js","webpack:///./node_modules/zrenderjs/loadingEffect/Whirling.js","webpack:///./node_modules/echarts/theme/macarons.js","webpack:///./node_modules/echarts/theme/infographic.js","webpack:///./node_modules/echarts/chart/wordCloud.js","webpack:///./node_modules/echarts/layout/WordCloud.js","webpack:///./node_modules/echarts/layout/WordCloudRectZero.js","webpack:///./node_modules/echarts/component/grid.js","webpack:///./node_modules/echarts/component/dataRange.js","webpack:///./node_modules/echarts/util/shape/HandlePolygon.js","webpack:///./src/lib/VueEchartWordcloud.vue?561c"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","undefined","require","isDom","obj","nodeType","clone","source","result","Array","len","length","BUILTIN_OBJECT","objToString","key","mergeItem","target","overwrite","targetProp","merge","getContext","_ctx","window","_div","document","createElement","style","position","top","body","appendChild","G_vmlCanvasManager","initElement","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prop","constructor","each","cb","context","forEach","nativeForEach","map","nativeMap","push","filter","nativeFilter","bind","func","apply","arguments","ArrayProto","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","toString","_fillText","ctx","text","x","y","textFont","textAlign","textBaseline","font","rect","_getTextRect","split","lineHeight","getTextHeight","fillText","area","width","getTextWidth","height","vmlCanvasManager","matrix","guid","util","log","Transformable","Eventful","Base","options","id","highlightStyle","parent","__dirty","__clipShapes","invisible","ignore","zlevel","draggable","clickable","hoverable","z","brush","isHighlight","beforeBrush","beginPath","buildPath","brushType","fill","lineWidth","stroke","drawText","afterBrush","brushTypeOnly","getHighlightStyle","strokeColor","color","save","doClip","setContext","setTransform","restore","STYLE_CTX_MAP","styleProp","styleValue","ctxProp","clipShapeInvTransform","create","clipShape","needTransform","transform","invert","clip","newStyle","k","highlightColor","getHighlightColor","getHighlightZoom","mix","toRGB","type","drift","dx","dy","getRect","isCover","originPos","transformCoordToLocal","isCoverRect","isInside","__rect","normalStyle","textColor","fillStyle","al","bl","tx","ty","dd","textPosition","pointList","xStart","yStart","xEnd","yEnd","angle","Math","atan","PI","textX","textY","modSelf","isSilent","onmousemove","onmouseover","onmouseout","onmousedown","onmouseup","onclick","ondragenter","ondragover","ondragleave","ondrop","normalizeRadian","PI2","shape","zoneType","_mathReturn","_mathMethod","isPointInPath","_buildPathMethod","isInsideCircle","location","r1","r2","maxr","isInsideQuadraticStroke","cpX1","cpY1","isInsideCubicStroke","cpX2","cpY2","isInsideLine","isInsidePolyline","isInsideRing","r0","r","startAngle","endAngle","clockWise","isInsideSector","pathArray","isInsidePath","max","isInsidePolygon","isInsideRect","closePath","isOutside","x0","y0","x1","y1","_l","_a","_b","abs","tmp","x2","y2","x3","y3","curve","cubicProjectPoint","quadraticProjectPoint","isInsideArcStroke","cx","cy","anticlockwise","sqrt","atan2","points","N","w","j","windingLine","dir","swapExtrema","extrema","windingCubic","nRoots","cubicRootAt","roots","y0_","y1_","nExtrema","t","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","quadraticAt","x_","windingArc","xi","yi","beginSubpath","firstCmd","hasStroke","hasFill","seg","command","rx","ry","theta","dTheta","cos","sin","_x","_textWidthCache","measureText","_textWidthCacheCounter","TEXT_CACHE_MAX","_textHeightCache","_textHeightCacheCounter","customPalette","userPalete","palette","resetPalette","_palette","getColor","idx","customHighlight","userHighlightColor","resetHighlight","_highlightColor","getRadialGradient","colorList","gradient","createRadialGradient","addColorStop","__nonRecursion","getLinearGradient","createLinearGradient","getStepColors","start","end","step","toRGBA","getData","colors","stepR","stepG","stepB","stepA","g","b","a","toColor","adjust","floor","toFixed","getGradientColors","ret","steps","pop","concat","data","format","ceil","slice","sx","join","toArray","trim","replace","convert","isCalculableColor","alpha","_HSV_2_RGB","_HSL_2_RGB","_RGB_2_HSB","_RGB_2_HSL","toHex","toHSVA","toHSV","toHSBA","toHSB","toHSLA","toHSL","toName","_nameColors","String","normalize","test","parseInt","lift","level","direct","reverse","color1","color2","weight","data1","data2","weight1","weight2","min","random","match","colorRegExp","Error","rgb","rgba","parseFloat","hsxa","h","unshift","Number","fun","TypeError","region","R","G","B","H","S","V","v1","v2","v3","L","_HUE_2_RGB","vH","vMin","vMax","delta","deltaR","deltaG","deltaB","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","CHART_TYPE_LINE","CHART_TYPE_BAR","CHART_TYPE_SCATTER","CHART_TYPE_PIE","CHART_TYPE_RADAR","CHART_TYPE_VENN","CHART_TYPE_TREEMAP","CHART_TYPE_TREE","CHART_TYPE_MAP","CHART_TYPE_K","CHART_TYPE_ISLAND","CHART_TYPE_FORCE","CHART_TYPE_CHORD","CHART_TYPE_GAUGE","CHART_TYPE_FUNNEL","CHART_TYPE_EVENTRIVER","CHART_TYPE_WORDCLOUD","CHART_TYPE_HEATMAP","COMPONENT_TYPE_TITLE","COMPONENT_TYPE_LEGEND","COMPONENT_TYPE_DATARANGE","COMPONENT_TYPE_DATAVIEW","COMPONENT_TYPE_DATAZOOM","COMPONENT_TYPE_TOOLBOX","COMPONENT_TYPE_TOOLTIP","COMPONENT_TYPE_GRID","COMPONENT_TYPE_AXIS","COMPONENT_TYPE_POLAR","COMPONENT_TYPE_X_AXIS","COMPONENT_TYPE_Y_AXIS","COMPONENT_TYPE_AXIS_CATEGORY","COMPONENT_TYPE_AXIS_VALUE","COMPONENT_TYPE_TIMELINE","COMPONENT_TYPE_ROAMCONTROLLER","backgroundColor","markPoint","symbol","symbolSize","large","effect","show","loop","period","scaleSize","bounceDistance","itemStyle","normal","borderWidth","label","emphasis","markLine","smoothness","precision","bundling","enable","maxTurningAngle","lineStyle","textStyle","decoration","fontFamily","fontFamily2","fontSize","fontStyle","fontWeight","EVENT","REFRESH","RESTORE","RESIZE","CLICK","DBLCLICK","HOVER","MOUSEOUT","DATA_CHANGED","DATA_ZOOM","DATA_RANGE","DATA_RANGE_SELECTED","DATA_RANGE_HOVERLINK","LEGEND_SELECTED","LEGEND_HOVERLINK","MAP_SELECTED","PIE_SELECTED","MAGIC_TYPE_CHANGED","DATA_VIEW_CHANGED","TIMELINE_CHANGED","MAP_ROAM","FORCE_LAYOUT_END","TOOLTIP_HOVER","TOOLTIP_IN_GRID","TOOLTIP_OUT_GRID","ROAMCONTROLLER","DRAG_ENABLE_TIME","EFFECT_ZLEVEL","effectBlendAlpha","symbolList","loadingEffect","loadingText","noDataEffect","noDataText","calculable","calculableColor","calculableHolderColor","nameConnector","valueConnector","animation","addDataAnimation","animationThreshold","animationDuration","animationDurationUpdate","animationEasing","ArrayCtor","Float32Array","vector","out","copy","v","set","add","scaleAndAdd","sub","lenSquare","mul","div","dot","scale","distance","distanceSquare","negate","lerp","applyTransform","lengthSquare","dist","distSquare","_componentLibrary","Rectangle","_buildRadiusPath","r3","r4","radius","total","moveTo","lineTo","quadraticCurveTo","round","ecTheme","messageCenter","zr","option","myChart","series","component","shapeList","effectList","_onlegendhoverlink","param","legendHoverLink","targetName","ecConfig","ecData","__animating","addHoverShape","ecQuery","number","zrUtil","canvasSupported","_getZ","zWhat","opt","getZlevelBase","getZBase","reformOption","reformCssArray","getShapeById","getFont","finalTextStyle","getTextStyle","targetStyle","getItemStyleColor","itemColor","seriesIndex","dataIndex","getDataFromOption","defaultData","subPixelOptimize","resize","refresh","clearEffectShape","setTimeout","animationEffect","clear","delShape","dispose","onbeforDispose","unbind","onafterDispose","query","deepQuery","deepMerge","parsePercent","parseCenter","parseRadius","numAddCommas","addCommas","getPrecision","getX","e","zrenderX","offsetX","layerX","clientX","getY","zrenderY","offsetY","layerY","clientY","getDelta","zrenderDelta","wheelDelta","detail","stop","addEventListener","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","MOUSEWHEEL","MOUSEMOVE","MOUSEOVER","MOUSEDOWN","MOUSEUP","GLOBALOUT","DRAGSTART","DRAGEND","DRAGENTER","DRAGOVER","DRAGLEAVE","DROP","touchClickDelay","elementClassName","catchBrushException","debugMode","devicePixelRatio","setOptions","TextShape","RectangleShape","createTextShape","canvasWidth","canvasHeight","createBackgroundShape","painter","addShapeHandle","storage","addHover","refreshHandle","refreshHover","_width","_height","loadingTimer","_start","setInterval","clearInterval","getLocation","loc","totalWidth","totalHeight","ZImage","refreshNextFrame","image","_imageCache","src","Image","onload","nodeName","toUpperCase","ActiveXObject","readyState","complete","sWidth","sHeight","sy","drawImage","clearCache","_iconMark","_iconMarkUndo","_iconMarkClear","_iconDataZoom","_iconDataZoomReset","_iconRestore","arc","_iconLineChart","_iconBarChart","_iconPieChart","_iconFunnelChart","_iconForceChart","_iconChordChart","_iconStackChart","_iconTiledChart","_iconDataView","_iconSave","_iconCross","_iconCircle","_iconRectangle","_iconTriangle","_iconDiamond","_iconArrow","_iconStar","StarShape","_iconHeart","_iconDroplet","_iconPin","_iconImage","ImageShape","_imageShape","Icon","iconLibrary","mark","markUndo","markClear","dataZoom","dataZoomReset","lineChart","barChart","pieChart","funnelChart","forceChart","chordChart","stackChart","tiledChart","dataView","saveAsImage","cross","circle","rectangle","triangle","diamond","arrow","star","heart","droplet","pin","iconType","pack","special","special2","_echartsData","_series","_seriesIndex","_data","_dataIndex","_name","_value","_special","_special2","ua","os","browser","webkit","android","ipad","ipod","iphone","webos","touchpad","kindle","silk","blackberry","bb10","rimtabletos","playbook","chrome","firefox","ie","safari","webview","version","ios","tablet","phone","navigator","userAgent","Text","maxWidth","strokeText","isAroundZero","val","EPSILON","isNotAroundZero","p0","p1","p2","p3","onet","cubicDerivativeAt","A","C","t1","disc","K","t2","discSqrt","Y1","Y2","pow","ONE_THIRD","T","acos","ASqrt","THREE_SQRT","t3","cubicSubdivide","p01","p12","p23","p012","p123","p0123","interval","Infinity","_v0","_t","_v1","d1","prev","next","_v2","d2","quadraticDerivativeAt","divider","quadraticSubdivide","dashedLineTo","Line","lineType","dashLength","dashPattern","setLineDash","numDashes","flag","_handlers","one","event","handler","_h","newList","dispatch","args","argLen","splice","dispatchWithContext","identity","m1","m2","translate","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","smoothSpline","smoothBezier","Polygon","smooth","controlPoints","smoothConstraint","cp1","cp2","bezierCurveTo","_dashLength","minX","MAX_VALUE","maxX","MIN_VALUE","minY","maxY","Circle","getFrameCallback","zrInstance","_needsRefreshNextFrame","Handler","Painter","Storage","Animation","_instances","zrender","init","dom","ZRender","getInstance","delInstance","env","stage","update","oldDelFromMap","delFromMap","elId","el","stopAnimation","getId","addShape","addElement","addGroup","group","shapeId","delElement","delGroup","groupId","modShape","modElement","modGroup","addRoot","delRoot","params","mod","modLayer","zLevel","config","render","callback","refreshShapes","animate","path","pathSplitted","__animators","animators","animator","during","done","clearAnimation","showLoading","hideLoading","getWidth","getHeight","toDataURL","shapeToImage","on","eventName","eventHandler","un","trigger","console","idStart","origin","mTranslate","rotation","needLocalTransform","updateNeedTransform","updateTransform","parentHasTransform","haveOrigin","invTransform","lookAt","decomposeTransform","_chartLibrary","math","computeBoundingBox","vec2","min0","min1","max0","max1","Sector","degreeToRadian","unitX","unitY","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_echarts_echarts__","__WEBPACK_IMPORTED_MODULE_0_echarts_echarts___default","__WEBPACK_IMPORTED_MODULE_1_echarts_chart_wordCloud__","mounted","editChartData","chartContent","drawChart","methods","querySelector","charCloudOption","size","textRotation","textPadding","autoSize","minSize","setOption","createItemStyle","_this","item","computed","setChartContainer","chartWidth","chartHeight","props","required","context_","CanvasRenderingContext2D_","f","var_args","encodeHtmlAttribute","addNamespace","doc","prefix","urn","namespaces","addNamespacesAndStylesheet","styleSheets","ss","createStyleSheet","owningElement","cssText","onPropertyChange","srcElement","propertyName","clearRect","attributes","nodeValue","firstChild","clientWidth","clientHeight","onResize","createMatrixIdentity","matrixMultiply","sum","copyState","o1","o2","lineCap","lineJoin","miterLimit","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","strokeStyle","globalAlpha","scaleX_","scaleY_","lineScale_","getRgbHslContent","styleString","parts","substring","charAt","percent","clamp","hslToRgb","q","hueToRgb","decToHex","processStyle","processStyleCache","str","colorData","processFontStyle","fontStyleCache","ex","DEFAULT_STYLE","variant","fontVariant","family","getComputedStyle","element","computedStyle","canvasFontSize","currentStyle","buildStyle","processLineCap","lineCapMap","canvasElement","m_","mStack_","aStack_","currentPath_","Z","canvas","ownerDocument","overlayEl","cloneNode","element_","cp1x","cp1y","cp2x","cp2y","currentX_","currentY_","appendStroke","lineStr","opacity","appendFill","arcScaleX","arcScaleY","CanvasGradient_","focus","shift","expansion","type_","x0_","x1_","getCoords","dimension","r0_","r1_","stops","colors_","sort","cs1","cs2","offset","opacity1","opacity2","CanvasPattern_","deltaLeft","deltaTop","src_","aX","aY","Z2","matrixIsFinite","isFinite","setM","updateLineScale","aType","repetition","assertImageIsValid","repetition_","throwException","width_","height_","DOMException_","img","tagName","code","message","mr","ms","mc","G_vmlCanvasManager_","opt_doc","attachEvent","init_","els","getElementsByTagName","innerHTML","attrs","specified","butt","contextPrototype","textMeasureEl_","removeNode","aCP1x","aCP1y","aCP2x","aCP2y","aCPx","aCPy","cp","aRadius","aStartAngle","aEndAngle","aClockwise","arcType","pStart","pEnd","aWidth","aHeight","strokeRect","oldPath","fillRect","aX0","aY0","aX1","aY1","aR0","aR1","dw","dh","sw","sh","oldRuntimeWidth","runtimeStyle","oldRuntimeHeight","vmlStr","scaleX","scaleY","c2","c3","c4","insertAdjacentHTML","aFill","aRot","m11","m12","m21","m22","drawText_","left","right","fontStyleString","elementStyle","toLowerCase","direction","skewM","skewOffset","lastChild","createTextNode","offsetWidth","arcTo","createPattern","aOffset","aColor","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","VALIDATION_ERR","TYPE_MISMATCH_ERR","CanvasRenderingContext2D","CanvasGradient","CanvasPattern","DOMException","isCoordAvailable","coord","ComponentBase","selectedMap","lastShapeList","shapeHandler","isClick","calculableShape","brushTyep","dragged","isDrop","ondragend","isDragend","IconShape","MarkLineShape","SymbolShape","PolylineShape","ShapeBundle","ecAnimation","ecEffect","accMath","EdgeBundling","zrArea","setCalculable","dragEnableTime","status","dragIn","legend","dragOut","needRefresh","hasFind","sData","accAdd","getRelatedAmount","del","onlegendSelected","legendSelected","selected","itemName","_buildPosition","_symbol","_sIndex2ShapeMap","_sIndex2ColorMap","xMarkMap","xAxisIndex","yAxisIndex","xAxis","yAxis","_position2sIndexMap","bottom","other","getAxis","getPosition","_buildSinglePosition","addShapeList","seriesArray","mapData","_mapData","locationMap","maxDataLength","_buildHorizontal","_buildVertical","_buildOther","buildMark","serie","stackKey","serieName","iconShape","stackMap","isSelected","getItemShape","barBorderWidth","barBorderColor","setItemShape","stack","_calculMarkMapXY","xy","valueIndex","grid","tarMark","getCoord","getYend","isHorizontal","getXend","addLabel","tarShape","orient","queryTarget","nLabel","eLabel","nTextStyle","eTextStyle","_getLabelText","align","baseline","formatter","seriesName","_buildMarkLine","_buildMarkPoint","mpData","pos","attachStyle","markAttachStyle","getMarkCoord","_markPoint","mlData","_markLine","shapeBundle","firstShape","_mark","mpOption","itemShape","nColor","eColor","pList","dataRange","zrWidth","zrHeight","getLargeMarkPointShape","isNaN","tooltip","getSymbolShape","_geo","getMarkGeo","normalizeOptionValue","mlOption","defaultColor","edges","mergeData","rawData","enableBundling","edgeBundling","run","edge","rawEdge","getMarkLineShape","emptyColor","symbolRotate","nBorderWidth","eBorderWidth","borderColor","RegExp","_y","value0","value1","nlineStyle","elineStyle","ShapeCtor","symbolBorderColor","symbolBorder","shapeStyle","curveness","updatePoints","backupShapeList","delay","maxLenth","isUpdate","duration","easing","oldMap","newMap","renderAsImage","motionlessOnce","_getAnimationKey","_animateMod","oldShape","newShape","icon","candle","sector","ring","polygon","ribbon","gaugePointer","markline","line","animationMark","motionBlur","lastFrameAlpha","clearMotionBlur","effectAnimator","addMark","markData","markType","oriMarkData","lastLength","delMark","markName","isDegrees","_radians","radianToDegree","PathSegment","PathProxy","pathCommands","_min","_max","fastBoundingRect","begin","isEmpty","Droplet","_pathProxy","Symbol","PolygonShape","polygonInstance","subLen","subSetLength","isArray","curSize","halfSize","interpolate","v0","isLoop","constraint","segs","w2","w3","prevPoint","nextPoint","cps","hasConstraint","point","d0","cp0","Polyline","pointListLength","controlPointList","updateControlPoints","subShape","subShapeStyle","subRect","accDiv","arg1","arg2","s1","s2","accMul","accSub","Ring","__WEBPACK_IMPORTED_MODULE_0__VueEchartWordcloud_vue__","comment","install","Vue","use","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueEchartWordcloud_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_21f2da39_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueEchartWordcloud_vue__","normalizeComponent","__vue_styles__","Component","content","locals","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","sourceMap","unescape","encodeURIComponent","JSON","stringify","list","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","addStyle","createStyleElement","styleElement","head","remove","ssrIdKey","isProduction","noop","parentNode","removeChild","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","css","media","index","styleSheet","replaceText","cssNode","childNodes","insertBefore","setAttribute","ssrId","hasDocument","DEBUG","listToStyles","parentId","_isProduction","_options","mayRemove","textStore","replacement","Boolean","newStyles","part","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","staticRenderFns","_compiled","functional","_scopeId","hook","$vnode","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","existing","beforeCreate","_injectStyles","MessageCenter","zrEvent","Echarts","_themeConfig","_connected","_status","_curEventType","_chartList","_messageCenter","_messageCenterOutSide","_init","callChartListMethodReverse","ecInstance","methodName","arg0","chartList","chart","_canvasSupported","_idBase","Date","dependencies","theme","error","getAttribute","setTheme","getInstanceById","ZR_EVENT","ZR_EVENT_LISTENS","_zr","eventPackage","that","_onevent","__onevent","eventBehaviors","_onzrevent","eventValue","Island","_island","island","Toolbox","_toolbox","toolbox","componentLibrary","__echartsId","fromMyself","_onlegendSelected","dz","silence","absoluteZoom","zoom","_ondataZoom","_ondataRange","tb","setMagicType","magicType","_onmagicTypeChanged","_ondataViewChanged","_tooltipHover","_onrestore","_onrefresh","connectTrigger","connectedEventHandler","_onclick","_eventPackage","_ondblclick","_onmouseover","_onmouseout","_ondragstart","_ondragenter","_ondragover","_ondragleave","_ondrop","_ondragend","_timeline","_syncBackupData","_option","_clearEffect","_render","getMagicOption","_refreshInside","curOption","syncBackupData","getRealDataIndex","_noDataCheck","magicOption","nodes","links","eventList","loadOption","noDataLoadingOption","_mergeGlobalConifg","bgColor","cList","lastIndexOf","chartLibrary","ComponentClass","componentType","componentList","ChartClass","chartType","chartMap","refixAxisShape","imgId","getElementById","getDataURL","getImage","_disposeChartList","_optionRestore","reset","getOption","mergeList","themeColor","notMerge","timeline","_setTimelineOption","_setOption","keepTimeLine","feature","syncOption","restoreOption","restoreSource","setSeries","getSeries","Timeline","addData","seriesIdx","isHead","dataGrow","additionData","animationDone","optionRestore","seriesItem","inMethod","outMethod","seriesItemData","mSeriesItemData","legendData","mLegendData","legendDataIdx","axisData","mAxisData","axisIdx","chartAnimationCount","chartAnimationDone","addMarkPoint","_addMark","addMarkLine","seriesR","seriesRItem","markOpt","markOptR","delMarkPoint","_delMark","delMarkLine","dataArray","targetIndex","dataItem","getDom","getZrender","imgType","hideTip","title","imgDom","getConnectedDataURL","isConnected","tempDom","imgList","offsetLeft","offsetTop","offsetHeight","minLeft","minTop","maxRight","maxBottom","zrDom","zrImg","getConnectedImage","eventListener","connect","connectTarget","disConnect","loadingOption","bar","bubble","dynamicLine","spin","whirling","hideDataView","effectOption","Effect","clearLayer","bind2Arg","bind3Arg","arg3","initDomHandler","instance","domHandlerNames","domHandlers","findHover","_draggingTarget","_event","_mouseX","_mouseY","_lastHover","_processOutShape","_processDragLeave","_processDragEnter","_processOverShape","_processDragOver","_hasfound","eventTool","mat2d","isZRenderElement","toElement","relatedTarget","className","_isMouseDown","click","manually","_zrenderEventFixed","_clickThreshold","_dispatchAgency","_mousemoveHandler","dblclick","mousewheel","needsRefresh","mouseX","mouseY","eachBuildinLayer","layer","zoomable","__zoom","newZoom","maxZoom","minZoom","dirty","mousemove","isLoading","_lastX","_lastY","_processDragStart","_iterateAndFindHover","delHover","clearHover","cursor","panable","hasHoverShape","mouseout","_processDrop","_processDragEnd","mousedown","_lastDownButton","button","_mouseDownTarget","_lastMouseDownMoment","mouseup","touchstart","_lastTouchMoment","_mobileFindFixed","_mousedownHandler","touchmove","_isDragging","touchend","_mouseupHandler","now","_clickHandler","_lastClickMoment","_dblclickHandler","_findHover","_domHover","getDomHover","_resizeHandler","_touchstartHandler","_touchmoveHandler","_touchendHandler","_mousewheelHandler","_mouseoutHandler","ondblclick","eventArgs","removeEventListener","detachEvent","targetShape","draggedShape","eventPacket","eveObj","eachOtherLayer","currentLayer","getShapeList","currentZLevel","getLayer","MOBILE_TOUCH_OFFSETS","isTouch","zrenderFixed","touch","targetTouches","changedTouches","rBounding","_domRoot","getBoundingClientRect","returnFalse","doNothing","isLayerValid","isBuildin","BaseLoadingEffect","Layer","_getWidth","_getHeight","domRoot","overflow","_layers","_zlevelList","_layerConfig","_loadingEffect","_createShapeToImageProcessor","_bgDom","onselectstart","hoverLayer","initContext","paintAll","_paintList","_preProcessLayer","unusedCount","_postProcessLayer","_updateLayerStatus","flush","onbrush","insertLayer","prevLayer","prevDom","nextSibling","eachLayer","getLayers","layers","elCounts","elCount","setLoadingEffect","_clearLayer","delLayer","getHoverShapes","_brushHover","hover","loading","display","imageLayer","clearColor","iterShape","stl","defaultView","paddingLeft","paddingRight","paddingTop","paddingBottom","_shapeToImage","shapeTransform","imgShape","me","createDom","newDom","domBack","ctxBack","dpr","createBackBuffer","haveClearColor","haveMotionBLur","globalCompositeOperation","shapeCompareFunc","__renderidx","Group","defaultIterateOption","_elements","_hoverElements","_roots","_shapeList","_shapeListOffset","updateShapeList","hoverElements","hoverConnect","_updateAndAddShape","clipShapes","_children","child","_storage","ondrift","addChildrenToStorage","addToMap","delChildrenFromStorage","_renderList","children","childAt","addChild","clearChildren","eachChild","haveContext","traverse","_defaultGetter","_defaultSetter","_interpolateNumber","_interpolateArray","arrDim","len2","_isArrayLike","_catmullRomInterpolateArray","_catmullRomInterpolate","_cloneValue","arraySlice","rgba2String","Clip","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","onframe","_clips","_running","_time","__inStep","__needsRemove","_update","time","getTime","clips","deferredEvents","deferredClips","fire","deferred","Animator","setter","_tracks","_target","_loop","_getter","_setter","_clipCount","_delay","_doneList","_onframeList","_clipList","when","propName","useSpline","ondestroy","keyframes","trackLen","firstVal","isValueArray","isValueColor","trackMaxTime","kfPercents","kfValues","cacheKey","cachePercent","range","life","_targetPool","_life","_startTime","_endTime","gap","onrestart","Easing","easingFunc","schedule","restart","remainder","eventType","arg","Linear","QuadraticIn","QuadraticOut","QuadraticInOut","CubicIn","CubicOut","CubicInOut","QuarticIn","QuarticOut","QuarticInOut","QuinticIn","QuinticOut","QuinticInOut","SinusoidalIn","SinusoidalOut","SinusoidalInOut","ExponentialIn","ExponentialOut","ExponentialInOut","CircularIn","CircularOut","CircularInOut","ElasticIn","asin","ElasticOut","ElasticInOut","BackIn","BackOut","BackInOut","BounceIn","BounceOut","BounceInOut","ChartBase","_nameConnector","_valueConnector","_zrHeight","_zrWidth","onmousewheel","dvalue","calculateStep","CircleShape","_combine","srcShape","zrColor","newOption","newWidth","newHieght","xScale","yScale","islandOption","islandShape","_type","newShapeList","Star","dStep","deg","ri","Heart","MarkLine","LineShape","lineInstance","CurveShape","curveInstance","curveTool","brushSymbol","lineDash","sign","BezierCurve","_minX","_minY","_maxX","_maxY","_x2","_y2","oldPointList","newPointList","newPointListLen","_orient","oldPointListLen","cloneStyle","newShapeStyle","newX","newY","newHeight","newPosition","_animationAdd","source0","source1","target0","target1","newXArr","newYArr","subdivide","effectShape","centerX","centerY","largePoint","clip1","clip2","isLarge","effectDone","distanceList","totalDist","largeLine","maxDuration","subEffectAnimators","subEffectShape","subEffectAnimator","clearAllAnimators","__dummy","oldStop","optionTarget","optionLocation","curIdx","ctrList","finalOption","tempOption","_trim","maxValue","center","zrSize","count","squaredDistance","CoarsenedEdge","mp0","mp1","Edge","_startPoint","_endPoint","ink","v2Dist","BundledEdgeGroup","edgeList","v2Create","maxNearestEdge","maxIteration","KDTree","v2DistSquare","v2Copy","v2Clone","getStartPoint","getEndPoint","addEdge","removeEdge","rawEdges","pointApproxEqual","cleanEdgePoints","edgePoints","rawEdgePoints","res","off","_iterate","nIterate","coarsenedEdges","groups","newRes","savedInk","newEdges","buildNewEdges","fromEdgePoints","newEdgePoints","newGroups","totalSavedInk","tree","nearests","_mp0","_mp1","_newGroupInk","newGroupInk","nearestN","maxSavedInk","mostSavingInkEdge","lastCheckedGroup","nearest","_calculateGroupEdgeInk","_calculateEdgeEdgeInk","startPointSet","endPointSet","e0","e1","_calculateMeetPoints","edgeTryAdd","_limitTurningAngle","v10","vTmp","project","tmpOut","pointSet","maxTurningAngleCos","maxTurningAngleTan","maxMovement","turningAngleCos","movement","Node","axis","quickSelect","_buildTree","_stack","_nearstNList","medianIndex","median","node","curr","minDist","nearestNode","currDist","isLeft","needsCheckOtherSide","_addNearest","found","nearestNList","output","defaultCompareFunc","swapElement","idx0","idx1","select","nth","compareFunc","pivotIdx","pivotValue","_magicType","_magicMap","_isSilence","_iconList","_iconShapeMap","_featureTitle","_featureIcon","_featureColor","_featureOption","_enableColor","_disableColor","_markShapeList","_onMark","__onMark","_onMarkUndo","__onMarkUndo","_onMarkClear","__onMarkClear","_onDataZoom","__onDataZoom","_onDataZoomReset","__onDataZoomReset","_onDataView","__onDataView","_onRestore","__onRestore","_onSaveAsImage","__onSaveAsImage","_onMagicType","__onMagicType","_onCustomHandler","__onCustomHandler","_onmousemove","__onmousemove","_onmousedown","__onmousedown","_onmouseup","__onmouseup","__onclick","disableColor","effectiveColor","padding","itemGap","itemSize","showTitle","readOnly","lang","tiled","force","chord","pie","funnel","zrConfig","_buildShape","toolboxOption","iconName","_itemGroupLocation","_getItemGroupLocation","_buildBackground","_buildItem","_iconDisable","_zoomQueue","iconLength","lastX","lastY","_dataView","DataView","_marking","_markShape","_zooming","_zoomShape","_zoomStart","zoomOption","fillerColor","handleColor","rectZoom","start2","end2","_iconEnable","_markStart","_resetMark","_resetZoom","saveOption","downloadDiv","documentElement","downloadLink","href","subtext","_d","featureHandler","isRestore","oriType","__boundaryGap","boundaryGap","__type","__itemStyle","__stack","_defaultMagic","cType1","cType2","hide","notMark","_tDom","_textArea","_buttonRefresh","_buttonClose","_hasShow","_stop","_lang","_gCssText","_sizeCssText","customContent","_optionToContent","_save","valueList","axisList","_contentToOption","contentValueList","contentIdx","trimer","Title","subtextStyle","titleOption","link","sublink","subtarget","subfont","textShape","open","subtextShape","Tooltip","_onglobalout","__onglobalout","_hide","__hide","_tryShow","__tryShow","_refixed","__refixed","_setContent","ticket","__setContent","_mousein","hasAppend","_axisLineShape","_axisShadowShape","_axisCrossShape","CrossShape","showing","rectangleInstance","showContent","islandFormatter","showDelay","hideDelay","transitionDuration","enterable","borderRadius","axisPointer","crossStyle","shadowStyle","zrShapeBase","_style","transitionText","_lastDataIndex","_lastSeriesIndex","_lastItemTriggerId","_lastTipShape","tipShape","_show","specialCssText","domHeight","domWidth","_defaultCssText","needShow","_curTarget","_showItemTrigger","_showAxisTrigger","clearTimeout","_hidingTicket","_showingTicket","_hideDelay","_findPolarTrigger","_findAxisTrigger","_getNearestDataIndex","polar","polarIndex","getNearestIndex","_showPolarTrigger","categoryAxis","curCoord","getCoordByIndex","getNameByIndex","axisLayout","axisIndex","_isSelected","_axisLineWidth","_styleAxisPointer","getGap","0","1","2","3","_curTicket","NaN","_encodeHTML","indicatorName","indicator","polarData","axisTrigger","value2","indicator2","4","5","6","7","_itemFormatter","radar","eventRiver","html","name1","name2","evolution","curType","pointType","shadow","pType","isVertical","crossWidth","getArea","getValueFromCoord","_enterable","mx","my","_needAxisTrigger","_showDelay","ontooltipHover","_selectedMap","_setSelectedMap","getSelectedMap","showTip","isAxisTrigger","getVector","getCenter","midAngle","mapType","_mapType","Cross","Legend","_legendSelected","__legendSelected","_dispatchHoverLink","__dispatchHoverLink","_colorIndex","_colorMap","_hasDataMap","SectorShape","CandleShape","itemWidth","itemHeight","selectedMode","legendOption","itemType","dataTextStyle","dataFont","formattedName","dataLength","_getName","_getFormatterName","_getSomethingByName","_getItemShapeByType","_mLineOptimize","_getFormatterNameFromData","lineOffsetArray","curLineIndex","temp","tempTextWidth","categories","imageLocation","something","setColor","amount","legendName","hasColor","setSelected","selectStatus","legendIcon","computeCubeBezierBoundingBox","xDim","yDim","computeQuadraticBezierBoundingBox","ct1","ct2","extremity","computeArcBoundingBox","cubeBezier","quadraticBezier","Candle","_numberOrder","yList","_ondrift","__ondrift","__ondragend","_setCurrentOption","timelineOption","currentIndex","_onFrame","_syncHandleShape","autoPlay","playTicket","playInterval","play","timelineControl","ChainShape","realtime","controlPosition","checkpointStyle","controlStyle","_location","_getLocation","_buildControl","_chainPoint","_getChainPoint","_getInterval","showLabel","_buildChain","_buildHandle","_getReformedLabel","chainPoint","labelSpace","labelSize","isEnough","wLen","oLen","xList","curSymbol","iconSize","iconGap","iconStyle","_ctrLastShape","last","_ctrPlayShape","_ctrNextShape","_timelineShae","curPoint","_handleShape","cpStyle","_findChainIndex","newIndex","Chain","buildLinePath","_updateTextTransform","_transform","originX","originY","Bar","timeInterval","background","barShape","progress","Bubble","animationY","DynamicLine","animationX","RingShape","darkColor","shapeRing","clolrList","_color","Spin","textWidth","textHeight","preAngle","Whirling","DropletShape","colorIn","colorOut","colorWhirl","circleIn","circleOut","dataBackgroundColor","axisLine","splitLine","valueAxis","splitArea","areaStyle","barBorderRadius","color0","scatter","linkStyle","chordStyle","gauge","axisTick","splitNumber","pointer","axisLabel","offsetCenter","Cloud","CloudLayout","wordCloud","_initSerie","layoutConfig","wordletype","autoSizeCal","clouds","_buildShapes","_buildTextShape","normalColor","emphasisColor","ZeroArray","startStep","totalArea","maxArea","_autoCalTextSize","maxWit","maxHit","dfop","timer","_cloudSprite","hasText","_place","board","maxBounds","tags","_fixTagPosition","endcallback","wordsdata","defaultOption","calculate","initarr","imgboard","_initProperty","_initMethod","_initCanvas","_initData","datas","thatop","cloudText","cloudFont","cloudFontNormal","cloudFontSize","cloudRotate","cloudPadding","archimedeanSpiral","rectangularSpiral","functor","spiral","words","spirals","archimedean","rectangular","areaPresent","cloudRadians","ratio","getImageData","Canvas","cw","ch","di","sprite","maxh","sr","cr","wcr","wsr","hcr","hsr","xoff","yoff","pixels","w32","seen","seenRow","tag","dxdy","startX","startY","maxDelta","dt","lx","msx","row","cloumn","shapeArea","maxwidth","maxheight","measureTextWitHitByarea","aw","ah","rw","rh","minTextSize","dpre","sizesum","dts","ressum","areapre","totalarea","RECT","_initOption","callbackObj","_calculateReturn","_calculateRect","_rectZeroArray","_rectBoard","num","Grid","getBbox","zeroX","zeroY","_axisList","gridOption","DataRange","_dataRangeSelected","__dataRangeSelected","_onhoverlink","__onhoverlink","_range","HandlePolygonShape","splitList","hoverLink","_textGap","_isContinuity","_buildGradient","dataRangeOption","_syncShapeFromRange","_valueTextList","needValueText","_getTextShape","getColorByIndex","_getItemShape","_idx","per","_calculableLocation","_buildFiller","_bulidMask","_bulidHandle","_buildIndicator","_indicatorShape","_fillerShape","pointListStart","textXStart","textYStart","coverRectStart","pointListEnd","textXEnd","textYEnd","coverRectEnd","_textFormat","_startShape","_endShape","_startMask","_endMask","handlerWidth","_syncFillerShape","_dispatchDataRange","optRangeStart","optRangeEnd","_syncShape","_gap","valueMax","valueMin","_useCustomizedSplit","_splitList","_colorList","curValue","totalValue","valueStart","valueEnd","_buildColorList","newColorList","_buildGap","_buildDataList","valueTextList","useCustomizedSplit","splitListItem","single","_buildSplitList","splitRangeList","reformedItem","HandlePolygon","_vm","$createElement","_c","_self","staticClass","esExports"],"mappings":"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ACAlpE,MAAA,GAEAqpE,WACArpE,MAAA,GAEAmpE,WACAnoE,WACAxe,OAAA,QACAwB,KAAA,YAKA84E,OACAoM,UACAloE,WACAxe,MAAA,SAGA6mF,WACArpE,MAAA,EACAspE,WACA9mF,OAAA,mDAGA2mF,WACAnoE,WACAxe,MAAA,UAKAgrD,UACAxsC,WACAxe,MAAA,WAEA0iF,cACA5kE,QAAsB9d,MAAA,WACtBie,UAAwBje,MAAA,YAExBod,OAAA,cACAC,WAAA,GAIA48B,MACAp8B,WACAC,QACAC,YAAA,EACA+5B,YAAA,OACAt5B,WACA9gB,MAAA,IAGAugB,UACAF,YAAA,IAGAX,OAAA,SACAC,WAAA,KAIAnc,GACA2c,WACAC,QACA9d,MAAA,UACAgnF,OAAA,UACAxoE,WACA9gB,MAAA,EACAsC,MAAA,UACAgnF,OAAA,cAOAC,SACAppE,WACAC,QACAC,YAAA,EACA+5B,YAAA,yBAEA75B,UACAF,YAAA,IAGAX,OAAA,QACAC,WAAA,GAIAi/D,OACAl/D,OAAA,cACAC,WAAA,GAKA3hB,KACAmiB,WACAC,QACAgpE,WACA9mF,MAAA,QAEAge,OACAS,WACAze,MAAA,aAIAie,UACA6oE,WACA9mF,MAAA,WAEAge,OACAS,WACAze,MAAA,oBAOA8xE,OACAj0D,WACAC,QACAopE,WACAlnF,MAAA,cAMA+xE,OACAl0D,WACAC,QACAC,YAAA,EACA+5B,YAAA,2BACAqvC,YACA3oE,WACAxe,MAAA,8BAIAie,UACAF,YAAA,EACA+5B,YAAA,2BACAqvC,YACA3oE,WACAxe,MAAA,gCAOAonF,OACA5e,QAAA,aACA/kD,OAAA,OACA9d,WAAA,IACAC,SAAA,EACA8gF,UACAlpE,MAAA,EACAgB,WACAxe,QAAA,4CACAtC,MAAA,QAGA2pF,UACAC,YAAA,EACAjuF,OAAA,EACAmlB,WACAxe,MAAA,SAGAwnF,WACA/oE,WACAze,MAAA,OACA+e,WAAA,WAGA4nE,WACAttF,OAAA,KACAmlB,WACAxe,MAAA,SAGAunF,SACA7pF,MAAA,MACArE,OAAA,MACA2G,MAAA,QAEAguD,OACAy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","file":"vue-echart-wordcloud.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VueEchartWordcloud\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueEchartWordcloud\"] = factory();\n\telse\n\t\troot[\"VueEchartWordcloud\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VueEchartWordcloud\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueEchartWordcloud\"] = factory();\n\telse\n\t\troot[\"VueEchartWordcloud\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 44);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * @module zrender/tool/util\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         Yi Shen(https://github.com/pissang)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n\r\n        var ArrayProto = Array.prototype;\r\n        var nativeForEach = ArrayProto.forEach;\r\n        var nativeMap = ArrayProto.map;\r\n        var nativeFilter = ArrayProto.filter;\r\n\r\n        // 用于处理merge时无法遍历Date等对象的问题\r\n        var BUILTIN_OBJECT = {\r\n            '[object Function]': 1,\r\n            '[object RegExp]': 1,\r\n            '[object Date]': 1,\r\n            '[object Error]': 1,\r\n            '[object CanvasGradient]': 1\r\n        };\r\n\r\n        var objToString = Object.prototype.toString;\r\n\r\n        function isDom(obj) {\r\n            return obj && obj.nodeType === 1\r\n                   && typeof(obj.nodeName) == 'string';\r\n        }\r\n\r\n        /**\r\n         * 对一个object进行深度拷贝\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {*} source 需要进行拷贝的对象\r\n         * @return {*} 拷贝后的新对象\r\n         */\r\n        function clone(source) {\r\n            if (typeof source == 'object' && source !== null) {\r\n                var result = source;\r\n                if (source instanceof Array) {\r\n                    result = [];\r\n                    for (var i = 0, len = source.length; i < len; i++) {\r\n                        result[i] = clone(source[i]);\r\n                    }\r\n                }\r\n                else if (\r\n                    !BUILTIN_OBJECT[objToString.call(source)]\r\n                    // 是否为 dom 对象\r\n                    && !isDom(source)\r\n                ) {\r\n                    result = {};\r\n                    for (var key in source) {\r\n                        if (source.hasOwnProperty(key)) {\r\n                            result[key] = clone(source[key]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            return source;\r\n        }\r\n\r\n        function mergeItem(target, source, key, overwrite) {\r\n            if (source.hasOwnProperty(key)) {\r\n                var targetProp = target[key];\r\n                if (typeof targetProp == 'object'\r\n                    && !BUILTIN_OBJECT[objToString.call(targetProp)]\r\n                    // 是否为 dom 对象\r\n                    && !isDom(targetProp)\r\n                ) {\r\n                    // 如果需要递归覆盖，就递归调用merge\r\n                    merge(\r\n                        target[key],\r\n                        source[key],\r\n                        overwrite\r\n                    );\r\n                }\r\n                else if (overwrite || !(key in target)) {\r\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\r\n                    target[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 合并源对象的属性到目标对象\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {*} target 目标对象\r\n         * @param {*} source 源对象\r\n         * @param {boolean} overwrite 是否覆盖\r\n         */\r\n        function merge(target, source, overwrite) {\r\n            for (var i in source) {\r\n                mergeItem(target, source, i, overwrite);\r\n            }\r\n            \r\n            return target;\r\n        }\r\n\r\n        var _ctx;\r\n\r\n        function getContext() {\r\n            if (!_ctx) {\r\n                __webpack_require__(32);\r\n                /* jshint ignore:start */\r\n                if (window['G_vmlCanvasManager']) {\r\n                    var _div = document.createElement('div');\r\n                    _div.style.position = 'absolute';\r\n                    _div.style.top = '-1000px';\r\n                    document.body.appendChild(_div);\r\n\r\n                    _ctx = G_vmlCanvasManager.initElement(_div)\r\n                               .getContext('2d');\r\n                }\r\n                else {\r\n                    _ctx = document.createElement('canvas').getContext('2d');\r\n                }\r\n                /* jshint ignore:end */\r\n            }\r\n            return _ctx;\r\n        }\r\n\r\n        /**\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Array} array\r\n         * @param {*} value\r\n         */\r\n        function indexOf(array, value) {\r\n            if (array.indexOf) {\r\n                return array.indexOf(value);\r\n            }\r\n            for (var i = 0, len = array.length; i < len; i++) {\r\n                if (array[i] === value) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        /**\r\n         * 构造类继承关系\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Function} clazz 源类\r\n         * @param {Function} baseClazz 基类\r\n         */\r\n        function inherits(clazz, baseClazz) {\r\n            var clazzPrototype = clazz.prototype;\r\n            function F() {}\r\n            F.prototype = baseClazz.prototype;\r\n            clazz.prototype = new F();\r\n\r\n            for (var prop in clazzPrototype) {\r\n                clazz.prototype[prop] = clazzPrototype[prop];\r\n            }\r\n            clazz.constructor = clazz;\r\n        }\r\n\r\n        /**\r\n         * 数组或对象遍历\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Object|Array} obj\r\n         * @param {Function} cb\r\n         * @param {*} [context]\r\n         */\r\n        function each(obj, cb, context) {\r\n            if (!(obj && cb)) {\r\n                return;\r\n            }\r\n            if (obj.forEach && obj.forEach === nativeForEach) {\r\n                obj.forEach(cb, context);\r\n            }\r\n            else if (obj.length === +obj.length) {\r\n                for (var i = 0, len = obj.length; i < len; i++) {\r\n                    cb.call(context, obj[i], i, obj);\r\n                }\r\n            }\r\n            else {\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        cb.call(context, obj[key], key, obj);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 数组映射\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Array} obj\r\n         * @param {Function} cb\r\n         * @param {*} [context]\r\n         * @return {Array}\r\n         */\r\n        function map(obj, cb, context) {\r\n            if (!(obj && cb)) {\r\n                return;\r\n            }\r\n            if (obj.map && obj.map === nativeMap) {\r\n                return obj.map(cb, context);\r\n            }\r\n            else {\r\n                var result = [];\r\n                for (var i = 0, len = obj.length; i < len; i++) {\r\n                    result.push(cb.call(context, obj[i], i, obj));\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 数组过滤\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Array} obj\r\n         * @param {Function} cb\r\n         * @param {*} [context]\r\n         * @return {Array}\r\n         */\r\n        function filter(obj, cb, context) {\r\n            if (!(obj && cb)) {\r\n                return;\r\n            }\r\n            if (obj.filter && obj.filter === nativeFilter) {\r\n                return obj.filter(cb, context);\r\n            }\r\n            else {\r\n                var result = [];\r\n                for (var i = 0, len = obj.length; i < len; i++) {\r\n                    if (cb.call(context, obj[i], i, obj)) {\r\n                        result.push(obj[i]);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n\r\n        function bind(func, context) {\r\n            \r\n            return function () {\r\n                func.apply(context, arguments);\r\n            }\r\n        }\r\n\r\n        return {\r\n            inherits: inherits,\r\n            clone: clone,\r\n            merge: merge,\r\n            getContext: getContext,\r\n            indexOf: indexOf,\r\n            each: each,\r\n            map: map,\r\n            filter: filter,\r\n            bind: bind\r\n        };\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * shape基类\r\n * @module zrender/shape/Base\r\n * @author  Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *          errorrik (errorrik@gmail.com)\r\n */\r\n\r\n/**\r\n * @typedef {Object} IBaseShapeStyle\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n\r\n/**\r\n * @typedef {Object} module:zrender/shape/Base~IBoundingRect\r\n * @property {number} x 左上角顶点x轴坐标 \r\n * @property {number} y 左上角顶点y轴坐标\r\n * @property {number} width 包围盒矩形宽度\r\n * @property {number} height 包围盒矩形高度\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n        var vmlCanvasManager = window['G_vmlCanvasManager'];\r\n\r\n        var matrix = __webpack_require__(21);\r\n        var guid = __webpack_require__(26);\r\n        var util = __webpack_require__(0);\r\n        var log = __webpack_require__(25);\r\n\r\n        var Transformable = __webpack_require__(27);\r\n        var Eventful = __webpack_require__(20);\r\n\r\n        function _fillText(ctx, text, x, y, textFont, textAlign, textBaseline) {\r\n            if (textFont) {\r\n                ctx.font = textFont;\r\n            }\r\n            ctx.textAlign = textAlign;\r\n            ctx.textBaseline = textBaseline;\r\n            var rect = _getTextRect(\r\n                text, x, y, textFont, textAlign, textBaseline\r\n            );\r\n            \r\n            text = (text + '').split('\\n');\r\n            var lineHeight = __webpack_require__(2).getTextHeight('国', textFont);\r\n            \r\n            switch (textBaseline) {\r\n                case 'top':\r\n                    y = rect.y;\r\n                    break;\r\n                case 'bottom':\r\n                    y = rect.y + lineHeight;\r\n                    break;\r\n                default:\r\n                    y = rect.y + lineHeight / 2;\r\n            }\r\n            \r\n            for (var i = 0, l = text.length; i < l; i++) {\r\n                ctx.fillText(text[i], x, y);\r\n                y += lineHeight;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @inner\r\n         * @param {string} text\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @param {string} textFont\r\n         * @param {string} textAlign\r\n         * @param {string} textBaseline\r\n         */\r\n        function _getTextRect(text, x, y, textFont, textAlign, textBaseline) {\r\n            var area = __webpack_require__(2);\r\n            var width = area.getTextWidth(text, textFont);\r\n            var lineHeight = area.getTextHeight('国', textFont);\r\n            \r\n            text = (text + '').split('\\n');\r\n            \r\n            switch (textAlign) {\r\n                case 'end':\r\n                case 'right':\r\n                    x -= width;\r\n                    break;\r\n                case 'center':\r\n                    x -= (width / 2);\r\n                    break;\r\n            }\r\n\r\n            switch (textBaseline) {\r\n                case 'top':\r\n                    break;\r\n                case 'bottom':\r\n                    y -= lineHeight * text.length;\r\n                    break;\r\n                default:\r\n                    y -= lineHeight * text.length / 2;\r\n            }\r\n\r\n            return {\r\n                x : x,\r\n                y : y,\r\n                width : width,\r\n                height : lineHeight * text.length\r\n            };\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Base\r\n         * @constructor\r\n         * @extends module:zrender/mixin/Transformable\r\n         * @extends module:zrender/mixin/Eventful\r\n         * @param {Object} options 关于shape的配置项，可以是shape的自有属性，也可以是自定义的属性。\r\n         */\r\n        var Base = function(options) {\r\n            \r\n            options = options || {};\r\n            \r\n            /**\r\n             * Shape id, 全局唯一\r\n             * @type {string}\r\n             */\r\n            this.id = options.id || guid();\r\n\r\n            for (var key in options) {\r\n                this[key] = options[key];\r\n            }\r\n\r\n            /**\r\n             * 基础绘制样式\r\n             * @type {module:zrender/shape/Base~IBaseShapeStyle}\r\n             */\r\n            this.style = this.style || {};\r\n\r\n            /**\r\n             * 高亮样式\r\n             * @type {module:zrender/shape/Base~IBaseShapeStyle}\r\n             */\r\n            this.highlightStyle = this.highlightStyle || null;\r\n\r\n            /**\r\n             * 父节点\r\n             * @readonly\r\n             * @type {module:zrender/Group}\r\n             * @default null\r\n             */\r\n            this.parent = null;\r\n\r\n            this.__dirty = true;\r\n\r\n            this.__clipShapes = [];\r\n\r\n            Transformable.call(this);\r\n            Eventful.call(this);\r\n        };\r\n        /**\r\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\r\n         * @name module:zrender/shape/Base#invisible\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        Base.prototype.invisible = false;\r\n\r\n        /**\r\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\r\n         * @name module:zrender/shape/Base#ignore\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        Base.prototype.ignore = false;\r\n\r\n        /**\r\n         * z层level，决定绘画在哪层canvas中\r\n         * @name module:zrender/shape/Base#zlevel\r\n         * @type {number}\r\n         * @default 0\r\n         */\r\n        Base.prototype.zlevel = 0;\r\n\r\n        /**\r\n         * 是否可拖拽\r\n         * @name module:zrender/shape/Base#draggable\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        Base.prototype.draggable = false;\r\n\r\n        /**\r\n         * 是否可点击\r\n         * @name module:zrender/shape/Base#clickable\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        Base.prototype.clickable = false;\r\n\r\n        /**\r\n         * 是否可以hover\r\n         * @name module:zrender/shape/Base#hoverable\r\n         * @type {boolean}\r\n         * @default true\r\n         */\r\n        Base.prototype.hoverable = true;\r\n        \r\n        /**\r\n         * z值，跟zlevel一样影响shape绘制的前后顺序，z值大的shape会覆盖在z值小的上面，\r\n         * 但是并不会创建新的canvas，所以优先级低于zlevel，而且频繁改动的开销比zlevel小很多。\r\n         * \r\n         * @name module:zrender/shape/Base#z\r\n         * @type {number}\r\n         * @default 0\r\n         */\r\n        Base.prototype.z = 0;\r\n\r\n        /**\r\n         * 绘制图形\r\n         * \r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {boolean} [isHighlight=false] 是否使用高亮属性\r\n         * @param {Function} [updateCallback]\r\n         *        需要异步加载资源的shape可以通过这个callback(e), \r\n         *        让painter更新视图，base.brush没用，需要的话重载brush\r\n         */\r\n        Base.prototype.brush = function (ctx, isHighlight) {\r\n\r\n            var style = this.beforeBrush(ctx, isHighlight);\r\n\r\n            ctx.beginPath();\r\n            this.buildPath(ctx, style);\r\n\r\n            switch (style.brushType) {\r\n                /* jshint ignore:start */\r\n                case 'both':\r\n                    ctx.fill();\r\n                case 'stroke':\r\n                    style.lineWidth > 0 && ctx.stroke();\r\n                    break;\r\n                /* jshint ignore:end */\r\n                default:\r\n                    ctx.fill();\r\n            }\r\n            \r\n            this.drawText(ctx, style, this.style);\r\n\r\n            this.afterBrush(ctx);\r\n        };\r\n\r\n        /**\r\n         * 具体绘制操作前的一些公共操作\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {boolean} [isHighlight=false] 是否使用高亮属性\r\n         * @return {Object} 处理后的样式\r\n         */\r\n        Base.prototype.beforeBrush = function (ctx, isHighlight) {\r\n            var style = this.style;\r\n            \r\n            if (this.brushTypeOnly) {\r\n                style.brushType = this.brushTypeOnly;\r\n            }\r\n\r\n            if (isHighlight) {\r\n                // 根据style扩展默认高亮样式\r\n                style = this.getHighlightStyle(\r\n                    style,\r\n                    this.highlightStyle || {},\r\n                    this.brushTypeOnly\r\n                );\r\n            }\r\n\r\n            if (this.brushTypeOnly == 'stroke') {\r\n                style.strokeColor = style.strokeColor || style.color;\r\n            }\r\n\r\n            ctx.save();\r\n\r\n            this.doClip(ctx);\r\n\r\n            this.setContext(ctx, style);\r\n\r\n            // 设置transform\r\n            this.setTransform(ctx);\r\n\r\n            return style;\r\n        };\r\n\r\n        /**\r\n         * 绘制后的处理\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         */\r\n        Base.prototype.afterBrush = function (ctx) {\r\n            ctx.restore();\r\n        };\r\n\r\n        var STYLE_CTX_MAP = [\r\n            [ 'color', 'fillStyle' ],\r\n            [ 'strokeColor', 'strokeStyle' ],\r\n            [ 'opacity', 'globalAlpha' ],\r\n            [ 'lineCap', 'lineCap' ],\r\n            [ 'lineJoin', 'lineJoin' ],\r\n            [ 'miterLimit', 'miterLimit' ],\r\n            [ 'lineWidth', 'lineWidth' ],\r\n            [ 'shadowBlur', 'shadowBlur' ],\r\n            [ 'shadowColor', 'shadowColor' ],\r\n            [ 'shadowOffsetX', 'shadowOffsetX' ],\r\n            [ 'shadowOffsetY', 'shadowOffsetY' ]\r\n        ];\r\n\r\n        /**\r\n         * 设置 fillStyle, strokeStyle, shadow 等通用绘制样式\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\r\n         */\r\n        Base.prototype.setContext = function (ctx, style) {\r\n            for (var i = 0, len = STYLE_CTX_MAP.length; i < len; i++) {\r\n                var styleProp = STYLE_CTX_MAP[i][0];\r\n                var styleValue = style[styleProp];\r\n                var ctxProp = STYLE_CTX_MAP[i][1];\r\n\r\n                if (typeof styleValue != 'undefined') {\r\n                    ctx[ctxProp] = styleValue;\r\n                }\r\n            }\r\n        };\r\n\r\n        var clipShapeInvTransform = matrix.create();\r\n        Base.prototype.doClip = function (ctx) {\r\n            if (this.__clipShapes && !vmlCanvasManager) {\r\n                for (var i = 0; i < this.__clipShapes.length; i++) {\r\n                    var clipShape = this.__clipShapes[i];\r\n                    if (clipShape.needTransform) {\r\n                        var m = clipShape.transform;\r\n                        matrix.invert(clipShapeInvTransform, m);\r\n                        ctx.transform(\r\n                            m[0], m[1],\r\n                            m[2], m[3],\r\n                            m[4], m[5]\r\n                        );\r\n                    }\r\n                    ctx.beginPath();\r\n                    clipShape.buildPath(ctx, clipShape.style);\r\n                    ctx.clip();\r\n                    // Transform back\r\n                    if (clipShape.needTransform) {\r\n                        var m = clipShapeInvTransform;\r\n                        ctx.transform(\r\n                            m[0], m[1],\r\n                            m[2], m[3],\r\n                            m[4], m[5]\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    \r\n        /**\r\n         * 根据默认样式扩展高亮样式\r\n         * \r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style 默认样式\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} highlightStyle 高亮样式\r\n         * @param {string} brushTypeOnly\r\n         */\r\n        Base.prototype.getHighlightStyle = function (style, highlightStyle, brushTypeOnly) {\r\n            var newStyle = {};\r\n            for (var k in style) {\r\n                newStyle[k] = style[k];\r\n            }\r\n\r\n            var color = __webpack_require__(3);\r\n            var highlightColor = color.getHighlightColor();\r\n            // 根据highlightStyle扩展\r\n            if (style.brushType != 'stroke') {\r\n                // 带填充则用高亮色加粗边线\r\n                newStyle.strokeColor = highlightColor;\r\n                newStyle.lineWidth = (style.lineWidth || 1)\r\n                                      + this.getHighlightZoom();\r\n                newStyle.brushType = 'both';\r\n            }\r\n            else {\r\n                if (brushTypeOnly != 'stroke') {\r\n                    // 描边型的则用原色加工高亮\r\n                    newStyle.strokeColor = highlightColor;\r\n                    newStyle.lineWidth = (style.lineWidth || 1)\r\n                                          + this.getHighlightZoom();\r\n                } \r\n                else {\r\n                    // 线型的则用原色加工高亮\r\n                    newStyle.strokeColor = highlightStyle.strokeColor\r\n                                           || color.mix(\r\n                                                 style.strokeColor,\r\n                                                 color.toRGB(highlightColor)\r\n                                              );\r\n                }\r\n            }\r\n\r\n            // 可自定义覆盖默认值\r\n            for (var k in highlightStyle) {\r\n                if (typeof highlightStyle[k] != 'undefined') {\r\n                    newStyle[k] = highlightStyle[k];\r\n                }\r\n            }\r\n\r\n            return newStyle;\r\n        };\r\n\r\n        // 高亮放大效果参数\r\n        // 当前统一设置为6，如有需要差异设置，通过this.type判断实例类型\r\n        Base.prototype.getHighlightZoom = function () {\r\n            return this.type != 'text' ? 6 : 2;\r\n        };\r\n\r\n        /**\r\n         * 移动位置\r\n         * @param {number} dx 横坐标变化\r\n         * @param {number} dy 纵坐标变化\r\n         */\r\n        Base.prototype.drift = function (dx, dy) {\r\n            this.position[0] += dx;\r\n            this.position[1] += dy;\r\n        };\r\n\r\n        /**\r\n         * 构建绘制的Path\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\r\n         */\r\n        Base.prototype.buildPath = function (ctx, style) {\r\n            log('buildPath not implemented in ' + this.type);\r\n        };\r\n\r\n        /**\r\n         * 计算返回包围盒矩形\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\r\n         * @return {module:zrender/shape/Base~IBoundingRect}\r\n         */\r\n        Base.prototype.getRect = function (style) {\r\n            log('getRect not implemented in ' + this.type);   \r\n        };\r\n        \r\n        /**\r\n         * 判断鼠标位置是否在图形内\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @return {boolean}\r\n         */\r\n        Base.prototype.isCover = function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n\r\n            // 快速预判并保留判断矩形\r\n            if (this.isCoverRect(x, y)) {\r\n                // 矩形内\r\n                return __webpack_require__(2).isInside(this, this.style, x, y);\r\n            }\r\n            \r\n            return false;\r\n        };\r\n\r\n        Base.prototype.isCoverRect = function (x, y) {\r\n            // 快速预判并保留判断矩形\r\n            var rect = this.style.__rect;\r\n            if (!rect) {\r\n                rect = this.style.__rect = this.getRect(this.style);\r\n            }\r\n            return x >= rect.x\r\n                && x <= (rect.x + rect.width)\r\n                && y >= rect.y\r\n                && y <= (rect.y + rect.height);\r\n        };\r\n\r\n        /**\r\n         * 绘制附加文本\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style 样式\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} normalStyle 默认样式，用于定位文字显示\r\n         */\r\n        Base.prototype.drawText = function (ctx, style, normalStyle) {\r\n            if (typeof(style.text) == 'undefined' || style.text === false) {\r\n                return;\r\n            }\r\n            // 字体颜色策略\r\n            var textColor = style.textColor || style.color || style.strokeColor;\r\n            ctx.fillStyle = textColor;\r\n\r\n            // 文本与图形间空白间隙\r\n            var dd = 10;\r\n            var al;         // 文本水平对齐\r\n            var bl;         // 文本垂直对齐\r\n            var tx;         // 文本横坐标\r\n            var ty;         // 文本纵坐标\r\n\r\n            var textPosition = style.textPosition       // 用户定义\r\n                               || this.textPosition     // shape默认\r\n                               || 'top';                // 全局默认\r\n\r\n            switch (textPosition) {\r\n                case 'inside': \r\n                case 'top': \r\n                case 'bottom': \r\n                case 'left': \r\n                case 'right': \r\n                    if (this.getRect) {\r\n                        var rect = (normalStyle || style).__rect\r\n                                   || this.getRect(normalStyle || style);\r\n\r\n                        switch (textPosition) {\r\n                            case 'inside':\r\n                                tx = rect.x + rect.width / 2;\r\n                                ty = rect.y + rect.height / 2;\r\n                                al = 'center';\r\n                                bl = 'middle';\r\n                                if (style.brushType != 'stroke'\r\n                                    && textColor == style.color\r\n                                ) {\r\n                                    ctx.fillStyle = '#fff';\r\n                                }\r\n                                break;\r\n                            case 'left':\r\n                                tx = rect.x - dd;\r\n                                ty = rect.y + rect.height / 2;\r\n                                al = 'end';\r\n                                bl = 'middle';\r\n                                break;\r\n                            case 'right':\r\n                                tx = rect.x + rect.width + dd;\r\n                                ty = rect.y + rect.height / 2;\r\n                                al = 'start';\r\n                                bl = 'middle';\r\n                                break;\r\n                            case 'top':\r\n                                tx = rect.x + rect.width / 2;\r\n                                ty = rect.y - dd;\r\n                                al = 'center';\r\n                                bl = 'bottom';\r\n                                break;\r\n                            case 'bottom':\r\n                                tx = rect.x + rect.width / 2;\r\n                                ty = rect.y + rect.height + dd;\r\n                                al = 'center';\r\n                                bl = 'top';\r\n                                break;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'start':\r\n                case 'end':\r\n                    var pointList = style.pointList\r\n                                    || [\r\n                                        [style.xStart || 0, style.yStart || 0],\r\n                                        [style.xEnd || 0, style.yEnd || 0]\r\n                                    ];\r\n                    var length = pointList.length;\r\n                    if (length < 2) {\r\n                        // 少于2个点就不画了~\r\n                        return;\r\n                    }\r\n                    var xStart;\r\n                    var xEnd;\r\n                    var yStart;\r\n                    var yEnd;\r\n                    switch (textPosition) {\r\n                        case 'start':\r\n                            xStart = pointList[1][0];\r\n                            xEnd = pointList[0][0];\r\n                            yStart = pointList[1][1];\r\n                            yEnd = pointList[0][1];\r\n                            break;\r\n                        case 'end':\r\n                            xStart = pointList[length - 2][0];\r\n                            xEnd = pointList[length - 1][0];\r\n                            yStart = pointList[length - 2][1];\r\n                            yEnd = pointList[length - 1][1];\r\n                            break;\r\n                    }\r\n                    tx = xEnd;\r\n                    ty = yEnd;\r\n                    \r\n                    var angle = Math.atan((yStart - yEnd) / (xEnd - xStart)) / Math.PI * 180;\r\n                    if ((xEnd - xStart) < 0) {\r\n                        angle += 180;\r\n                    }\r\n                    else if ((yStart - yEnd) < 0) {\r\n                        angle += 360;\r\n                    }\r\n                    \r\n                    dd = 5;\r\n                    if (angle >= 30 && angle <= 150) {\r\n                        al = 'center';\r\n                        bl = 'bottom';\r\n                        ty -= dd;\r\n                    }\r\n                    else if (angle > 150 && angle < 210) {\r\n                        al = 'right';\r\n                        bl = 'middle';\r\n                        tx -= dd;\r\n                    }\r\n                    else if (angle >= 210 && angle <= 330) {\r\n                        al = 'center';\r\n                        bl = 'top';\r\n                        ty += dd;\r\n                    }\r\n                    else {\r\n                        al = 'left';\r\n                        bl = 'middle';\r\n                        tx += dd;\r\n                    }\r\n                    break;\r\n                case 'specific':\r\n                    tx = style.textX || 0;\r\n                    ty = style.textY || 0;\r\n                    al = 'start';\r\n                    bl = 'middle';\r\n                    break;\r\n            }\r\n\r\n            if (tx != null && ty != null) {\r\n                _fillText(\r\n                    ctx,\r\n                    style.text, \r\n                    tx, ty, \r\n                    style.textFont,\r\n                    style.textAlign || al,\r\n                    style.textBaseline || bl\r\n                );\r\n            }\r\n        };\r\n\r\n        Base.prototype.modSelf = function() {\r\n            this.__dirty = true;\r\n            if (this.style) {\r\n                this.style.__rect = null;\r\n            }\r\n            if (this.highlightStyle) {\r\n                this.highlightStyle.__rect = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 图形是否会触发事件\r\n         * @return {boolean}\r\n         */\r\n        // TODO, 通过 bind 绑定的事件\r\n        Base.prototype.isSilent = function () {\r\n            return !(\r\n                this.hoverable || this.draggable || this.clickable\r\n                || this.onmousemove || this.onmouseover || this.onmouseout\r\n                || this.onmousedown || this.onmouseup || this.onclick\r\n                || this.ondragenter || this.ondragover || this.ondragleave\r\n                || this.ondrop\r\n            );\r\n        };\r\n\r\n        util.merge(Base.prototype, Transformable.prototype, true);\r\n        util.merge(Base.prototype, Eventful.prototype, true);\r\n\r\n        return Base;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender: 图形空间辅助类\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n *\r\n * isInside：是否在区域内部\r\n * isOutside：是否在区域外部\r\n * getTextWidth：测算单行文本宽度\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n        'use strict';\r\n\r\n        var util = __webpack_require__(0);\r\n        var curve = __webpack_require__(17);\r\n\r\n        var _ctx;\r\n        \r\n        var _textWidthCache = {};\r\n        var _textHeightCache = {};\r\n        var _textWidthCacheCounter = 0;\r\n        var _textHeightCacheCounter = 0;\r\n        var TEXT_CACHE_MAX = 5000;\r\n            \r\n        var PI2 = Math.PI * 2;\r\n\r\n        function normalizeRadian(angle) {\r\n            angle %= PI2;\r\n            if (angle < 0) {\r\n                angle += PI2;\r\n            }\r\n            return angle;\r\n        }\r\n        /**\r\n         * 包含判断\r\n         *\r\n         * @param {Object} shape : 图形\r\n         * @param {Object} area ： 目标区域\r\n         * @param {number} x ： 横坐标\r\n         * @param {number} y ： 纵坐标\r\n         */\r\n        function isInside(shape, area, x, y) {\r\n            if (!area || !shape) {\r\n                // 无参数或不支持类型\r\n                return false;\r\n            }\r\n            var zoneType = shape.type;\r\n\r\n            _ctx = _ctx || util.getContext();\r\n\r\n            // 未实现或不可用时(excanvas不支持)则数学运算，主要是line，polyline，ring\r\n            var _mathReturn = _mathMethod(shape, area, x, y);\r\n            if (typeof _mathReturn != 'undefined') {\r\n                return _mathReturn;\r\n            }\r\n\r\n            if (shape.buildPath && _ctx.isPointInPath) {\r\n                return _buildPathMethod(shape, _ctx, area, x, y);\r\n            }\r\n\r\n            // 上面的方法都行不通时\r\n            switch (zoneType) {\r\n                case 'ellipse': // Todo，不精确\r\n                    return true;\r\n                // 旋轮曲线  不准确\r\n                case 'trochoid':\r\n                    var _r = area.location == 'out'\r\n                            ? area.r1 + area.r2 + area.d\r\n                            : area.r1 - area.r2 + area.d;\r\n                    return isInsideCircle(area, x, y, _r);\r\n                // 玫瑰线 不准确\r\n                case 'rose' :\r\n                    return isInsideCircle(area, x, y, area.maxr);\r\n                // 路径，椭圆，曲线等-----------------13\r\n                default:\r\n                    return false;   // Todo，暂不支持\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @param {Object} shape : 图形\r\n         * @param {Object} area ：目标区域\r\n         * @param {number} x ： 横坐标\r\n         * @param {number} y ： 纵坐标\r\n         * @return {boolean=} true表示坐标处在图形中\r\n         */\r\n        function _mathMethod(shape, area, x, y) {\r\n            var zoneType = shape.type;\r\n            // 在矩形内则部分图形需要进一步判断\r\n            switch (zoneType) {\r\n                // 贝塞尔曲线\r\n                case 'bezier-curve':\r\n                    if (typeof(area.cpX2) === 'undefined') {\r\n                        return isInsideQuadraticStroke(\r\n                            area.xStart, area.yStart,\r\n                            area.cpX1, area.cpY1, \r\n                            area.xEnd, area.yEnd,\r\n                            area.lineWidth, x, y\r\n                        );\r\n                    }\r\n                    return isInsideCubicStroke(\r\n                        area.xStart, area.yStart,\r\n                        area.cpX1, area.cpY1, \r\n                        area.cpX2, area.cpY2, \r\n                        area.xEnd, area.yEnd,\r\n                        area.lineWidth, x, y\r\n                    );\r\n                // 线\r\n                case 'line':\r\n                    return isInsideLine(\r\n                        area.xStart, area.yStart,\r\n                        area.xEnd, area.yEnd,\r\n                        area.lineWidth, x, y\r\n                    );\r\n                // 折线\r\n                case 'polyline':\r\n                    return isInsidePolyline(\r\n                        area.pointList, area.lineWidth, x, y\r\n                    );\r\n                // 圆环\r\n                case 'ring':\r\n                    return isInsideRing(\r\n                        area.x, area.y, area.r0, area.r, x, y\r\n                    );\r\n                // 圆形\r\n                case 'circle':\r\n                    return isInsideCircle(\r\n                        area.x, area.y, area.r, x, y\r\n                    );\r\n                // 扇形\r\n                case 'sector':\r\n                    var startAngle = area.startAngle * Math.PI / 180;\r\n                    var endAngle = area.endAngle * Math.PI / 180;\r\n                    if (!area.clockWise) {\r\n                        startAngle = -startAngle;\r\n                        endAngle = -endAngle;\r\n                    }\r\n                    return isInsideSector(\r\n                        area.x, area.y, area.r0, area.r,\r\n                        startAngle, endAngle,\r\n                        !area.clockWise,\r\n                        x, y\r\n                    );\r\n                // 多边形\r\n                case 'path':\r\n                    return area.pathArray && isInsidePath(\r\n                        area.pathArray, Math.max(area.lineWidth, 5),\r\n                        area.brushType, x, y\r\n                    );\r\n                case 'polygon':\r\n                case 'star':\r\n                case 'isogon':\r\n                    return isInsidePolygon(area.pointList, x, y);\r\n                // 文本\r\n                case 'text':\r\n                    var rect =  area.__rect || shape.getRect(area);\r\n                    return isInsideRect(\r\n                        rect.x, rect.y, rect.width, rect.height, x, y\r\n                    );\r\n                // 矩形\r\n                case 'rectangle':\r\n                // 图片\r\n                case 'image':\r\n                    return isInsideRect(\r\n                        area.x, area.y, area.width, area.height, x, y\r\n                    );\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 通过buildPath方法来判断，三个方法中较快，但是不支持线条类型的shape，\r\n         * 而且excanvas不支持isPointInPath方法\r\n         *\r\n         * @param {Object} shape ： shape\r\n         * @param {Object} context : 上下文\r\n         * @param {Object} area ：目标区域\r\n         * @param {number} x ： 横坐标\r\n         * @param {number} y ： 纵坐标\r\n         * @return {boolean} true表示坐标处在图形中\r\n         */\r\n        function _buildPathMethod(shape, context, area, x, y) {\r\n            // 图形类实现路径创建了则用类的path\r\n            context.beginPath();\r\n            shape.buildPath(context, area);\r\n            context.closePath();\r\n            return context.isPointInPath(x, y);\r\n        }\r\n\r\n        /**\r\n         * !isInside\r\n         */\r\n        function isOutside(shape, area, x, y) {\r\n            return !isInside(shape, area, x, y);\r\n        }\r\n\r\n        /**\r\n         * 线段包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        function isInsideLine(x0, y0, x1, y1, lineWidth, x, y) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = Math.max(lineWidth, 5);\r\n            var _a = 0;\r\n            var _b = x0;\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l)\r\n                || (y < y0 - _l && y < y1 - _l)\r\n                || (x > x0 + _l && x > x1 + _l)\r\n                || (x < x0 - _l && x < x1 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            if (x0 !== x1) {\r\n                _a = (y0 - y1) / (x0 - x1);\r\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\r\n            }\r\n            else {\r\n                return Math.abs(x - x0) <= _l / 2;\r\n            }\r\n            var tmp = _a * x - y + _b;\r\n            var _s = tmp * tmp / (_a * _a + 1);\r\n            return _s <= _l / 2 * _l / 2;\r\n        }\r\n\r\n        /**\r\n         * 三次贝塞尔曲线描边包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  x2\r\n         * @param  {number}  y2\r\n         * @param  {number}  x3\r\n         * @param  {number}  y3\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        function isInsideCubicStroke(\r\n            x0, y0, x1, y1, x2, y2, x3, y3,\r\n            lineWidth, x, y\r\n        ) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = Math.max(lineWidth, 5);\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\r\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\r\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\r\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n            var d =  curve.cubicProjectPoint(\r\n                x0, y0, x1, y1, x2, y2, x3, y3,\r\n                x, y, null\r\n            );\r\n            return d <= _l / 2;\r\n        }\r\n\r\n        /**\r\n         * 二次贝塞尔曲线描边包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  x2\r\n         * @param  {number}  y2\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        function isInsideQuadraticStroke(\r\n            x0, y0, x1, y1, x2, y2,\r\n            lineWidth, x, y\r\n        ) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = Math.max(lineWidth, 5);\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\r\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\r\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\r\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n            var d =  curve.quadraticProjectPoint(\r\n                x0, y0, x1, y1, x2, y2,\r\n                x, y, null\r\n            );\r\n            return d <= _l / 2;\r\n        }\r\n\r\n        /**\r\n         * 圆弧描边包含判断\r\n         * @param  {number}  cx\r\n         * @param  {number}  cy\r\n         * @param  {number}  r\r\n         * @param  {number}  startAngle\r\n         * @param  {number}  endAngle\r\n         * @param  {boolean}  anticlockwise\r\n         * @param  {number} lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {Boolean}\r\n         */\r\n        function isInsideArcStroke(\r\n            cx, cy, r, startAngle, endAngle, anticlockwise,\r\n            lineWidth, x, y\r\n        ) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = Math.max(lineWidth, 5);\r\n\r\n            x -= cx;\r\n            y -= cy;\r\n            var d = Math.sqrt(x * x + y * y);\r\n            if ((d - _l > r) || (d + _l < r)) {\r\n                return false;\r\n            }\r\n            if (Math.abs(startAngle - endAngle) >= PI2) {\r\n                // Is a circle\r\n                return true;\r\n            }\r\n            if (anticlockwise) {\r\n                var tmp = startAngle;\r\n                startAngle = normalizeRadian(endAngle);\r\n                endAngle = normalizeRadian(tmp);\r\n            } else {\r\n                startAngle = normalizeRadian(startAngle);\r\n                endAngle = normalizeRadian(endAngle);\r\n            }\r\n            if (startAngle > endAngle) {\r\n                endAngle += PI2;\r\n            }\r\n            \r\n            var angle = Math.atan2(y, x);\r\n            if (angle < 0) {\r\n                angle += PI2;\r\n            }\r\n            return (angle >= startAngle && angle <= endAngle)\r\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\r\n        }\r\n\r\n        function isInsidePolyline(points, lineWidth, x, y) {\r\n            var lineWidth = Math.max(lineWidth, 10);\r\n            for (var i = 0, l = points.length - 1; i < l; i++) {\r\n                var x0 = points[i][0];\r\n                var y0 = points[i][1];\r\n                var x1 = points[i + 1][0];\r\n                var y1 = points[i + 1][1];\r\n\r\n                if (isInsideLine(x0, y0, x1, y1, lineWidth, x, y)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        function isInsideRing(cx, cy, r0, r, x, y) {\r\n            var d = (x - cx) * (x - cx) + (y - cy) * (y - cy);\r\n            return (d < r * r) && (d > r0 * r0);\r\n        }\r\n\r\n        /**\r\n         * 矩形包含判断\r\n         */\r\n        function isInsideRect(x0, y0, width, height, x, y) {\r\n            return x >= x0 && x <= (x0 + width)\r\n                && y >= y0 && y <= (y0 + height);\r\n        }\r\n\r\n        /**\r\n         * 圆形包含判断\r\n         */\r\n        function isInsideCircle(x0, y0, r, x, y) {\r\n            return (x - x0) * (x - x0) + (y - y0) * (y - y0)\r\n                   < r * r;\r\n        }\r\n\r\n        /**\r\n         * 扇形包含判断\r\n         */\r\n        function isInsideSector(\r\n            cx, cy, r0, r, startAngle, endAngle, anticlockwise, x, y\r\n        ) {\r\n            return isInsideArcStroke(\r\n                cx, cy, (r0 + r) / 2, startAngle, endAngle, anticlockwise,\r\n                r - r0, x, y\r\n            );\r\n        }\r\n\r\n        /**\r\n         * 多边形包含判断\r\n         * 与 canvas 一样采用 non-zero winding rule\r\n         */\r\n        function isInsidePolygon(points, x, y) {\r\n            var N = points.length;\r\n            var w = 0;\r\n\r\n            for (var i = 0, j = N - 1; i < N; i++) {\r\n                var x0 = points[j][0];\r\n                var y0 = points[j][1];\r\n                var x1 = points[i][0];\r\n                var y1 = points[i][1];\r\n                w += windingLine(x0, y0, x1, y1, x, y);\r\n                j = i;\r\n            }\r\n            return w !== 0;\r\n        }\r\n\r\n        function windingLine(x0, y0, x1, y1, x, y) {\r\n            if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\r\n                return 0;\r\n            }\r\n            if (y1 == y0) {\r\n                return 0;\r\n            }\r\n            var dir = y1 < y0 ? 1 : -1;\r\n            var t = (y - y0) / (y1 - y0);\r\n            var x_ = t * (x1 - x0) + x0;\r\n\r\n            return x_ > x ? dir : 0;\r\n        }\r\n\r\n        // 临时数组\r\n        var roots = [-1, -1, -1];\r\n        var extrema = [-1, -1];\r\n\r\n        function swapExtrema() {\r\n            var tmp = extrema[0];\r\n            extrema[0] = extrema[1];\r\n            extrema[1] = tmp;\r\n        }\r\n        function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\r\n            // Quick reject\r\n            if (\r\n                (y > y0 && y > y1 && y > y2 && y > y3)\r\n                || (y < y0 && y < y1 && y < y2 && y < y3)\r\n            ) {\r\n                return 0;\r\n            }\r\n            var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\r\n            if (nRoots === 0) {\r\n                return 0;\r\n            }\r\n            else {\r\n                var w = 0;\r\n                var nExtrema = -1;\r\n                var y0_, y1_;\r\n                for (var i = 0; i < nRoots; i++) {\r\n                    var t = roots[i];\r\n                    var x_ = curve.cubicAt(x0, x1, x2, x3, t);\r\n                    if (x_ < x) { // Quick reject\r\n                        continue;\r\n                    }\r\n                    if (nExtrema < 0) {\r\n                        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\r\n                        if (extrema[1] < extrema[0] && nExtrema > 1) {\r\n                            swapExtrema();\r\n                        }\r\n                        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\r\n                        if (nExtrema > 1) {\r\n                            y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\r\n                        }\r\n                    }\r\n                    if (nExtrema == 2) {\r\n                        // 分成三段单调函数\r\n                        if (t < extrema[0]) {\r\n                            w += y0_ < y0 ? 1 : -1;\r\n                        } \r\n                        else if (t < extrema[1]) {\r\n                            w += y1_ < y0_ ? 1 : -1;\r\n                        } \r\n                        else {\r\n                            w += y3 < y1_ ? 1 : -1;\r\n                        }\r\n                    } \r\n                    else {\r\n                        // 分成两段单调函数\r\n                        if (t < extrema[0]) {\r\n                            w += y0_ < y0 ? 1 : -1;\r\n                        } \r\n                        else {\r\n                            w += y3 < y0_ ? 1 : -1;\r\n                        }\r\n                    }\r\n                }\r\n                return w;\r\n            }\r\n        }\r\n\r\n        function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\r\n            // Quick reject\r\n            if (\r\n                (y > y0 && y > y1 && y > y2)\r\n                || (y < y0 && y < y1 && y < y2)\r\n            ) {\r\n                return 0;\r\n            }\r\n            var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\r\n            if (nRoots === 0) {\r\n                return 0;\r\n            } \r\n            else {\r\n                var t = curve.quadraticExtremum(y0, y1, y2);\r\n                if (t >=0 && t <= 1) {\r\n                    var w = 0;\r\n                    var y_ = curve.quadraticAt(y0, y1, y2, t);\r\n                    for (var i = 0; i < nRoots; i++) {\r\n                        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\r\n                        if (x_ < x) {\r\n                            continue;\r\n                        }\r\n                        if (roots[i] < t) {\r\n                            w += y_ < y0 ? 1 : -1;\r\n                        } \r\n                        else {\r\n                            w += y2 < y_ ? 1 : -1;\r\n                        }\r\n                    }\r\n                    return w;\r\n                } \r\n                else {\r\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\r\n                    if (x_ < x) {\r\n                        return 0;\r\n                    }\r\n                    return y2 < y0 ? 1 : -1;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // TODO\r\n        // Arc 旋转\r\n        function windingArc(\r\n            cx, cy, r, startAngle, endAngle, anticlockwise, x, y\r\n        ) {\r\n            y -= cy;\r\n            if (y > r || y < -r) {\r\n                return 0;\r\n            }\r\n            var tmp = Math.sqrt(r * r - y * y);\r\n            roots[0] = -tmp;\r\n            roots[1] = tmp;\r\n\r\n            if (Math.abs(startAngle - endAngle) >= PI2) {\r\n                // Is a circle\r\n                startAngle = 0;\r\n                endAngle = PI2;\r\n                var dir = anticlockwise ? 1 : -1;\r\n                if (x >= roots[0] + cx && x <= roots[1] + cx) {\r\n                    return dir;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n\r\n            if (anticlockwise) {\r\n                var tmp = startAngle;\r\n                startAngle = normalizeRadian(endAngle);\r\n                endAngle = normalizeRadian(tmp);   \r\n            } else {\r\n                startAngle = normalizeRadian(startAngle);\r\n                endAngle = normalizeRadian(endAngle);   \r\n            }\r\n            if (startAngle > endAngle) {\r\n                endAngle += PI2;\r\n            }\r\n\r\n            var w = 0;\r\n            for (var i = 0; i < 2; i++) {\r\n                var x_ = roots[i];\r\n                if (x_ + cx > x) {\r\n                    var angle = Math.atan2(y, x_);\r\n                    var dir = anticlockwise ? 1 : -1;\r\n                    if (angle < 0) {\r\n                        angle = PI2 + angle;\r\n                    }\r\n                    if (\r\n                        (angle >= startAngle && angle <= endAngle)\r\n                        || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\r\n                    ) {\r\n                        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\r\n                            dir = -dir;\r\n                        }\r\n                        w += dir;\r\n                    }\r\n                }\r\n            }\r\n            return w;\r\n        }\r\n\r\n        /**\r\n         * 路径包含判断\r\n         * 与 canvas 一样采用 non-zero winding rule\r\n         */\r\n        function isInsidePath(pathArray, lineWidth, brushType, x, y) {\r\n            var w = 0;\r\n            var xi = 0;\r\n            var yi = 0;\r\n            var x0 = 0;\r\n            var y0 = 0;\r\n            var beginSubpath = true;\r\n            var firstCmd = true;\r\n\r\n            brushType = brushType || 'fill';\r\n\r\n            var hasStroke = brushType === 'stroke' || brushType === 'both';\r\n            var hasFill = brushType === 'fill' || brushType === 'both';\r\n\r\n            // var roots = [-1, -1, -1];\r\n            for (var i = 0; i < pathArray.length; i++) {\r\n                var seg = pathArray[i];\r\n                var p = seg.points;\r\n                // Begin a new subpath\r\n                if (beginSubpath || seg.command === 'M') {\r\n                    if (i > 0) {\r\n                        // Close previous subpath\r\n                        if (hasFill) {\r\n                            w += windingLine(xi, yi, x0, y0, x, y);\r\n                        }\r\n                        if (w !== 0) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    x0 = p[p.length - 2];\r\n                    y0 = p[p.length - 1];\r\n                    beginSubpath = false;\r\n                    if (firstCmd && seg.command !== 'A') {\r\n                        // 如果第一个命令不是M, 是lineTo, bezierCurveTo\r\n                        // 等绘制命令的话，是会从该绘制的起点开始算的\r\n                        // Arc 会在之后做单独处理所以这里忽略\r\n                        firstCmd = false;\r\n                        xi = x0;\r\n                        yi = y0;\r\n                    }\r\n                }\r\n                switch (seg.command) {\r\n                    case 'M':\r\n                        xi = p[0];\r\n                        yi = p[1];\r\n                        break;\r\n                    case 'L':\r\n                        if (hasStroke) {\r\n                            if (isInsideLine(\r\n                                xi, yi, p[0], p[1], lineWidth, x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        if (hasFill) {\r\n                            w += windingLine(xi, yi, p[0], p[1], x, y);\r\n                        }\r\n                        xi = p[0];\r\n                        yi = p[1];\r\n                        break;\r\n                    case 'C':\r\n                        if (hasStroke) {\r\n                            if (isInsideCubicStroke(\r\n                                xi, yi, p[0], p[1], p[2], p[3], p[4], p[5],\r\n                                lineWidth, x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        if (hasFill) {\r\n                            w += windingCubic(\r\n                                xi, yi, p[0], p[1], p[2], p[3], p[4], p[5], x, y\r\n                            );\r\n                        }\r\n                        xi = p[4];\r\n                        yi = p[5];\r\n                        break;\r\n                    case 'Q':\r\n                        if (hasStroke) {\r\n                            if (isInsideQuadraticStroke(\r\n                                xi, yi, p[0], p[1], p[2], p[3],\r\n                                lineWidth, x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        if (hasFill) {\r\n                            w += windingQuadratic(\r\n                                xi, yi, p[0], p[1], p[2], p[3], x, y\r\n                            );\r\n                        }\r\n                        xi = p[2];\r\n                        yi = p[3];\r\n                        break;\r\n                    case 'A':\r\n                        // TODO Arc 旋转\r\n                        // TODO Arc 判断的开销比较大\r\n                        var cx = p[0];\r\n                        var cy = p[1];\r\n                        var rx = p[2];\r\n                        var ry = p[3];\r\n                        var theta = p[4];\r\n                        var dTheta = p[5];\r\n                        var x1 = Math.cos(theta) * rx + cx;\r\n                        var y1 = Math.sin(theta) * ry + cy;\r\n                        // 不是直接使用 arc 命令\r\n                        if (!firstCmd) {\r\n                            w += windingLine(xi, yi, x1, y1);\r\n                        } else {\r\n                            firstCmd = false;\r\n                            // 第一个命令起点还未定义\r\n                            x0 = x1;\r\n                            y0 = y1;\r\n                        }\r\n                        // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\r\n                        var _x = (x - cx) * ry / rx + cx;\r\n                        if (hasStroke) {\r\n                            if (isInsideArcStroke(\r\n                                cx, cy, ry, theta, theta + dTheta, 1 - p[7],\r\n                                lineWidth, _x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        if (hasFill) {\r\n                            w += windingArc(\r\n                                cx, cy, ry, theta, theta + dTheta, 1 - p[7],\r\n                                _x, y\r\n                            );\r\n                        }\r\n                        xi = Math.cos(theta + dTheta) * rx + cx;\r\n                        yi = Math.sin(theta + dTheta) * ry + cy;\r\n                        break;\r\n                    case 'z':\r\n                        if (hasStroke) {\r\n                            if (isInsideLine(\r\n                                xi, yi, x0, y0, lineWidth, x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        beginSubpath = true;\r\n                        break;\r\n                }\r\n            }\r\n            if (hasFill) {\r\n                w += windingLine(xi, yi, x0, y0, x, y);\r\n            }\r\n            return w !== 0;\r\n        }\r\n\r\n        /**\r\n         * 测算多行文本宽度\r\n         * @param {Object} text\r\n         * @param {Object} textFont\r\n         */\r\n        function getTextWidth(text, textFont) {\r\n            var key = text + ':' + textFont;\r\n            if (_textWidthCache[key]) {\r\n                return _textWidthCache[key];\r\n            }\r\n            _ctx = _ctx || util.getContext();\r\n            _ctx.save();\r\n\r\n            if (textFont) {\r\n                _ctx.font = textFont;\r\n            }\r\n            \r\n            text = (text + '').split('\\n');\r\n            var width = 0;\r\n            for (var i = 0, l = text.length; i < l; i++) {\r\n                width =  Math.max(\r\n                    _ctx.measureText(text[i]).width,\r\n                    width\r\n                );\r\n            }\r\n            _ctx.restore();\r\n\r\n            _textWidthCache[key] = width;\r\n            if (++_textWidthCacheCounter > TEXT_CACHE_MAX) {\r\n                // 内存释放\r\n                _textWidthCacheCounter = 0;\r\n                _textWidthCache = {};\r\n            }\r\n            \r\n            return width;\r\n        }\r\n        \r\n        /**\r\n         * 测算多行文本高度\r\n         * @param {Object} text\r\n         * @param {Object} textFont\r\n         */\r\n        function getTextHeight(text, textFont) {\r\n            var key = text + ':' + textFont;\r\n            if (_textHeightCache[key]) {\r\n                return _textHeightCache[key];\r\n            }\r\n            \r\n            _ctx = _ctx || util.getContext();\r\n\r\n            _ctx.save();\r\n            if (textFont) {\r\n                _ctx.font = textFont;\r\n            }\r\n            \r\n            text = (text + '').split('\\n');\r\n            // 比较粗暴\r\n            var height = (_ctx.measureText('国').width + 2) * text.length;\r\n\r\n            _ctx.restore();\r\n\r\n            _textHeightCache[key] = height;\r\n            if (++_textHeightCacheCounter > TEXT_CACHE_MAX) {\r\n                // 内存释放\r\n                _textHeightCacheCounter = 0;\r\n                _textHeightCache = {};\r\n            }\r\n            return height;\r\n        }\r\n\r\n        return {\r\n            isInside : isInside,\r\n            isOutside : isOutside,\r\n            getTextWidth : getTextWidth,\r\n            getTextHeight : getTextHeight,\r\n\r\n            isInsidePath: isInsidePath,\r\n            isInsidePolygon: isInsidePolygon,\r\n            isInsideSector: isInsideSector,\r\n            isInsideCircle: isInsideCircle,\r\n            isInsideLine: isInsideLine,\r\n            isInsideRect: isInsideRect,\r\n            isInsidePolyline: isInsidePolyline,\r\n\r\n            isInsideCubicStroke: isInsideCubicStroke,\r\n            isInsideQuadraticStroke: isInsideQuadraticStroke\r\n        };\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 颜色辅助模块\r\n * @module zrender/tool/color\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n    var util = __webpack_require__(0);\r\n\r\n    var _ctx;\r\n\r\n    // Color palette is an array containing the default colors for the chart's\r\n    // series.\r\n    // When all colors are used, new colors are selected from the start again.\r\n    // Defaults to:\r\n    // 默认色板\r\n    var palette = [\r\n        '#ff9277', ' #dddd00', ' #ffc877', ' #bbe3ff', ' #d5ffbb',\r\n        '#bbbbff', ' #ddb000', ' #b0dd00', ' #e2bbff', ' #ffbbe3',\r\n        '#ff7777', ' #ff9900', ' #83dd00', ' #77e3ff', ' #778fff',\r\n        '#c877ff', ' #ff77ab', ' #ff6600', ' #aa8800', ' #77c7ff',\r\n        '#ad77ff', ' #ff77ff', ' #dd0083', ' #777700', ' #00aa00',\r\n        '#0088aa', ' #8400dd', ' #aa0088', ' #dd0000', ' #772e00'\r\n    ];\r\n    var _palette = palette;\r\n\r\n    var highlightColor = 'rgba(255,255,0,0.5)';\r\n    var _highlightColor = highlightColor;\r\n\r\n    // 颜色格式\r\n    /*jshint maxlen: 330 */\r\n    var colorRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i;\r\n\r\n    var _nameColors = {\r\n        aliceblue : '#f0f8ff',\r\n        antiquewhite : '#faebd7',\r\n        aqua : '#0ff',\r\n        aquamarine : '#7fffd4',\r\n        azure : '#f0ffff',\r\n        beige : '#f5f5dc',\r\n        bisque : '#ffe4c4',\r\n        black : '#000',\r\n        blanchedalmond : '#ffebcd',\r\n        blue : '#00f',\r\n        blueviolet : '#8a2be2',\r\n        brown : '#a52a2a',\r\n        burlywood : '#deb887',\r\n        cadetblue : '#5f9ea0',\r\n        chartreuse : '#7fff00',\r\n        chocolate : '#d2691e',\r\n        coral : '#ff7f50',\r\n        cornflowerblue : '#6495ed',\r\n        cornsilk : '#fff8dc',\r\n        crimson : '#dc143c',\r\n        cyan : '#0ff',\r\n        darkblue : '#00008b',\r\n        darkcyan : '#008b8b',\r\n        darkgoldenrod : '#b8860b',\r\n        darkgray : '#a9a9a9',\r\n        darkgrey : '#a9a9a9',\r\n        darkgreen : '#006400',\r\n        darkkhaki : '#bdb76b',\r\n        darkmagenta : '#8b008b',\r\n        darkolivegreen : '#556b2f',\r\n        darkorange : '#ff8c00',\r\n        darkorchid : '#9932cc',\r\n        darkred : '#8b0000',\r\n        darksalmon : '#e9967a',\r\n        darkseagreen : '#8fbc8f',\r\n        darkslateblue : '#483d8b',\r\n        darkslategray : '#2f4f4f',\r\n        darkslategrey : '#2f4f4f',\r\n        darkturquoise : '#00ced1',\r\n        darkviolet : '#9400d3',\r\n        deeppink : '#ff1493',\r\n        deepskyblue : '#00bfff',\r\n        dimgray : '#696969',\r\n        dimgrey : '#696969',\r\n        dodgerblue : '#1e90ff',\r\n        firebrick : '#b22222',\r\n        floralwhite : '#fffaf0',\r\n        forestgreen : '#228b22',\r\n        fuchsia : '#f0f',\r\n        gainsboro : '#dcdcdc',\r\n        ghostwhite : '#f8f8ff',\r\n        gold : '#ffd700',\r\n        goldenrod : '#daa520',\r\n        gray : '#808080',\r\n        grey : '#808080',\r\n        green : '#008000',\r\n        greenyellow : '#adff2f',\r\n        honeydew : '#f0fff0',\r\n        hotpink : '#ff69b4',\r\n        indianred : '#cd5c5c',\r\n        indigo : '#4b0082',\r\n        ivory : '#fffff0',\r\n        khaki : '#f0e68c',\r\n        lavender : '#e6e6fa',\r\n        lavenderblush : '#fff0f5',\r\n        lawngreen : '#7cfc00',\r\n        lemonchiffon : '#fffacd',\r\n        lightblue : '#add8e6',\r\n        lightcoral : '#f08080',\r\n        lightcyan : '#e0ffff',\r\n        lightgoldenrodyellow : '#fafad2',\r\n        lightgray : '#d3d3d3',\r\n        lightgrey : '#d3d3d3',\r\n        lightgreen : '#90ee90',\r\n        lightpink : '#ffb6c1',\r\n        lightsalmon : '#ffa07a',\r\n        lightseagreen : '#20b2aa',\r\n        lightskyblue : '#87cefa',\r\n        lightslategray : '#789',\r\n        lightslategrey : '#789',\r\n        lightsteelblue : '#b0c4de',\r\n        lightyellow : '#ffffe0',\r\n        lime : '#0f0',\r\n        limegreen : '#32cd32',\r\n        linen : '#faf0e6',\r\n        magenta : '#f0f',\r\n        maroon : '#800000',\r\n        mediumaquamarine : '#66cdaa',\r\n        mediumblue : '#0000cd',\r\n        mediumorchid : '#ba55d3',\r\n        mediumpurple : '#9370d8',\r\n        mediumseagreen : '#3cb371',\r\n        mediumslateblue : '#7b68ee',\r\n        mediumspringgreen : '#00fa9a',\r\n        mediumturquoise : '#48d1cc',\r\n        mediumvioletred : '#c71585',\r\n        midnightblue : '#191970',\r\n        mintcream : '#f5fffa',\r\n        mistyrose : '#ffe4e1',\r\n        moccasin : '#ffe4b5',\r\n        navajowhite : '#ffdead',\r\n        navy : '#000080',\r\n        oldlace : '#fdf5e6',\r\n        olive : '#808000',\r\n        olivedrab : '#6b8e23',\r\n        orange : '#ffa500',\r\n        orangered : '#ff4500',\r\n        orchid : '#da70d6',\r\n        palegoldenrod : '#eee8aa',\r\n        palegreen : '#98fb98',\r\n        paleturquoise : '#afeeee',\r\n        palevioletred : '#d87093',\r\n        papayawhip : '#ffefd5',\r\n        peachpuff : '#ffdab9',\r\n        peru : '#cd853f',\r\n        pink : '#ffc0cb',\r\n        plum : '#dda0dd',\r\n        powderblue : '#b0e0e6',\r\n        purple : '#800080',\r\n        red : '#f00',\r\n        rosybrown : '#bc8f8f',\r\n        royalblue : '#4169e1',\r\n        saddlebrown : '#8b4513',\r\n        salmon : '#fa8072',\r\n        sandybrown : '#f4a460',\r\n        seagreen : '#2e8b57',\r\n        seashell : '#fff5ee',\r\n        sienna : '#a0522d',\r\n        silver : '#c0c0c0',\r\n        skyblue : '#87ceeb',\r\n        slateblue : '#6a5acd',\r\n        slategray : '#708090',\r\n        slategrey : '#708090',\r\n        snow : '#fffafa',\r\n        springgreen : '#00ff7f',\r\n        steelblue : '#4682b4',\r\n        tan : '#d2b48c',\r\n        teal : '#008080',\r\n        thistle : '#d8bfd8',\r\n        tomato : '#ff6347',\r\n        turquoise : '#40e0d0',\r\n        violet : '#ee82ee',\r\n        wheat : '#f5deb3',\r\n        white : '#fff',\r\n        whitesmoke : '#f5f5f5',\r\n        yellow : '#ff0',\r\n        yellowgreen : '#9acd32'\r\n    };\r\n\r\n    /**\r\n     * 自定义调色板\r\n     */\r\n    function customPalette(userPalete) {\r\n        palette = userPalete;\r\n    }\r\n\r\n    /**\r\n     * 复位默认色板\r\n     */\r\n    function resetPalette() {\r\n        palette = _palette;\r\n    }\r\n\r\n    /**\r\n     * 获取色板颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {number} idx 色板位置\r\n     * @param {Array.<string>} [userPalete] 自定义色板\r\n     * @return {string} 颜色\r\n     */\r\n    function getColor(idx, userPalete) {\r\n        idx = idx | 0;\r\n        userPalete = userPalete || palette;\r\n        return userPalete[idx % userPalete.length];\r\n    }\r\n\r\n    /**\r\n     * 自定义默认高亮颜色\r\n     */\r\n    function customHighlight(userHighlightColor) {\r\n        highlightColor = userHighlightColor;\r\n    }\r\n\r\n    /**\r\n     * 重置默认高亮颜色\r\n     */\r\n    function resetHighlight() {\r\n        _highlightColor = highlightColor;\r\n    }\r\n\r\n    /**\r\n     * 获取默认高亮颜色\r\n     */\r\n    function getHighlightColor() {\r\n        return highlightColor;\r\n    }\r\n\r\n    /**\r\n     * 径向渐变\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {number} x0 渐变起点\r\n     * @param {number} y0\r\n     * @param {number} r0\r\n     * @param {number} x1 渐变终点\r\n     * @param {number} y1\r\n     * @param {number} r1\r\n     * @param {Array} colorList 颜色列表\r\n     * @return {CanvasGradient}\r\n     */\r\n    function getRadialGradient(x0, y0, r0, x1, y1, r1, colorList) {\r\n        if (!_ctx) {\r\n            _ctx = util.getContext();\r\n        }\r\n        var gradient = _ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\r\n        for (var i = 0, l = colorList.length; i < l; i++) {\r\n            gradient.addColorStop(colorList[i][0], colorList[i][1]);\r\n        }\r\n        gradient.__nonRecursion = true;\r\n        return gradient;\r\n    }\r\n\r\n    /**\r\n     * 线性渐变\r\n     * @param {Object} x0 渐变起点\r\n     * @param {Object} y0\r\n     * @param {Object} x1 渐变终点\r\n     * @param {Object} y1\r\n     * @param {Array} colorList 颜色列表\r\n     */\r\n    function getLinearGradient(x0, y0, x1, y1, colorList) {\r\n        if (!_ctx) {\r\n            _ctx = util.getContext();\r\n        }\r\n        var gradient = _ctx.createLinearGradient(x0, y0, x1, y1);\r\n        for (var i = 0, l = colorList.length; i < l; i++) {\r\n            gradient.addColorStop(colorList[i][0], colorList[i][1]);\r\n        }\r\n        gradient.__nonRecursion = true;\r\n        return gradient;\r\n    }\r\n\r\n    /**\r\n     * 获取两种颜色之间渐变颜色数组\r\n     * @param {color} start 起始颜色\r\n     * @param {color} end 结束颜色\r\n     * @param {number} step 渐变级数\r\n     * @return {Array}  颜色数组\r\n     */\r\n    function getStepColors(start, end, step) {\r\n        start = toRGBA(start);\r\n        end = toRGBA(end);\r\n        start = getData(start);\r\n        end = getData(end);\r\n\r\n        var colors = [];\r\n        var stepR = (end[0] - start[0]) / step;\r\n        var stepG = (end[1] - start[1]) / step;\r\n        var stepB = (end[2] - start[2]) / step;\r\n        var stepA = (end[3] - start[3]) / step;\r\n        // 生成颜色集合\r\n        // fix by linfeng 颜色堆积\r\n        for (var i = 0, r = start[0], g = start[1], b = start[2], a = start[3]; i < step; i++) {\r\n            colors[i] = toColor([\r\n                adjust(Math.floor(r), [ 0, 255 ]),\r\n                adjust(Math.floor(g), [ 0, 255 ]), \r\n                adjust(Math.floor(b), [ 0, 255 ]),\r\n                a.toFixed(4) - 0\r\n            ],'rgba');\r\n            r += stepR;\r\n            g += stepG;\r\n            b += stepB;\r\n            a += stepA;\r\n        }\r\n        r = end[0];\r\n        g = end[1];\r\n        b = end[2];\r\n        a = end[3];\r\n        colors[i] = toColor([r, g, b, a], 'rgba');\r\n        return colors;\r\n    }\r\n\r\n    /**\r\n     * 获取指定级数的渐变颜色数组\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {Array.<string>} colors 颜色组\r\n     * @param {number} [step=20] 渐变级数\r\n     * @return {Array.<string>}  颜色数组\r\n     */\r\n    function getGradientColors(colors, step) {\r\n        var ret = [];\r\n        var len = colors.length;\r\n        if (step === undefined) {\r\n            step = 20;\r\n        }\r\n        if (len === 1) {\r\n            ret = getStepColors(colors[0], colors[0], step);\r\n        }\r\n        else if (len > 1) {\r\n            for (var i = 0, n = len - 1; i < n; i++) {\r\n                var steps = getStepColors(colors[i], colors[i + 1], step);\r\n                if (i < n - 1) {\r\n                    steps.pop();\r\n                }\r\n                ret = ret.concat(steps);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 颜色值数组转为指定格式颜色,例如:<br/>\r\n     * data = [60,20,20,0.1] format = 'rgba'\r\n     * 返回：rgba(60,20,20,0.1)\r\n     * @param {Array} data 颜色值数组\r\n     * @param {string} format 格式,默认rgb\r\n     * @return {string} 颜色\r\n     */\r\n    function toColor(data, format) {\r\n        format = format || 'rgb';\r\n        if (data && (data.length === 3 || data.length === 4)) {\r\n            data = map(data,\r\n                function(c) {\r\n                    return c > 1 ? Math.ceil(c) : c;\r\n                }\r\n            );\r\n\r\n            if (format.indexOf('hex') > -1) {\r\n                return '#' + ((1 << 24) + (data[0] << 16) + (data[1] << 8) + (+data[2])).toString(16).slice(1);\r\n            }\r\n            else if (format.indexOf('hs') > -1) {\r\n                var sx = map(data.slice(1, 3),\r\n                    function(c) {\r\n                        return c + '%';\r\n                    }\r\n                );\r\n                data[1] = sx[0];\r\n                data[2] = sx[1];\r\n            }\r\n\r\n            if (format.indexOf('a') > -1) {\r\n                if (data.length === 3) {\r\n                    data.push(1);\r\n                }\r\n                data[3] = adjust(data[3], [ 0, 1 ]);\r\n                return format + '(' + data.slice(0, 4).join(',') + ')';\r\n            }\r\n\r\n            return format + '(' + data.slice(0, 3).join(',') + ')';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 颜色字符串转换为rgba数组\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {Array.<number>} 颜色值数组\r\n     */\r\n    function toArray(color) {\r\n        color = trim(color);\r\n        if (color.indexOf('rgba') < 0) {\r\n            color = toRGBA(color);\r\n        }\r\n\r\n        var data = [];\r\n        var i = 0;\r\n        color.replace(/[\\d.]+/g, function (n) {\r\n            if (i < 3) {\r\n                n = n | 0;\r\n            }\r\n            else {\r\n                // Alpha\r\n                n = +n;\r\n            }\r\n            data[i++] = n;\r\n        });\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 颜色格式转化\r\n     *\r\n     * @param {string} color 颜色值数组\r\n     * @param {string} format 格式,默认rgb\r\n     * @return {string} 颜色\r\n     */\r\n    function convert(color, format) {\r\n        if (!isCalculableColor(color)) {\r\n            return color;\r\n        }\r\n        var data = getData(color);\r\n        var alpha = data[3];\r\n        if (typeof alpha === 'undefined') {\r\n            alpha = 1;\r\n        }\r\n\r\n        if (color.indexOf('hsb') > -1) {\r\n            data = _HSV_2_RGB(data);\r\n        }\r\n        else if (color.indexOf('hsl') > -1) {\r\n            data = _HSL_2_RGB(data);\r\n        }\r\n\r\n        if (format.indexOf('hsb') > -1 || format.indexOf('hsv') > -1) {\r\n            data = _RGB_2_HSB(data);\r\n        }\r\n        else if (format.indexOf('hsl') > -1) {\r\n            data = _RGB_2_HSL(data);\r\n        }\r\n\r\n        data[3] = alpha;\r\n\r\n        return toColor(data, format);\r\n    }\r\n\r\n    /**\r\n     * 转换为rgba格式的颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} rgba颜色，rgba(r,g,b,a)\r\n     */\r\n    function toRGBA(color) {\r\n        return convert(color, 'rgba');\r\n    }\r\n\r\n    /**\r\n     * 转换为rgb数字格式的颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} rgb颜色，rgb(0,0,0)格式\r\n     */\r\n    function toRGB(color) {\r\n        return convert(color, 'rgb');\r\n    }\r\n\r\n    /**\r\n     * 转换为16进制颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} 16进制颜色，#rrggbb格式\r\n     */\r\n    function toHex(color) {\r\n        return convert(color, 'hex');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSV颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSVA颜色，hsva(h,s,v,a)\r\n     */\r\n    function toHSVA(color) {\r\n        return convert(color, 'hsva');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSV颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSV颜色，hsv(h,s,v)\r\n     */\r\n    function toHSV(color) {\r\n        return convert(color, 'hsv');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSBA颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSBA颜色，hsba(h,s,b,a)\r\n     */\r\n    function toHSBA(color) {\r\n        return convert(color, 'hsba');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSB颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSB颜色，hsb(h,s,b)\r\n     */\r\n    function toHSB(color) {\r\n        return convert(color, 'hsb');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSLA颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSLA颜色，hsla(h,s,l,a)\r\n     */\r\n    function toHSLA(color) {\r\n        return convert(color, 'hsla');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSL颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSL颜色，hsl(h,s,l)\r\n     */\r\n    function toHSL(color) {\r\n        return convert(color, 'hsl');\r\n    }\r\n\r\n    /**\r\n     * 转换颜色名\r\n     * \r\n     * @param {string} color 颜色\r\n     * @return {string} 颜色名\r\n     */\r\n    function toName(color) {\r\n        for (var key in _nameColors) {\r\n            if (toHex(_nameColors[key]) === toHex(color)) {\r\n                return key;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 移除颜色中多余空格\r\n     * \r\n     * @param {string} color 颜色\r\n     * @return {string} 无空格颜色\r\n     */\r\n    function trim(color) {\r\n        return String(color).replace(/\\s+/g, '');\r\n    }\r\n\r\n    /**\r\n     * 颜色规范化\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} 规范化后的颜色\r\n     */\r\n    function normalize(color) {\r\n        // 颜色名\r\n        if (_nameColors[color]) {\r\n            color = _nameColors[color];\r\n        }\r\n        // 去掉空格\r\n        color = trim(color);\r\n        // hsv与hsb等价\r\n        color = color.replace(/hsv/i, 'hsb');\r\n        // rgb转为rrggbb\r\n        if (/^#[\\da-f]{3}$/i.test(color)) {\r\n            color = parseInt(color.slice(1), 16);\r\n            var r = (color & 0xf00) << 8;\r\n            var g = (color & 0xf0) << 4;\r\n            var b = color & 0xf;\r\n\r\n            color = '#' + ((1 << 24) + (r << 4) + r + (g << 4) + g + (b << 4) + b).toString(16).slice(1);\r\n        }\r\n        // 或者使用以下正则替换，不过 chrome 下性能相对差点\r\n        // color = color.replace(/^#([\\da-f])([\\da-f])([\\da-f])$/i, '#$1$1$2$2$3$3');\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * 颜色加深或减淡，当level>0加深，当level<0减淡\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @param {number} level 升降程度,取值区间[-1,1]\r\n     * @return {string} 加深或减淡后颜色值\r\n     */\r\n    function lift(color, level) {\r\n        if (!isCalculableColor(color)) {\r\n            return color;\r\n        }\r\n        var direct = level > 0 ? 1 : -1;\r\n        if (typeof level === 'undefined') {\r\n            level = 0;\r\n        }\r\n        level = Math.abs(level) > 1 ? 1 : Math.abs(level);\r\n        color = toRGB(color);\r\n        var data = getData(color);\r\n        for (var i = 0; i < 3; i++) {\r\n            if (direct === 1) {\r\n                data[i] = data[i] * (1 - level) | 0;\r\n            }\r\n            else {\r\n                data[i] = ((255 - data[i]) * level + data[i]) | 0;\r\n            }\r\n        }\r\n        return 'rgb(' + data.join(',') + ')';\r\n    }\r\n\r\n    /**\r\n     * 颜色翻转,[255-r,255-g,255-b,1-a]\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} 翻转颜色\r\n     */\r\n    function reverse(color) {\r\n        if (!isCalculableColor(color)) {\r\n            return color;\r\n        }\r\n        var data = getData(toRGBA(color));\r\n        data = map(data,\r\n            function(c) {\r\n                return 255 - c;\r\n            }\r\n        );\r\n        return toColor(data, 'rgb');\r\n    }\r\n\r\n    /**\r\n     * 简单两种颜色混合\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color1 第一种颜色\r\n     * @param {string} color2 第二种颜色\r\n     * @param {number} weight 混合权重[0-1]\r\n     * @return {string} 结果色,rgb(r,g,b)或rgba(r,g,b,a)\r\n     */\r\n    function mix(color1, color2, weight) {\r\n        if (!isCalculableColor(color1) || !isCalculableColor(color2)) {\r\n            return color1;\r\n        }\r\n        \r\n        if (typeof weight === 'undefined') {\r\n            weight = 0.5;\r\n        }\r\n        weight = 1 - adjust(weight, [ 0, 1 ]);\r\n\r\n        var w = weight * 2 - 1;\r\n        var data1 = getData(toRGBA(color1));\r\n        var data2 = getData(toRGBA(color2));\r\n\r\n        var d = data1[3] - data2[3];\r\n\r\n        var weight1 = (((w * d === -1) ? w : (w + d) / (1 + w * d)) + 1) / 2;\r\n        var weight2 = 1 - weight1;\r\n\r\n        var data = [];\r\n\r\n        for (var i = 0; i < 3; i++) {\r\n            data[i] = data1[i] * weight1 + data2[i] * weight2;\r\n        }\r\n\r\n        var alpha = data1[3] * weight + data2[3] * (1 - weight);\r\n        alpha = Math.max(0, Math.min(1, alpha));\r\n\r\n        if (data1[3] === 1 && data2[3] === 1) {// 不考虑透明度\r\n            return toColor(data, 'rgb');\r\n        }\r\n        data[3] = alpha;\r\n        return toColor(data, 'rgba');\r\n    }\r\n\r\n    /**\r\n     * 随机颜色\r\n     * \r\n     * @return {string} 颜色值，#rrggbb格式\r\n     */\r\n    function random() {\r\n        return '#' + (Math.random().toString(16) + '0000').slice(2, 8);\r\n    }\r\n\r\n    /**\r\n     * 获取颜色值数组,返回值范围： <br/>\r\n     * RGB 范围[0-255] <br/>\r\n     * HSL/HSV/HSB 范围[0-1]<br/>\r\n     * A透明度范围[0-1]\r\n     * 支持格式：\r\n     * #rgb\r\n     * #rrggbb\r\n     * rgb(r,g,b)\r\n     * rgb(r%,g%,b%)\r\n     * rgba(r,g,b,a)\r\n     * hsb(h,s,b) // hsv与hsb等价\r\n     * hsb(h%,s%,b%)\r\n     * hsba(h,s,b,a)\r\n     * hsl(h,s,l)\r\n     * hsl(h%,s%,l%)\r\n     * hsla(h,s,l,a)\r\n     *\r\n     * @param {string} color 颜色\r\n     * @return {Array.<number>} 颜色值数组或null\r\n     */\r\n    function getData(color) {\r\n        color = normalize(color);\r\n        var r = color.match(colorRegExp);\r\n        if (r === null) {\r\n            throw new Error('The color format error'); // 颜色格式错误\r\n        }\r\n        var d;\r\n        var a;\r\n        var data = [];\r\n        var rgb;\r\n\r\n        if (r[2]) {\r\n            // #rrggbb\r\n            d = r[2].replace('#', '').split('');\r\n            rgb = [ d[0] + d[1], d[2] + d[3], d[4] + d[5] ];\r\n            data = map(rgb,\r\n                function(c) {\r\n                    return adjust(parseInt(c, 16), [ 0, 255 ]);\r\n                }\r\n            );\r\n\r\n        }\r\n        else if (r[4]) {\r\n            // rgb rgba\r\n            var rgba = (r[4]).split(',');\r\n            a = rgba[3];\r\n            rgb = rgba.slice(0, 3);\r\n            data = map(\r\n                rgb,\r\n                function(c) {\r\n                    c = Math.floor(\r\n                        c.indexOf('%') > 0 ? parseInt(c, 0) * 2.55 : c\r\n                    );\r\n                    return adjust(c, [ 0, 255 ]);\r\n                }\r\n            );\r\n\r\n            if (typeof a !== 'undefined') {\r\n                data.push(adjust(parseFloat(a), [ 0, 1 ]));\r\n            }\r\n        }\r\n        else if (r[5] || r[6]) {\r\n            // hsb hsba hsl hsla\r\n            var hsxa = (r[5] || r[6]).split(',');\r\n            var h = parseInt(hsxa[0], 0) / 360;\r\n            var s = hsxa[1];\r\n            var x = hsxa[2];\r\n            a = hsxa[3];\r\n            data = map([ s, x ],\r\n                function(c) {\r\n                    return adjust(parseFloat(c) / 100, [ 0, 1 ]);\r\n                }\r\n            );\r\n            data.unshift(h);\r\n            if (typeof a !== 'undefined') {\r\n                data.push(adjust(parseFloat(a), [ 0, 1 ]));\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 设置颜色透明度\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @param {number} a 透明度,区间[0,1]\r\n     * @return {string} rgba颜色值\r\n     */\r\n    function alpha(color, a) {\r\n        if (!isCalculableColor(color)) {\r\n            return color;\r\n        }\r\n        if (a === null) {\r\n            a = 1;\r\n        }\r\n        var data = getData(toRGBA(color));\r\n        data[3] = adjust(Number(a).toFixed(4), [ 0, 1 ]);\r\n\r\n        return toColor(data, 'rgba');\r\n    }\r\n\r\n    // 数组映射\r\n    function map(array, fun) {\r\n        if (typeof fun !== 'function') {\r\n            throw new TypeError();\r\n        }\r\n        var len = array ? array.length : 0;\r\n        for (var i = 0; i < len; i++) {\r\n            array[i] = fun(array[i]);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    // 调整值区间\r\n    function adjust(value, region) {\r\n        // < to <= & > to >=\r\n        // modify by linzhifeng 2014-05-25 because -0 == 0\r\n        if (value <= region[0]) {\r\n            value = region[0];\r\n        }\r\n        else if (value >= region[1]) {\r\n            value = region[1];\r\n        }\r\n        return value;\r\n    }\r\n    \r\n    function isCalculableColor(color) {\r\n        return color instanceof Array || typeof color === 'string';\r\n    }\r\n\r\n    // 参见 http:// www.easyrgb.com/index.php?X=MATH\r\n    function _HSV_2_RGB(data) {\r\n        var H = data[0];\r\n        var S = data[1];\r\n        var V = data[2];\r\n        // HSV from 0 to 1\r\n        var R; \r\n        var G;\r\n        var B;\r\n        if (S === 0) {\r\n            R = V * 255;\r\n            G = V * 255;\r\n            B = V * 255;\r\n        }\r\n        else {\r\n            var h = H * 6;\r\n            if (h === 6) {\r\n                h = 0;\r\n            }\r\n            var i = h | 0;\r\n            var v1 = V * (1 - S);\r\n            var v2 = V * (1 - S * (h - i));\r\n            var v3 = V * (1 - S * (1 - (h - i)));\r\n            var r = 0;\r\n            var g = 0;\r\n            var b = 0;\r\n\r\n            if (i === 0) {\r\n                r = V;\r\n                g = v3;\r\n                b = v1;\r\n            }\r\n            else if (i === 1) {\r\n                r = v2;\r\n                g = V;\r\n                b = v1;\r\n            }\r\n            else if (i === 2) {\r\n                r = v1;\r\n                g = V;\r\n                b = v3;\r\n            }\r\n            else if (i === 3) {\r\n                r = v1;\r\n                g = v2;\r\n                b = V;\r\n            }\r\n            else if (i === 4) {\r\n                r = v3;\r\n                g = v1;\r\n                b = V;\r\n            }\r\n            else {\r\n                r = V;\r\n                g = v1;\r\n                b = v2;\r\n            }\r\n\r\n            // RGB results from 0 to 255\r\n            R = r * 255;\r\n            G = g * 255;\r\n            B = b * 255;\r\n        }\r\n        return [ R, G, B ];\r\n    }\r\n\r\n    function _HSL_2_RGB(data) {\r\n        var H = data[0];\r\n        var S = data[1];\r\n        var L = data[2];\r\n        // HSL from 0 to 1\r\n        var R;\r\n        var G;\r\n        var B;\r\n        if (S === 0) {\r\n            R = L * 255;\r\n            G = L * 255;\r\n            B = L * 255;\r\n        }\r\n        else {\r\n            var v2;\r\n            if (L < 0.5) {\r\n                v2 = L * (1 + S);\r\n            }\r\n            else {\r\n                v2 = (L + S) - (S * L);\r\n            }\r\n\r\n            var v1 = 2 * L - v2;\r\n\r\n            R = 255 * _HUE_2_RGB(v1, v2, H + (1 / 3));\r\n            G = 255 * _HUE_2_RGB(v1, v2, H);\r\n            B = 255 * _HUE_2_RGB(v1, v2, H - (1 / 3));\r\n        }\r\n        return [ R, G, B ];\r\n    }\r\n\r\n    function _HUE_2_RGB(v1, v2, vH) {\r\n        if (vH < 0) {\r\n            vH += 1;\r\n        }\r\n        if (vH > 1) {\r\n            vH -= 1;\r\n        }\r\n        if ((6 * vH) < 1) {\r\n            return (v1 + (v2 - v1) * 6 * vH);\r\n        }\r\n        if ((2 * vH) < 1) {\r\n            return (v2);\r\n        }\r\n        if ((3 * vH) < 2) {\r\n            return (v1 + (v2 - v1) * ((2 / 3) - vH) * 6);\r\n        }\r\n        return v1;\r\n    }\r\n\r\n    function _RGB_2_HSB(data) {\r\n        // RGB from 0 to 255\r\n        var R = (data[0] / 255);\r\n        var G = (data[1] / 255);\r\n        var B = (data[2] / 255);\r\n\r\n        var vMin = Math.min(R, G, B); // Min. value of RGB\r\n        var vMax = Math.max(R, G, B); // Max. value of RGB\r\n        var delta = vMax - vMin; // Delta RGB value\r\n        var V = vMax;\r\n        var H;\r\n        var S;\r\n\r\n        // HSV results from 0 to 1\r\n        if (delta === 0) {\r\n            H = 0;\r\n            S = 0;\r\n        }\r\n        else {\r\n            S = delta / vMax;\r\n\r\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\r\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\r\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\r\n\r\n            if (R === vMax) {\r\n                H = deltaB - deltaG;\r\n            }\r\n            else if (G === vMax) {\r\n                H = (1 / 3) + deltaR - deltaB;\r\n            }\r\n            else if (B === vMax) {\r\n                H = (2 / 3) + deltaG - deltaR;\r\n            }\r\n\r\n            if (H < 0) {\r\n                H += 1;\r\n            }\r\n            if (H > 1) {\r\n                H -= 1;\r\n            }\r\n        }\r\n        H = H * 360;\r\n        S = S * 100;\r\n        V = V * 100;\r\n        return [ H, S, V ];\r\n    }\r\n\r\n    function _RGB_2_HSL(data) {\r\n        // RGB from 0 to 255\r\n        var R = (data[0] / 255);\r\n        var G = (data[1] / 255);\r\n        var B = (data[2] / 255);\r\n\r\n        var vMin = Math.min(R, G, B); // Min. value of RGB\r\n        var vMax = Math.max(R, G, B); // Max. value of RGB\r\n        var delta = vMax - vMin; // Delta RGB value\r\n\r\n        var L = (vMax + vMin) / 2;\r\n        var H;\r\n        var S;\r\n        // HSL results from 0 to 1\r\n        if (delta === 0) {\r\n            H = 0;\r\n            S = 0;\r\n        }\r\n        else {\r\n            if (L < 0.5) {\r\n                S = delta / (vMax + vMin);\r\n            }\r\n            else {\r\n                S = delta / (2 - vMax - vMin);\r\n            }\r\n\r\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\r\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\r\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\r\n\r\n            if (R === vMax) {\r\n                H = deltaB - deltaG;\r\n            }\r\n            else if (G === vMax) {\r\n                H = (1 / 3) + deltaR - deltaB;\r\n            }\r\n            else if (B === vMax) {\r\n                H = (2 / 3) + deltaG - deltaR;\r\n            }\r\n\r\n            if (H < 0) {\r\n                H += 1;\r\n            }\r\n\r\n            if (H > 1) {\r\n                H -= 1;\r\n            }\r\n        }\r\n\r\n        H = H * 360;\r\n        S = S * 100;\r\n        L = L * 100;\r\n\r\n        return [ H, S, L ];\r\n    }\r\n\r\n    return {\r\n        customPalette : customPalette,\r\n        resetPalette : resetPalette,\r\n        getColor : getColor,\r\n        getHighlightColor : getHighlightColor,\r\n        customHighlight : customHighlight,\r\n        resetHighlight : resetHighlight,\r\n        getRadialGradient : getRadialGradient,\r\n        getLinearGradient : getLinearGradient,\r\n        getGradientColors : getGradientColors,\r\n        getStepColors : getStepColors,\r\n        reverse : reverse,\r\n        mix : mix,\r\n        lift : lift,\r\n        trim : trim,\r\n        random : random,\r\n        toRGB : toRGB,\r\n        toRGBA : toRGBA,\r\n        toHex : toHex,\r\n        toHSL : toHSL,\r\n        toHSLA : toHSLA,\r\n        toHSB : toHSB,\r\n        toHSBA : toHSBA,\r\n        toHSV : toHSV,\r\n        toHSVA : toHSVA,\r\n        toName : toName,\r\n        toColor : toColor,\r\n        toArray : toArray,\r\n        alpha : alpha,\r\n        getData : getData\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts默认配置项\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n    // 请原谅我这样写，这显然可以直接返回个对象，但那样的话outline就显示不出来了~~\r\n    var config = {\r\n        // 图表类型\r\n        CHART_TYPE_LINE: 'line',\r\n        CHART_TYPE_BAR: 'bar',\r\n        CHART_TYPE_SCATTER: 'scatter',\r\n        CHART_TYPE_PIE: 'pie',\r\n        CHART_TYPE_RADAR: 'radar',\r\n        CHART_TYPE_VENN: 'venn',\r\n        CHART_TYPE_TREEMAP: 'treemap',\r\n        CHART_TYPE_TREE: 'tree',\r\n        CHART_TYPE_MAP: 'map',\r\n        CHART_TYPE_K: 'k',\r\n        CHART_TYPE_ISLAND: 'island',\r\n        CHART_TYPE_FORCE: 'force',\r\n        CHART_TYPE_CHORD: 'chord',\r\n        CHART_TYPE_GAUGE: 'gauge',\r\n        CHART_TYPE_FUNNEL: 'funnel',\r\n        CHART_TYPE_EVENTRIVER: 'eventRiver',\r\n        CHART_TYPE_WORDCLOUD: 'wordCloud',\r\n        CHART_TYPE_HEATMAP: 'heatmap',\r\n\r\n        // 组件类型\r\n        COMPONENT_TYPE_TITLE: 'title',\r\n        COMPONENT_TYPE_LEGEND: 'legend',\r\n        COMPONENT_TYPE_DATARANGE: 'dataRange',\r\n        COMPONENT_TYPE_DATAVIEW: 'dataView',\r\n        COMPONENT_TYPE_DATAZOOM: 'dataZoom',\r\n        COMPONENT_TYPE_TOOLBOX: 'toolbox',\r\n        COMPONENT_TYPE_TOOLTIP: 'tooltip',\r\n        COMPONENT_TYPE_GRID: 'grid',\r\n        COMPONENT_TYPE_AXIS: 'axis',\r\n        COMPONENT_TYPE_POLAR: 'polar',\r\n        COMPONENT_TYPE_X_AXIS: 'xAxis',\r\n        COMPONENT_TYPE_Y_AXIS: 'yAxis',\r\n        COMPONENT_TYPE_AXIS_CATEGORY: 'categoryAxis',\r\n        COMPONENT_TYPE_AXIS_VALUE: 'valueAxis',\r\n        COMPONENT_TYPE_TIMELINE: 'timeline',\r\n        COMPONENT_TYPE_ROAMCONTROLLER: 'roamController',\r\n\r\n        // 全图默认背景\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        \r\n        // 默认色板\r\n        color: ['#ff7f50','#87cefa','#da70d6','#32cd32','#6495ed',\r\n                '#ff69b4','#ba55d3','#cd5c5c','#ffa500','#40e0d0',\r\n                '#1e90ff','#ff6347','#7b68ee','#00fa9a','#ffd700',\r\n                '#6699FF','#ff6666','#3cb371','#b8860b','#30e0e0'],\r\n\r\n        markPoint: {\r\n            clickable: true,\r\n            symbol: 'pin',         // 标注类型\r\n            symbolSize: 10,        // 标注大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n            // symbolRotate: null, // 标注旋转控制\r\n            large: false,\r\n            effect: {\r\n                show: false,\r\n                loop: true,\r\n                period: 15,             // 运动周期，无单位，值越大越慢\r\n                type: 'scale',          // 可用为 scale | bounce\r\n                scaleSize: 2,           // 放大倍数，以markPoint点size为基准\r\n                bounceDistance: 10     // 跳动距离，单位px\r\n                // color: 'gold',\r\n                // shadowColor: 'rgba(255,215,0,0.8)',\r\n                // shadowBlur: 0          // 炫光模糊\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    // color: 各异，\r\n                    // borderColor: 各异,        // 标注边线颜色，优先于color \r\n                    borderWidth: 2,             // 标注边线线宽，单位px，默认为1\r\n                    label: {\r\n                        show: true,\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        position: 'inside'      // 可选为'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    }\r\n                },\r\n                emphasis: {\r\n                    // color: 各异\r\n                    label: {\r\n                        show: true\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // position: 'inside'  // 'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null     // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        markLine: {\r\n            clickable: true,\r\n            // 标线起始和结束的symbol介绍类型，如果都一样，可以直接传string\r\n            symbol: ['circle', 'arrow'],\r\n            // 标线起始和结束的symbol大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n            symbolSize: [2, 4],\r\n            // 标线起始和结束的symbol旋转控制\r\n            //symbolRotate: null,\r\n            //smooth: false,\r\n            smoothness: 0.2,    // 平滑度\r\n            precision: 2,\r\n            effect: {\r\n                show: false,\r\n                loop: true,\r\n                period: 15,                     // 运动周期，无单位，值越大越慢\r\n                scaleSize: 2                    // 放大倍数，以markLine线lineWidth为基准\r\n                // color: 'gold',\r\n                // shadowColor: 'rgba(255,215,0,0.8)',\r\n                // shadowBlur: lineWidth * 2    // 炫光模糊，默认等于scaleSize计算所得\r\n            },\r\n            // 边捆绑\r\n            bundling: {\r\n                enable: false,\r\n                // [0, 90]\r\n                maxTurningAngle: 45\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    // color: 各异,               // 标线主色，线色，symbol主色\r\n                    // borderColor: 随color,     // 标线symbol边框颜色，优先于color \r\n                    borderWidth: 1.5,           // 标线symbol边框线宽，单位px，默认为2\r\n                    label: {\r\n                        show: true,\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // 可选为 'start'|'end'|'left'|'right'|'top'|'bottom'\r\n                        position: 'end'\r\n                        // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    },\r\n                    lineStyle: {\r\n                        // color: 随borderColor, // 主色，线色，优先级高于borderColor和color\r\n                        // width: 随borderWidth, // 优先于borderWidth\r\n                        type: 'dashed'\r\n                        // shadowColor: 'rgba(0,0,0,0)', //默认透明\r\n                        // shadowBlur: 0,\r\n                        // shadowOffsetX: 0,\r\n                        // shadowOffsetY: 0\r\n                    }\r\n                },\r\n                emphasis: {\r\n                    // color: 各异\r\n                    label: {\r\n                        show: false\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // position: 'inside' // 'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null    // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    },\r\n                    lineStyle: {}\r\n                }\r\n            }\r\n        },\r\n\r\n        // 主题，主题\r\n        textStyle: {\r\n            decoration: 'none',\r\n            fontFamily: 'Arial, Verdana, sans-serif',\r\n            fontFamily2: '微软雅黑',    // IE8- 字体模糊并且，不支持不同字体混排，额外指定一份\r\n            fontSize: 12,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal'\r\n        },\r\n\r\n        EVENT: {\r\n            // -------全局通用\r\n            REFRESH: 'refresh',\r\n            RESTORE: 'restore',\r\n            RESIZE: 'resize',\r\n            CLICK: 'click',\r\n            DBLCLICK: 'dblclick',\r\n            HOVER: 'hover',\r\n            MOUSEOUT: 'mouseout',\r\n            //MOUSEWHEEL: 'mousewheel',\r\n            // -------业务交互逻辑\r\n            DATA_CHANGED: 'dataChanged',\r\n            DATA_ZOOM: 'dataZoom',\r\n            DATA_RANGE: 'dataRange',\r\n            DATA_RANGE_SELECTED: 'dataRangeSelected',\r\n            DATA_RANGE_HOVERLINK: 'dataRangeHoverLink',\r\n            LEGEND_SELECTED: 'legendSelected',\r\n            LEGEND_HOVERLINK: 'legendHoverLink',\r\n            MAP_SELECTED: 'mapSelected',\r\n            PIE_SELECTED: 'pieSelected',\r\n            MAGIC_TYPE_CHANGED: 'magicTypeChanged',\r\n            DATA_VIEW_CHANGED: 'dataViewChanged',\r\n            TIMELINE_CHANGED: 'timelineChanged',\r\n            MAP_ROAM: 'mapRoam',\r\n            FORCE_LAYOUT_END: 'forceLayoutEnd',\r\n            // -------内部通信\r\n            TOOLTIP_HOVER: 'tooltipHover',\r\n            TOOLTIP_IN_GRID: 'tooltipInGrid',\r\n            TOOLTIP_OUT_GRID: 'tooltipOutGrid',\r\n            ROAMCONTROLLER: 'roamController'\r\n        },\r\n        DRAG_ENABLE_TIME: 120,   // 降低图表内元素拖拽敏感度，单位ms，不建议外部干预\r\n        EFFECT_ZLEVEL : 10,       // 特效动画zlevel\r\n        effectBlendAlpha: 0.95,\r\n        // 主题，默认标志图形类型列表\r\n        symbolList: [\r\n          'circle', 'rectangle', 'triangle', 'diamond',\r\n          'emptyCircle', 'emptyRectangle', 'emptyTriangle', 'emptyDiamond'\r\n        ],\r\n        loadingEffect: 'spin',\r\n        loadingText: '数据读取中...',\r\n        noDataEffect: 'bubble',\r\n        noDataText: '暂无数据',\r\n        // noDataLoadingOption: null,\r\n        // 可计算特性配置，孤岛，提示颜色\r\n        calculable: false,                      // 默认关闭可计算特性\r\n        calculableColor: 'rgba(255,165,0,0.6)', // 拖拽提示边框颜色\r\n        calculableHolderColor: '#ccc',          // 可计算占位提示颜色\r\n        nameConnector: ' & ',\r\n        valueConnector: ': ',\r\n        animation: true,                // 过渡动画是否开启\r\n        addDataAnimation: true,         // 动态数据接口是否开启动画效果\r\n        animationThreshold: 2000,       // 动画元素阀值，产生的图形原素超过2000不出动画\r\n        animationDuration: 2000,        // 过渡动画参数：进入\r\n        animationDurationUpdate: 500,   // 过渡动画参数：更新\r\n        animationEasing: 'ExponentialOut'    //BounceOut\r\n    };\r\n\r\n    return config;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n        var ArrayCtor = typeof Float32Array === 'undefined'\r\n            ? Array\r\n            : Float32Array;\r\n\r\n        /**\r\n         * @typedef {Float32Array|Array.<number>} Vector2\r\n         */\r\n        /**\r\n         * 二维向量类\r\n         * @exports zrender/tool/vector\r\n         */\r\n        var vector = {\r\n            /**\r\n             * 创建一个向量\r\n             * @param {number} [x=0]\r\n             * @param {number} [y=0]\r\n             * @return {Vector2}\r\n             */\r\n            create: function (x, y) {\r\n                var out = new ArrayCtor(2);\r\n                out[0] = x || 0;\r\n                out[1] = y || 0;\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 复制向量数据\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             * @return {Vector2}\r\n             */\r\n            copy: function (out, v) {\r\n                out[0] = v[0];\r\n                out[1] = v[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 克隆一个向量\r\n             * @param {Vector2} v\r\n             * @return {Vector2}\r\n             */\r\n            clone: function (v) {\r\n                var out = new ArrayCtor(2);\r\n                out[0] = v[0];\r\n                out[1] = v[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 设置向量的两个项\r\n             * @param {Vector2} out\r\n             * @param {number} a\r\n             * @param {number} b\r\n             * @return {Vector2} 结果\r\n             */\r\n            set: function (out, a, b) {\r\n                out[0] = a;\r\n                out[1] = b;\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量相加\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             */\r\n            add: function (out, v1, v2) {\r\n                out[0] = v1[0] + v2[0];\r\n                out[1] = v1[1] + v2[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量缩放后相加\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @param {number} a\r\n             */\r\n            scaleAndAdd: function (out, v1, v2, a) {\r\n                out[0] = v1[0] + v2[0] * a;\r\n                out[1] = v1[1] + v2[1] * a;\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量相减\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             */\r\n            sub: function (out, v1, v2) {\r\n                out[0] = v1[0] - v2[0];\r\n                out[1] = v1[1] - v2[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量长度\r\n             * @param {Vector2} v\r\n             * @return {number}\r\n             */\r\n            len: function (v) {\r\n                return Math.sqrt(this.lenSquare(v));\r\n            },\r\n\r\n            /**\r\n             * 向量长度平方\r\n             * @param {Vector2} v\r\n             * @return {number}\r\n             */\r\n            lenSquare: function (v) {\r\n                return v[0] * v[0] + v[1] * v[1];\r\n            },\r\n\r\n            /**\r\n             * 向量乘法\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             */\r\n            mul: function (out, v1, v2) {\r\n                out[0] = v1[0] * v2[0];\r\n                out[1] = v1[1] * v2[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量除法\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             */\r\n            div: function (out, v1, v2) {\r\n                out[0] = v1[0] / v2[0];\r\n                out[1] = v1[1] / v2[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量点乘\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @return {number}\r\n             */\r\n            dot: function (v1, v2) {\r\n                return v1[0] * v2[0] + v1[1] * v2[1];\r\n            },\r\n\r\n            /**\r\n             * 向量缩放\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             * @param {number} s\r\n             */\r\n            scale: function (out, v, s) {\r\n                out[0] = v[0] * s;\r\n                out[1] = v[1] * s;\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量归一化\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             */\r\n            normalize: function (out, v) {\r\n                var d = vector.len(v);\r\n                if (d === 0) {\r\n                    out[0] = 0;\r\n                    out[1] = 0;\r\n                }\r\n                else {\r\n                    out[0] = v[0] / d;\r\n                    out[1] = v[1] / d;\r\n                }\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 计算向量间距离\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @return {number}\r\n             */\r\n            distance: function (v1, v2) {\r\n                return Math.sqrt(\r\n                    (v1[0] - v2[0]) * (v1[0] - v2[0])\r\n                    + (v1[1] - v2[1]) * (v1[1] - v2[1])\r\n                );\r\n            },\r\n\r\n            /**\r\n             * 向量距离平方\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @return {number}\r\n             */\r\n            distanceSquare: function (v1, v2) {\r\n                return (v1[0] - v2[0]) * (v1[0] - v2[0])\r\n                    + (v1[1] - v2[1]) * (v1[1] - v2[1]);\r\n            },\r\n\r\n            /**\r\n             * 求负向量\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             */\r\n            negate: function (out, v) {\r\n                out[0] = -v[0];\r\n                out[1] = -v[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 插值两个点\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @param {number} t\r\n             */\r\n            lerp: function (out, v1, v2, t) {\r\n                // var ax = v1[0];\r\n                // var ay = v1[1];\r\n                out[0] = v1[0] + t * (v2[0] - v1[0]);\r\n                out[1] = v1[1] + t * (v2[1] - v1[1]);\r\n                return out;\r\n            },\r\n            \r\n            /**\r\n             * 矩阵左乘向量\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             * @param {Vector2} m\r\n             */\r\n            applyTransform: function (out, v, m) {\r\n                var x = v[0];\r\n                var y = v[1];\r\n                out[0] = m[0] * x + m[2] * y + m[4];\r\n                out[1] = m[1] * x + m[3] * y + m[5];\r\n                return out;\r\n            },\r\n            /**\r\n             * 求两个向量最小值\r\n             * @param  {Vector2} out\r\n             * @param  {Vector2} v1\r\n             * @param  {Vector2} v2\r\n             */\r\n            min: function (out, v1, v2) {\r\n                out[0] = Math.min(v1[0], v2[0]);\r\n                out[1] = Math.min(v1[1], v2[1]);\r\n                return out;\r\n            },\r\n            /**\r\n             * 求两个向量最大值\r\n             * @param  {Vector2} out\r\n             * @param  {Vector2} v1\r\n             * @param  {Vector2} v2\r\n             */\r\n            max: function (out, v1, v2) {\r\n                out[0] = Math.max(v1[0], v2[0]);\r\n                out[1] = Math.max(v1[1], v2[1]);\r\n                return out;\r\n            }\r\n        };\r\n\r\n        vector.length = vector.len;\r\n        vector.lengthSquare = vector.lenSquare;\r\n        vector.dist = vector.distance;\r\n        vector.distSquare = vector.distanceSquare;\r\n        \r\n        return vector;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echart组件库\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (/*require*/) {     // component\r\n    var self = {};\r\n\r\n    var _componentLibrary = {};     // echart组件库\r\n\r\n    /**\r\n     * 定义图形实现\r\n     * @param {Object} name\r\n     * @param {Object} clazz 图形实现\r\n     */\r\n    self.define = function (name, clazz) {\r\n        _componentLibrary[name] = clazz;\r\n        return self;\r\n    };\r\n\r\n    /**\r\n     * 获取图形实现\r\n     * @param {Object} name\r\n     */\r\n    self.get = function (name) {\r\n        return _componentLibrary[name];\r\n    };\r\n    \r\n    return self;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 矩形\r\n * @module zrender/shape/Rectangle\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com) , \r\n *         strwind (@劲风FEI)\r\n * @example\r\n *     var Rectangle = require('zrender/shape/Rectangle');\r\n *     var shape = new Rectangle({\r\n *         style: {\r\n *             x: 0,\r\n *             y: 0,\r\n *             width: 100,\r\n *             height: 100,\r\n *             radius: 20\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IRectangleStyle\r\n * @property {number} x 左上角x坐标\r\n * @property {number} y 左上角y坐标\r\n * @property {number} width 宽度\r\n * @property {number} height 高度\r\n * @property {number|Array.<number>} radius 矩形圆角，可以用数组分别指定四个角的圆角\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(1);\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Rectangle\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Rectangle = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 矩形绘制样式\r\n             * @name module:zrender/shape/Rectangle#style\r\n             * @type {module:zrender/shape/Rectangle~IRectangleStyle}\r\n             */\r\n            /**\r\n             * 矩形高亮绘制样式\r\n             * @name module:zrender/shape/Rectangle#highlightStyle\r\n             * @type {module:zrender/shape/Rectangle~IRectangleStyle}\r\n             */\r\n        };\r\n\r\n        Rectangle.prototype =  {\r\n            type: 'rectangle',\r\n\r\n            _buildRadiusPath: function (ctx, style) {\r\n                // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\r\n                // r缩写为1         相当于 [1, 1, 1, 1]\r\n                // r缩写为[1]       相当于 [1, 1, 1, 1]\r\n                // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\r\n                // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\r\n                var x = style.x;\r\n                var y = style.y;\r\n                var width = style.width;\r\n                var height = style.height;\r\n                var r = style.radius;\r\n                var r1; \r\n                var r2; \r\n                var r3; \r\n                var r4;\r\n                  \r\n                if (typeof r === 'number') {\r\n                    r1 = r2 = r3 = r4 = r;\r\n                }\r\n                else if (r instanceof Array) {\r\n                    if (r.length === 1) {\r\n                        r1 = r2 = r3 = r4 = r[0];\r\n                    }\r\n                    else if (r.length === 2) {\r\n                        r1 = r3 = r[0];\r\n                        r2 = r4 = r[1];\r\n                    }\r\n                    else if (r.length === 3) {\r\n                        r1 = r[0];\r\n                        r2 = r4 = r[1];\r\n                        r3 = r[2];\r\n                    }\r\n                    else {\r\n                        r1 = r[0];\r\n                        r2 = r[1];\r\n                        r3 = r[2];\r\n                        r4 = r[3];\r\n                    }\r\n                }\r\n                else {\r\n                    r1 = r2 = r3 = r4 = 0;\r\n                }\r\n                \r\n                var total;\r\n                if (r1 + r2 > width) {\r\n                    total = r1 + r2;\r\n                    r1 *= width / total;\r\n                    r2 *= width / total;\r\n                }\r\n                if (r3 + r4 > width) {\r\n                    total = r3 + r4;\r\n                    r3 *= width / total;\r\n                    r4 *= width / total;\r\n                }\r\n                if (r2 + r3 > height) {\r\n                    total = r2 + r3;\r\n                    r2 *= height / total;\r\n                    r3 *= height / total;\r\n                }\r\n                if (r1 + r4 > height) {\r\n                    total = r1 + r4;\r\n                    r1 *= height / total;\r\n                    r4 *= height / total;\r\n                }\r\n                ctx.moveTo(x + r1, y);\r\n                ctx.lineTo(x + width - r2, y);\r\n                r2 !== 0 && ctx.quadraticCurveTo(\r\n                    x + width, y, x + width, y + r2\r\n                );\r\n                ctx.lineTo(x + width, y + height - r3);\r\n                r3 !== 0 && ctx.quadraticCurveTo(\r\n                    x + width, y + height, x + width - r3, y + height\r\n                );\r\n                ctx.lineTo(x + r4, y + height);\r\n                r4 !== 0 && ctx.quadraticCurveTo(\r\n                    x, y + height, x, y + height - r4\r\n                );\r\n                ctx.lineTo(x, y + r1);\r\n                r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\r\n            },\r\n            \r\n            /**\r\n             * 创建矩形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {Object} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                if (!style.radius) {\r\n                    ctx.moveTo(style.x, style.y);\r\n                    ctx.lineTo(style.x + style.width, style.y);\r\n                    ctx.lineTo(style.x + style.width, style.y + style.height);\r\n                    ctx.lineTo(style.x, style.y + style.height);\r\n                    ctx.lineTo(style.x, style.y);\r\n                    // ctx.rect(style.x, style.y, style.width, style.height);\r\n                }\r\n                else {\r\n                    this._buildRadiusPath(ctx, style);\r\n                }\r\n                ctx.closePath();\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回矩形包围盒矩阵\r\n             * @param {module:zrender/shape/Rectangle~IRectangleStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function(style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                style.__rect = {\r\n                    x : Math.round(style.x - lineWidth / 2),\r\n                    y : Math.round(style.y - lineWidth / 2),\r\n                    width : style.width + lineWidth,\r\n                    height : style.height + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Rectangle, Base);\r\n        return Rectangle;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var ecConfig = __webpack_require__(4);\r\n    var ecData = __webpack_require__(14);\r\n    var ecQuery = __webpack_require__(68);\r\n    var number = __webpack_require__(69);\r\n    var zrUtil = __webpack_require__(0);\r\n    \r\n    function Base(ecTheme, messageCenter, zr, option, myChart){\r\n        this.ecTheme = ecTheme;\r\n        this.messageCenter = messageCenter;\r\n        this.zr =zr;\r\n        this.option = option;\r\n        this.series = option.series;\r\n        this.myChart = myChart;\r\n        this.component = myChart.component;\r\n\r\n        this.shapeList = [];\r\n        this.effectList = [];\r\n        \r\n        var self = this;\r\n        \r\n        self._onlegendhoverlink = function(param) {\r\n            if (self.legendHoverLink) {\r\n                var targetName = param.target;\r\n                var name;\r\n                for (var i = self.shapeList.length - 1; i >= 0; i--) {\r\n                    name = self.type == ecConfig.CHART_TYPE_PIE\r\n                           || self.type == ecConfig.CHART_TYPE_FUNNEL\r\n                           ? ecData.get(self.shapeList[i], 'name')\r\n                           : (ecData.get(self.shapeList[i], 'series') || {}).name;\r\n                    if (name == targetName \r\n                        && !self.shapeList[i].invisible \r\n                        && !self.shapeList[i].__animating\r\n                    ) {\r\n                        self.zr.addHoverShape(self.shapeList[i]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        messageCenter && messageCenter.bind(\r\n            ecConfig.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 基类方法\r\n     */\r\n    Base.prototype = {\r\n        canvasSupported: __webpack_require__(15).canvasSupported,\r\n        _getZ : function(zWhat) {\r\n            if (this[zWhat] != null) {\r\n                return this[zWhat];\r\n            }\r\n            var opt = this.ecTheme[this.type];\r\n            if (opt && opt[zWhat] != null) {\r\n                return opt[zWhat];\r\n            }\r\n            opt = ecConfig[this.type];\r\n            if (opt && opt[zWhat] != null) {\r\n                return opt[zWhat];\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * 获取zlevel基数配置\r\n         */\r\n        getZlevelBase: function () {\r\n            return this._getZ('zlevel');\r\n        },\r\n        \r\n        /**\r\n         * 获取z基数配置\r\n         */\r\n        getZBase: function() {\r\n            return this._getZ('z');\r\n        },\r\n\r\n        /**\r\n         * 参数修正&默认值赋值\r\n         * @param {Object} opt 参数\r\n         *\r\n         * @return {Object} 修正后的参数\r\n         */\r\n        reformOption: function (opt) {\r\n            // 默认配置项动态多级合并，依赖加载的组件选项未被merge到ecTheme里，需要从config里取\r\n            opt = zrUtil.merge(\r\n                       zrUtil.merge(\r\n                           opt || {},\r\n                           zrUtil.clone(this.ecTheme[this.type] || {})\r\n                       ),\r\n                       zrUtil.clone(ecConfig[this.type] || {})\r\n                   );\r\n            this.z = opt.z;\r\n            this.zlevel = opt.zlevel;\r\n            return opt;\r\n        },\r\n        \r\n        /**\r\n         * css类属性数组补全，如padding，margin等~\r\n         */\r\n        reformCssArray: function (p) {\r\n            if (p instanceof Array) {\r\n                switch (p.length + '') {\r\n                    case '4':\r\n                        return p;\r\n                    case '3':\r\n                        return [p[0], p[1], p[2], p[1]];\r\n                    case '2':\r\n                        return [p[0], p[1], p[0], p[1]];\r\n                    case '1':\r\n                        return [p[0], p[0], p[0], p[0]];\r\n                    case '0':\r\n                        return [0, 0, 0, 0];\r\n                }\r\n            }\r\n            else {\r\n                return [p, p, p, p];\r\n            }\r\n        },\r\n        \r\n        getShapeById: function(id) {\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].id === id) {\r\n                    return this.shapeList[i];\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        \r\n        /**\r\n         * 获取自定义和默认配置合并后的字体设置\r\n         */\r\n        getFont: function (textStyle) {\r\n            var finalTextStyle = this.getTextStyle(\r\n                zrUtil.clone(textStyle)\r\n            );\r\n            return finalTextStyle.fontStyle + ' '\r\n                   + finalTextStyle.fontWeight + ' '\r\n                   + finalTextStyle.fontSize + 'px '\r\n                   + finalTextStyle.fontFamily;\r\n        },\r\n\r\n        /**\r\n         * 获取统一主题字体样式\r\n         */\r\n        getTextStyle: function(targetStyle) {\r\n            return zrUtil.merge(\r\n                       zrUtil.merge(\r\n                           targetStyle || {},\r\n                           this.ecTheme.textStyle\r\n                       ),\r\n                       ecConfig.textStyle\r\n                   );\r\n        },\r\n        \r\n        getItemStyleColor: function (itemColor, seriesIndex, dataIndex, data) {\r\n            return typeof itemColor === 'function'\r\n                   ? itemColor.call(\r\n                        this.myChart,\r\n                        {\r\n                            seriesIndex: seriesIndex,\r\n                            series: this.series[seriesIndex],\r\n                            dataIndex: dataIndex,\r\n                            data: data\r\n                        }\r\n                   )\r\n                   : itemColor;\r\n            \r\n        }, \r\n\r\n        /**\r\n         * @parmas {object | number} data 目标data\r\n         * @params {string= | number=} defaultData 无数据时默认返回\r\n         */\r\n        getDataFromOption: function (data, defaultData) {\r\n            return data != null ? (data.value != null ? data.value : data) : defaultData;\r\n        },\r\n        \r\n        // 亚像素优化\r\n        subPixelOptimize: function (position, lineWidth) {\r\n            if (lineWidth % 2 === 1) {\r\n                //position += position === Math.ceil(position) ? 0.5 : 0;\r\n                position = Math.floor(position) + 0.5;\r\n            }\r\n            else {\r\n                position = Math.round(position);\r\n            }\r\n            return position;\r\n        },\r\n        \r\n        // 默认resize\r\n        resize: function () {\r\n            this.refresh && this.refresh();\r\n            this.clearEffectShape && this.clearEffectShape(true);\r\n            var self = this;\r\n            setTimeout(function(){\r\n                self.animationEffect && self.animationEffect();\r\n            },200);\r\n        },\r\n\r\n        /**\r\n         * 清除图形数据，实例仍可用\r\n         */\r\n        clear :function () {\r\n            this.clearEffectShape && this.clearEffectShape();\r\n            this.zr && this.zr.delShape(this.shapeList);\r\n            this.shapeList = [];\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用\r\n         */\r\n        dispose: function () {\r\n            this.onbeforDispose && this.onbeforDispose();\r\n            this.clear();\r\n            this.shapeList = null;\r\n            this.effectList = null;\r\n            this.messageCenter && this.messageCenter.unbind(\r\n                ecConfig.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink\r\n            );\r\n            this.onafterDispose && this.onafterDispose();\r\n        },\r\n        \r\n        query: ecQuery.query,\r\n        deepQuery: ecQuery.deepQuery,\r\n        deepMerge: ecQuery.deepMerge,\r\n        \r\n        parsePercent: number.parsePercent,\r\n        parseCenter: number.parseCenter,\r\n        parseRadius: number.parseRadius,\r\n        numAddCommas: number.addCommas,\r\n\r\n        getPrecision: number.getPrecision\r\n    };\r\n    \r\n    return Base;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 事件辅助类\r\n * @module zrender/tool/event\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n\r\n        'use strict';\r\n\r\n        var Eventful = __webpack_require__(20);\r\n\r\n        /**\r\n        * 提取鼠标（手指）x坐标\r\n        * @memberOf module:zrender/tool/event\r\n        * @param  {Event} e 事件.\r\n        * @return {number} 鼠标（手指）x坐标.\r\n        */\r\n        function getX(e) {\r\n            return typeof e.zrenderX != 'undefined' && e.zrenderX\r\n                   || typeof e.offsetX != 'undefined' && e.offsetX\r\n                   || typeof e.layerX != 'undefined' && e.layerX\r\n                   || typeof e.clientX != 'undefined' && e.clientX;\r\n        }\r\n\r\n        /**\r\n        * 提取鼠标y坐标\r\n        * @memberOf module:zrender/tool/event\r\n        * @param  {Event} e 事件.\r\n        * @return {number} 鼠标（手指）y坐标.\r\n        */\r\n        function getY(e) {\r\n            return typeof e.zrenderY != 'undefined' && e.zrenderY\r\n                   || typeof e.offsetY != 'undefined' && e.offsetY\r\n                   || typeof e.layerY != 'undefined' && e.layerY\r\n                   || typeof e.clientY != 'undefined' && e.clientY;\r\n        }\r\n\r\n        /**\r\n        * 提取鼠标滚轮变化\r\n        * @memberOf module:zrender/tool/event\r\n        * @param  {Event} e 事件.\r\n        * @return {number} 滚轮变化，正值说明滚轮是向上滚动，如果是负值说明滚轮是向下滚动\r\n        */\r\n        function getDelta(e) {\r\n            return typeof e.zrenderDelta != 'undefined' && e.zrenderDelta\r\n                   || typeof e.wheelDelta != 'undefined' && e.wheelDelta\r\n                   || typeof e.detail != 'undefined' && -e.detail;\r\n        }\r\n\r\n        /**\r\n         * 停止冒泡和阻止默认行为\r\n         * @memberOf module:zrender/tool/event\r\n         * @method\r\n         * @param {Event} e : event对象\r\n         */\r\n        var stop = typeof window.addEventListener === 'function'\r\n            ? function (e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                e.cancelBubble = true;\r\n            }\r\n            : function (e) {\r\n                e.returnValue = false;\r\n                e.cancelBubble = true;\r\n            };\r\n        \r\n        return {\r\n            getX : getX,\r\n            getY : getY,\r\n            getDelta : getDelta,\r\n            stop : stop,\r\n            // 做向上兼容\r\n            Dispatcher : Eventful\r\n        };\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n    /**\r\n     * config默认配置项\r\n     * @exports zrender/config\r\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n     */\r\n    var config = {\r\n        /**\r\n         * @namespace module:zrender/config.EVENT\r\n         */\r\n        EVENT : {\r\n            /**\r\n             * 窗口大小变化\r\n             * @type {string}\r\n             */\r\n            RESIZE : 'resize',\r\n            /**\r\n             * 鼠标按钮被（手指）按下，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            CLICK : 'click',\r\n            /**\r\n             * 双击事件\r\n             * @type {string}\r\n             */\r\n            DBLCLICK : 'dblclick',\r\n            /**\r\n             * 鼠标滚轮变化，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            MOUSEWHEEL : 'mousewheel',\r\n            /**\r\n             * 鼠标（手指）被移动，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            MOUSEMOVE : 'mousemove',\r\n            /**\r\n             * 鼠标移到某图形元素之上，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            MOUSEOVER : 'mouseover',\r\n            /**\r\n             * 鼠标从某图形元素移开，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            MOUSEOUT : 'mouseout',\r\n            /**\r\n             * 鼠标按钮（手指）被按下，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            MOUSEDOWN : 'mousedown',\r\n            /**\r\n             * 鼠标按键（手指）被松开，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            MOUSEUP : 'mouseup',\r\n            /**\r\n             * 全局离开，MOUSEOUT触发比较频繁，一次离开优化绑定\r\n             * @type {string}\r\n             */\r\n            GLOBALOUT : 'globalout',    // \r\n\r\n            // 一次成功元素拖拽的行为事件过程是：\r\n            // dragstart > dragenter > dragover [> dragleave] > drop > dragend\r\n            /**\r\n             * 开始拖拽时触发，事件对象是：被拖拽图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGSTART : 'dragstart',\r\n            /**\r\n             * 拖拽完毕时触发（在drop之后触发），事件对象是：被拖拽图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGEND : 'dragend',\r\n            /**\r\n             * 拖拽图形元素进入目标图形元素时触发，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGENTER : 'dragenter',\r\n            /**\r\n             * 拖拽图形元素在目标图形元素上移动时触发，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGOVER : 'dragover',\r\n            /**\r\n             * 拖拽图形元素离开目标图形元素时触发，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGLEAVE : 'dragleave',\r\n            /**\r\n             * 拖拽图形元素放在目标图形元素内时触发，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            DROP : 'drop',\r\n            /**\r\n             * touch end - start < delay is click\r\n             * @type {number}\r\n             */\r\n            touchClickDelay : 300\r\n        },\r\n\r\n        elementClassName: 'zr-element',\r\n\r\n        // 是否异常捕获\r\n        catchBrushException: false,\r\n\r\n        /**\r\n         * debug日志选项：catchBrushException为true下有效\r\n         * 0 : 不生成debug数据，发布用\r\n         * 1 : 异常抛出，调试用\r\n         * 2 : 控制台输出，调试用\r\n         */\r\n        debugMode: 0,\r\n\r\n        // retina 屏幕优化\r\n        devicePixelRatio: Math.max(window.devicePixelRatio || 1, 1)\r\n    };\r\n    return config;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender: loading特效类\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n        var util = __webpack_require__(0);\r\n        var TextShape = __webpack_require__(16);\r\n        var RectangleShape = __webpack_require__(7);\r\n\r\n\r\n        var DEFAULT_TEXT = 'Loading...';\r\n        var DEFAULT_TEXT_FONT = 'normal 16px Arial';\r\n\r\n        /**\r\n         * @constructor\r\n         * \r\n         * @param {Object} options 选项\r\n         * @param {color} options.backgroundColor 背景颜色\r\n         * @param {Object} options.textStyle 文字样式，同shape/text.style\r\n         * @param {number=} options.progress 进度参数，部分特效有用\r\n         * @param {Object=} options.effect 特效参数，部分特效有用\r\n         * \r\n         * {\r\n         *     effect,\r\n         *     //loading话术\r\n         *     text:'',\r\n         *     // 水平安放位置，默认为 'center'，可指定x坐标\r\n         *     x:'center' || 'left' || 'right' || {number},\r\n         *     // 垂直安放位置，默认为'top'，可指定y坐标\r\n         *     y:'top' || 'bottom' || {number},\r\n         *\r\n         *     textStyle:{\r\n         *         textFont: 'normal 20px Arial' || {textFont}, //文本字体\r\n         *         color: {color}\r\n         *     }\r\n         * }\r\n         */\r\n        function Base(options) {\r\n            this.setOptions(options);\r\n        }\r\n\r\n        /**\r\n         * 创建loading文字图形\r\n         * \r\n         * @param {Object} textStyle 文字style，同shape/text.style\r\n         */\r\n        Base.prototype.createTextShape = function (textStyle) {\r\n            return new TextShape({\r\n                highlightStyle : util.merge(\r\n                    {\r\n                        x : this.canvasWidth / 2,\r\n                        y : this.canvasHeight / 2,\r\n                        text : DEFAULT_TEXT,\r\n                        textAlign : 'center',\r\n                        textBaseline : 'middle',\r\n                        textFont : DEFAULT_TEXT_FONT,\r\n                        color: '#333',\r\n                        brushType : 'fill'\r\n                    },\r\n                    textStyle,\r\n                    true\r\n                )\r\n            });\r\n        };\r\n        \r\n        /**\r\n         * 获取loading背景图形\r\n         * \r\n         * @param {color} color 背景颜色\r\n         */\r\n        Base.prototype.createBackgroundShape = function (color) {\r\n            return new RectangleShape({\r\n                highlightStyle : {\r\n                    x : 0,\r\n                    y : 0,\r\n                    width : this.canvasWidth,\r\n                    height : this.canvasHeight,\r\n                    brushType : 'fill',\r\n                    color : color\r\n                }\r\n            });\r\n        };\r\n\r\n        Base.prototype.start = function (painter) {\r\n            this.canvasWidth = painter._width;\r\n            this.canvasHeight = painter._height;\r\n\r\n            function addShapeHandle(param) {\r\n                painter.storage.addHover(param);\r\n            }\r\n            function refreshHandle() {\r\n                painter.refreshHover();\r\n            }\r\n            this.loadingTimer = this._start(addShapeHandle, refreshHandle);\r\n        };\r\n\r\n        Base.prototype._start = function (/*addShapeHandle, refreshHandle*/) {\r\n            return setInterval(function () {\r\n            }, 10000);\r\n        };\r\n\r\n        Base.prototype.stop = function () {\r\n            clearInterval(this.loadingTimer);\r\n        };\r\n\r\n        Base.prototype.setOptions = function (options) {\r\n            this.options = options || {};\r\n        };\r\n        \r\n        Base.prototype.adjust = function (value, region) {\r\n            if (value <= region[0]) {\r\n                value = region[0];\r\n            }\r\n            else if (value >= region[1]) {\r\n                value = region[1];\r\n            }\r\n            return value;\r\n        };\r\n        \r\n        Base.prototype.getLocation = function(loc, totalWidth, totalHeight) {\r\n            var x = loc.x != null ? loc.x : 'center';\r\n            switch (x) {\r\n                case 'center' :\r\n                    x = Math.floor((this.canvasWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = 0;\r\n                    break;\r\n                case 'right' :\r\n                    x = this.canvasWidth - totalWidth;\r\n                    break;\r\n            }\r\n            var y = loc.y != null ? loc.y : 'center';\r\n            switch (y) {\r\n                case 'center' :\r\n                    y = Math.floor((this.canvasHeight - totalHeight) / 2);\r\n                    break;\r\n                case 'top' :\r\n                    y = 0;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = this.canvasHeight - totalHeight;\r\n                    break;\r\n            }\r\n            return {\r\n                x : x,\r\n                y : y,\r\n                width : totalWidth,\r\n                height : totalHeight\r\n            };\r\n        };\r\n\r\n        return Base;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 图片绘制\r\n * @module zrender/shape/Image\r\n * @author pissang(https://www.github.com/pissang)\r\n * @example\r\n *     var ImageShape = require('zrender/shape/Image');\r\n *     var image = new ImageShape({\r\n *         style: {\r\n *             image: 'test.jpg',\r\n *             x: 100,\r\n *             y: 100\r\n *         }\r\n *     });\r\n *     zr.addShape(image);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IImageStyle\r\n * @property {string|HTMLImageElement|HTMLCanvasElement} image 图片url或者图片对象\r\n * @property {number} x 左上角横坐标\r\n * @property {number} y 左上角纵坐标\r\n * @property {number} [width] 绘制到画布上的宽度，默认为图片宽度\r\n * @property {number} [height] 绘制到画布上的高度，默认为图片高度\r\n * @property {number} [sx=0] 从图片中裁剪的左上角横坐标\r\n * @property {number} [sy=0] 从图片中裁剪的左上角纵坐标\r\n * @property {number} [sWidth] 从图片中裁剪的宽度，默认为图片高度\r\n * @property {number} [sHeight] 从图片中裁剪的高度，默认为图片高度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n        var Base = __webpack_require__(1);\r\n\r\n        /**\r\n         * @alias zrender/shape/Image\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var ZImage = function(options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 图片绘制样式\r\n             * @name module:zrender/shape/Image#style\r\n             * @type {module:zrender/shape/Image~IImageStyle}\r\n             */\r\n            /**\r\n             * 图片高亮绘制样式\r\n             * @name module:zrender/shape/Image#highlightStyle\r\n             * @type {module:zrender/shape/Image~IImageStyle}\r\n             */\r\n        };\r\n\r\n        ZImage.prototype = {\r\n            \r\n            type: 'image',\r\n\r\n            brush : function(ctx, isHighlight, refreshNextFrame) {\r\n                var style = this.style || {};\r\n\r\n                if (isHighlight) {\r\n                    // 根据style扩展默认高亮样式\r\n                    style = this.getHighlightStyle(\r\n                        style, this.highlightStyle || {}\r\n                    );\r\n                }\r\n\r\n                var image = style.image;\r\n                var self = this;\r\n\r\n                if (!this._imageCache) {\r\n                    this._imageCache = {};\r\n                }\r\n                if (typeof(image) === 'string') {\r\n                    var src = image;\r\n                    if (this._imageCache[src]) {\r\n                        image = this._imageCache[src];\r\n                    } else {\r\n                        image = new Image();\r\n                        image.onload = function () {\r\n                            image.onload = null;\r\n                            self.modSelf();\r\n                            refreshNextFrame();\r\n                        };\r\n\r\n                        image.src = src;\r\n                        this._imageCache[src] = image;\r\n                    }\r\n                }\r\n                if (image) {\r\n                    // 图片已经加载完成\r\n                    if (image.nodeName.toUpperCase() == 'IMG') {\r\n                        if (window.ActiveXObject) {\r\n                            if (image.readyState != 'complete') {\r\n                                return;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (!image.complete) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Else is canvas\r\n                    var width = style.width || image.width;\r\n                    var height = style.height || image.height;\r\n                    var x = style.x;\r\n                    var y = style.y;\r\n                    // 图片加载失败\r\n                    if (!image.width || !image.height) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    this.doClip(ctx);\r\n\r\n                    this.setContext(ctx, style);\r\n\r\n                    // 设置transform\r\n                    this.setTransform(ctx);\r\n\r\n                    if (style.sWidth && style.sHeight) {\r\n                        var sx = style.sx || 0;\r\n                        var sy = style.sy || 0;\r\n                        ctx.drawImage(\r\n                            image,\r\n                            sx, sy, style.sWidth, style.sHeight,\r\n                            x, y, width, height\r\n                        );\r\n                    }\r\n                    else if (style.sx && style.sy) {\r\n                        var sx = style.sx;\r\n                        var sy = style.sy;\r\n                        var sWidth = width - sx;\r\n                        var sHeight = height - sy;\r\n                        ctx.drawImage(\r\n                            image,\r\n                            sx, sy, sWidth, sHeight,\r\n                            x, y, width, height\r\n                        );\r\n                    }\r\n                    else {\r\n                        ctx.drawImage(image, x, y, width, height);\r\n                    }\r\n                    // 如果没设置宽和高的话自动根据图片宽高设置\r\n                    if (!style.width) {\r\n                        style.width = width;\r\n                    }\r\n                    if (!style.height) {\r\n                        style.height = height;\r\n                    }\r\n                    if (!this.style.width) {\r\n                        this.style.width = width;\r\n                    }\r\n                    if (!this.style.height) {\r\n                        this.style.height = height;\r\n                    }\r\n\r\n                    this.drawText(ctx, style, this.style);\r\n\r\n                    ctx.restore();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 计算返回图片的包围盒矩形\r\n             * @param {module:zrender/shape/Image~IImageStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect: function(style) {\r\n                return {\r\n                    x : style.x,\r\n                    y : style.y,\r\n                    width : style.width,\r\n                    height : style.height\r\n                };\r\n            },\r\n\r\n            clearCache: function() {\r\n                this._imageCache = {};\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(ZImage, Base);\r\n        return ZImage;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts扩展zrender shape\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：icon\r\n * 可配图形属性：\r\n   {\r\n       // 基础属性\r\n       shape  : 'icon',       // 必须，shape类标识，需要显式指定\r\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\r\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\r\n       invisible : {boolean},   // 默认为false，是否可见\r\n\r\n       // 样式属性，默认状态样式样式属性\r\n       style  : {\r\n           x             : {number},  // 必须，左上角横坐标\r\n           y             : {number},  // 必须，左上角纵坐标\r\n           width         : {number},  // 必须，宽度\r\n           height        : {number},  // 必须，高度\r\n           iconType      : {string},  // 必须，icon类型\r\n       },\r\n\r\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\r\n       highlightStyle : {\r\n           // 同style\r\n       }\r\n\r\n       // 交互属性，详见shape.Base\r\n\r\n       // 事件属性，详见shape.Base\r\n   }\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var zrUtil = __webpack_require__(0);\r\n    \r\n    function _iconMark(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n        ctx.moveTo(x,                 y + style.height);\r\n        ctx.lineTo(x + 5 * dx,        y + 14 * dy);\r\n        ctx.lineTo(x + style.width,   y + 3 * dy);\r\n        ctx.lineTo(x + 13 * dx,       y);\r\n        ctx.lineTo(x + 2 * dx,        y + 11 * dy);\r\n        ctx.lineTo(x,                 y + style.height);\r\n\r\n        ctx.moveTo(x + 6 * dx,        y + 10 * dy);\r\n        ctx.lineTo(x + 14 * dx,       y + 2 * dy);\r\n\r\n        ctx.moveTo(x + 10 * dx,       y + 13 * dy);\r\n        ctx.lineTo(x + style.width,   y + 13 * dy);\r\n\r\n        ctx.moveTo(x + 13 * dx,       y + 10 * dy);\r\n        ctx.lineTo(x + 13 * dx,       y + style.height);\r\n    }\r\n\r\n    function _iconMarkUndo(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n        ctx.moveTo(x,                 y + style.height);\r\n        ctx.lineTo(x + 5 * dx,        y + 14 * dy);\r\n        ctx.lineTo(x + style.width,   y + 3 * dy);\r\n        ctx.lineTo(x + 13 * dx,       y);\r\n        ctx.lineTo(x + 2 * dx,        y + 11 * dy);\r\n        ctx.lineTo(x,                 y + style.height);\r\n\r\n        ctx.moveTo(x + 6 * dx,        y + 10 * dy);\r\n        ctx.lineTo(x + 14 * dx,       y + 2 * dy);\r\n\r\n        ctx.moveTo(x + 10 * dx,       y + 13 * dy);\r\n        ctx.lineTo(x + style.width,   y + 13 * dy);\r\n    }\r\n\r\n    function _iconMarkClear(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x + 4 * dx,        y + 15 * dy);\r\n        ctx.lineTo(x + 9 * dx,        y + 13 * dy);\r\n        ctx.lineTo(x + 14 * dx,       y + 8 * dy);\r\n        ctx.lineTo(x + 11 * dx,       y + 5 * dy);\r\n        ctx.lineTo(x + 6 * dx,        y + 10 * dy);\r\n        ctx.lineTo(x + 4 * dx,        y + 15 * dy);\r\n\r\n        ctx.moveTo(x + 5 * dx,        y);\r\n        ctx.lineTo(x + 11 * dx,       y);\r\n        ctx.moveTo(x + 5 * dx,        y + dy);\r\n        ctx.lineTo(x + 11 * dx,       y + dy);\r\n        ctx.moveTo(x,                 y + 2 * dy);\r\n        ctx.lineTo(x + style.width,   y + 2 * dy);\r\n\r\n        ctx.moveTo(x,                 y + 5 * dy);\r\n        ctx.lineTo(x + 3 * dx,        y + style.height);\r\n        ctx.lineTo(x + 13 * dx,       y + style.height);\r\n        ctx.lineTo(x + style.width,   y + 5 * dy);\r\n    }\r\n\r\n    function _iconDataZoom(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x,               y + 3 * dy);\r\n        ctx.lineTo(x + 6 * dx,      y + 3 * dy);\r\n        \r\n        ctx.moveTo(x + 3 * dx,      y);\r\n        ctx.lineTo(x + 3 * dx,      y + 6 * dy);\r\n\r\n        ctx.moveTo(x + 3 * dx,      y + 8 * dy);\r\n        ctx.lineTo(x + 3 * dx,      y + style.height);\r\n        ctx.lineTo(x + style.width, y + style.height);\r\n        ctx.lineTo(x + style.width, y + 3 * dy);\r\n        ctx.lineTo(x + 8 * dx,      y + 3 * dy);\r\n    }\r\n    \r\n    function _iconDataZoomReset(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x + 6 * dx,      y);\r\n        ctx.lineTo(x + 2 * dx,      y + 3 * dy);\r\n        ctx.lineTo(x + 6 * dx,      y + 6 * dy);\r\n        \r\n        ctx.moveTo(x + 2 * dx,      y + 3 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 3 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 11 * dy);\r\n        \r\n        ctx.moveTo(x + 2 * dx,      y + 5 * dy);\r\n        ctx.lineTo(x + 2 * dx,      y + 13 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 13 * dy);\r\n        \r\n        ctx.moveTo(x + 10 * dx,     y + 10 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 13 * dy);\r\n        ctx.lineTo(x + 10 * dx,     y + style.height);\r\n    }\r\n    \r\n    function _iconRestore(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n        var r = style.width / 2;\r\n        \r\n        ctx.lineWidth = 1.5;\r\n\r\n        ctx.arc(x + r, y + r, r - dx, 0, Math.PI * 2 / 3);\r\n        ctx.moveTo(x + 3 * dx,        y + style.height);\r\n        ctx.lineTo(x + 0 * dx,        y + 12 * dy);\r\n        ctx.lineTo(x + 5 * dx,        y + 11 * dy);\r\n\r\n        ctx.moveTo(x, y + 8 * dy);\r\n        ctx.arc(x + r, y + r, r - dx, Math.PI, Math.PI * 5 / 3);\r\n        ctx.moveTo(x + 13 * dx,       y);\r\n        ctx.lineTo(x + style.width,   y + 4 * dy);\r\n        ctx.lineTo(x + 11 * dx,       y + 5 * dy);\r\n    }\r\n\r\n    function _iconLineChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, y + style.height);\r\n        ctx.lineTo(x + style.width, y + style.height);\r\n\r\n        ctx.moveTo(x + 2 * dx,    y + 14 * dy);\r\n        ctx.lineTo(x + 7 * dx,    y + 6 * dy);\r\n        ctx.lineTo(x + 11 * dx,   y + 11 * dy);\r\n        ctx.lineTo(x + 15 * dx,   y + 2 * dy);\r\n    }\r\n\r\n    function _iconBarChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, y + style.height);\r\n        ctx.lineTo(x + style.width, y + style.height);\r\n\r\n        ctx.moveTo(x + 3 * dx,        y + 14 * dy);\r\n        ctx.lineTo(x + 3 * dx,        y + 6 * dy);\r\n        ctx.lineTo(x + 4 * dx,        y + 6 * dy);\r\n        ctx.lineTo(x + 4 * dx,        y + 14 * dy);\r\n        ctx.moveTo(x + 7 * dx,        y + 14 * dy);\r\n        ctx.lineTo(x + 7 * dx,        y + 2 * dy);\r\n        ctx.lineTo(x + 8 * dx,        y + 2 * dy);\r\n        ctx.lineTo(x + 8 * dx,        y + 14 * dy);\r\n        ctx.moveTo(x + 11 * dx,       y + 14 * dy);\r\n        ctx.lineTo(x + 11 * dx,       y + 9 * dy);\r\n        ctx.lineTo(x + 12 * dx,       y + 9 * dy);\r\n        ctx.lineTo(x + 12 * dx,       y + 14 * dy);\r\n    }\r\n    \r\n    function _iconPieChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width - 2;\r\n        var height = style.height - 2;\r\n        var r = Math.min(width, height) / 2;\r\n        y += 2;\r\n        ctx.moveTo(x + r + 3, y + r - 3);\r\n        ctx.arc(x + r + 3, y + r - 3, r - 1, 0, -Math.PI / 2, true);\r\n        ctx.lineTo(x + r + 3, y + r - 3);\r\n      \r\n        ctx.moveTo(x + r, y);\r\n        ctx.lineTo(x + r, y + r);\r\n        ctx.arc(x + r, y + r, r, -Math.PI / 2, Math.PI * 2, true);\r\n        ctx.lineTo(x + r, y + r);\r\n        ctx.lineWidth = 1.5;\r\n    }\r\n    \r\n    function _iconFunnelChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n        y -= dy;\r\n        ctx.moveTo(x + 1 * dx,      y + 2 * dy);\r\n        ctx.lineTo(x + 15 * dx,     y + 2 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 3 * dy);\r\n        ctx.lineTo(x + 2 * dx,      y + 3 * dy);\r\n        \r\n        ctx.moveTo(x + 3 * dx,      y + 6 * dy);\r\n        ctx.lineTo(x + 13 * dx,     y + 6 * dy);\r\n        ctx.lineTo(x + 12 * dx,     y + 7 * dy);\r\n        ctx.lineTo(x + 4 * dx,      y + 7 * dy);\r\n        \r\n        ctx.moveTo(x + 5 * dx,      y + 10 * dy);\r\n        ctx.lineTo(x + 11 * dx,      y + 10 * dy);\r\n        ctx.lineTo(x + 10 * dx,      y + 11 * dy);\r\n        ctx.lineTo(x + 6 * dx,      y + 11 * dy);\r\n        \r\n        ctx.moveTo(x + 7 * dx,      y + 14 * dy);\r\n        ctx.lineTo(x + 9 * dx,      y + 14 * dy);\r\n        ctx.lineTo(x + 8 * dx,      y + 15 * dy);\r\n        ctx.lineTo(x + 7 * dx,      y + 15 * dy);\r\n    }\r\n    \r\n    function _iconForceChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        var dx = width / 16;\r\n        var dy = height / 16;\r\n        var r = Math.min(dx, dy) * 2;\r\n\r\n        ctx.moveTo(x + dx + r, y + dy + r);\r\n        ctx.arc(x + dx, y + dy, r, Math.PI / 4, Math.PI * 3);\r\n        \r\n        ctx.lineTo(x + 7 * dx - r, y + 6 * dy - r);\r\n        ctx.arc(x + 7 * dx, y + 6 * dy, r, Math.PI / 4 * 5, Math.PI * 4);\r\n        ctx.arc(x + 7 * dx, y + 6 * dy, r / 2, Math.PI / 4 * 5, Math.PI * 4);\r\n        \r\n        ctx.moveTo(x + 7 * dx - r / 2, y + 6 * dy + r);\r\n        ctx.lineTo(x + dx + r, y + 14 * dy - r);\r\n        ctx.arc(x + dx, y + 14 * dy, r, -Math.PI / 4, Math.PI * 2);\r\n        \r\n        ctx.moveTo(x + 7 * dx + r / 2, y + 6 * dy);\r\n        ctx.lineTo(x + 14 * dx - r, y + 10 * dy - r / 2);\r\n        ctx.moveTo(x + 16 * dx, y + 10 * dy);\r\n        ctx.arc(x + 14 * dx, y + 10 * dy, r, 0, Math.PI * 3);\r\n        ctx.lineWidth = 1.5;\r\n    }\r\n    \r\n    function _iconChordChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        var r = Math.min(width, height) / 2;\r\n\r\n        ctx.moveTo(x + width, y + height / 2);\r\n        ctx.arc(x + r, y + r, r, 0, Math.PI * 2);\r\n        \r\n        ctx.arc(x + r, y, r, Math.PI / 4, Math.PI / 5 * 4);\r\n        ctx.arc(x, y + r, r, -Math.PI / 3, Math.PI / 3);\r\n        ctx.arc(x + width, y + height, r, Math.PI, Math.PI / 2 * 3);\r\n        ctx.lineWidth = 1.5;\r\n    }\r\n\r\n    function _iconStackChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        var dy = Math.round(height / 3);\r\n        var delta = Math.round((dy - 2) / 2);\r\n        var len = 3;\r\n        while (len--) {\r\n            ctx.rect(x, y + dy * len + delta, width, 2);\r\n        }\r\n    }\r\n    \r\n    function _iconTiledChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        var dx = Math.round(width / 3);\r\n        var delta = Math.round((dx - 2) / 2);\r\n        var len = 3;\r\n        while (len--) {\r\n            ctx.rect(x + dx * len + delta, y, 2, height);\r\n        }\r\n    }\r\n    \r\n    function _iconDataView(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n\r\n        ctx.moveTo(x + dx, y);\r\n        ctx.lineTo(x + dx, y + style.height);\r\n        ctx.lineTo(x + 15 * dx, y + style.height);\r\n        ctx.lineTo(x + 15 * dx, y);\r\n        ctx.lineTo(x + dx, y);\r\n\r\n        ctx.moveTo(x + 3 * dx, y + 3 * dx);\r\n        ctx.lineTo(x + 13 * dx, y + 3 * dx);\r\n\r\n        ctx.moveTo(x + 3 * dx, y + 6 * dx);\r\n        ctx.lineTo(x + 13 * dx, y + 6 * dx);\r\n\r\n        ctx.moveTo(x + 3 * dx, y + 9 * dx);\r\n        ctx.lineTo(x + 13 * dx, y + 9 * dx);\r\n\r\n        ctx.moveTo(x + 3 * dx, y + 12 * dx);\r\n        ctx.lineTo(x + 9 * dx, y + 12 * dx);\r\n    }\r\n    \r\n    function _iconSave(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, y + style.height);\r\n        ctx.lineTo(x + style.width, y + style.height);\r\n        ctx.lineTo(x + style.width, y);\r\n        ctx.lineTo(x, y);\r\n\r\n        ctx.moveTo(x + 4 * dx,    y);\r\n        ctx.lineTo(x + 4 * dx,    y + 8 * dy);\r\n        ctx.lineTo(x + 12 * dx,   y + 8 * dy);\r\n        ctx.lineTo(x + 12 * dx,   y);\r\n        \r\n        ctx.moveTo(x + 6 * dx,    y + 11 * dy);\r\n        ctx.lineTo(x + 6 * dx,    y + 13 * dy);\r\n        ctx.lineTo(x + 10 * dx,   y + 13 * dy);\r\n        ctx.lineTo(x + 10 * dx,   y + 11 * dy);\r\n        ctx.lineTo(x + 6 * dx,    y + 11 * dy);\r\n    }\r\n    \r\n    function _iconCross(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        ctx.moveTo(x, y + height / 2);\r\n        ctx.lineTo(x + width, y + height / 2);\r\n        \r\n        ctx.moveTo(x + width / 2, y);\r\n        ctx.lineTo(x + width / 2, y + height);\r\n    }\r\n    \r\n    function _iconCircle(ctx, style) {\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        var r = Math.min(width, height);\r\n        ctx.moveTo(\r\n            style.x + width + r, \r\n            style.y + height\r\n        );\r\n        ctx.arc(\r\n            style.x + width, \r\n            style.y + height, \r\n            r,\r\n            0, \r\n            Math.PI * 2\r\n        );\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconRectangle(ctx, style) {\r\n        ctx.rect(style.x, style.y, style.width, style.height);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconTriangle(ctx, style) {\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        var x = style.x + width;\r\n        var y = style.y + height;\r\n        var symbolSize = Math.min(width, height);\r\n        ctx.moveTo(x, y - symbolSize);\r\n        ctx.lineTo(x + symbolSize, y + symbolSize);\r\n        ctx.lineTo(x - symbolSize, y + symbolSize);\r\n        ctx.lineTo(x, y - symbolSize);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconDiamond(ctx, style) {\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        var x = style.x + width;\r\n        var y = style.y + height;\r\n        var symbolSize = Math.min(width, height);\r\n        ctx.moveTo(x, y - symbolSize);\r\n        ctx.lineTo(x + symbolSize, y);\r\n        ctx.lineTo(x, y + symbolSize);\r\n        ctx.lineTo(x - symbolSize, y);\r\n        ctx.lineTo(x, y - symbolSize);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconArrow(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        ctx.moveTo(x + 8 * dx,  y);\r\n        ctx.lineTo(x + dx,      y + style.height);\r\n        ctx.lineTo(x + 8 * dx,  y + style.height / 4 * 3);\r\n        ctx.lineTo(x + 15 * dx, y + style.height);\r\n        ctx.lineTo(x + 8 * dx,  y);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconStar(ctx, style) {\r\n        var StarShape = __webpack_require__(62);\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        StarShape.prototype.buildPath(ctx, {\r\n            x : style.x + width,\r\n            y : style.y + height,\r\n            r : Math.min(width, height),\r\n            n : style.n || 5\r\n        });\r\n    }\r\n    \r\n    function _iconHeart(ctx, style) {\r\n        var HeartShape = __webpack_require__(63);\r\n        HeartShape.prototype.buildPath(ctx, {\r\n            x : style.x + style.width / 2,\r\n            y : style.y + style.height * 0.2,\r\n            a : style.width / 2,\r\n            b : style.height * 0.8\r\n        });\r\n    }\r\n    \r\n    function _iconDroplet(ctx, style) {\r\n        var DropletShape = __webpack_require__(36);\r\n        DropletShape.prototype.buildPath(ctx, {\r\n            x : style.x + style.width * 0.5,\r\n            y : style.y + style.height * 0.5,\r\n            a : style.width * 0.5,\r\n            b : style.height * 0.8\r\n        });\r\n    }\r\n    \r\n    function _iconPin(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y - style.height / 2 * 1.5;\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        var r = Math.min(width, height);\r\n        ctx.arc(\r\n            x + width, \r\n            y + height, \r\n            r,\r\n            Math.PI / 5 * 4, \r\n            Math.PI / 5\r\n        );\r\n        ctx.lineTo(x + width, y + height + r * 1.5);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconImage(ctx, style, refreshNextFrame) {\r\n        var ImageShape = __webpack_require__(12);\r\n        this._imageShape = this._imageShape || new ImageShape({\r\n            style: {}\r\n        });\r\n        for (var name in style) {\r\n            this._imageShape.style[name] = style[name];\r\n        }\r\n        this._imageShape.brush(ctx, false, refreshNextFrame);\r\n    }\r\n    \r\n    var Base = __webpack_require__(1);\r\n    \r\n    function Icon(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Icon.prototype =  {\r\n        type : 'icon',\r\n        iconLibrary : {\r\n            mark : _iconMark,\r\n            markUndo : _iconMarkUndo,\r\n            markClear : _iconMarkClear,\r\n            dataZoom : _iconDataZoom,\r\n            dataZoomReset : _iconDataZoomReset,\r\n            restore : _iconRestore,\r\n            lineChart : _iconLineChart,\r\n            barChart : _iconBarChart,\r\n            pieChart : _iconPieChart,\r\n            funnelChart : _iconFunnelChart,\r\n            forceChart : _iconForceChart,\r\n            chordChart : _iconChordChart,\r\n            stackChart : _iconStackChart,\r\n            tiledChart : _iconTiledChart,\r\n            dataView : _iconDataView,\r\n            saveAsImage : _iconSave,\r\n            \r\n            cross : _iconCross,\r\n            circle : _iconCircle,\r\n            rectangle : _iconRectangle,\r\n            triangle : _iconTriangle,\r\n            diamond : _iconDiamond,\r\n            arrow : _iconArrow,\r\n            star : _iconStar,\r\n            heart : _iconHeart,\r\n            droplet : _iconDroplet,\r\n            pin : _iconPin,\r\n            image : _iconImage\r\n        },\r\n        brush: function (ctx, isHighlight, refreshNextFrame) {\r\n            var style = isHighlight ? this.highlightStyle : this.style;\r\n            style = style || {};\r\n            var iconType = style.iconType || this.style.iconType;\r\n            if (iconType === 'image') {\r\n                var ImageShape = __webpack_require__(12);\r\n                ImageShape.prototype.brush.call(this, ctx, isHighlight, refreshNextFrame);\r\n\r\n            } else {\r\n\r\n                var style = this.beforeBrush(ctx, isHighlight);\r\n\r\n                ctx.beginPath();\r\n                this.buildPath(ctx, style, refreshNextFrame);\r\n\r\n                switch (style.brushType) {\r\n                    /* jshint ignore:start */\r\n                    case 'both':\r\n                        ctx.fill();\r\n                    case 'stroke':\r\n                        style.lineWidth > 0 && ctx.stroke();\r\n                        break;\r\n                    /* jshint ignore:end */\r\n                    default:\r\n                        ctx.fill();\r\n                }\r\n                \r\n                this.drawText(ctx, style, this.style);\r\n\r\n                this.afterBrush(ctx);\r\n            }\r\n        },\r\n        /**\r\n         * 创建矩形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style, refreshNextFrame) {\r\n            if (this.iconLibrary[style.iconType]) {\r\n                this.iconLibrary[style.iconType].call(this, ctx, style, refreshNextFrame);\r\n            }\r\n            else {\r\n                ctx.moveTo(style.x, style.y);\r\n                ctx.lineTo(style.x + style.width, style.y);\r\n                ctx.lineTo(style.x + style.width, style.y + style.height);\r\n                ctx.lineTo(style.x, style.y + style.height);\r\n                ctx.lineTo(style.x, style.y);\r\n                ctx.closePath();\r\n            }\r\n\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            if (style.__rect) {\r\n                return style.__rect;\r\n            }\r\n            \r\n            // pin比较特殊，让尖端在目标x,y上\r\n            style.__rect = {\r\n                x : Math.round(style.x),\r\n                y : Math.round(style.y - (style.iconType == 'pin' \r\n                                         ? (style.height / 2 * 1.5) : 0)\r\n                               ),\r\n                width : style.width,\r\n                height : style.height * (\r\n                    style.iconType === 'pin' ? 1.25 : 1\r\n                )\r\n            };\r\n            \r\n            return style.__rect;\r\n        },\r\n\r\n        isCover : function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n\r\n            // 快速预判并保留判断矩形\r\n            var rect = this.style.__rect;\r\n            if (!rect) {\r\n                rect = this.style.__rect = this.getRect(this.style);\r\n            }\r\n            // 提高交互体验，太小的图形包围盒四向扩大4px\r\n            var delta = (rect.height < 8 || rect.width < 8 ) ? 4 : 0;\r\n            return x >= rect.x - delta\r\n                && x <= (rect.x + rect.width + delta)\r\n                && y >= rect.y - delta\r\n                && y <= (rect.y + rect.height + delta);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Icon, Base);\r\n    \r\n    return Icon;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts通用私有数据服务\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n    /**\r\n     * 打包私有数据\r\n     *\r\n     * @param {shape} shape 修改目标\r\n     * @param {Object} series\r\n     * @param {number} seriesIndex\r\n     * @param {number | Object} data\r\n     * @param {number} dataIndex\r\n     * @param {*=} special\r\n     * @param {*=} special2\r\n     */\r\n    function pack(\r\n        shape, series, seriesIndex, data, dataIndex, name, special, special2\r\n    ) {\r\n        var value;\r\n        if (typeof data != 'undefined') {\r\n            value = data.value == null\r\n                ? data\r\n                : data.value;\r\n        }\r\n\r\n        shape._echartsData = {\r\n            '_series' : series,\r\n            '_seriesIndex' : seriesIndex,\r\n            '_data' : data,\r\n            '_dataIndex' : dataIndex,\r\n            '_name' : name,\r\n            '_value' : value,\r\n            '_special' : special,\r\n            '_special2' : special2\r\n        };\r\n        return shape._echartsData;\r\n    }\r\n\r\n    /**\r\n     * 从私有数据中获取特定项\r\n     * @param {shape} shape\r\n     * @param {string} key\r\n     */\r\n    function get(shape, key) {\r\n        var data = shape._echartsData;\r\n        if (!key) {\r\n            return data;\r\n        }\r\n\r\n        switch (key) {\r\n            case 'series' :\r\n            case 'seriesIndex' :\r\n            case 'data' :\r\n            case 'dataIndex' :\r\n            case 'name' :\r\n            case 'value' :\r\n            case 'special' :\r\n            case 'special2' :\r\n                return data && data['_' + key];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 修改私有数据中获取特定项\r\n     * @param {shape} shape\r\n     * @param {string} key\r\n     * @param {*} value\r\n     */\r\n    function set(shape, key, value) {\r\n        shape._echartsData = shape._echartsData || {};\r\n        switch (key) {\r\n            case 'series' :             // 当前系列值\r\n            case 'seriesIndex' :        // 系列数组位置索引\r\n            case 'data' :               // 当前数据值\r\n            case 'dataIndex' :          // 数据数组位置索引\r\n            case 'name' :\r\n            case 'value' :\r\n            case 'special' :\r\n            case 'special2' :\r\n                shape._echartsData['_' + key] = value;\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 私有数据克隆，把source拷贝到target上\r\n     * @param {shape} source 源\r\n     * @param {shape} target 目标\r\n     */\r\n    function clone(source, target) {\r\n        target._echartsData =  {\r\n            '_series' : source._echartsData._series,\r\n            '_seriesIndex' : source._echartsData._seriesIndex,\r\n            '_data' : source._echartsData._data,\r\n            '_dataIndex' : source._echartsData._dataIndex,\r\n            '_name' : source._echartsData._name,\r\n            '_value' : source._echartsData._value,\r\n            '_special' : source._echartsData._special,\r\n            '_special2' : source._echartsData._special2\r\n        };\r\n    }\r\n\r\n    return {\r\n        pack : pack,\r\n        set : set,\r\n        get : get,\r\n        clone : clone\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts设备环境识别\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author firede[firede@firede.us]\r\n * @desc thanks zepto.\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n    // Zepto.js\r\n    // (c) 2010-2013 Thomas Fuchs\r\n    // Zepto.js may be freely distributed under the MIT license.\r\n\r\n    function detect(ua) {\r\n        var os = this.os = {};\r\n        var browser = this.browser = {};\r\n        var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\r\n        var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\r\n        var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n        var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n        var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\r\n        var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\r\n        var touchpad = webos && ua.match(/TouchPad/);\r\n        var kindle = ua.match(/Kindle\\/([\\d.]+)/);\r\n        var silk = ua.match(/Silk\\/([\\d._]+)/);\r\n        var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\r\n        var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\r\n        var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\r\n        var playbook = ua.match(/PlayBook/);\r\n        var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\r\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\r\n        var ie = ua.match(/MSIE ([\\d.]+)/);\r\n        var safari = webkit && ua.match(/Mobile\\//) && !chrome;\r\n        var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\r\n        var ie = ua.match(/MSIE\\s([\\d.]+)/);\r\n\r\n        // Todo: clean this up with a better OS/browser seperation:\r\n        // - discern (more) between multiple browsers on android\r\n        // - decide if kindle fire in silk mode is android or not\r\n        // - Firefox on Android doesn't specify the Android version\r\n        // - possibly devide in os, device and browser hashes\r\n\r\n        if (browser.webkit = !!webkit) browser.version = webkit[1];\r\n\r\n        if (android) os.android = true, os.version = android[2];\r\n        if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\r\n        if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\r\n        if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\r\n        if (webos) os.webos = true, os.version = webos[2];\r\n        if (touchpad) os.touchpad = true;\r\n        if (blackberry) os.blackberry = true, os.version = blackberry[2];\r\n        if (bb10) os.bb10 = true, os.version = bb10[2];\r\n        if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\r\n        if (playbook) browser.playbook = true;\r\n        if (kindle) os.kindle = true, os.version = kindle[1];\r\n        if (silk) browser.silk = true, browser.version = silk[1];\r\n        if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\r\n        if (chrome) browser.chrome = true, browser.version = chrome[1];\r\n        if (firefox) browser.firefox = true, browser.version = firefox[1];\r\n        if (ie) browser.ie = true, browser.version = ie[1];\r\n        if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\r\n        if (webview) browser.webview = true;\r\n        if (ie) browser.ie = true, browser.version = ie[1];\r\n\r\n        os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\r\n            (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\r\n        os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 ||\r\n            (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\r\n            (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\r\n\r\n        return {\r\n            browser: browser,\r\n            os: os,\r\n            // 原生canvas支持，改极端点了\r\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\r\n            canvasSupported : document.createElement('canvas').getContext ? true : false\r\n        };\r\n    }\r\n\r\n    return detect(navigator.userAgent);\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * @module zrender/shape/Text\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *     var Text = require('zrender/shape/Text');\r\n *     var shape = new Text({\r\n *         style: {\r\n *             text: 'Label',\r\n *             x: 100,\r\n *             y: 100,\r\n *             textFont: '14px Arial'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} ITextStyle\r\n * @property {number} x 横坐标\r\n * @property {number} y 纵坐标\r\n * @property {string} text 文本内容\r\n * @property {number} [maxWidth=null] 最大宽度限制\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textAlign] 可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var area = __webpack_require__(2);\r\n        var Base = __webpack_require__(1);\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Text\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Text = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 文字绘制样式\r\n             * @name module:zrender/shape/Text#style\r\n             * @type {module:zrender/shape/Text~ITextStyle}\r\n             */\r\n            /**\r\n             * 文字高亮绘制样式\r\n             * @name module:zrender/shape/Text#highlightStyle\r\n             * @type {module:zrender/shape/Text~ITextStyle}\r\n             */\r\n        };\r\n\r\n        Text.prototype =  {\r\n            type: 'text',\r\n\r\n            brush : function (ctx, isHighlight) {\r\n                var style = this.style;\r\n                if (isHighlight) {\r\n                    // 根据style扩展默认高亮样式\r\n                    style = this.getHighlightStyle(\r\n                        style, this.highlightStyle || {}\r\n                    );\r\n                }\r\n                \r\n                if (typeof(style.text) == 'undefined' || style.text === false) {\r\n                    return;\r\n                }\r\n\r\n                ctx.save();\r\n                this.doClip(ctx);\r\n\r\n                this.setContext(ctx, style);\r\n\r\n                // 设置transform\r\n                this.setTransform(ctx);\r\n\r\n                if (style.textFont) {\r\n                    ctx.font = style.textFont;\r\n                }\r\n                ctx.textAlign = style.textAlign || 'start';\r\n                ctx.textBaseline = style.textBaseline || 'middle';\r\n\r\n                var text = (style.text + '').split('\\n');\r\n                var lineHeight = area.getTextHeight('国', style.textFont);\r\n                var rect = this.getRect(style);\r\n                var x = style.x;\r\n                var y;\r\n                if (style.textBaseline == 'top') {\r\n                    y = rect.y;\r\n                }\r\n                else if (style.textBaseline == 'bottom') {\r\n                    y = rect.y + lineHeight;\r\n                }\r\n                else {\r\n                    y = rect.y + lineHeight / 2;\r\n                }\r\n                \r\n                for (var i = 0, l = text.length; i < l; i++) {\r\n                    if (style.maxWidth) {\r\n                        switch (style.brushType) {\r\n                            case 'fill':\r\n                                ctx.fillText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                                break;\r\n                            case 'stroke':\r\n                                ctx.strokeText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                                break;\r\n                            case 'both':\r\n                                ctx.fillText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                                ctx.strokeText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                                break;\r\n                            default:\r\n                                ctx.fillText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                        }\r\n                    }\r\n                    else {\r\n                        switch (style.brushType) {\r\n                            case 'fill':\r\n                                ctx.fillText(text[i], x, y);\r\n                                break;\r\n                            case 'stroke':\r\n                                ctx.strokeText(text[i], x, y);\r\n                                break;\r\n                            case 'both':\r\n                                ctx.fillText(text[i], x, y);\r\n                                ctx.strokeText(text[i], x, y);\r\n                                break;\r\n                            default:\r\n                                ctx.fillText(text[i], x, y);\r\n                        }\r\n                    }\r\n                    y += lineHeight;\r\n                }\r\n\r\n                ctx.restore();\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 返回文字包围盒矩形\r\n             * @param {module:zrender/shape/Text~ITextStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var width = area.getTextWidth(style.text, style.textFont);\r\n                var height = area.getTextHeight(style.text, style.textFont);\r\n                \r\n                var textX = style.x;                 // 默认start == left\r\n                if (style.textAlign == 'end' || style.textAlign == 'right') {\r\n                    textX -= width;\r\n                }\r\n                else if (style.textAlign == 'center') {\r\n                    textX -= (width / 2);\r\n                }\r\n\r\n                var textY;\r\n                if (style.textBaseline == 'top') {\r\n                    textY = style.y;\r\n                }\r\n                else if (style.textBaseline == 'bottom') {\r\n                    textY = style.y - height;\r\n                }\r\n                else {\r\n                    // middle\r\n                    textY = style.y - height / 2;\r\n                }\r\n\r\n                style.__rect = {\r\n                    x : textX,\r\n                    y : textY,\r\n                    width : width,\r\n                    height : height\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Text, Base);\r\n        return Text;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 曲线辅助模块\r\n * @module zrender/tool/curve\r\n * @author pissang(https://www.github.com/pissang)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n\r\n    var vector = __webpack_require__(5);\r\n\r\n    'use strict';\r\n\r\n    var EPSILON = 1e-4;\r\n\r\n    var THREE_SQRT = Math.sqrt(3);\r\n    var ONE_THIRD = 1 / 3;\r\n\r\n    // 临时变量\r\n    var _v0 = vector.create();\r\n    var _v1 = vector.create();\r\n    var _v2 = vector.create();\r\n    // var _v3 = vector.create();\r\n\r\n    function isAroundZero(val) {\r\n        return val > -EPSILON && val < EPSILON;\r\n    }\r\n    function isNotAroundZero(val) {\r\n        return val > EPSILON || val < -EPSILON;\r\n    }\r\n    /*\r\n    function evalCubicCoeff(a, b, c, d, t) {\r\n        return ((a * t + b) * t + c) * t + d;\r\n    }\r\n    */\r\n\r\n    /** \r\n     * 计算三次贝塞尔值\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function cubicAt(p0, p1, p2, p3, t) {\r\n        var onet = 1 - t;\r\n        return onet * onet * (onet * p0 + 3 * t * p1)\r\n             + t * t * (t * p3 + 3 * onet * p2);\r\n    }\r\n\r\n    /** \r\n     * 计算三次贝塞尔导数值\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\r\n        var onet = 1 - t;\r\n        return 3 * (\r\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\r\n            + (p3 - p2) * t * t\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔方程根，使用盛金公式\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} val\r\n     * @param  {Array.<number>} roots\r\n     * @return {number} 有效根数目\r\n     */\r\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\r\n        // Evaluate roots of cubic functions\r\n        var a = p3 + 3 * (p1 - p2) - p0;\r\n        var b = 3 * (p2 - p1 * 2 + p0);\r\n        var c = 3 * (p1  - p0);\r\n        var d = p0 - val;\r\n\r\n        var A = b * b - 3 * a * c;\r\n        var B = b * c - 9 * a * d;\r\n        var C = c * c - 3 * b * d;\r\n\r\n        var n = 0;\r\n\r\n        if (isAroundZero(A) && isAroundZero(B)) {\r\n            if (isAroundZero(b)) {\r\n                roots[0] = 0;\r\n            }\r\n            else {\r\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = B * B - 4 * A * C;\r\n\r\n            if (isAroundZero(disc)) {\r\n                var K = B / A;\r\n                var t1 = -b / a + K;  // t1, a is not zero\r\n                var t2 = -K / 2;  // t2, t3\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = Math.sqrt(disc);\r\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\r\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\r\n                if (Y1 < 0) {\r\n                    Y1 = -Math.pow(-Y1, ONE_THIRD);\r\n                }\r\n                else {\r\n                    Y1 = Math.pow(Y1, ONE_THIRD);\r\n                }\r\n                if (Y2 < 0) {\r\n                    Y2 = -Math.pow(-Y2, ONE_THIRD);\r\n                }\r\n                else {\r\n                    Y2 = Math.pow(Y2, ONE_THIRD);\r\n                }\r\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n            else {\r\n                var T = (2 * A * b - 3 * a * B) / (2 * Math.sqrt(A * A * A));\r\n                var theta = Math.acos(T) / 3;\r\n                var ASqrt = Math.sqrt(A);\r\n                var tmp = Math.cos(theta);\r\n                \r\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\r\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n                if (t3 >= 0 && t3 <= 1) {\r\n                    roots[n++] = t3;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔方程极限值的位置\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {Array.<number>} extrema\r\n     * @return {number} 有效数目\r\n     */\r\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\r\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\r\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\r\n        var c = 3 * p1 - 3 * p0;\r\n\r\n        var n = 0;\r\n        if (isAroundZero(a)) {\r\n            if (isNotAroundZero(b)) {\r\n                var t1 = -c / b;\r\n                if (t1 >= 0 && t1 <=1) {\r\n                    extrema[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = b * b - 4 * a * c;\r\n            if (isAroundZero(disc)) {\r\n                extrema[0] = -b / (2 * a);\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = Math.sqrt(disc);\r\n                var t1 = (-b + discSqrt) / (2 * a);\r\n                var t2 = (-b - discSqrt) / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    extrema[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    extrema[n++] = t2;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 细分三次贝塞尔曲线\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} out\r\n     */\r\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\r\n        var p01 = (p1 - p0) * t + p0;\r\n        var p12 = (p2 - p1) * t + p1;\r\n        var p23 = (p3 - p2) * t + p2;\r\n\r\n        var p012 = (p12 - p01) * t + p01;\r\n        var p123 = (p23 - p12) * t + p12;\r\n\r\n        var p0123 = (p123 - p012) * t + p012;\r\n        // Seg0\r\n        out[0] = p0;\r\n        out[1] = p01;\r\n        out[2] = p012;\r\n        out[3] = p0123;\r\n        // Seg1\r\n        out[4] = p0123;\r\n        out[5] = p123;\r\n        out[6] = p23;\r\n        out[7] = p3;\r\n    }\r\n\r\n    /**\r\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\r\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {number} x2\r\n     * @param {number} y2\r\n     * @param {number} x3\r\n     * @param {number} y3\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {Array.<number>} [out] 投射点\r\n     * @return {number}\r\n     */\r\n    function cubicProjectPoint(\r\n        x0, y0, x1, y1, x2, y2, x3, y3,\r\n        x, y, out\r\n    ) {\r\n        // http://pomax.github.io/bezierinfo/#projections\r\n        var t;\r\n        var interval = 0.005;\r\n        var d = Infinity;\r\n\r\n        _v0[0] = x;\r\n        _v0[1] = y;\r\n\r\n        // 先粗略估计一下可能的最小距离的 t 值\r\n        // PENDING\r\n        for (var _t = 0; _t < 1; _t += 0.05) {\r\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\r\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\r\n            var d1 = vector.distSquare(_v0, _v1);\r\n            if (d1 < d) {\r\n                t = _t;\r\n                d = d1;\r\n            }\r\n        }\r\n        d = Infinity;\r\n\r\n        // At most 32 iteration\r\n        for (var i = 0; i < 32; i++) {\r\n            if (interval < EPSILON) {\r\n                break;\r\n            }\r\n            var prev = t - interval;\r\n            var next = t + interval;\r\n            // t - interval\r\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\r\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\r\n\r\n            var d1 = vector.distSquare(_v1, _v0);\r\n\r\n            if (prev >= 0 && d1 < d) {\r\n                t = prev;\r\n                d = d1;\r\n            }\r\n            else {\r\n                // t + interval\r\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\r\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\r\n                var d2 = vector.distSquare(_v2, _v0);\r\n\r\n                if (next <= 1 && d2 < d) {\r\n                    t = next;\r\n                    d = d2;\r\n                }\r\n                else {\r\n                    interval *= 0.5;\r\n                }\r\n            }\r\n        }\r\n        // t\r\n        if (out) {\r\n            out[0] = cubicAt(x0, x1, x2, x3, t);\r\n            out[1] = cubicAt(y0, y1, y2, y3, t);   \r\n        }\r\n        // console.log(interval, i);\r\n        return Math.sqrt(d);\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔值\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function quadraticAt(p0, p1, p2, t) {\r\n        var onet = 1 - t;\r\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔导数值\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function quadraticDerivativeAt(p0, p1, p2, t) {\r\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔方程根\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} roots\r\n     * @return {number} 有效根数目\r\n     */\r\n    function quadraticRootAt(p0, p1, p2, val, roots) {\r\n        var a = p0 - 2 * p1 + p2;\r\n        var b = 2 * (p1 - p0);\r\n        var c = p0 - val;\r\n\r\n        var n = 0;\r\n        if (isAroundZero(a)) {\r\n            if (isNotAroundZero(b)) {\r\n                var t1 = -c / b;\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = b * b - 4 * a * c;\r\n            if (isAroundZero(disc)) {\r\n                var t1 = -b / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = Math.sqrt(disc);\r\n                var t1 = (-b + discSqrt) / (2 * a);\r\n                var t2 = (-b - discSqrt) / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 计算二次贝塞尔方程极限值\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @return {number}\r\n     */\r\n    function quadraticExtremum(p0, p1, p2) {\r\n        var divider = p0 + p2 - 2 * p1;\r\n        if (divider === 0) {\r\n            // p1 is center of p0 and p2 \r\n            return 0.5;\r\n        }\r\n        else {\r\n            return (p0 - p1) / divider;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 细分二次贝塞尔曲线\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} out\r\n     */\r\n    function quadraticSubdivide(p0, p1, p2, t, out) {\r\n        var p01 = (p1 - p0) * t + p0;\r\n        var p12 = (p2 - p1) * t + p1;\r\n        var p012 = (p12 - p01) * t + p01;\r\n\r\n        // Seg0\r\n        out[0] = p0;\r\n        out[1] = p01;\r\n        out[2] = p012;\r\n\r\n        // Seg1\r\n        out[3] = p012;\r\n        out[4] = p12;\r\n        out[5] = p2;\r\n    }\r\n\r\n    /**\r\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\r\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {number} x2\r\n     * @param {number} y2\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {Array.<number>} out 投射点\r\n     * @return {number}\r\n     */\r\n    function quadraticProjectPoint(\r\n        x0, y0, x1, y1, x2, y2,\r\n        x, y, out\r\n    ) {\r\n        // http://pomax.github.io/bezierinfo/#projections\r\n        var t;\r\n        var interval = 0.005;\r\n        var d = Infinity;\r\n\r\n        _v0[0] = x;\r\n        _v0[1] = y;\r\n\r\n        // 先粗略估计一下可能的最小距离的 t 值\r\n        // PENDING\r\n        for (var _t = 0; _t < 1; _t += 0.05) {\r\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\r\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\r\n            var d1 = vector.distSquare(_v0, _v1);\r\n            if (d1 < d) {\r\n                t = _t;\r\n                d = d1;\r\n            }\r\n        }\r\n        d = Infinity;\r\n\r\n        // At most 32 iteration\r\n        for (var i = 0; i < 32; i++) {\r\n            if (interval < EPSILON) {\r\n                break;\r\n            }\r\n            var prev = t - interval;\r\n            var next = t + interval;\r\n            // t - interval\r\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\r\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\r\n\r\n            var d1 = vector.distSquare(_v1, _v0);\r\n\r\n            if (prev >= 0 && d1 < d) {\r\n                t = prev;\r\n                d = d1;\r\n            }\r\n            else {\r\n                // t + interval\r\n                _v2[0] = quadraticAt(x0, x1, x2, next);\r\n                _v2[1] = quadraticAt(y0, y1, y2, next);\r\n                var d2 = vector.distSquare(_v2, _v0);\r\n                if (next <= 1 && d2 < d) {\r\n                    t = next;\r\n                    d = d2;\r\n                }\r\n                else {\r\n                    interval *= 0.5;\r\n                }\r\n            }\r\n        }\r\n        // t\r\n        if (out) {\r\n            out[0] = quadraticAt(x0, x1, x2, t);\r\n            out[1] = quadraticAt(y0, y1, y2, t);   \r\n        }\r\n        // console.log(interval, i);\r\n        return Math.sqrt(d);\r\n    }\r\n\r\n    return {\r\n\r\n        cubicAt: cubicAt,\r\n\r\n        cubicDerivativeAt: cubicDerivativeAt,\r\n\r\n        cubicRootAt: cubicRootAt,\r\n\r\n        cubicExtrema: cubicExtrema,\r\n\r\n        cubicSubdivide: cubicSubdivide,\r\n\r\n        cubicProjectPoint: cubicProjectPoint,\r\n\r\n        quadraticAt: quadraticAt,\r\n\r\n        quadraticDerivativeAt: quadraticDerivativeAt,\r\n\r\n        quadraticRootAt: quadraticRootAt,\r\n\r\n        quadraticExtremum: quadraticExtremum,\r\n\r\n        quadraticSubdivide: quadraticSubdivide,\r\n\r\n        quadraticProjectPoint: quadraticProjectPoint\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 直线\r\n * @module zrender/shape/Line\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *   var Line = require('zrender/shape/Line');\r\n *   var shape = new Line({\r\n *       style: {\r\n *           xStart: 0,\r\n *           yStart: 0,\r\n *           xEnd: 100,\r\n *           yEnd: 100,\r\n *           strokeColor: '#000',\r\n *           lineWidth: 10\r\n *       }\r\n *   });\r\n *   zr.addShape(line);\r\n */\r\n/**\r\n * @typedef {Object} ILineStyle\r\n * @property {number} xStart 起点x坐标\r\n * @property {number} yStart 起点y坐标\r\n * @property {number} xEnd 终止点x坐标\r\n * @property {number} yEnd 终止点y坐标\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(1);\r\n        var dashedLineTo = __webpack_require__(19);\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Line\r\n         * @param {Object} options\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         */\r\n        var Line = function (options) {\r\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\r\n            this.textPosition = 'end';\r\n            Base.call(this, options);\r\n\r\n            /**\r\n             * 直线绘制样式\r\n             * @name module:zrender/shape/Line#style\r\n             * @type {module:zrender/shape/Line~ILineStyle}\r\n             */\r\n            /**\r\n             * 直线高亮绘制样式\r\n             * @name module:zrender/shape/Line#highlightStyle\r\n             * @type {module:zrender/shape/Line~ILineStyle}\r\n             */\r\n        };\r\n\r\n        Line.prototype =  {\r\n            type: 'line',\r\n\r\n            /**\r\n             * 创建线条路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Line~ILineStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                if (!style.lineType || style.lineType == 'solid') {\r\n                    // 默认为实线\r\n                    ctx.moveTo(style.xStart, style.yStart);\r\n                    ctx.lineTo(style.xEnd, style.yEnd);\r\n                }\r\n                else if (style.lineType == 'dashed'\r\n                        || style.lineType == 'dotted'\r\n                ) {\r\n                    var dashLength = (style.lineWidth || 1)  \r\n                                     * (style.lineType == 'dashed' ? 5 : 1);\r\n                    dashedLineTo(\r\n                        ctx,\r\n                        style.xStart, style.yStart,\r\n                        style.xEnd, style.yEnd,\r\n                        dashLength\r\n                    );\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 计算返回线条的包围盒矩形\r\n             * @param {module:zrender/shape/Line~ILineStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth = style.lineWidth || 1;\r\n                style.__rect = {\r\n                    x : Math.min(style.xStart, style.xEnd) - lineWidth,\r\n                    y : Math.min(style.yStart, style.yEnd) - lineWidth,\r\n                    width : Math.abs(style.xStart - style.xEnd)\r\n                            + lineWidth,\r\n                    height : Math.abs(style.yStart - style.yEnd)\r\n                             + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Line, Base);\r\n        return Line;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 虚线lineTo \r\n *\r\n * author:  Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *          errorrik (errorrik@gmail.com)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (/* require */) {\r\n\r\n        var dashPattern = [ 5, 5 ];\r\n        /**\r\n         * 虚线lineTo \r\n         */\r\n        return function (ctx, x1, y1, x2, y2, dashLength) {\r\n            // http://msdn.microsoft.com/en-us/library/ie/dn265063(v=vs.85).aspx\r\n            if (ctx.setLineDash) {\r\n                dashPattern[0] = dashPattern[1] = dashLength;\r\n                ctx.setLineDash(dashPattern);\r\n                ctx.moveTo(x1, y1);\r\n                ctx.lineTo(x2, y2);\r\n                return;\r\n            }\r\n\r\n            dashLength = typeof dashLength != 'number'\r\n                            ? 5 \r\n                            : dashLength;\r\n\r\n            var dx = x2 - x1;\r\n            var dy = y2 - y1;\r\n            var numDashes = Math.floor(\r\n                Math.sqrt(dx * dx + dy * dy) / dashLength\r\n            );\r\n            dx = dx / numDashes;\r\n            dy = dy / numDashes;\r\n            var flag = true;\r\n            for (var i = 0; i < numDashes; ++i) {\r\n                if (flag) {\r\n                    ctx.moveTo(x1, y1);\r\n                }\r\n                else {\r\n                    ctx.lineTo(x1, y1);\r\n                }\r\n                flag = !flag;\r\n                x1 += dx;\r\n                y1 += dy;\r\n            }\r\n            ctx.lineTo(x2, y2);\r\n        };\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 事件扩展\r\n * @module zrender/mixin/Eventful\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n    /**\r\n     * 事件分发器\r\n     * @alias module:zrender/mixin/Eventful\r\n     * @constructor\r\n     */\r\n    var Eventful = function () {\r\n        this._handlers = {};\r\n    };\r\n    /**\r\n     * 单次触发绑定，dispatch后销毁\r\n     * \r\n     * @param {string} event 事件名\r\n     * @param {Function} handler 响应函数\r\n     * @param {Object} context\r\n     */\r\n    Eventful.prototype.one = function (event, handler, context) {\r\n        var _h = this._handlers;\r\n\r\n        if (!handler || !event) {\r\n            return this;\r\n        }\r\n\r\n        if (!_h[event]) {\r\n            _h[event] = [];\r\n        }\r\n\r\n        _h[event].push({\r\n            h : handler,\r\n            one : true,\r\n            ctx: context || this\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 绑定事件\r\n     * @param {string} event 事件名\r\n     * @param {Function} handler 事件处理函数\r\n     * @param {Object} [context]\r\n     */\r\n    Eventful.prototype.bind = function (event, handler, context) {\r\n        var _h = this._handlers;\r\n\r\n        if (!handler || !event) {\r\n            return this;\r\n        }\r\n\r\n        if (!_h[event]) {\r\n            _h[event] = [];\r\n        }\r\n\r\n        _h[event].push({\r\n            h : handler,\r\n            one : false,\r\n            ctx: context || this\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 解绑事件\r\n     * @param {string} event 事件名\r\n     * @param {Function} [handler] 事件处理函数\r\n     */\r\n    Eventful.prototype.unbind = function (event, handler) {\r\n        var _h = this._handlers;\r\n\r\n        if (!event) {\r\n            this._handlers = {};\r\n            return this;\r\n        }\r\n\r\n        if (handler) {\r\n            if (_h[event]) {\r\n                var newList = [];\r\n                for (var i = 0, l = _h[event].length; i < l; i++) {\r\n                    if (_h[event][i]['h'] != handler) {\r\n                        newList.push(_h[event][i]);\r\n                    }\r\n                }\r\n                _h[event] = newList;\r\n            }\r\n\r\n            if (_h[event] && _h[event].length === 0) {\r\n                delete _h[event];\r\n            }\r\n        }\r\n        else {\r\n            delete _h[event];\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 事件分发\r\n     * \r\n     * @param {string} type 事件类型\r\n     */\r\n    Eventful.prototype.dispatch = function (type) {\r\n        if (this._handlers[type]) {\r\n            var args = arguments;\r\n            var argLen = args.length;\r\n\r\n            if (argLen > 3) {\r\n                args = Array.prototype.slice.call(args, 1);\r\n            }\r\n            \r\n            var _h = this._handlers[type];\r\n            var len = _h.length;\r\n            for (var i = 0; i < len;) {\r\n                // Optimize advise from backbone\r\n                switch (argLen) {\r\n                    case 1:\r\n                        _h[i]['h'].call(_h[i]['ctx']);\r\n                        break;\r\n                    case 2:\r\n                        _h[i]['h'].call(_h[i]['ctx'], args[1]);\r\n                        break;\r\n                    case 3:\r\n                        _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\r\n                        break;\r\n                    default:\r\n                        // have more than 2 given arguments\r\n                        _h[i]['h'].apply(_h[i]['ctx'], args);\r\n                        break;\r\n                }\r\n                \r\n                if (_h[i]['one']) {\r\n                    _h.splice(i, 1);\r\n                    len--;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 带有context的事件分发, 最后一个参数是事件回调的context\r\n     * @param {string} type 事件类型\r\n     */\r\n    Eventful.prototype.dispatchWithContext = function (type) {\r\n        if (this._handlers[type]) {\r\n            var args = arguments;\r\n            var argLen = args.length;\r\n\r\n            if (argLen > 4) {\r\n                args = Array.prototype.slice.call(args, 1, args.length - 1);\r\n            }\r\n            var ctx = args[args.length - 1];\r\n\r\n            var _h = this._handlers[type];\r\n            var len = _h.length;\r\n            for (var i = 0; i < len;) {\r\n                // Optimize advise from backbone\r\n                switch (argLen) {\r\n                    case 1:\r\n                        _h[i]['h'].call(ctx);\r\n                        break;\r\n                    case 2:\r\n                        _h[i]['h'].call(ctx, args[1]);\r\n                        break;\r\n                    case 3:\r\n                        _h[i]['h'].call(ctx, args[1], args[2]);\r\n                        break;\r\n                    default:\r\n                        // have more than 2 given arguments\r\n                        _h[i]['h'].apply(ctx, args);\r\n                        break;\r\n                }\r\n                \r\n                if (_h[i]['one']) {\r\n                    _h.splice(i, 1);\r\n                    len--;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    // 对象可以通过 onxxxx 绑定事件\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onclick\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseover\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseout\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousemove\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousewheel\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousedown\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseup\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragstart\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragend\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragenter\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragleave\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragover\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondrop\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    \r\n    return Eventful;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n\r\n        var ArrayCtor = typeof Float32Array === 'undefined'\r\n            ? Array\r\n            : Float32Array;\r\n        /**\r\n         * 3x2矩阵操作类\r\n         * @exports zrender/tool/matrix\r\n         */\r\n        var matrix = {\r\n            /**\r\n             * 创建一个单位矩阵\r\n             * @return {Float32Array|Array.<number>}\r\n             */\r\n            create : function() {\r\n                var out = new ArrayCtor(6);\r\n                matrix.identity(out);\r\n                \r\n                return out;\r\n            },\r\n            /**\r\n             * 设置矩阵为单位矩阵\r\n             * @param {Float32Array|Array.<number>} out\r\n             */\r\n            identity : function(out) {\r\n                out[0] = 1;\r\n                out[1] = 0;\r\n                out[2] = 0;\r\n                out[3] = 1;\r\n                out[4] = 0;\r\n                out[5] = 0;\r\n                return out;\r\n            },\r\n            /**\r\n             * 复制矩阵\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} m\r\n             */\r\n            copy: function(out, m) {\r\n                out[0] = m[0];\r\n                out[1] = m[1];\r\n                out[2] = m[2];\r\n                out[3] = m[3];\r\n                out[4] = m[4];\r\n                out[5] = m[5];\r\n                return out;\r\n            },\r\n            /**\r\n             * 矩阵相乘\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} m1\r\n             * @param {Float32Array|Array.<number>} m2\r\n             */\r\n            mul : function (out, m1, m2) {\r\n                out[0] = m1[0] * m2[0] + m1[2] * m2[1];\r\n                out[1] = m1[1] * m2[0] + m1[3] * m2[1];\r\n                out[2] = m1[0] * m2[2] + m1[2] * m2[3];\r\n                out[3] = m1[1] * m2[2] + m1[3] * m2[3];\r\n                out[4] = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\r\n                out[5] = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\r\n                return out;\r\n            },\r\n            /**\r\n             * 平移变换\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} a\r\n             * @param {Float32Array|Array.<number>} v\r\n             */\r\n            translate : function(out, a, v) {\r\n                out[0] = a[0];\r\n                out[1] = a[1];\r\n                out[2] = a[2];\r\n                out[3] = a[3];\r\n                out[4] = a[4] + v[0];\r\n                out[5] = a[5] + v[1];\r\n                return out;\r\n            },\r\n            /**\r\n             * 旋转变换\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} a\r\n             * @param {number} rad\r\n             */\r\n            rotate : function(out, a, rad) {\r\n                var aa = a[0];\r\n                var ac = a[2];\r\n                var atx = a[4];\r\n                var ab = a[1];\r\n                var ad = a[3];\r\n                var aty = a[5];\r\n                var st = Math.sin(rad);\r\n                var ct = Math.cos(rad);\r\n\r\n                out[0] = aa * ct + ab * st;\r\n                out[1] = -aa * st + ab * ct;\r\n                out[2] = ac * ct + ad * st;\r\n                out[3] = -ac * st + ct * ad;\r\n                out[4] = ct * atx + st * aty;\r\n                out[5] = ct * aty - st * atx;\r\n                return out;\r\n            },\r\n            /**\r\n             * 缩放变换\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} a\r\n             * @param {Float32Array|Array.<number>} v\r\n             */\r\n            scale : function(out, a, v) {\r\n                var vx = v[0];\r\n                var vy = v[1];\r\n                out[0] = a[0] * vx;\r\n                out[1] = a[1] * vy;\r\n                out[2] = a[2] * vx;\r\n                out[3] = a[3] * vy;\r\n                out[4] = a[4] * vx;\r\n                out[5] = a[5] * vy;\r\n                return out;\r\n            },\r\n            /**\r\n             * 求逆矩阵\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} a\r\n             */\r\n            invert : function(out, a) {\r\n            \r\n                var aa = a[0];\r\n                var ac = a[2];\r\n                var atx = a[4];\r\n                var ab = a[1];\r\n                var ad = a[3];\r\n                var aty = a[5];\r\n\r\n                var det = aa * ad - ab * ac;\r\n                if (!det) {\r\n                    return null;\r\n                }\r\n                det = 1.0 / det;\r\n\r\n                out[0] = ad * det;\r\n                out[1] = -ab * det;\r\n                out[2] = -ac * det;\r\n                out[3] = aa * det;\r\n                out[4] = (ac * aty - ad * atx) * det;\r\n                out[5] = (ab * atx - aa * aty) * det;\r\n                return out;\r\n            }\r\n        };\r\n\r\n        return matrix;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 多边形\r\n * @module zrender/shape/Polygon\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *     var Polygon = require('zrender/shape/Polygon');\r\n *     var shape = new Polygon({\r\n *         style: {\r\n *             // 100x100的正方形\r\n *             pointList: [[0, 0], [100, 0], [100, 100], [0, 100]],\r\n *             color: 'blue'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IPolygonStyle\r\n * @property {string} pointList 多边形顶点数组\r\n * @property {string} [smooth=''] 是否做平滑插值, 平滑算法可以选择 bezier, spline\r\n * @property {number} [smoothConstraint] 平滑约束\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(1);\r\n        var smoothSpline = __webpack_require__(38);\r\n        var smoothBezier = __webpack_require__(39);\r\n        var dashedLineTo = __webpack_require__(19);\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Polygon\r\n         * @param {Object} options\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         */\r\n        var Polygon = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 多边形绘制样式\r\n             * @name module:zrender/shape/Polygon#style\r\n             * @type {module:zrender/shape/Polygon~IPolygonStyle}\r\n             */\r\n            /**\r\n             * 多边形高亮绘制样式\r\n             * @name module:zrender/shape/Polygon#highlightStyle\r\n             * @type {module:zrender/shape/Polygon~IPolygonStyle}\r\n             */\r\n        };\r\n\r\n        Polygon.prototype = {\r\n            type: 'polygon',\r\n\r\n            /**\r\n             * 创建多边形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Polygon~IPolygonStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                // 虽然能重用brokenLine，但底层图形基于性能考虑，重复代码减少调用吧\r\n                var pointList = style.pointList;\r\n                // 开始点和结束点重复\r\n                /*\r\n                var start = pointList[0];\r\n                var end = pointList[pointList.length-1];\r\n\r\n                if (start && end) {\r\n                    if (start[0] == end[0] &&\r\n                        start[1] == end[1]) {\r\n                        // 移除最后一个点\r\n                        pointList.pop();\r\n                    }\r\n                }\r\n                */\r\n\r\n                if (pointList.length < 2) {\r\n                    // 少于2个点就不画了~\r\n                    return;\r\n                }\r\n\r\n                if (style.smooth && style.smooth !== 'spline') {\r\n                    var controlPoints = smoothBezier(\r\n                        pointList, style.smooth, true, style.smoothConstraint\r\n                    );\r\n\r\n                    ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                    var cp1;\r\n                    var cp2;\r\n                    var p;\r\n                    var len = pointList.length;\r\n                    for (var i = 0; i < len; i++) {\r\n                        cp1 = controlPoints[i * 2];\r\n                        cp2 = controlPoints[i * 2 + 1];\r\n                        p = pointList[(i + 1) % len];\r\n                        ctx.bezierCurveTo(\r\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\r\n                        );\r\n                    }\r\n                } \r\n                else {\r\n                    if (style.smooth === 'spline') {\r\n                        pointList = smoothSpline(pointList, true);\r\n                    }\r\n\r\n                    if (!style.lineType || style.lineType == 'solid') {\r\n                        // 默认为实线\r\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                        for (var i = 1, l = pointList.length; i < l; i++) {\r\n                            ctx.lineTo(pointList[i][0], pointList[i][1]);\r\n                        }\r\n                        ctx.lineTo(pointList[0][0], pointList[0][1]);\r\n                    }\r\n                    else if (style.lineType == 'dashed'\r\n                            || style.lineType == 'dotted'\r\n                    ) {\r\n                        var dashLength = \r\n                            style._dashLength\r\n                            || (style.lineWidth || 1) \r\n                               * (style.lineType == 'dashed' ? 5 : 1);\r\n                        style._dashLength = dashLength;\r\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                        for (var i = 1, l = pointList.length; i < l; i++) {\r\n                            dashedLineTo(\r\n                                ctx,\r\n                                pointList[i - 1][0], pointList[i - 1][1],\r\n                                pointList[i][0], pointList[i][1],\r\n                                dashLength\r\n                            );\r\n                        }\r\n                        dashedLineTo(\r\n                            ctx,\r\n                            pointList[pointList.length - 1][0], \r\n                            pointList[pointList.length - 1][1],\r\n                            pointList[0][0],\r\n                            pointList[0][1],\r\n                            dashLength\r\n                        );\r\n                    }\r\n                }\r\n\r\n                ctx.closePath();\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回多边形包围盒矩阵\r\n             * @param {module:zrender/shape/Polygon~IPolygonStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var minX =  Number.MAX_VALUE;\r\n                var maxX =  Number.MIN_VALUE;\r\n                var minY = Number.MAX_VALUE;\r\n                var maxY = Number.MIN_VALUE;\r\n\r\n                var pointList = style.pointList;\r\n                for (var i = 0, l = pointList.length; i < l; i++) {\r\n                    if (pointList[i][0] < minX) {\r\n                        minX = pointList[i][0];\r\n                    }\r\n                    if (pointList[i][0] > maxX) {\r\n                        maxX = pointList[i][0];\r\n                    }\r\n                    if (pointList[i][1] < minY) {\r\n                        minY = pointList[i][1];\r\n                    }\r\n                    if (pointList[i][1] > maxY) {\r\n                        maxY = pointList[i][1];\r\n                    }\r\n                }\r\n\r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                \r\n                style.__rect = {\r\n                    x : Math.round(minX - lineWidth / 2),\r\n                    y : Math.round(minY - lineWidth / 2),\r\n                    width : maxX - minX + lineWidth,\r\n                    height : maxY - minY + lineWidth\r\n                };\r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Polygon, Base);\r\n        return Polygon;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 圆形\r\n * @module zrender/shape/Circle\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *   var Circle = require('zrender/shape/Circle');\r\n *   var shape = new Circle({\r\n *       style: {\r\n *           x: 100,\r\n *           y: 100,\r\n *           r: 40,\r\n *           brushType: 'both',\r\n *           color: 'blue',\r\n *           strokeColor: 'red',\r\n *           lineWidth: 3,\r\n *           text: 'Circle'\r\n *       }    \r\n *   });\r\n *   zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} ICircleStyle\r\n * @property {number} x 圆心x坐标\r\n * @property {number} y 圆心y坐标\r\n * @property {number} r 半径\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        'use strict';\r\n\r\n        var Base = __webpack_require__(1);\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Circle\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Circle = function(options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 圆形绘制样式\r\n             * @name module:zrender/shape/Circle#style\r\n             * @type {module:zrender/shape/Circle~ICircleStyle}\r\n             */\r\n            /**\r\n             * 圆形高亮绘制样式\r\n             * @name module:zrender/shape/Circle#highlightStyle\r\n             * @type {module:zrender/shape/Circle~ICircleStyle}\r\n             */\r\n        };\r\n\r\n        Circle.prototype = {\r\n            type: 'circle',\r\n            /**\r\n             * 创建圆形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Circle~ICircleStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                // Better stroking in ShapeBundle\r\n                ctx.moveTo(style.x + style.r, style.y);\r\n                ctx.arc(style.x, style.y, style.r, 0, Math.PI * 2, true);\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回圆形的包围盒矩形\r\n             * @param {module:zrender/shape/Circle~ICircleStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                style.__rect = {\r\n                    x : Math.round(style.x - style.r - lineWidth / 2),\r\n                    y : Math.round(style.y - style.r - lineWidth / 2),\r\n                    width : style.r * 2 + lineWidth,\r\n                    height : style.r * 2 + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Circle, Base);\r\n        return Circle;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * ZRender, a high performance canvas library.\r\n *  \r\n * Copyright (c) 2013, Baidu Inc.\r\n * All rights reserved.\r\n * \r\n * LICENSE\r\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n        /*\r\n         * HTML5 Canvas for Internet Explorer!\r\n         * Modern browsers like Firefox, Safari, Chrome and Opera support\r\n         * the HTML5 canvas tag to allow 2D command-based drawing.\r\n         * ExplorerCanvas brings the same functionality to Internet Explorer.\r\n         * To use, web developers only need to include a single script tag\r\n         * in their existing web pages.\r\n         *\r\n         * https://code.google.com/p/explorercanvas/\r\n         * http://explorercanvas.googlecode.com/svn/trunk/excanvas.js\r\n         */\r\n        // 核心代码会生成一个全局变量 G_vmlCanvasManager，模块改造后借用于快速判断canvas支持\r\n        __webpack_require__(32);\r\n\r\n        var util = __webpack_require__(0);\r\n        var log = __webpack_require__(25);\r\n        var guid = __webpack_require__(26);\r\n\r\n        var Handler = __webpack_require__(53);\r\n        var Painter = __webpack_require__(54);\r\n        var Storage = __webpack_require__(56);\r\n        var Animation = __webpack_require__(58);\r\n\r\n        var _instances = {};    // ZRender实例map索引\r\n\r\n        /**\r\n         * @exports zrender\r\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n         *         pissang (https://www.github.com/pissang)\r\n         */\r\n        var zrender = {};\r\n        /**\r\n         * @type {string}\r\n         */\r\n        zrender.version = '2.1.1';\r\n\r\n        /**\r\n         * 创建zrender实例\r\n         *\r\n         * @param {HTMLElement} dom 绘图容器\r\n         * @return {module:zrender/ZRender} ZRender实例\r\n         */\r\n        // 不让外部直接new ZRender实例，为啥？\r\n        // 不为啥，提供全局可控同时减少全局污染和降低命名冲突的风险！\r\n        zrender.init = function(dom) {\r\n            var zr = new ZRender(guid(), dom);\r\n            _instances[zr.id] = zr;\r\n            return zr;\r\n        };\r\n\r\n        /**\r\n         * zrender实例销毁\r\n         * @param {module:zrender/ZRender} zr ZRender对象，不传则销毁全部\r\n         */\r\n        // 在_instances里的索引也会删除了\r\n        // 管生就得管死，可以通过zrender.dispose(zr)销毁指定ZRender实例\r\n        // 当然也可以直接zr.dispose()自己销毁\r\n        zrender.dispose = function (zr) {\r\n            if (zr) {\r\n                zr.dispose();\r\n            }\r\n            else {\r\n                for (var key in _instances) {\r\n                    _instances[key].dispose();\r\n                }\r\n                _instances = {};\r\n            }\r\n\r\n            return zrender;\r\n        };\r\n\r\n        /**\r\n         * 获取zrender实例\r\n         * @param {string} id ZRender对象索引\r\n         * @return {module:zrender/ZRender}\r\n         */\r\n        zrender.getInstance = function (id) {\r\n            return _instances[id];\r\n        };\r\n\r\n        /**\r\n         * 删除zrender实例，ZRender实例dispose时会调用，\r\n         * 删除后getInstance则返回undefined\r\n         * ps: 仅是删除，删除的实例不代表已经dispose了~~\r\n         *     这是一个摆脱全局zrender.dispose()自动销毁的后门，\r\n         *     take care of yourself~\r\n         *\r\n         * @param {string} id ZRender对象索引\r\n         */\r\n        zrender.delInstance = function (id) {\r\n            delete _instances[id];\r\n            return zrender;\r\n        };\r\n\r\n        function getFrameCallback(zrInstance) {\r\n            return function () {\r\n                if (zrInstance._needsRefreshNextFrame) {\r\n                    zrInstance.refresh();\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * @module zrender/ZRender\r\n         */\r\n        /**\r\n         * ZRender接口类，对外可用的所有接口都在这里\r\n         * 非get接口统一返回支持链式调用\r\n         *\r\n         * @constructor\r\n         * @alias module:zrender/ZRender\r\n         * @param {string} id 唯一标识\r\n         * @param {HTMLElement} dom dom对象，不帮你做document.getElementById\r\n         * @return {ZRender} ZRender实例\r\n         */\r\n        var ZRender = function(id, dom) {\r\n            /**\r\n             * 实例 id\r\n             * @type {string}\r\n             */\r\n            this.id = id;\r\n            this.env = __webpack_require__(15);\r\n\r\n            this.storage = new Storage();\r\n            this.painter = new Painter(dom, this.storage);\r\n            this.handler = new Handler(dom, this.storage, this.painter);\r\n\r\n            /**\r\n             * @type {module:zrender/animation/Animation}\r\n             */\r\n            this.animation = new Animation({\r\n                stage: {\r\n                    update: getFrameCallback(this)\r\n                }\r\n            });\r\n            this.animation.start();\r\n\r\n            var self = this;\r\n            this.painter.refreshNextFrame = function () {\r\n                self.refreshNextFrame();\r\n            };\r\n\r\n            this._needsRefreshNextFrame = false;\r\n\r\n            // 修改 storage.delFromMap, 每次删除元素之前删除动画\r\n            // FIXME 有点ugly\r\n            var self = this;\r\n            var storage = this.storage;\r\n            var oldDelFromMap = storage.delFromMap;\r\n            storage.delFromMap = function (elId) {\r\n                var el = storage.get(elId);\r\n                self.stopAnimation(el);\r\n                oldDelFromMap.call(storage, elId);\r\n            };\r\n        };\r\n\r\n        /**\r\n         * 获取实例唯一标识\r\n         * @return {string}\r\n         */\r\n        ZRender.prototype.getId = function () {\r\n            return this.id;\r\n        };\r\n\r\n        /**\r\n         * 添加图形形状到根节点\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.addElement} instead\r\n         * @param {module:zrender/shape/Base} shape 形状对象，可用属性全集，详见各shape\r\n         */\r\n        ZRender.prototype.addShape = function (shape) {\r\n            this.addElement(shape);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 添加组到根节点\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.addElement} instead\r\n         * @param {module:zrender/Group} group\r\n         */\r\n        ZRender.prototype.addGroup = function(group) {\r\n            this.addElement(group);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 从根节点删除图形形状\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.delElement} instead\r\n         * @param {string} shapeId 形状对象唯一标识\r\n         */\r\n        ZRender.prototype.delShape = function (shapeId) {\r\n            this.delElement(shapeId);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 从根节点删除组\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.delElement} instead\r\n         * @param {string} groupId\r\n         */\r\n        ZRender.prototype.delGroup = function (groupId) {\r\n            this.delElement(groupId);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 修改图形形状\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.modElement} instead\r\n         * @param {string} shapeId 形状对象唯一标识\r\n         * @param {Object} shape 形状对象\r\n         */\r\n        ZRender.prototype.modShape = function (shapeId, shape) {\r\n            this.modElement(shapeId, shape);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 修改组\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.modElement} instead\r\n         * @param {string} groupId\r\n         * @param {Object} group\r\n         */\r\n        ZRender.prototype.modGroup = function (groupId, group) {\r\n            this.modElement(groupId, group);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 添加元素\r\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\r\n         */\r\n        ZRender.prototype.addElement = function (el) {\r\n            this.storage.addRoot(el);\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 删除元素\r\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\r\n         */\r\n        ZRender.prototype.delElement = function (el) {\r\n            this.storage.delRoot(el);\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 修改元素, 主要标记图形或者组需要在下一帧刷新。\r\n         * 第二个参数为需要覆盖到元素上的参数，不建议使用。\r\n         *\r\n         * @example\r\n         *     el.style.color = 'red';\r\n         *     el.position = [10, 10];\r\n         *     zr.modElement(el);\r\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\r\n         * @param {Object} [params]\r\n         */\r\n        ZRender.prototype.modElement = function (el, params) {\r\n            this.storage.mod(el, params);\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 修改指定zlevel的绘制配置项\r\n         * \r\n         * @param {string} zLevel\r\n         * @param {Object} config 配置对象\r\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\r\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\r\n         * @param {number} [config.lastFrameAlpha=0.7]\r\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n         * @param {Array.<number>} [config.position] 层的平移\r\n         * @param {Array.<number>} [config.rotation] 层的旋转\r\n         * @param {Array.<number>} [config.scale] 层的缩放\r\n         * @param {boolean} [config.zoomable=false] 层是否支持鼠标缩放操作\r\n         * @param {boolean} [config.panable=false] 层是否支持鼠标平移操作\r\n         */\r\n        ZRender.prototype.modLayer = function (zLevel, config) {\r\n            this.painter.modLayer(zLevel, config);\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 添加额外高亮层显示，仅提供添加方法，每次刷新后高亮层图形均被清空\r\n         * \r\n         * @param {Object} shape 形状对象\r\n         */\r\n        ZRender.prototype.addHoverShape = function (shape) {\r\n            this.storage.addHover(shape);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 渲染\r\n         * \r\n         * @param {Function} callback  渲染结束后回调函数\r\n         */\r\n        ZRender.prototype.render = function (callback) {\r\n            this.painter.render(callback);\r\n            this._needsRefreshNextFrame = false;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 视图更新\r\n         * \r\n         * @param {Function} callback  视图更新后回调函数\r\n         */\r\n        ZRender.prototype.refresh = function (callback) {\r\n            this.painter.refresh(callback);\r\n            this._needsRefreshNextFrame = false;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 标记视图在浏览器下一帧需要绘制\r\n         */\r\n        ZRender.prototype.refreshNextFrame = function() {\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n        \r\n        /**\r\n         * 绘制高亮层\r\n         * @param {Function} callback  视图更新后回调函数\r\n         */\r\n        ZRender.prototype.refreshHover = function (callback) {\r\n            this.painter.refreshHover(callback);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 视图更新\r\n         * \r\n         * @param {Array.<module:zrender/shape/Base>} shapeList 需要更新的图形列表\r\n         * @param {Function} callback  视图更新后回调函数\r\n         */\r\n        ZRender.prototype.refreshShapes = function (shapeList, callback) {\r\n            this.painter.refreshShapes(shapeList, callback);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 调整视图大小\r\n         */\r\n        ZRender.prototype.resize = function() {\r\n            this.painter.resize();\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 动画\r\n         * \r\n         * @param {string|module:zrender/Group|module:zrender/shape/Base} el 动画对象\r\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\r\n         * @param {boolean} [loop] 动画是否循环\r\n         * @return {module:zrender/animation/Animation~Animator}\r\n         * @example:\r\n         *     zr.animate(circle.id, 'style', false)\r\n         *         .when(1000, {x: 10} )\r\n         *         .done(function(){ // Animation done })\r\n         *         .start()\r\n         */\r\n        ZRender.prototype.animate = function (el, path, loop) {\r\n            var self = this;\r\n\r\n            if (typeof(el) === 'string') {\r\n                el = this.storage.get(el);\r\n            }\r\n            if (el) {\r\n                var target;\r\n                if (path) {\r\n                    var pathSplitted = path.split('.');\r\n                    var prop = el;\r\n                    for (var i = 0, l = pathSplitted.length; i < l; i++) {\r\n                        if (!prop) {\r\n                            continue;\r\n                        }\r\n                        prop = prop[pathSplitted[i]];\r\n                    }\r\n                    if (prop) {\r\n                        target = prop;\r\n                    }\r\n                }\r\n                else {\r\n                    target = el;\r\n                }\r\n\r\n                if (!target) {\r\n                    log(\r\n                        'Property \"'\r\n                        + path\r\n                        + '\" is not existed in element '\r\n                        + el.id\r\n                    );\r\n                    return;\r\n                }\r\n\r\n                if (el.__animators == null) {\r\n                    // 正在进行的动画记数\r\n                    el.__animators = [];\r\n                }\r\n                var animators = el.__animators;\r\n\r\n                var animator = this.animation.animate(target, { loop: loop })\r\n                    .during(function () {\r\n                        self.modShape(el);\r\n                    })\r\n                    .done(function () {\r\n                        var idx = util.indexOf(el.__animators, animator);\r\n                        if (idx >= 0) {\r\n                            animators.splice(idx, 1);\r\n                        }\r\n                    });\r\n                animators.push(animator);\r\n\r\n                return animator;\r\n            }\r\n            else {\r\n                log('Element not existed');\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 停止动画对象的动画\r\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\r\n         */\r\n        ZRender.prototype.stopAnimation = function (el) {\r\n            if (el.__animators) {\r\n                var animators = el.__animators;\r\n                var len = animators.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    animators[i].stop();\r\n                }\r\n                animators.length = 0;\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 停止所有动画\r\n         */\r\n        ZRender.prototype.clearAnimation = function () {\r\n            this.animation.clear();\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * loading显示\r\n         * \r\n         * @param {Object=} loadingEffect loading效果对象\r\n         */\r\n        ZRender.prototype.showLoading = function (loadingEffect) {\r\n            this.painter.showLoading(loadingEffect);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * loading结束\r\n         */\r\n        ZRender.prototype.hideLoading = function () {\r\n            this.painter.hideLoading();\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 获取视图宽度\r\n         */\r\n        ZRender.prototype.getWidth = function() {\r\n            return this.painter.getWidth();\r\n        };\r\n\r\n        /**\r\n         * 获取视图高度\r\n         */\r\n        ZRender.prototype.getHeight = function() {\r\n            return this.painter.getHeight();\r\n        };\r\n\r\n        /**\r\n         * 图像导出\r\n         * @param {string} type\r\n         * @param {string} [backgroundColor='#fff'] 背景色\r\n         * @return {string} 图片的Base64 url\r\n         */\r\n        ZRender.prototype.toDataURL = function(type, backgroundColor, args) {\r\n            return this.painter.toDataURL(type, backgroundColor, args);\r\n        };\r\n\r\n        /**\r\n         * 将常规shape转成image shape\r\n         * @param {module:zrender/shape/Base} e\r\n         * @param {number} width\r\n         * @param {number} height\r\n         */\r\n        ZRender.prototype.shapeToImage = function(e, width, height) {\r\n            var id = guid();\r\n            return this.painter.shapeToImage(id, e, width, height);\r\n        };\r\n\r\n        /**\r\n         * 事件绑定\r\n         * \r\n         * @param {string} eventName 事件名称\r\n         * @param {Function} eventHandler 响应函数\r\n         * @param {Object} [context] 响应函数\r\n         */\r\n        ZRender.prototype.on = function(eventName, eventHandler, context) {\r\n            this.handler.on(eventName, eventHandler, context);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 事件解绑定，参数为空则解绑所有自定义事件\r\n         * \r\n         * @param {string} eventName 事件名称\r\n         * @param {Function} eventHandler 响应函数\r\n         */\r\n        ZRender.prototype.un = function(eventName, eventHandler) {\r\n            this.handler.un(eventName, eventHandler);\r\n            return this;\r\n        };\r\n        \r\n        /**\r\n         * 事件触发\r\n         * \r\n         * @param {string} eventName 事件名称，resize，hover，drag，etc\r\n         * @param {event=} event event dom事件对象\r\n         */\r\n        ZRender.prototype.trigger = function (eventName, event) {\r\n            this.handler.trigger(eventName, event);\r\n            return this;\r\n        };\r\n        \r\n\r\n        /**\r\n         * 清除当前ZRender下所有类图的数据和显示，clear后MVC和已绑定事件均还存在在，ZRender可用\r\n         */\r\n        ZRender.prototype.clear = function () {\r\n            this.storage.delRoot();\r\n            this.painter.clear();\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 释放当前ZR实例（删除包括dom，数据、显示和事件绑定），dispose后ZR不可用\r\n         */\r\n        ZRender.prototype.dispose = function () {\r\n            this.animation.stop();\r\n            \r\n            this.clear();\r\n            this.storage.dispose();\r\n            this.painter.dispose();\r\n            this.handler.dispose();\r\n\r\n            this.animation = \r\n            this.storage = \r\n            this.painter = \r\n            this.handler = null;\r\n\r\n            // 释放后告诉全局删除对自己的索引，没想到啥好方法\r\n            zrender.delInstance(this.id);\r\n        };\r\n\r\n        return zrender;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var config = __webpack_require__(10);\r\n\r\n        /**\r\n         * @exports zrender/tool/log\r\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n         */\r\n        return function() {\r\n            if (config.debugMode === 0) {\r\n                return;\r\n            }\r\n            else if (config.debugMode == 1) {\r\n                for (var k in arguments) {\r\n                    throw new Error(arguments[k]);\r\n                }\r\n            }\r\n            else if (config.debugMode > 1) {\r\n                for (var k in arguments) {\r\n                    console.log(arguments[k]);\r\n                }\r\n            }\r\n        };\r\n\r\n        /* for debug\r\n        return function(mes) {\r\n            document.getElementById('wrong-message').innerHTML =\r\n                mes + ' ' + (new Date() - 0)\r\n                + '<br/>' \r\n                + document.getElementById('wrong-message').innerHTML;\r\n        };\r\n        */\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender: 生成唯一id\r\n *\r\n * @author errorrik (errorrik@gmail.com)\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n        var idStart = 0x0907;\r\n\r\n        return function () {\r\n            return 'zrender__' + (idStart++);\r\n        };\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 提供变换扩展\r\n * @module zrender/mixin/Transformable\r\n * @author pissang (https://www.github.com/pissang)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n    'use strict';\r\n\r\n    var matrix = __webpack_require__(21);\r\n    var vector = __webpack_require__(5);\r\n    var origin = [0, 0];\r\n\r\n    var mTranslate = matrix.translate;\r\n\r\n    var EPSILON = 5e-5;\r\n\r\n    function isAroundZero(val) {\r\n        return val > -EPSILON && val < EPSILON;\r\n    }\r\n    function isNotAroundZero(val) {\r\n        return val > EPSILON || val < -EPSILON;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/mixin/Transformable\r\n     * @constructor\r\n     */\r\n    var Transformable = function () {\r\n\r\n        if (!this.position) {\r\n            /**\r\n             * 平移\r\n             * @type {Array.<number>}\r\n             * @default [0, 0]\r\n             */\r\n            this.position = [ 0, 0 ];\r\n        }\r\n        if (typeof(this.rotation) == 'undefined') {\r\n            /**\r\n             * 旋转，可以通过数组二三项指定旋转的原点\r\n             * @type {Array.<number>}\r\n             * @default [0, 0, 0]\r\n             */\r\n            this.rotation = [ 0, 0, 0 ];\r\n        }\r\n        if (!this.scale) {\r\n            /**\r\n             * 缩放，可以通过数组三四项指定缩放的原点\r\n             * @type {Array.<number>}\r\n             * @default [1, 1, 0, 0]\r\n             */\r\n            this.scale = [ 1, 1, 0, 0 ];\r\n        }\r\n\r\n        this.needLocalTransform = false;\r\n\r\n        /**\r\n         * 是否有坐标变换\r\n         * @type {boolean}\r\n         * @readOnly\r\n         */\r\n        this.needTransform = false;\r\n    };\r\n\r\n    Transformable.prototype = {\r\n        \r\n        constructor: Transformable,\r\n\r\n        updateNeedTransform: function () {\r\n            this.needLocalTransform = isNotAroundZero(this.rotation[0])\r\n                || isNotAroundZero(this.position[0])\r\n                || isNotAroundZero(this.position[1])\r\n                || isNotAroundZero(this.scale[0] - 1)\r\n                || isNotAroundZero(this.scale[1] - 1);\r\n        },\r\n\r\n        /**\r\n         * 判断是否需要有坐标变换，更新needTransform属性。\r\n         * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\r\n         */\r\n        updateTransform: function () {\r\n            \r\n            this.updateNeedTransform();\r\n\r\n            var parentHasTransform = this.parent && this.parent.needTransform;\r\n            this.needTransform = this.needLocalTransform || parentHasTransform;\r\n            \r\n            if (!this.needTransform) {\r\n                return;\r\n            }\r\n\r\n            var m = this.transform || matrix.create();\r\n            matrix.identity(m);\r\n\r\n            if (this.needLocalTransform) {\r\n                var scale = this.scale;\r\n                if (\r\n                    isNotAroundZero(scale[0])\r\n                 || isNotAroundZero(scale[1])\r\n                ) {\r\n                    origin[0] = -scale[2] || 0;\r\n                    origin[1] = -scale[3] || 0;\r\n                    var haveOrigin = isNotAroundZero(origin[0])\r\n                                  || isNotAroundZero(origin[1]);\r\n                    if (haveOrigin) {\r\n                        mTranslate(m, m, origin);\r\n                    }\r\n                    matrix.scale(m, m, scale);\r\n                    if (haveOrigin) {\r\n                        origin[0] = -origin[0];\r\n                        origin[1] = -origin[1];\r\n                        mTranslate(m, m, origin);\r\n                    }\r\n                }\r\n\r\n                if (this.rotation instanceof Array) {\r\n                    if (this.rotation[0] !== 0) {\r\n                        origin[0] = -this.rotation[1] || 0;\r\n                        origin[1] = -this.rotation[2] || 0;\r\n                        var haveOrigin = isNotAroundZero(origin[0])\r\n                                      || isNotAroundZero(origin[1]);\r\n                        if (haveOrigin) {\r\n                            mTranslate(m, m, origin);\r\n                        }\r\n                        matrix.rotate(m, m, this.rotation[0]);\r\n                        if (haveOrigin) {\r\n                            origin[0] = -origin[0];\r\n                            origin[1] = -origin[1];\r\n                            mTranslate(m, m, origin);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.rotation !== 0) {\r\n                        matrix.rotate(m, m, this.rotation);\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1])\r\n                ) {\r\n                    mTranslate(m, m, this.position);\r\n                }\r\n            }\r\n\r\n            // 应用父节点变换\r\n            if (parentHasTransform) {\r\n                if (this.needLocalTransform) {\r\n                    matrix.mul(m, this.parent.transform, m);\r\n                }\r\n                else {\r\n                    matrix.copy(m, this.parent.transform);\r\n                }\r\n            }\r\n            // 保存这个变换矩阵\r\n            this.transform = m;\r\n\r\n            this.invTransform = this.invTransform || matrix.create();\r\n            matrix.invert(this.invTransform, m);\r\n        },\r\n        /**\r\n         * 将自己的transform应用到context上\r\n         * @param {Context2D} ctx\r\n         */\r\n        setTransform: function (ctx) {\r\n            if (this.needTransform) {\r\n                var m = this.transform;\r\n                ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            }\r\n        },\r\n        /**\r\n         * 设置图形的朝向\r\n         * @param  {Array.<number>|Float32Array} target\r\n         * @method\r\n         */\r\n        lookAt: (function () {\r\n            var v = vector.create();\r\n            return function(target) {\r\n                if (!this.transform) {\r\n                    this.transform = matrix.create();\r\n                }\r\n                var m = this.transform;\r\n                vector.sub(v, target, this.position);\r\n                if (isAroundZero(v[0]) && isAroundZero(v[1])) {\r\n                    return;\r\n                }\r\n                vector.normalize(v, v);\r\n                var scale = this.scale;\r\n                // Y Axis\r\n                // TODO Scale origin ?\r\n                m[2] = v[0] * scale[1];\r\n                m[3] = v[1] * scale[1];\r\n                // X Axis\r\n                m[0] = v[1] * scale[0];\r\n                m[1] = -v[0] * scale[0];\r\n                // Position\r\n                m[4] = this.position[0];\r\n                m[5] = this.position[1];\r\n\r\n                this.decomposeTransform();\r\n            };\r\n        })(),\r\n        /**\r\n         * 分解`transform`矩阵到`position`, `rotation`, `scale`\r\n         */\r\n        decomposeTransform: function () {\r\n            if (!this.transform) {\r\n                return;\r\n            }\r\n            var m = this.transform;\r\n            var sx = m[0] * m[0] + m[1] * m[1];\r\n            var position = this.position;\r\n            var scale = this.scale;\r\n            var rotation = this.rotation;\r\n            if (isNotAroundZero(sx - 1)) {\r\n                sx = Math.sqrt(sx);\r\n            }\r\n            var sy = m[2] * m[2] + m[3] * m[3];\r\n            if (isNotAroundZero(sy - 1)) {\r\n                sy = Math.sqrt(sy);\r\n            }\r\n            position[0] = m[4];\r\n            position[1] = m[5];\r\n            scale[0] = sx;\r\n            scale[1] = sy;\r\n            scale[2] = scale[3] = 0;\r\n            rotation[0] = Math.atan2(-m[1] / sy, m[0] / sx);\r\n            rotation[1] = rotation[2] = 0;\r\n        },\r\n\r\n        /**\r\n         * 变换坐标位置到 shape 的局部坐标空间\r\n         * @method\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @return {Array.<number>}\r\n         */\r\n        transformCoordToLocal: function (x, y) {\r\n            var v2 = [x, y];\r\n            if (this.needTransform && this.invTransform) {\r\n                vector.applyTransform(v2, v2, this.invTransform);\r\n            }\r\n            return v2;\r\n        }\r\n    };\r\n\r\n    return Transformable;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;// 由于大多数shape默认的isCover都是相同的逻辑\r\n// 所以在echarts里临时抽象一个module，用于isCover method\r\n// TODO: 对zrender的isCover和getRect方法进行抽象，重新整理该逻辑\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n    return function (x, y) {\r\n        var originPos = this.transformCoordToLocal(x, y);\r\n        x = originPos[0];\r\n        y = originPos[1];\r\n\r\n        return this.isCoverRect(x, y);\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echart图表库\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (/*require*/) {     //chart\r\n    var self = {};\r\n\r\n    var _chartLibrary = {};         //echart图表库\r\n\r\n    /**\r\n     * 定义图形实现\r\n     * @param {Object} name\r\n     * @param {Object} clazz 图形实现\r\n     */\r\n    self.define = function (name, clazz) {\r\n        _chartLibrary[name] = clazz;\r\n        return self;\r\n    };\r\n\r\n    /**\r\n     * 获取图形实现\r\n     * @param {Object} name\r\n     */\r\n    self.get = function (name) {\r\n        return _chartLibrary[name];\r\n    };\r\n\r\n    return self;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 扇形\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @module zrender/shape/Sector\r\n * @example\r\n *     var Sector = require('zrender/shape/Sector');\r\n *     var shape = new Sector({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r: 60,\r\n *             r0: 30,\r\n *             startAngle: 0,\r\n *             endEngle: 180\r\n *         } \r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} ISectorStyle\r\n * @property {number} x 圆心x坐标\r\n * @property {number} y 圆心y坐标\r\n * @property {number} r 外圆半径\r\n * @property {number} [r0=0] 内圆半径，指定后将出现内弧，同时扇边长度为`r - r0`\r\n * @property {number} startAngle 起始角度，`[0, 360)`\r\n * @property {number} endAngle 结束角度，`(0, 360]`\r\n * @property {boolean} [clockWise=false] 是否是顺时针\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n        var math = __webpack_require__(34);\r\n        var computeBoundingBox = __webpack_require__(79);\r\n        var vec2 = __webpack_require__(5);\r\n        var Base = __webpack_require__(1);\r\n        \r\n        var min0 = vec2.create();\r\n        var min1 = vec2.create();\r\n        var max0 = vec2.create();\r\n        var max1 = vec2.create();\r\n        /**\r\n         * @alias module:zrender/shape/Sector\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Sector = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 扇形绘制样式\r\n             * @name module:zrender/shape/Sector#style\r\n             * @type {module:zrender/shape/Sector~ISectorStyle}\r\n             */\r\n            /**\r\n             * 扇形高亮绘制样式\r\n             * @name module:zrender/shape/Sector#highlightStyle\r\n             * @type {module:zrender/shape/Sector~ISectorStyle}\r\n             */\r\n        };\r\n\r\n        Sector.prototype = {\r\n            type: 'sector',\r\n\r\n            /**\r\n             * 创建扇形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Sector~ISectorStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                var x = style.x;   // 圆心x\r\n                var y = style.y;   // 圆心y\r\n                var r0 = style.r0 || 0;     // 形内半径[0,r)\r\n                var r = style.r;            // 扇形外半径(0,r]\r\n                var startAngle = style.startAngle;          // 起始角度[0,360)\r\n                var endAngle = style.endAngle;              // 结束角度(0,360]\r\n                var clockWise = style.clockWise || false;\r\n\r\n                startAngle = math.degreeToRadian(startAngle);\r\n                endAngle = math.degreeToRadian(endAngle);\r\n\r\n                if (!clockWise) {\r\n                    // 扇形默认是逆时针方向，Y轴向上\r\n                    // 这个跟arc的标准不一样，为了兼容echarts\r\n                    startAngle = -startAngle;\r\n                    endAngle = -endAngle;\r\n                }\r\n\r\n                var unitX = math.cos(startAngle);\r\n                var unitY = math.sin(startAngle);\r\n                ctx.moveTo(\r\n                    unitX * r0 + x,\r\n                    unitY * r0 + y\r\n                );\r\n\r\n                ctx.lineTo(\r\n                    unitX * r + x,\r\n                    unitY * r + y\r\n                );\r\n\r\n                ctx.arc(x, y, r, startAngle, endAngle, !clockWise);\r\n\r\n                ctx.lineTo(\r\n                    math.cos(endAngle) * r0 + x,\r\n                    math.sin(endAngle) * r0 + y\r\n                );\r\n\r\n                if (r0 !== 0) {\r\n                    ctx.arc(x, y, r0, endAngle, startAngle, clockWise);\r\n                }\r\n\r\n                ctx.closePath();\r\n\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 返回扇形包围盒矩形\r\n             * @param {module:zrender/shape/Sector~ISectorStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var x = style.x;   // 圆心x\r\n                var y = style.y;   // 圆心y\r\n                var r0 = style.r0 || 0;     // 形内半径[0,r)\r\n                var r = style.r;            // 扇形外半径(0,r]\r\n                var startAngle = math.degreeToRadian(style.startAngle);\r\n                var endAngle = math.degreeToRadian(style.endAngle);\r\n                var clockWise = style.clockWise;\r\n\r\n                if (!clockWise) {\r\n                    startAngle = -startAngle;\r\n                    endAngle = -endAngle;\r\n                }\r\n\r\n                if (r0 > 1) {\r\n                    computeBoundingBox.arc(\r\n                        x, y, r0, startAngle, endAngle, !clockWise, min0, max0\r\n                    );   \r\n                } else {\r\n                    min0[0] = max0[0] = x;\r\n                    min0[1] = max0[1] = y;\r\n                }\r\n                computeBoundingBox.arc(\r\n                    x, y, r, startAngle, endAngle, !clockWise, min1, max1\r\n                );\r\n\r\n                vec2.min(min0, min0, min1);\r\n                vec2.max(max0, max0, max1);\r\n                style.__rect = {\r\n                    x: min0[0],\r\n                    y: min0[1],\r\n                    width: max0[0] - min0[0],\r\n                    height: max0[1] - min0[1]\r\n                };\r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n\r\n        __webpack_require__(0).inherits(Sector, Base);\r\n        return Sector;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_echarts__ = __webpack_require__(52);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_echarts_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_chart_wordCloud__ = __webpack_require__(91);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_chart_wordCloud___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_chart_wordCloud__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'vue-echart-wordcloud',\n  mounted: function mounted() {\n    this.editChartData();\n    console.log(this.chartContent);\n    this.drawChart();\n  },\n\n  methods: {\n    drawChart: function drawChart() {\n      // 初始化echarts实例\n      var myChart = __WEBPACK_IMPORTED_MODULE_0_echarts_echarts___default.a.init(document.querySelector('.chart'));\n      // 配置选项\n      var charCloudOption = {\n        series: [{\n          // 文字云名称\n          name: 'word cloud',\n          // 图表类型\n          type: 'wordCloud',\n          // 文字云大小\n          size: ['100%', '100%'],\n          textRotation: [0, 0],\n          textPadding: 0,\n          autoSize: {\n            enable: true,\n            minSize: 12\n          },\n          data: this.chartContent\n        }]\n      };\n      myChart.setOption(charCloudOption);\n    },\n    createItemStyle: function createItemStyle(color) {\n      return {\n        normal: {\n          color: color\n        }\n      };\n    },\n    editChartData: function editChartData() {\n      var _this = this;\n\n      this.chartContent.forEach(function (item) {\n        if (item.itemStyle) {\n          var color = item.itemStyle;\n          item.itemStyle = _this.createItemStyle(color);\n        }\n      });\n    }\n  },\n  computed: {\n    setChartContainer: function setChartContainer() {\n      return \"width: \" + this.chartWidth + \"px; height: \" + this.chartHeight + \"px\";\n    }\n  },\n  props: {\n    // 文字云的宽度\n    chartWidth: {\n      type: Number,\n      required: true\n    },\n    // 文字云的高度\n    chartHeight: {\n      type: Number,\n      required: true\n    },\n    // 文字云的内容\n    chartContent: {\n      type: Array,\n      required: true\n    }\n  }\n});\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;// Copyright 2006 Google Inc.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\n\r\n// Known Issues:\r\n//\r\n// * Patterns only support repeat.\r\n// * Radial gradient are not implemented. The VML version of these look very\r\n//   different from the canvas one.\r\n// * Clipping paths are not implemented.\r\n// * Coordsize. The width and height attribute have higher priority than the\r\n//   width and height style values which isn't correct.\r\n// * Painting mode isn't implemented.\r\n// * Canvas width/height should is using content-box by default. IE in\r\n//   Quirks mode will draw the canvas using border-box. Either change your\r\n//   doctype to HTML5\r\n//   (http://www.whatwg.org/specs/web-apps/current-work/#the-doctype)\r\n//   or use Box Sizing Behavior from WebFX\r\n//   (http://webfx.eae.net/dhtml/boxsizing/boxsizing.html)\r\n// * Non uniform scaling does not correctly scale strokes.\r\n// * Optimize. There is always room for speed improvements.\r\n\r\n// AMD by kener.linfeng@gmail.com\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n\r\n// Only add this code if we do not already have a canvas implementation\r\nif (!document.createElement('canvas').getContext) {\r\n\r\n(function() {\r\n\r\n  // alias some functions to make (compiled) code shorter\r\n  var m = Math;\r\n  var mr = m.round;\r\n  var ms = m.sin;\r\n  var mc = m.cos;\r\n  var abs = m.abs;\r\n  var sqrt = m.sqrt;\r\n\r\n  // this is used for sub pixel precision\r\n  var Z = 10;\r\n  var Z2 = Z / 2;\r\n\r\n  var IE_VERSION = +navigator.userAgent.match(/MSIE ([\\d.]+)?/)[1];\r\n\r\n  /**\r\n   * This funtion is assigned to the <canvas> elements as element.getContext().\r\n   * @this {HTMLElement}\r\n   * @return {CanvasRenderingContext2D_}\r\n   */\r\n  function getContext() {\r\n    return this.context_ ||\r\n        (this.context_ = new CanvasRenderingContext2D_(this));\r\n  }\r\n\r\n  var slice = Array.prototype.slice;\r\n\r\n  /**\r\n   * Binds a function to an object. The returned function will always use the\r\n   * passed in {@code obj} as {@code this}.\r\n   *\r\n   * Example:\r\n   *\r\n   *   g = bind(f, obj, a, b)\r\n   *   g(c, d) // will do f.call(obj, a, b, c, d)\r\n   *\r\n   * @param {Function} f The function to bind the object to\r\n   * @param {Object} obj The object that should act as this when the function\r\n   *     is called\r\n   * @param {*} var_args Rest arguments that will be used as the initial\r\n   *     arguments when the function is called\r\n   * @return {Function} A new function that has bound this\r\n   */\r\n  function bind(f, obj, var_args) {\r\n    var a = slice.call(arguments, 2);\r\n    return function() {\r\n      return f.apply(obj, a.concat(slice.call(arguments)));\r\n    };\r\n  }\r\n\r\n  function encodeHtmlAttribute(s) {\r\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\r\n  }\r\n\r\n  function addNamespace(doc, prefix, urn) {\r\n    if (!doc.namespaces[prefix]) {\r\n      doc.namespaces.add(prefix, urn, '#default#VML');\r\n    }\r\n  }\r\n\r\n  function addNamespacesAndStylesheet(doc) {\r\n    addNamespace(doc, 'g_vml_', 'urn:schemas-microsoft-com:vml');\r\n    addNamespace(doc, 'g_o_', 'urn:schemas-microsoft-com:office:office');\r\n\r\n    // Setup default CSS.  Only add one style sheet per document\r\n    if (!doc.styleSheets['ex_canvas_']) {\r\n      var ss = doc.createStyleSheet();\r\n      ss.owningElement.id = 'ex_canvas_';\r\n      ss.cssText = 'canvas{display:inline-block;overflow:hidden;' +\r\n          // default size is 300x150 in Gecko and Opera\r\n          'text-align:left;width:300px;height:150px}';\r\n    }\r\n  }\r\n\r\n  // Add namespaces and stylesheet at startup.\r\n  addNamespacesAndStylesheet(document);\r\n\r\n  var G_vmlCanvasManager_ = {\r\n    init: function(opt_doc) {\r\n      var doc = opt_doc || document;\r\n      // Create a dummy element so that IE will allow canvas elements to be\r\n      // recognized.\r\n      doc.createElement('canvas');\r\n      doc.attachEvent('onreadystatechange', bind(this.init_, this, doc));\r\n    },\r\n\r\n    init_: function(doc) {\r\n      // find all canvas elements\r\n      var els = doc.getElementsByTagName('canvas');\r\n      for (var i = 0; i < els.length; i++) {\r\n        this.initElement(els[i]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Public initializes a canvas element so that it can be used as canvas\r\n     * element from now on. This is called automatically before the page is\r\n     * loaded but if you are creating elements using createElement you need to\r\n     * make sure this is called on the element.\r\n     * @param {HTMLElement} el The canvas element to initialize.\r\n     * @return {HTMLElement} the element that was created.\r\n     */\r\n    initElement: function(el) {\r\n      if (!el.getContext) {\r\n        el.getContext = getContext;\r\n\r\n        // Add namespaces and stylesheet to document of the element.\r\n        addNamespacesAndStylesheet(el.ownerDocument);\r\n\r\n        // Remove fallback content. There is no way to hide text nodes so we\r\n        // just remove all childNodes. We could hide all elements and remove\r\n        // text nodes but who really cares about the fallback content.\r\n        el.innerHTML = '';\r\n\r\n        // do not use inline function because that will leak memory\r\n        el.attachEvent('onpropertychange', onPropertyChange);\r\n        el.attachEvent('onresize', onResize);\r\n\r\n        var attrs = el.attributes;\r\n        if (attrs.width && attrs.width.specified) {\r\n          // TODO: use runtimeStyle and coordsize\r\n          // el.getContext().setWidth_(attrs.width.nodeValue);\r\n          el.style.width = attrs.width.nodeValue + 'px';\r\n        } else {\r\n          el.width = el.clientWidth;\r\n        }\r\n        if (attrs.height && attrs.height.specified) {\r\n          // TODO: use runtimeStyle and coordsize\r\n          // el.getContext().setHeight_(attrs.height.nodeValue);\r\n          el.style.height = attrs.height.nodeValue + 'px';\r\n        } else {\r\n          el.height = el.clientHeight;\r\n        }\r\n        //el.getContext().setCoordsize_()\r\n      }\r\n      return el;\r\n    }\r\n  };\r\n\r\n  function onPropertyChange(e) {\r\n    var el = e.srcElement;\r\n\r\n    switch (e.propertyName) {\r\n      case 'width':\r\n        el.getContext().clearRect();\r\n        el.style.width = el.attributes.width.nodeValue + 'px';\r\n        // In IE8 this does not trigger onresize.\r\n        el.firstChild.style.width =  el.clientWidth + 'px';\r\n        break;\r\n      case 'height':\r\n        el.getContext().clearRect();\r\n        el.style.height = el.attributes.height.nodeValue + 'px';\r\n        el.firstChild.style.height = el.clientHeight + 'px';\r\n        break;\r\n    }\r\n  }\r\n\r\n  function onResize(e) {\r\n    var el = e.srcElement;\r\n    if (el.firstChild) {\r\n      el.firstChild.style.width =  el.clientWidth + 'px';\r\n      el.firstChild.style.height = el.clientHeight + 'px';\r\n    }\r\n  }\r\n\r\n  G_vmlCanvasManager_.init();\r\n\r\n  // precompute \"00\" to \"FF\"\r\n  var decToHex = [];\r\n  for (var i = 0; i < 16; i++) {\r\n    for (var j = 0; j < 16; j++) {\r\n      decToHex[i * 16 + j] = i.toString(16) + j.toString(16);\r\n    }\r\n  }\r\n\r\n  function createMatrixIdentity() {\r\n    return [\r\n      [1, 0, 0],\r\n      [0, 1, 0],\r\n      [0, 0, 1]\r\n    ];\r\n  }\r\n\r\n  function matrixMultiply(m1, m2) {\r\n    var result = createMatrixIdentity();\r\n\r\n    for (var x = 0; x < 3; x++) {\r\n      for (var y = 0; y < 3; y++) {\r\n        var sum = 0;\r\n\r\n        for (var z = 0; z < 3; z++) {\r\n          sum += m1[x][z] * m2[z][y];\r\n        }\r\n\r\n        result[x][y] = sum;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function copyState(o1, o2) {\r\n    o2.fillStyle     = o1.fillStyle;\r\n    o2.lineCap       = o1.lineCap;\r\n    o2.lineJoin      = o1.lineJoin;\r\n    o2.lineWidth     = o1.lineWidth;\r\n    o2.miterLimit    = o1.miterLimit;\r\n    o2.shadowBlur    = o1.shadowBlur;\r\n    o2.shadowColor   = o1.shadowColor;\r\n    o2.shadowOffsetX = o1.shadowOffsetX;\r\n    o2.shadowOffsetY = o1.shadowOffsetY;\r\n    o2.strokeStyle   = o1.strokeStyle;\r\n    o2.globalAlpha   = o1.globalAlpha;\r\n    o2.font          = o1.font;\r\n    o2.textAlign     = o1.textAlign;\r\n    o2.textBaseline  = o1.textBaseline;\r\n    o2.scaleX_    = o1.scaleX_;\r\n    o2.scaleY_    = o1.scaleY_;\r\n    o2.lineScale_    = o1.lineScale_;\r\n  }\r\n\r\n  var colorData = {\r\n    aliceblue: '#F0F8FF',\r\n    antiquewhite: '#FAEBD7',\r\n    aquamarine: '#7FFFD4',\r\n    azure: '#F0FFFF',\r\n    beige: '#F5F5DC',\r\n    bisque: '#FFE4C4',\r\n    black: '#000000',\r\n    blanchedalmond: '#FFEBCD',\r\n    blueviolet: '#8A2BE2',\r\n    brown: '#A52A2A',\r\n    burlywood: '#DEB887',\r\n    cadetblue: '#5F9EA0',\r\n    chartreuse: '#7FFF00',\r\n    chocolate: '#D2691E',\r\n    coral: '#FF7F50',\r\n    cornflowerblue: '#6495ED',\r\n    cornsilk: '#FFF8DC',\r\n    crimson: '#DC143C',\r\n    cyan: '#00FFFF',\r\n    darkblue: '#00008B',\r\n    darkcyan: '#008B8B',\r\n    darkgoldenrod: '#B8860B',\r\n    darkgray: '#A9A9A9',\r\n    darkgreen: '#006400',\r\n    darkgrey: '#A9A9A9',\r\n    darkkhaki: '#BDB76B',\r\n    darkmagenta: '#8B008B',\r\n    darkolivegreen: '#556B2F',\r\n    darkorange: '#FF8C00',\r\n    darkorchid: '#9932CC',\r\n    darkred: '#8B0000',\r\n    darksalmon: '#E9967A',\r\n    darkseagreen: '#8FBC8F',\r\n    darkslateblue: '#483D8B',\r\n    darkslategray: '#2F4F4F',\r\n    darkslategrey: '#2F4F4F',\r\n    darkturquoise: '#00CED1',\r\n    darkviolet: '#9400D3',\r\n    deeppink: '#FF1493',\r\n    deepskyblue: '#00BFFF',\r\n    dimgray: '#696969',\r\n    dimgrey: '#696969',\r\n    dodgerblue: '#1E90FF',\r\n    firebrick: '#B22222',\r\n    floralwhite: '#FFFAF0',\r\n    forestgreen: '#228B22',\r\n    gainsboro: '#DCDCDC',\r\n    ghostwhite: '#F8F8FF',\r\n    gold: '#FFD700',\r\n    goldenrod: '#DAA520',\r\n    grey: '#808080',\r\n    greenyellow: '#ADFF2F',\r\n    honeydew: '#F0FFF0',\r\n    hotpink: '#FF69B4',\r\n    indianred: '#CD5C5C',\r\n    indigo: '#4B0082',\r\n    ivory: '#FFFFF0',\r\n    khaki: '#F0E68C',\r\n    lavender: '#E6E6FA',\r\n    lavenderblush: '#FFF0F5',\r\n    lawngreen: '#7CFC00',\r\n    lemonchiffon: '#FFFACD',\r\n    lightblue: '#ADD8E6',\r\n    lightcoral: '#F08080',\r\n    lightcyan: '#E0FFFF',\r\n    lightgoldenrodyellow: '#FAFAD2',\r\n    lightgreen: '#90EE90',\r\n    lightgrey: '#D3D3D3',\r\n    lightpink: '#FFB6C1',\r\n    lightsalmon: '#FFA07A',\r\n    lightseagreen: '#20B2AA',\r\n    lightskyblue: '#87CEFA',\r\n    lightslategray: '#778899',\r\n    lightslategrey: '#778899',\r\n    lightsteelblue: '#B0C4DE',\r\n    lightyellow: '#FFFFE0',\r\n    limegreen: '#32CD32',\r\n    linen: '#FAF0E6',\r\n    magenta: '#FF00FF',\r\n    mediumaquamarine: '#66CDAA',\r\n    mediumblue: '#0000CD',\r\n    mediumorchid: '#BA55D3',\r\n    mediumpurple: '#9370DB',\r\n    mediumseagreen: '#3CB371',\r\n    mediumslateblue: '#7B68EE',\r\n    mediumspringgreen: '#00FA9A',\r\n    mediumturquoise: '#48D1CC',\r\n    mediumvioletred: '#C71585',\r\n    midnightblue: '#191970',\r\n    mintcream: '#F5FFFA',\r\n    mistyrose: '#FFE4E1',\r\n    moccasin: '#FFE4B5',\r\n    navajowhite: '#FFDEAD',\r\n    oldlace: '#FDF5E6',\r\n    olivedrab: '#6B8E23',\r\n    orange: '#FFA500',\r\n    orangered: '#FF4500',\r\n    orchid: '#DA70D6',\r\n    palegoldenrod: '#EEE8AA',\r\n    palegreen: '#98FB98',\r\n    paleturquoise: '#AFEEEE',\r\n    palevioletred: '#DB7093',\r\n    papayawhip: '#FFEFD5',\r\n    peachpuff: '#FFDAB9',\r\n    peru: '#CD853F',\r\n    pink: '#FFC0CB',\r\n    plum: '#DDA0DD',\r\n    powderblue: '#B0E0E6',\r\n    rosybrown: '#BC8F8F',\r\n    royalblue: '#4169E1',\r\n    saddlebrown: '#8B4513',\r\n    salmon: '#FA8072',\r\n    sandybrown: '#F4A460',\r\n    seagreen: '#2E8B57',\r\n    seashell: '#FFF5EE',\r\n    sienna: '#A0522D',\r\n    skyblue: '#87CEEB',\r\n    slateblue: '#6A5ACD',\r\n    slategray: '#708090',\r\n    slategrey: '#708090',\r\n    snow: '#FFFAFA',\r\n    springgreen: '#00FF7F',\r\n    steelblue: '#4682B4',\r\n    tan: '#D2B48C',\r\n    thistle: '#D8BFD8',\r\n    tomato: '#FF6347',\r\n    turquoise: '#40E0D0',\r\n    violet: '#EE82EE',\r\n    wheat: '#F5DEB3',\r\n    whitesmoke: '#F5F5F5',\r\n    yellowgreen: '#9ACD32'\r\n  };\r\n\r\n\r\n  function getRgbHslContent(styleString) {\r\n    var start = styleString.indexOf('(', 3);\r\n    var end = styleString.indexOf(')', start + 1);\r\n    var parts = styleString.substring(start + 1, end).split(',');\r\n    // add alpha if needed\r\n    if (parts.length != 4 || styleString.charAt(3) != 'a') {\r\n      parts[3] = 1;\r\n    }\r\n    return parts;\r\n  }\r\n\r\n  function percent(s) {\r\n    return parseFloat(s) / 100;\r\n  }\r\n\r\n  function clamp(v, min, max) {\r\n    return Math.min(max, Math.max(min, v));\r\n  }\r\n\r\n  function hslToRgb(parts){\r\n    var r, g, b, h, s, l;\r\n    h = parseFloat(parts[0]) / 360 % 360;\r\n    if (h < 0)\r\n      h++;\r\n    s = clamp(percent(parts[1]), 0, 1);\r\n    l = clamp(percent(parts[2]), 0, 1);\r\n    if (s == 0) {\r\n      r = g = b = l; // achromatic\r\n    } else {\r\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      var p = 2 * l - q;\r\n      r = hueToRgb(p, q, h + 1 / 3);\r\n      g = hueToRgb(p, q, h);\r\n      b = hueToRgb(p, q, h - 1 / 3);\r\n    }\r\n\r\n    return '#' + decToHex[Math.floor(r * 255)] +\r\n        decToHex[Math.floor(g * 255)] +\r\n        decToHex[Math.floor(b * 255)];\r\n  }\r\n\r\n  function hueToRgb(m1, m2, h) {\r\n    if (h < 0)\r\n      h++;\r\n    if (h > 1)\r\n      h--;\r\n\r\n    if (6 * h < 1)\r\n      return m1 + (m2 - m1) * 6 * h;\r\n    else if (2 * h < 1)\r\n      return m2;\r\n    else if (3 * h < 2)\r\n      return m1 + (m2 - m1) * (2 / 3 - h) * 6;\r\n    else\r\n      return m1;\r\n  }\r\n\r\n  var processStyleCache = {};\r\n\r\n  function processStyle(styleString) {\r\n    if (styleString in processStyleCache) {\r\n      return processStyleCache[styleString];\r\n    }\r\n\r\n    var str, alpha = 1;\r\n\r\n    styleString = String(styleString);\r\n    if (styleString.charAt(0) == '#') {\r\n      str = styleString;\r\n    } else if (/^rgb/.test(styleString)) {\r\n      var parts = getRgbHslContent(styleString);\r\n      var str = '#', n;\r\n      for (var i = 0; i < 3; i++) {\r\n        if (parts[i].indexOf('%') != -1) {\r\n          n = Math.floor(percent(parts[i]) * 255);\r\n        } else {\r\n          n = +parts[i];\r\n        }\r\n        str += decToHex[clamp(n, 0, 255)];\r\n      }\r\n      alpha = +parts[3];\r\n    } else if (/^hsl/.test(styleString)) {\r\n      var parts = getRgbHslContent(styleString);\r\n      str = hslToRgb(parts);\r\n      alpha = parts[3];\r\n    } else {\r\n      str = colorData[styleString] || styleString;\r\n    }\r\n    return processStyleCache[styleString] = {color: str, alpha: alpha};\r\n  }\r\n\r\n  var DEFAULT_STYLE = {\r\n    style: 'normal',\r\n    variant: 'normal',\r\n    weight: 'normal',\r\n    size: 12,           //10\r\n    family: '微软雅黑'     //'sans-serif'\r\n  };\r\n\r\n  // Internal text style cache\r\n  var fontStyleCache = {};\r\n\r\n  function processFontStyle(styleString) {\r\n    if (fontStyleCache[styleString]) {\r\n      return fontStyleCache[styleString];\r\n    }\r\n\r\n    var el = document.createElement('div');\r\n    var style = el.style;\r\n    var fontFamily;\r\n    try {\r\n      style.font = styleString;\r\n      fontFamily = style.fontFamily.split(',')[0];\r\n    } catch (ex) {\r\n      // Ignore failures to set to invalid font.\r\n    }\r\n\r\n    return fontStyleCache[styleString] = {\r\n      style: style.fontStyle || DEFAULT_STYLE.style,\r\n      variant: style.fontVariant || DEFAULT_STYLE.variant,\r\n      weight: style.fontWeight || DEFAULT_STYLE.weight,\r\n      size: style.fontSize || DEFAULT_STYLE.size,\r\n      family: fontFamily || DEFAULT_STYLE.family\r\n    };\r\n  }\r\n\r\n  function getComputedStyle(style, element) {\r\n    var computedStyle = {};\r\n\r\n    for (var p in style) {\r\n      computedStyle[p] = style[p];\r\n    }\r\n\r\n    // Compute the size\r\n    var canvasFontSize = parseFloat(element.currentStyle.fontSize),\r\n        fontSize = parseFloat(style.size);\r\n\r\n    if (typeof style.size == 'number') {\r\n      computedStyle.size = style.size;\r\n    } else if (style.size.indexOf('px') != -1) {\r\n      computedStyle.size = fontSize;\r\n    } else if (style.size.indexOf('em') != -1) {\r\n      computedStyle.size = canvasFontSize * fontSize;\r\n    } else if(style.size.indexOf('%') != -1) {\r\n      computedStyle.size = (canvasFontSize / 100) * fontSize;\r\n    } else if (style.size.indexOf('pt') != -1) {\r\n      computedStyle.size = fontSize / .75;\r\n    } else {\r\n      computedStyle.size = canvasFontSize;\r\n    }\r\n\r\n    // Different scaling between normal text and VML text. This was found using\r\n    // trial and error to get the same size as non VML text.\r\n    //computedStyle.size *= 0.981;\r\n\r\n    return computedStyle;\r\n  }\r\n\r\n  function buildStyle(style) {\r\n    return style.style + ' ' + style.variant + ' ' + style.weight + ' ' +\r\n        style.size + \"px '\" + style.family + \"'\";\r\n  }\r\n\r\n  var lineCapMap = {\r\n    'butt': 'flat',\r\n    'round': 'round'\r\n  };\r\n\r\n  function processLineCap(lineCap) {\r\n    return lineCapMap[lineCap] || 'square';\r\n  }\r\n\r\n  /**\r\n   * This class implements CanvasRenderingContext2D interface as described by\r\n   * the WHATWG.\r\n   * @param {HTMLElement} canvasElement The element that the 2D context should\r\n   * be associated with\r\n   */\r\n  function CanvasRenderingContext2D_(canvasElement) {\r\n    this.m_ = createMatrixIdentity();\r\n\r\n    this.mStack_ = [];\r\n    this.aStack_ = [];\r\n    this.currentPath_ = [];\r\n\r\n    // Canvas context properties\r\n    this.strokeStyle = '#000';\r\n    this.fillStyle = '#000';\r\n\r\n    this.lineWidth = 1;\r\n    this.lineJoin = 'miter';\r\n    this.lineCap = 'butt';\r\n    this.miterLimit = Z * 1;\r\n    this.globalAlpha = 1;\r\n    // this.font = '10px sans-serif';\r\n    this.font = '12px 微软雅黑';        // 决定还是改这吧，影响代价最小\r\n    this.textAlign = 'left';\r\n    this.textBaseline = 'alphabetic';\r\n    this.canvas = canvasElement;\r\n\r\n    var cssText = 'width:' + canvasElement.clientWidth + 'px;height:' +\r\n        canvasElement.clientHeight + 'px;overflow:hidden;position:absolute';\r\n    var el = canvasElement.ownerDocument.createElement('div');\r\n    el.style.cssText = cssText;\r\n    canvasElement.appendChild(el);\r\n\r\n    var overlayEl = el.cloneNode(false);\r\n    // Use a non transparent background.\r\n    overlayEl.style.backgroundColor = '#fff'; //red, I don't know why, it work!\r\n    overlayEl.style.filter = 'alpha(opacity=0)';\r\n    canvasElement.appendChild(overlayEl);\r\n\r\n    this.element_ = el;\r\n    this.scaleX_ = 1;\r\n    this.scaleY_ = 1;\r\n    this.lineScale_ = 1;\r\n  }\r\n\r\n  var contextPrototype = CanvasRenderingContext2D_.prototype;\r\n  contextPrototype.clearRect = function() {\r\n    if (this.textMeasureEl_) {\r\n      this.textMeasureEl_.removeNode(true);\r\n      this.textMeasureEl_ = null;\r\n    }\r\n    this.element_.innerHTML = '';\r\n  };\r\n\r\n  contextPrototype.beginPath = function() {\r\n    // TODO: Branch current matrix so that save/restore has no effect\r\n    //       as per safari docs.\r\n    this.currentPath_ = [];\r\n  };\r\n\r\n  contextPrototype.moveTo = function(aX, aY) {\r\n    var p = getCoords(this, aX, aY);\r\n    this.currentPath_.push({type: 'moveTo', x: p.x, y: p.y});\r\n    this.currentX_ = p.x;\r\n    this.currentY_ = p.y;\r\n  };\r\n\r\n  contextPrototype.lineTo = function(aX, aY) {\r\n    var p = getCoords(this, aX, aY);\r\n    this.currentPath_.push({type: 'lineTo', x: p.x, y: p.y});\r\n\r\n    this.currentX_ = p.x;\r\n    this.currentY_ = p.y;\r\n  };\r\n\r\n  contextPrototype.bezierCurveTo = function(aCP1x, aCP1y,\r\n                                            aCP2x, aCP2y,\r\n                                            aX, aY) {\r\n    var p = getCoords(this, aX, aY);\r\n    var cp1 = getCoords(this, aCP1x, aCP1y);\r\n    var cp2 = getCoords(this, aCP2x, aCP2y);\r\n    bezierCurveTo(this, cp1, cp2, p);\r\n  };\r\n\r\n  // Helper function that takes the already fixed cordinates.\r\n  function bezierCurveTo(self, cp1, cp2, p) {\r\n    self.currentPath_.push({\r\n      type: 'bezierCurveTo',\r\n      cp1x: cp1.x,\r\n      cp1y: cp1.y,\r\n      cp2x: cp2.x,\r\n      cp2y: cp2.y,\r\n      x: p.x,\r\n      y: p.y\r\n    });\r\n    self.currentX_ = p.x;\r\n    self.currentY_ = p.y;\r\n  }\r\n\r\n  contextPrototype.quadraticCurveTo = function(aCPx, aCPy, aX, aY) {\r\n    // the following is lifted almost directly from\r\n    // http://developer.mozilla.org/en/docs/Canvas_tutorial:Drawing_shapes\r\n\r\n    var cp = getCoords(this, aCPx, aCPy);\r\n    var p = getCoords(this, aX, aY);\r\n\r\n    var cp1 = {\r\n      x: this.currentX_ + 2.0 / 3.0 * (cp.x - this.currentX_),\r\n      y: this.currentY_ + 2.0 / 3.0 * (cp.y - this.currentY_)\r\n    };\r\n    var cp2 = {\r\n      x: cp1.x + (p.x - this.currentX_) / 3.0,\r\n      y: cp1.y + (p.y - this.currentY_) / 3.0\r\n    };\r\n\r\n    bezierCurveTo(this, cp1, cp2, p);\r\n  };\r\n\r\n  contextPrototype.arc = function(aX, aY, aRadius,\r\n                                  aStartAngle, aEndAngle, aClockwise) {\r\n    aRadius *= Z;\r\n    var arcType = aClockwise ? 'at' : 'wa';\r\n\r\n    var xStart = aX + mc(aStartAngle) * aRadius - Z2;\r\n    var yStart = aY + ms(aStartAngle) * aRadius - Z2;\r\n\r\n    var xEnd = aX + mc(aEndAngle) * aRadius - Z2;\r\n    var yEnd = aY + ms(aEndAngle) * aRadius - Z2;\r\n\r\n    // IE won't render arches drawn counter clockwise if xStart == xEnd.\r\n    if (xStart == xEnd && !aClockwise) {\r\n      xStart += 0.125; // Offset xStart by 1/80 of a pixel. Use something\r\n                       // that can be represented in binary\r\n    }\r\n\r\n    var p = getCoords(this, aX, aY);\r\n    var pStart = getCoords(this, xStart, yStart);\r\n    var pEnd = getCoords(this, xEnd, yEnd);\r\n\r\n    this.currentPath_.push({type: arcType,\r\n                           x: p.x,\r\n                           y: p.y,\r\n                           radius: aRadius,\r\n                           xStart: pStart.x,\r\n                           yStart: pStart.y,\r\n                           xEnd: pEnd.x,\r\n                           yEnd: pEnd.y});\r\n\r\n  };\r\n\r\n  contextPrototype.rect = function(aX, aY, aWidth, aHeight) {\r\n    this.moveTo(aX, aY);\r\n    this.lineTo(aX + aWidth, aY);\r\n    this.lineTo(aX + aWidth, aY + aHeight);\r\n    this.lineTo(aX, aY + aHeight);\r\n    this.closePath();\r\n  };\r\n\r\n  contextPrototype.strokeRect = function(aX, aY, aWidth, aHeight) {\r\n    var oldPath = this.currentPath_;\r\n    this.beginPath();\r\n\r\n    this.moveTo(aX, aY);\r\n    this.lineTo(aX + aWidth, aY);\r\n    this.lineTo(aX + aWidth, aY + aHeight);\r\n    this.lineTo(aX, aY + aHeight);\r\n    this.closePath();\r\n    this.stroke();\r\n\r\n    this.currentPath_ = oldPath;\r\n  };\r\n\r\n  contextPrototype.fillRect = function(aX, aY, aWidth, aHeight) {\r\n    var oldPath = this.currentPath_;\r\n    this.beginPath();\r\n\r\n    this.moveTo(aX, aY);\r\n    this.lineTo(aX + aWidth, aY);\r\n    this.lineTo(aX + aWidth, aY + aHeight);\r\n    this.lineTo(aX, aY + aHeight);\r\n    this.closePath();\r\n    this.fill();\r\n\r\n    this.currentPath_ = oldPath;\r\n  };\r\n\r\n  contextPrototype.createLinearGradient = function(aX0, aY0, aX1, aY1) {\r\n    var gradient = new CanvasGradient_('gradient');\r\n    gradient.x0_ = aX0;\r\n    gradient.y0_ = aY0;\r\n    gradient.x1_ = aX1;\r\n    gradient.y1_ = aY1;\r\n    return gradient;\r\n  };\r\n\r\n  contextPrototype.createRadialGradient = function(aX0, aY0, aR0,\r\n                                                   aX1, aY1, aR1) {\r\n    var gradient = new CanvasGradient_('gradientradial');\r\n    gradient.x0_ = aX0;\r\n    gradient.y0_ = aY0;\r\n    gradient.r0_ = aR0;\r\n    gradient.x1_ = aX1;\r\n    gradient.y1_ = aY1;\r\n    gradient.r1_ = aR1;\r\n    return gradient;\r\n  };\r\n\r\n  contextPrototype.drawImage = function(image, var_args) {\r\n    var dx, dy, dw, dh, sx, sy, sw, sh;\r\n\r\n    // to find the original width we overide the width and height\r\n    var oldRuntimeWidth = image.runtimeStyle.width;\r\n    var oldRuntimeHeight = image.runtimeStyle.height;\r\n    image.runtimeStyle.width = 'auto';\r\n    image.runtimeStyle.height = 'auto';\r\n\r\n    // get the original size\r\n    var w = image.width;\r\n    var h = image.height;\r\n\r\n    // and remove overides\r\n    image.runtimeStyle.width = oldRuntimeWidth;\r\n    image.runtimeStyle.height = oldRuntimeHeight;\r\n\r\n    if (arguments.length == 3) {\r\n      dx = arguments[1];\r\n      dy = arguments[2];\r\n      sx = sy = 0;\r\n      sw = dw = w;\r\n      sh = dh = h;\r\n    } else if (arguments.length == 5) {\r\n      dx = arguments[1];\r\n      dy = arguments[2];\r\n      dw = arguments[3];\r\n      dh = arguments[4];\r\n      sx = sy = 0;\r\n      sw = w;\r\n      sh = h;\r\n    } else if (arguments.length == 9) {\r\n      sx = arguments[1];\r\n      sy = arguments[2];\r\n      sw = arguments[3];\r\n      sh = arguments[4];\r\n      dx = arguments[5];\r\n      dy = arguments[6];\r\n      dw = arguments[7];\r\n      dh = arguments[8];\r\n    } else {\r\n      throw Error('Invalid number of arguments');\r\n    }\r\n\r\n    var d = getCoords(this, dx, dy);\r\n\r\n    var w2 = sw / 2;\r\n    var h2 = sh / 2;\r\n\r\n    var vmlStr = [];\r\n\r\n    var W = 10;\r\n    var H = 10;\r\n\r\n    var scaleX = scaleY = 1;\r\n\r\n    // For some reason that I've now forgotten, using divs didn't work\r\n    vmlStr.push(' <g_vml_:group',\r\n                ' coordsize=\"', Z * W, ',', Z * H, '\"',\r\n                ' coordorigin=\"0,0\"' ,\r\n                ' style=\"width:', W, 'px;height:', H, 'px;position:absolute;');\r\n\r\n    // If filters are necessary (rotation exists), create them\r\n    // filters are bog-slow, so only create them if abbsolutely necessary\r\n    // The following check doesn't account for skews (which don't exist\r\n    // in the canvas spec (yet) anyway.\r\n\r\n    if (this.m_[0][0] != 1 || this.m_[0][1] ||\r\n        this.m_[1][1] != 1 || this.m_[1][0]) {\r\n      var filter = [];\r\n\r\n     var scaleX = this.scaleX_;\r\n     var scaleY = this.scaleY_;\r\n      // Note the 12/21 reversal\r\n      filter.push('M11=', this.m_[0][0] / scaleX, ',',\r\n                  'M12=', this.m_[1][0] / scaleY, ',',\r\n                  'M21=', this.m_[0][1] / scaleX, ',',\r\n                  'M22=', this.m_[1][1] / scaleY, ',',\r\n                  'Dx=', mr(d.x / Z), ',',\r\n                  'Dy=', mr(d.y / Z), '');\r\n\r\n      // Bounding box calculation (need to minimize displayed area so that\r\n      // filters don't waste time on unused pixels.\r\n      var max = d;\r\n      var c2 = getCoords(this, dx + dw, dy);\r\n      var c3 = getCoords(this, dx, dy + dh);\r\n      var c4 = getCoords(this, dx + dw, dy + dh);\r\n\r\n      max.x = m.max(max.x, c2.x, c3.x, c4.x);\r\n      max.y = m.max(max.y, c2.y, c3.y, c4.y);\r\n\r\n      vmlStr.push('padding:0 ', mr(max.x / Z), 'px ', mr(max.y / Z),\r\n                  'px 0;filter:progid:DXImageTransform.Microsoft.Matrix(',\r\n                  filter.join(''), \", SizingMethod='clip');\");\r\n\r\n    } else {\r\n      vmlStr.push('top:', mr(d.y / Z), 'px;left:', mr(d.x / Z), 'px;');\r\n    }\r\n\r\n    vmlStr.push(' \">');\r\n\r\n    // Draw a special cropping div if needed\r\n    if (sx || sy) {\r\n      // Apply scales to width and height\r\n      vmlStr.push('<div style=\"overflow: hidden; width:', Math.ceil((dw + sx * dw / sw) * scaleX), 'px;',\r\n                  ' height:', Math.ceil((dh + sy * dh / sh) * scaleY), 'px;',\r\n                  ' filter:progid:DxImageTransform.Microsoft.Matrix(Dx=',\r\n                  -sx * dw / sw * scaleX, ',Dy=', -sy * dh / sh * scaleY, ');\">');\r\n    }\r\n\r\n\r\n    // Apply scales to width and height\r\n    vmlStr.push('<div style=\"width:', Math.round(scaleX * w * dw / sw), 'px;',\r\n                ' height:', Math.round(scaleY * h * dh / sh), 'px;',\r\n                ' filter:');\r\n\r\n    // If there is a globalAlpha, apply it to image\r\n    if(this.globalAlpha < 1) {\r\n      vmlStr.push(' progid:DXImageTransform.Microsoft.Alpha(opacity=' + (this.globalAlpha * 100) + ')');\r\n    }\r\n\r\n    vmlStr.push(' progid:DXImageTransform.Microsoft.AlphaImageLoader(src=', image.src, ',sizingMethod=scale)\">');\r\n\r\n    // Close the crop div if necessary\r\n    if (sx || sy) vmlStr.push('</div>');\r\n\r\n    vmlStr.push('</div></div>');\r\n\r\n    this.element_.insertAdjacentHTML('BeforeEnd', vmlStr.join(''));\r\n  };\r\n\r\n  contextPrototype.stroke = function(aFill) {\r\n    var lineStr = [];\r\n    var lineOpen = false;\r\n\r\n    var W = 10;\r\n    var H = 10;\r\n\r\n    lineStr.push('<g_vml_:shape',\r\n                 ' filled=\"', !!aFill, '\"',\r\n                 ' style=\"position:absolute;width:', W, 'px;height:', H, 'px;\"',\r\n                 ' coordorigin=\"0,0\"',\r\n                 ' coordsize=\"', Z * W, ',', Z * H, '\"',\r\n                 ' stroked=\"', !aFill, '\"',\r\n                 ' path=\"');\r\n\r\n    var newSeq = false;\r\n    var min = {x: null, y: null};\r\n    var max = {x: null, y: null};\r\n\r\n    for (var i = 0; i < this.currentPath_.length; i++) {\r\n      var p = this.currentPath_[i];\r\n      var c;\r\n\r\n      switch (p.type) {\r\n        case 'moveTo':\r\n          c = p;\r\n          lineStr.push(' m ', mr(p.x), ',', mr(p.y));\r\n          break;\r\n        case 'lineTo':\r\n          lineStr.push(' l ', mr(p.x), ',', mr(p.y));\r\n          break;\r\n        case 'close':\r\n          lineStr.push(' x ');\r\n          p = null;\r\n          break;\r\n        case 'bezierCurveTo':\r\n          lineStr.push(' c ',\r\n                       mr(p.cp1x), ',', mr(p.cp1y), ',',\r\n                       mr(p.cp2x), ',', mr(p.cp2y), ',',\r\n                       mr(p.x), ',', mr(p.y));\r\n          break;\r\n        case 'at':\r\n        case 'wa':\r\n          lineStr.push(' ', p.type, ' ',\r\n                       mr(p.x - this.scaleX_ * p.radius), ',',\r\n                       mr(p.y - this.scaleY_ * p.radius), ' ',\r\n                       mr(p.x + this.scaleX_ * p.radius), ',',\r\n                       mr(p.y + this.scaleY_ * p.radius), ' ',\r\n                       mr(p.xStart), ',', mr(p.yStart), ' ',\r\n                       mr(p.xEnd), ',', mr(p.yEnd));\r\n          break;\r\n      }\r\n\r\n\r\n      // TODO: Following is broken for curves due to\r\n      //       move to proper paths.\r\n\r\n      // Figure out dimensions so we can do gradient fills\r\n      // properly\r\n      if (p) {\r\n        if (min.x == null || p.x < min.x) {\r\n          min.x = p.x;\r\n        }\r\n        if (max.x == null || p.x > max.x) {\r\n          max.x = p.x;\r\n        }\r\n        if (min.y == null || p.y < min.y) {\r\n          min.y = p.y;\r\n        }\r\n        if (max.y == null || p.y > max.y) {\r\n          max.y = p.y;\r\n        }\r\n      }\r\n    }\r\n    lineStr.push(' \">');\r\n\r\n    if (!aFill) {\r\n      appendStroke(this, lineStr);\r\n    } else {\r\n      appendFill(this, lineStr, min, max);\r\n    }\r\n\r\n    lineStr.push('</g_vml_:shape>');\r\n\r\n    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));\r\n  };\r\n\r\n  function appendStroke(ctx, lineStr) {\r\n    var a = processStyle(ctx.strokeStyle);\r\n    var color = a.color;\r\n    var opacity = a.alpha * ctx.globalAlpha;\r\n    var lineWidth = ctx.lineScale_ * ctx.lineWidth;\r\n\r\n    // VML cannot correctly render a line if the width is less than 1px.\r\n    // In that case, we dilute the color to make the line look thinner.\r\n    if (lineWidth < 1) {\r\n      opacity *= lineWidth;\r\n    }\r\n\r\n    lineStr.push(\r\n      '<g_vml_:stroke',\r\n      ' opacity=\"', opacity, '\"',\r\n      ' joinstyle=\"', ctx.lineJoin, '\"',\r\n      ' miterlimit=\"', ctx.miterLimit, '\"',\r\n      ' endcap=\"', processLineCap(ctx.lineCap), '\"',\r\n      ' weight=\"', lineWidth, 'px\"',\r\n      ' color=\"', color, '\" />'\r\n    );\r\n  }\r\n\r\n  function appendFill(ctx, lineStr, min, max) {\r\n    var fillStyle = ctx.fillStyle;\r\n    var arcScaleX = ctx.scaleX_;\r\n    var arcScaleY = ctx.scaleY_;\r\n    var width = max.x - min.x;\r\n    var height = max.y - min.y;\r\n    if (fillStyle instanceof CanvasGradient_) {\r\n      // TODO: Gradients transformed with the transformation matrix.\r\n      var angle = 0;\r\n      var focus = {x: 0, y: 0};\r\n\r\n      // additional offset\r\n      var shift = 0;\r\n      // scale factor for offset\r\n      var expansion = 1;\r\n\r\n      if (fillStyle.type_ == 'gradient') {\r\n        var x0 = fillStyle.x0_ / arcScaleX;\r\n        var y0 = fillStyle.y0_ / arcScaleY;\r\n        var x1 = fillStyle.x1_ / arcScaleX;\r\n        var y1 = fillStyle.y1_ / arcScaleY;\r\n        var p0 = getCoords(ctx, x0, y0);\r\n        var p1 = getCoords(ctx, x1, y1);\r\n        var dx = p1.x - p0.x;\r\n        var dy = p1.y - p0.y;\r\n        angle = Math.atan2(dx, dy) * 180 / Math.PI;\r\n\r\n        // The angle should be a non-negative number.\r\n        if (angle < 0) {\r\n          angle += 360;\r\n        }\r\n\r\n        // Very small angles produce an unexpected result because they are\r\n        // converted to a scientific notation string.\r\n        if (angle < 1e-6) {\r\n          angle = 0;\r\n        }\r\n      } else {\r\n        var p0 = getCoords(ctx, fillStyle.x0_, fillStyle.y0_);\r\n        focus = {\r\n          x: (p0.x - min.x) / width,\r\n          y: (p0.y - min.y) / height\r\n        };\r\n\r\n        width  /= arcScaleX * Z;\r\n        height /= arcScaleY * Z;\r\n        var dimension = m.max(width, height);\r\n        shift = 2 * fillStyle.r0_ / dimension;\r\n        expansion = 2 * fillStyle.r1_ / dimension - shift;\r\n      }\r\n\r\n      // We need to sort the color stops in ascending order by offset,\r\n      // otherwise IE won't interpret it correctly.\r\n      var stops = fillStyle.colors_;\r\n      stops.sort(function(cs1, cs2) {\r\n        return cs1.offset - cs2.offset;\r\n      });\r\n\r\n      var length = stops.length;\r\n      var color1 = stops[0].color;\r\n      var color2 = stops[length - 1].color;\r\n      var opacity1 = stops[0].alpha * ctx.globalAlpha;\r\n      var opacity2 = stops[length - 1].alpha * ctx.globalAlpha;\r\n\r\n      var colors = [];\r\n      for (var i = 0; i < length; i++) {\r\n        var stop = stops[i];\r\n        colors.push(stop.offset * expansion + shift + ' ' + stop.color);\r\n      }\r\n\r\n      // When colors attribute is used, the meanings of opacity and o:opacity2\r\n      // are reversed.\r\n      lineStr.push('<g_vml_:fill type=\"', fillStyle.type_, '\"',\r\n                   ' method=\"none\" focus=\"100%\"',\r\n                   ' color=\"', color1, '\"',\r\n                   ' color2=\"', color2, '\"',\r\n                   ' colors=\"', colors.join(','), '\"',\r\n                   ' opacity=\"', opacity2, '\"',\r\n                   ' g_o_:opacity2=\"', opacity1, '\"',\r\n                   ' angle=\"', angle, '\"',\r\n                   ' focusposition=\"', focus.x, ',', focus.y, '\" />');\r\n    } else if (fillStyle instanceof CanvasPattern_) {\r\n      if (width && height) {\r\n        var deltaLeft = -min.x;\r\n        var deltaTop = -min.y;\r\n        lineStr.push('<g_vml_:fill',\r\n                     ' position=\"',\r\n                     deltaLeft / width * arcScaleX * arcScaleX, ',',\r\n                     deltaTop / height * arcScaleY * arcScaleY, '\"',\r\n                     ' type=\"tile\"',\r\n                     // TODO: Figure out the correct size to fit the scale.\r\n                     //' size=\"', w, 'px ', h, 'px\"',\r\n                     ' src=\"', fillStyle.src_, '\" />');\r\n       }\r\n    } else {\r\n      var a = processStyle(ctx.fillStyle);\r\n      var color = a.color;\r\n      var opacity = a.alpha * ctx.globalAlpha;\r\n      lineStr.push('<g_vml_:fill color=\"', color, '\" opacity=\"', opacity,\r\n                   '\" />');\r\n    }\r\n  }\r\n\r\n  contextPrototype.fill = function() {\r\n    this.stroke(true);\r\n  };\r\n\r\n  contextPrototype.closePath = function() {\r\n    this.currentPath_.push({type: 'close'});\r\n  };\r\n\r\n  function getCoords(ctx, aX, aY) {\r\n    var m = ctx.m_;\r\n    return {\r\n      x: Z * (aX * m[0][0] + aY * m[1][0] + m[2][0]) - Z2,\r\n      y: Z * (aX * m[0][1] + aY * m[1][1] + m[2][1]) - Z2\r\n    };\r\n  };\r\n\r\n  contextPrototype.save = function() {\r\n    var o = {};\r\n    copyState(this, o);\r\n    this.aStack_.push(o);\r\n    this.mStack_.push(this.m_);\r\n    this.m_ = matrixMultiply(createMatrixIdentity(), this.m_);\r\n  };\r\n\r\n  contextPrototype.restore = function() {\r\n    if (this.aStack_.length) {\r\n      copyState(this.aStack_.pop(), this);\r\n      this.m_ = this.mStack_.pop();\r\n    }\r\n  };\r\n\r\n  function matrixIsFinite(m) {\r\n    return isFinite(m[0][0]) && isFinite(m[0][1]) &&\r\n        isFinite(m[1][0]) && isFinite(m[1][1]) &&\r\n        isFinite(m[2][0]) && isFinite(m[2][1]);\r\n  }\r\n\r\n  function setM(ctx, m, updateLineScale) {\r\n    if (!matrixIsFinite(m)) {\r\n      return;\r\n    }\r\n    ctx.m_ = m;\r\n\r\n    ctx.scaleX_ = Math.sqrt(m[0][0] * m[0][0] + m[0][1] * m[0][1]);\r\n    ctx.scaleY_ = Math.sqrt(m[1][0] * m[1][0] + m[1][1] * m[1][1]);\r\n\r\n    if (updateLineScale) {\r\n      // Get the line scale.\r\n      // Determinant of this.m_ means how much the area is enlarged by the\r\n      // transformation. So its square root can be used as a scale factor\r\n      // for width.\r\n      var det = m[0][0] * m[1][1] - m[0][1] * m[1][0];\r\n      ctx.lineScale_ = sqrt(abs(det));\r\n    }\r\n  }\r\n\r\n  contextPrototype.translate = function(aX, aY) {\r\n    var m1 = [\r\n      [1,  0,  0],\r\n      [0,  1,  0],\r\n      [aX, aY, 1]\r\n    ];\r\n\r\n    setM(this, matrixMultiply(m1, this.m_), false);\r\n  };\r\n\r\n  contextPrototype.rotate = function(aRot) {\r\n    var c = mc(aRot);\r\n    var s = ms(aRot);\r\n\r\n    var m1 = [\r\n      [c,  s, 0],\r\n      [-s, c, 0],\r\n      [0,  0, 1]\r\n    ];\r\n\r\n    setM(this, matrixMultiply(m1, this.m_), false);\r\n  };\r\n\r\n  contextPrototype.scale = function(aX, aY) {\r\n    var m1 = [\r\n      [aX, 0,  0],\r\n      [0,  aY, 0],\r\n      [0,  0,  1]\r\n    ];\r\n\r\n    setM(this, matrixMultiply(m1, this.m_), true);\r\n  };\r\n\r\n  contextPrototype.transform = function(m11, m12, m21, m22, dx, dy) {\r\n    var m1 = [\r\n      [m11, m12, 0],\r\n      [m21, m22, 0],\r\n      [dx,  dy,  1]\r\n    ];\r\n\r\n    setM(this, matrixMultiply(m1, this.m_), true);\r\n\r\n  };\r\n\r\n  contextPrototype.setTransform = function(m11, m12, m21, m22, dx, dy) {\r\n    var m = [\r\n      [m11, m12, 0],\r\n      [m21, m22, 0],\r\n      [dx,  dy,  1]\r\n    ];\r\n\r\n    setM(this, m, true);\r\n  };\r\n\r\n  /**\r\n   * The text drawing function.\r\n   * The maxWidth argument isn't taken in account, since no browser supports\r\n   * it yet.\r\n   */\r\n  contextPrototype.drawText_ = function(text, x, y, maxWidth, stroke) {\r\n    var m = this.m_,\r\n        delta = 1000,\r\n        left = 0,\r\n        right = delta,\r\n        offset = {x: 0, y: 0},\r\n        lineStr = [];\r\n\r\n    var fontStyle = getComputedStyle(processFontStyle(this.font),\r\n                                     this.element_);\r\n\r\n    var fontStyleString = buildStyle(fontStyle);\r\n\r\n    var elementStyle = this.element_.currentStyle;\r\n    var textAlign = this.textAlign.toLowerCase();\r\n    switch (textAlign) {\r\n      case 'left':\r\n      case 'center':\r\n      case 'right':\r\n        break;\r\n      case 'end':\r\n        textAlign = elementStyle.direction == 'ltr' ? 'right' : 'left';\r\n        break;\r\n      case 'start':\r\n        textAlign = elementStyle.direction == 'rtl' ? 'right' : 'left';\r\n        break;\r\n      default:\r\n        textAlign = 'left';\r\n    }\r\n\r\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\r\n    switch (this.textBaseline) {\r\n      case 'hanging':\r\n      case 'top':\r\n        offset.y = fontStyle.size / 1.75;\r\n        break;\r\n      case 'middle':\r\n        break;\r\n      default:\r\n      case null:\r\n      case 'alphabetic':\r\n      case 'ideographic':\r\n      case 'bottom':\r\n        offset.y = -fontStyle.size / 2.25;\r\n        break;\r\n    }\r\n\r\n    switch(textAlign) {\r\n      case 'right':\r\n        left = delta;\r\n        right = 0.05;\r\n        break;\r\n      case 'center':\r\n        left = right = delta / 2;\r\n        break;\r\n    }\r\n\r\n    var d = getCoords(this, x + offset.x, y + offset.y);\r\n\r\n    lineStr.push('<g_vml_:line from=\"', -left ,' 0\" to=\"', right ,' 0.05\" ',\r\n                 ' coordsize=\"100 100\" coordorigin=\"0 0\"',\r\n                 ' filled=\"', !stroke, '\" stroked=\"', !!stroke,\r\n                 '\" style=\"position:absolute;width:1px;height:1px;\">');\r\n\r\n    if (stroke) {\r\n      appendStroke(this, lineStr);\r\n    } else {\r\n      // TODO: Fix the min and max params.\r\n      appendFill(this, lineStr, {x: -left, y: 0},\r\n                 {x: right, y: fontStyle.size});\r\n    }\r\n\r\n    var skewM = m[0][0].toFixed(3) + ',' + m[1][0].toFixed(3) + ',' +\r\n                m[0][1].toFixed(3) + ',' + m[1][1].toFixed(3) + ',0,0';\r\n\r\n    var skewOffset = mr(d.x / Z) + ',' + mr(d.y / Z);\r\n\r\n    lineStr.push('<g_vml_:skew on=\"t\" matrix=\"', skewM ,'\" ',\r\n                 ' offset=\"', skewOffset, '\" origin=\"', left ,' 0\" />',\r\n                 '<g_vml_:path textpathok=\"true\" />',\r\n                 '<g_vml_:textpath on=\"true\" string=\"',\r\n                 encodeHtmlAttribute(text),\r\n                 '\" style=\"v-text-align:', textAlign,\r\n                 ';font:', encodeHtmlAttribute(fontStyleString),\r\n                 '\" /></g_vml_:line>');\r\n\r\n    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));\r\n  };\r\n\r\n  contextPrototype.fillText = function(text, x, y, maxWidth) {\r\n    this.drawText_(text, x, y, maxWidth, false);\r\n  };\r\n\r\n  contextPrototype.strokeText = function(text, x, y, maxWidth) {\r\n    this.drawText_(text, x, y, maxWidth, true);\r\n  };\r\n\r\n  contextPrototype.measureText = function(text) {\r\n    if (!this.textMeasureEl_) {\r\n      var s = '<span style=\"position:absolute;' +\r\n          'top:-20000px;left:0;padding:0;margin:0;border:none;' +\r\n          'white-space:pre;\"></span>';\r\n      this.element_.insertAdjacentHTML('beforeEnd', s);\r\n      this.textMeasureEl_ = this.element_.lastChild;\r\n    }\r\n    var doc = this.element_.ownerDocument;\r\n    this.textMeasureEl_.innerHTML = '';\r\n    try {\r\n        this.textMeasureEl_.style.font = this.font;\r\n    } catch (ex) {\r\n        // Ignore failures to set to invalid font.\r\n    }\r\n\r\n    // Don't use innerHTML or innerText because they allow markup/whitespace.\r\n    this.textMeasureEl_.appendChild(doc.createTextNode(text));\r\n    return {width: this.textMeasureEl_.offsetWidth};\r\n  };\r\n\r\n  /******** STUBS ********/\r\n  contextPrototype.clip = function() {\r\n    // TODO: Implement\r\n  };\r\n\r\n  contextPrototype.arcTo = function() {\r\n    // TODO: Implement\r\n  };\r\n\r\n  contextPrototype.createPattern = function(image, repetition) {\r\n    return new CanvasPattern_(image, repetition);\r\n  };\r\n\r\n  // Gradient / Pattern Stubs\r\n  function CanvasGradient_(aType) {\r\n    this.type_ = aType;\r\n    this.x0_ = 0;\r\n    this.y0_ = 0;\r\n    this.r0_ = 0;\r\n    this.x1_ = 0;\r\n    this.y1_ = 0;\r\n    this.r1_ = 0;\r\n    this.colors_ = [];\r\n  }\r\n\r\n  CanvasGradient_.prototype.addColorStop = function(aOffset, aColor) {\r\n    aColor = processStyle(aColor);\r\n    this.colors_.push({offset: aOffset,\r\n                       color: aColor.color,\r\n                       alpha: aColor.alpha});\r\n  };\r\n\r\n  function CanvasPattern_(image, repetition) {\r\n    assertImageIsValid(image);\r\n    switch (repetition) {\r\n      case 'repeat':\r\n      case null:\r\n      case '':\r\n        this.repetition_ = 'repeat';\r\n        break\r\n      case 'repeat-x':\r\n      case 'repeat-y':\r\n      case 'no-repeat':\r\n        this.repetition_ = repetition;\r\n        break;\r\n      default:\r\n        throwException('SYNTAX_ERR');\r\n    }\r\n\r\n    this.src_ = image.src;\r\n    this.width_ = image.width;\r\n    this.height_ = image.height;\r\n  }\r\n\r\n  function throwException(s) {\r\n    throw new DOMException_(s);\r\n  }\r\n\r\n  function assertImageIsValid(img) {\r\n    if (!img || img.nodeType != 1 || img.tagName != 'IMG') {\r\n      throwException('TYPE_MISMATCH_ERR');\r\n    }\r\n    if (img.readyState != 'complete') {\r\n      throwException('INVALID_STATE_ERR');\r\n    }\r\n  }\r\n\r\n  function DOMException_(s) {\r\n    this.code = this[s];\r\n    this.message = s +': DOM Exception ' + this.code;\r\n  }\r\n  var p = DOMException_.prototype = new Error;\r\n  p.INDEX_SIZE_ERR = 1;\r\n  p.DOMSTRING_SIZE_ERR = 2;\r\n  p.HIERARCHY_REQUEST_ERR = 3;\r\n  p.WRONG_DOCUMENT_ERR = 4;\r\n  p.INVALID_CHARACTER_ERR = 5;\r\n  p.NO_DATA_ALLOWED_ERR = 6;\r\n  p.NO_MODIFICATION_ALLOWED_ERR = 7;\r\n  p.NOT_FOUND_ERR = 8;\r\n  p.NOT_SUPPORTED_ERR = 9;\r\n  p.INUSE_ATTRIBUTE_ERR = 10;\r\n  p.INVALID_STATE_ERR = 11;\r\n  p.SYNTAX_ERR = 12;\r\n  p.INVALID_MODIFICATION_ERR = 13;\r\n  p.NAMESPACE_ERR = 14;\r\n  p.INVALID_ACCESS_ERR = 15;\r\n  p.VALIDATION_ERR = 16;\r\n  p.TYPE_MISMATCH_ERR = 17;\r\n\r\n  // set up externs\r\n  G_vmlCanvasManager = G_vmlCanvasManager_;\r\n  CanvasRenderingContext2D = CanvasRenderingContext2D_;\r\n  CanvasGradient = CanvasGradient_;\r\n  CanvasPattern = CanvasPattern_;\r\n  DOMException = DOMException_;\r\n})();\r\n\r\n} // if\r\nelse { // make the canvas test simple by kener.linfeng@gmail.com\r\n    G_vmlCanvasManager = void 0;\r\n}\r\nreturn G_vmlCanvasManager;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // define\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts图表基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    // 图形依赖\r\n    var ImageShape = __webpack_require__(12);\r\n    var IconShape = __webpack_require__(13);\r\n    var MarkLineShape = __webpack_require__(64);\r\n    var SymbolShape = __webpack_require__(37);\r\n    var PolylineShape = __webpack_require__(40);\r\n    var ShapeBundle = __webpack_require__(41);\r\n    \r\n    var ecConfig = __webpack_require__(4);\r\n    var ecData = __webpack_require__(14);\r\n    var ecAnimation = __webpack_require__(66);\r\n    var ecEffect = __webpack_require__(67);\r\n    var accMath = __webpack_require__(42);\r\n    var ComponentBase = __webpack_require__(8);\r\n    var EdgeBundling = __webpack_require__(70);\r\n\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrArea = __webpack_require__(2);\r\n\r\n    // Some utility functions\r\n    function isCoordAvailable(coord) {\r\n        return coord.x != null && coord.y != null;\r\n    }\r\n    \r\n    function Base(ecTheme, messageCenter, zr, option, myChart) {\r\n\r\n        ComponentBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        var self = this;\r\n        this.selectedMap = {};\r\n        this.lastShapeList = [];\r\n        this.shapeHandler = {\r\n            onclick: function () {\r\n                self.isClick = true;\r\n            },\r\n            \r\n            ondragover: function (param) {\r\n                // 返回触发可计算特性的图形提示\r\n                var calculableShape = param.target;\r\n                calculableShape.highlightStyle = calculableShape.highlightStyle || {};\r\n                \r\n                // 备份特出特性\r\n                var highlightStyle = calculableShape.highlightStyle;\r\n                var brushType = highlightStyle.brushTyep;\r\n                var strokeColor = highlightStyle.strokeColor;\r\n                var lineWidth = highlightStyle.lineWidth;\r\n                \r\n                highlightStyle.brushType = 'stroke';\r\n                highlightStyle.strokeColor = self.ecTheme.calculableColor\r\n                                             || ecConfig.calculableColor;\r\n                highlightStyle.lineWidth = calculableShape.type === 'icon' ? 30 : 10;\r\n\r\n                self.zr.addHoverShape(calculableShape);\r\n                \r\n                setTimeout(function (){\r\n                    // 复位\r\n                    if (highlightStyle) {\r\n                        highlightStyle.brushType = brushType;\r\n                        highlightStyle.strokeColor = strokeColor;\r\n                        highlightStyle.lineWidth = lineWidth;\r\n                    }\r\n                },20);\r\n            },\r\n            \r\n            ondrop: function (param) {\r\n                // 排除一些非数据的拖拽进入\r\n                if (ecData.get(param.dragged, 'data') != null) {\r\n                    self.isDrop = true;\r\n                }\r\n            },\r\n            \r\n            ondragend: function () {\r\n                self.isDragend = true;\r\n            }\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * 基类方法\r\n     */\r\n    Base.prototype = {\r\n        /**\r\n         * 图形拖拽特性 \r\n         */\r\n        setCalculable: function (shape) {\r\n            shape.dragEnableTime = this.ecTheme.DRAG_ENABLE_TIME || ecConfig.DRAG_ENABLE_TIME;\r\n            shape.ondragover = this.shapeHandler.ondragover;\r\n            shape.ondragend = this.shapeHandler.ondragend;\r\n            shape.ondrop = this.shapeHandler.ondrop;\r\n            return shape;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽进来\r\n         */\r\n        ondrop: function (param, status) {\r\n            if (!this.isDrop || !param.target || status.dragIn) {\r\n                // 没有在当前实例上发生拖拽行为或者已经被认领了则直接返回\r\n                return;\r\n            }\r\n            var target = param.target;      // 拖拽安放目标\r\n            var dragged = param.dragged;    // 当前被拖拽的图形对象\r\n\r\n            var seriesIndex = ecData.get(target, 'seriesIndex');\r\n            var dataIndex = ecData.get(target, 'dataIndex');\r\n\r\n            var series = this.series;\r\n            var data;\r\n            var legend = this.component.legend;\r\n            if (dataIndex === -1) {\r\n                // 落到calculableCase上，数据被拖拽进某个饼图|雷达|漏斗，增加数据\r\n                if (ecData.get(dragged, 'seriesIndex') == seriesIndex) {\r\n                    // 自己拖拽到自己\r\n                    status.dragOut = status.dragIn = status.needRefresh = true;\r\n                    this.isDrop = false;\r\n                    return;\r\n                }\r\n                \r\n                data = {\r\n                    value: ecData.get(dragged, 'value'),\r\n                    name: ecData.get(dragged, 'name')\r\n                };\r\n\r\n                // 修饼图数值不为负值\r\n                if (this.type === ecConfig.CHART_TYPE_PIE && data.value < 0) {\r\n                    data.value = 0;\r\n                }\r\n\r\n                var hasFind = false;\r\n                var sData = series[seriesIndex].data;\r\n                for (var i = 0, l = sData.length; i < l; i++) {\r\n                    if (sData[i].name === data.name && sData[i].value === '-') {\r\n                        series[seriesIndex].data[i].value = data.value;\r\n                        hasFind = true;\r\n                    }\r\n                }\r\n                !hasFind && series[seriesIndex].data.push(data);\r\n\r\n                legend && legend.add(\r\n                    data.name,\r\n                    dragged.style.color || dragged.style.strokeColor\r\n                );\r\n            }\r\n            else {\r\n                // 落到数据item上，数据被拖拽到某个数据项上，数据修改\r\n                data = series[seriesIndex].data[dataIndex] || '-';\r\n                if (data.value != null) {\r\n                    if (data.value != '-') {\r\n                        series[seriesIndex].data[dataIndex].value = \r\n                            accMath.accAdd(\r\n                                series[seriesIndex].data[dataIndex].value,\r\n                                ecData.get(dragged, 'value')\r\n                            );\r\n                    }\r\n                    else {\r\n                        series[seriesIndex].data[dataIndex].value =\r\n                            ecData.get(dragged, 'value');\r\n                    }\r\n                    \r\n                    if (this.type === ecConfig.CHART_TYPE_FUNNEL\r\n                        || this.type === ecConfig.CHART_TYPE_PIE\r\n                    ) {\r\n                        legend && legend.getRelatedAmount(data.name) === 1 \r\n                               && this.component.legend.del(data.name);\r\n                        data.name += this.option.nameConnector + ecData.get(dragged, 'name');\r\n                        legend && legend.add(\r\n                            data.name,\r\n                            dragged.style.color || dragged.style.strokeColor\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    if (data != '-') {\r\n                        series[seriesIndex].data[dataIndex] = \r\n                            accMath.accAdd(\r\n                                series[seriesIndex].data[dataIndex],\r\n                                ecData.get(dragged, 'value')\r\n                            );\r\n                    }\r\n                    else {\r\n                        series[seriesIndex].data[dataIndex] =\r\n                            ecData.get(dragged, 'value');\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 别status = {}赋值啊！！\r\n            status.dragIn = status.dragIn || true;\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDrop = false;\r\n\r\n            var self = this;\r\n            setTimeout(function(){\r\n                self.zr.trigger('mousemove', param.event);\r\n            }, 300);\r\n            \r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽出去\r\n         */\r\n        ondragend: function (param, status) {\r\n            if (!this.isDragend || !param.target || status.dragOut) {\r\n                // 没有在当前实例上发生拖拽行为或者已经被认领了则直接返回\r\n                return;\r\n            }\r\n            var target = param.target;      // 被拖拽图形元素\r\n\r\n            var seriesIndex = ecData.get(target, 'seriesIndex');\r\n            var dataIndex = ecData.get(target, 'dataIndex');\r\n\r\n            var series = this.series;\r\n\r\n            // 删除被拖拽走的数据\r\n            if (series[seriesIndex].data[dataIndex].value != null) {\r\n                series[seriesIndex].data[dataIndex].value = '-';\r\n                // 清理可能有且唯一的legend data\r\n                var name = series[seriesIndex].data[dataIndex].name;\r\n                var legend = this.component.legend;\r\n                if (legend && legend.getRelatedAmount(name) === 0) {\r\n                    legend.del(name);\r\n                }\r\n            }\r\n            else {\r\n                series[seriesIndex].data[dataIndex] = '-';\r\n            }\r\n            \r\n            // 别status = {}赋值啊！！\r\n            status.dragOut = true;\r\n            status.needRefresh = true;\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 图例选择\r\n         */\r\n        onlegendSelected: function (param, status) {\r\n            var legendSelected = param.selected;\r\n            for (var itemName in this.selectedMap) {\r\n                if (this.selectedMap[itemName] != legendSelected[itemName]) {\r\n                    // 有一项不一致都需要重绘\r\n                    status.needRefresh = true;\r\n                }\r\n                this.selectedMap[itemName] = legendSelected[itemName];\r\n            }\r\n            return;\r\n        },\r\n        \r\n        /**\r\n         * 折线图、柱形图公用方法\r\n         */\r\n        _buildPosition: function() {\r\n            this._symbol = this.option.symbolList;\r\n            this._sIndex2ShapeMap = {};  // series拐点图形类型，seriesIndex索引到shape type\r\n            this._sIndex2ColorMap = {};  // series默认颜色索引，seriesIndex索引到color\r\n\r\n            this.selectedMap = {};\r\n            this.xMarkMap = {};\r\n            \r\n            var series = this.series;\r\n            // 水平垂直双向series索引 ，position索引到seriesIndex\r\n            var _position2sIndexMap = {\r\n                top: [],\r\n                bottom: [],\r\n                left: [],\r\n                right: [],\r\n                other: []\r\n            };\r\n            var xAxisIndex;\r\n            var yAxisIndex;\r\n            var xAxis;\r\n            var yAxis;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].type === this.type) {\r\n                    series[i] = this.reformOption(series[i]);\r\n                    this.legendHoverLink = series[i].legendHoverLink || this.legendHoverLink;\r\n                    xAxisIndex = series[i].xAxisIndex;\r\n                    yAxisIndex = series[i].yAxisIndex;\r\n                    xAxis = this.component.xAxis.getAxis(xAxisIndex);\r\n                    yAxis = this.component.yAxis.getAxis(yAxisIndex);\r\n                    if (xAxis.type === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY) {\r\n                        _position2sIndexMap[xAxis.getPosition()].push(i);\r\n                    }\r\n                    else if (yAxis.type === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY) {\r\n                        _position2sIndexMap[yAxis.getPosition()].push(i);\r\n                    }\r\n                    else {\r\n                        _position2sIndexMap.other.push(i);\r\n                    }\r\n                }\r\n            }\r\n            // console.log(_position2sIndexMap);\r\n            for (var position in _position2sIndexMap) {\r\n                if (_position2sIndexMap[position].length > 0) {\r\n                    this._buildSinglePosition(\r\n                        position, _position2sIndexMap[position]\r\n                    );\r\n                }\r\n            }\r\n\r\n            this.addShapeList();\r\n        },\r\n        \r\n        /**\r\n         * 构建单个方向上的折线图、柱形图公用方法\r\n         *\r\n         * @param {number} seriesIndex 系列索引\r\n         */\r\n        _buildSinglePosition: function (position, seriesArray) {\r\n            var mapData = this._mapData(seriesArray);\r\n            var locationMap = mapData.locationMap;\r\n            var maxDataLength = mapData.maxDataLength;\r\n\r\n            if (maxDataLength === 0 || locationMap.length === 0) {\r\n                return;\r\n            }\r\n            switch (position) {\r\n                case 'bottom' :\r\n                case 'top' :\r\n                    this._buildHorizontal(seriesArray, maxDataLength, locationMap, this.xMarkMap);\r\n                    break;\r\n                case 'left' :\r\n                case 'right' :\r\n                    this._buildVertical(seriesArray, maxDataLength, locationMap, this.xMarkMap);\r\n                    break;\r\n                case 'other' :\r\n                    this._buildOther(seriesArray, maxDataLength, locationMap, this.xMarkMap);\r\n                    break;\r\n            }\r\n            \r\n            for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                this.buildMark(seriesArray[i]);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 数据整形，折线图、柱形图公用方法\r\n         * 数组位置映射到系列索引\r\n         */\r\n        _mapData: function (seriesArray) {\r\n            var series = this.series;\r\n            var serie;                              // 临时映射变量\r\n            var dataIndex = 0;                      // 堆积数据所在位置映射\r\n            var stackMap = {};                      // 堆积数据位置映射，堆积组在二维中的第几项\r\n            var magicStackKey = '__kener__stack__'; // 堆积命名，非堆积数据安单一堆积处理\r\n            var stackKey;                           // 临时映射变量\r\n            var serieName;                          // 临时映射变量\r\n            var legend = this.component.legend;\r\n            var locationMap = [];                   // 需要返回的东西：数组位置映射到系列索引\r\n            var maxDataLength = 0;                  // 需要返回的东西：最大数据长度\r\n            var iconShape;\r\n            // 计算需要显示的个数和分配位置并记在下面这个结构里\r\n            for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                serie = series[seriesArray[i]];\r\n                serieName = serie.name;\r\n                \r\n                this._sIndex2ShapeMap[seriesArray[i]] = this._sIndex2ShapeMap[seriesArray[i]]\r\n                                                        || this.query(serie,'symbol')\r\n                                                        || this._symbol[i % this._symbol.length];\r\n                      \r\n                if (legend){\r\n                    this.selectedMap[serieName] = legend.isSelected(serieName);\r\n                    \r\n                    this._sIndex2ColorMap[seriesArray[i]] = legend.getColor(serieName);\r\n                        \r\n                    iconShape = legend.getItemShape(serieName);\r\n                    if (iconShape) {\r\n                        // 回调legend，换一个更形象的icon\r\n                        var style = iconShape.style;\r\n                        if (this.type == ecConfig.CHART_TYPE_LINE) {\r\n                            style.iconType = 'legendLineIcon';\r\n                            style.symbol =  this._sIndex2ShapeMap[seriesArray[i]];\r\n                        }\r\n                        else if (serie.itemStyle.normal.barBorderWidth > 0) {\r\n                            var highlightStyle = iconShape.highlightStyle;\r\n                            style.brushType = 'both';\r\n                            style.x += 1;\r\n                            style.y += 1;\r\n                            style.width -= 2;\r\n                            style.height -= 2;\r\n                            style.strokeColor \r\n                                = highlightStyle.strokeColor \r\n                                = serie.itemStyle.normal.barBorderColor;\r\n                            highlightStyle.lineWidth = 3;\r\n                        }\r\n                        \r\n                        legend.setItemShape(serieName, iconShape);\r\n                    }\r\n                }\r\n                else {\r\n                    this.selectedMap[serieName] = true;\r\n                    this._sIndex2ColorMap[seriesArray[i]] = this.zr.getColor(seriesArray[i]);\r\n                }\r\n\r\n                if (this.selectedMap[serieName]) {\r\n                    stackKey = serie.stack || (magicStackKey + seriesArray[i]);\r\n                    if (stackMap[stackKey] == null) {\r\n                        stackMap[stackKey] = dataIndex;\r\n                        locationMap[dataIndex] = [seriesArray[i]];\r\n                        dataIndex++;\r\n                    }\r\n                    else {\r\n                        // 已经分配了位置就推进去就行\r\n                        locationMap[stackMap[stackKey]].push(seriesArray[i]);\r\n                    }\r\n                }\r\n                // 兼职帮算一下最大长度\r\n                maxDataLength = Math.max(maxDataLength, serie.data.length);\r\n            }\r\n            /* 调试输出\r\n            var s = '';\r\n            for (var i = 0, l = maxDataLength; i < l; i++) {\r\n                s = '[';\r\n                for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                    s +='['\r\n                    for (var m = 0, n = locationMap[j].length - 1; m < n; m++) {\r\n                        s += series[locationMap[j][m]].data[i] + ','\r\n                    }\r\n                    s += series[locationMap[j][locationMap[j].length - 1]]\r\n                         .data[i];\r\n                    s += ']'\r\n                }\r\n                s += ']';\r\n                console.log(s);\r\n            }\r\n            console.log(locationMap)\r\n            */\r\n\r\n            return {\r\n                locationMap: locationMap,\r\n                maxDataLength: maxDataLength\r\n            };\r\n        },\r\n        \r\n        _calculMarkMapXY : function(xMarkMap, locationMap, xy) {\r\n            var series = this.series;\r\n            for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                    var seriesIndex = locationMap[j][m];\r\n                    var valueIndex = xy == 'xy' ? 0 : '';\r\n                    var grid = this.component.grid;\r\n                    var tarMark = xMarkMap[seriesIndex];\r\n\r\n                    if (xy.indexOf('x') != '-1') {\r\n                        if (tarMark['counter' + valueIndex] > 0) {\r\n                            tarMark['average' + valueIndex] =\r\n                                tarMark['sum' + valueIndex] / tarMark['counter' + valueIndex];\r\n                        }\r\n                        \r\n                        var x = this.component.xAxis.getAxis(series[seriesIndex].xAxisIndex || 0)\r\n                                .getCoord(tarMark['average' + valueIndex]);\r\n                        tarMark['averageLine' + valueIndex] = [\r\n                            [x, grid.getYend()],\r\n                            [x, grid.getY()]\r\n                        ];\r\n                        tarMark['minLine' + valueIndex] = [\r\n                            [tarMark['minX' + valueIndex], grid.getYend()],\r\n                            [tarMark['minX' + valueIndex], grid.getY()]\r\n                        ];\r\n                        tarMark['maxLine' + valueIndex] = [\r\n                            [tarMark['maxX' + valueIndex], grid.getYend()],\r\n                            [tarMark['maxX' + valueIndex], grid.getY()]\r\n                        ];\r\n                        \r\n                        tarMark.isHorizontal = false;\r\n                    }\r\n                    \r\n                    valueIndex = xy == 'xy' ? 1 : '';\r\n                    if (xy.indexOf('y') != '-1') {\r\n                        if (tarMark['counter' + valueIndex] > 0) {\r\n                            tarMark['average' + valueIndex] = \r\n                                tarMark['sum' + valueIndex] / tarMark['counter' + valueIndex];\r\n                        }\r\n                        var y = this.component.yAxis.getAxis(series[seriesIndex].yAxisIndex || 0)\r\n                                .getCoord(tarMark['average' + valueIndex]);\r\n                        tarMark['averageLine' + valueIndex] = [\r\n                            [grid.getX(), y],\r\n                            [grid.getXend(), y]\r\n                        ];\r\n                        tarMark['minLine' + valueIndex] = [\r\n                            [grid.getX(), tarMark['minY' + valueIndex]],\r\n                            [grid.getXend(), tarMark['minY' + valueIndex]]\r\n                        ];\r\n                        tarMark['maxLine' + valueIndex] = [\r\n                            [grid.getX(), tarMark['maxY' + valueIndex]],\r\n                            [grid.getXend(), tarMark['maxY' + valueIndex]]\r\n                        ];\r\n                        \r\n                        tarMark.isHorizontal = true;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 添加文本 \r\n         */\r\n        addLabel: function (tarShape, serie, data, name, orient) {\r\n            // 多级控制\r\n            var queryTarget = [data, serie];\r\n            var nLabel = this.deepMerge(queryTarget, 'itemStyle.normal.label');\r\n            var eLabel = this.deepMerge(queryTarget, 'itemStyle.emphasis.label');\r\n\r\n            var nTextStyle = nLabel.textStyle || {};\r\n            var eTextStyle = eLabel.textStyle || {};\r\n            \r\n            if (nLabel.show) {\r\n                var style = tarShape.style;\r\n                style.text = this._getLabelText(\r\n                    serie, data, name, 'normal'\r\n                );\r\n                style.textPosition = nLabel.position == null\r\n                                     ? (orient === 'horizontal' ? 'right' : 'top')\r\n                                     : nLabel.position;\r\n                style.textColor = nTextStyle.color;\r\n                style.textFont = this.getFont(nTextStyle);\r\n                style.textAlign = nTextStyle.align;\r\n                style.textBaseline = nTextStyle.baseline;\r\n            }\r\n            if (eLabel.show) {\r\n                var highlightStyle = tarShape.highlightStyle;\r\n                highlightStyle.text = this._getLabelText(\r\n                    serie, data, name, 'emphasis'\r\n                );\r\n                highlightStyle.textPosition = nLabel.show\r\n                                              ? tarShape.style.textPosition\r\n                                              : (eLabel.position == null\r\n                                                 ? (orient === 'horizontal' ? 'right' : 'top')\r\n                                                 : eLabel.position);\r\n                highlightStyle.textColor = eTextStyle.color;\r\n                highlightStyle.textFont = this.getFont(eTextStyle);\r\n                highlightStyle.textAlign = eTextStyle.align;\r\n                highlightStyle.textBaseline = eTextStyle.baseline;\r\n            }\r\n            \r\n            return tarShape;\r\n        },\r\n        \r\n        /**\r\n         * 根据lable.format计算label text\r\n         */\r\n        _getLabelText: function (serie, data, name, status) {\r\n            var formatter = this.deepQuery(\r\n                [data, serie],\r\n                'itemStyle.' + status + '.label.formatter'\r\n            );\r\n            if (!formatter && status === 'emphasis') {\r\n                // emphasis时需要看看normal下是否有formatter\r\n                formatter = this.deepQuery(\r\n                    [data, serie],\r\n                    'itemStyle.normal.label.formatter'\r\n                );\r\n            }\r\n            \r\n            var value = this.getDataFromOption(data, '-');\r\n            \r\n            if (formatter) {\r\n                if (typeof formatter === 'function') {\r\n                    return formatter.call(\r\n                        this.myChart,\r\n                        {\r\n                            seriesName: serie.name,\r\n                            series: serie,\r\n                            name: name,\r\n                            value: value,\r\n                            data: data,\r\n                            status: status\r\n                        }\r\n                    );\r\n                }\r\n                else if (typeof formatter === 'string') {\r\n                    formatter = formatter.replace('{a}','{a0}')\r\n                                         .replace('{b}','{b0}')\r\n                                         .replace('{c}','{c0}')\r\n                                         .replace('{a0}', serie.name)\r\n                                         .replace('{b0}', name)\r\n                                         .replace('{c0}', this.numAddCommas(value));\r\n    \r\n                    return formatter;\r\n                }\r\n            }\r\n            else {\r\n                if (value instanceof Array) {\r\n                    return value[2] != null\r\n                           ? this.numAddCommas(value[2])\r\n                           : (value[0] + ' , ' + value[1]);\r\n                }\r\n                else {\r\n                    return this.numAddCommas(value);\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标线标注 \r\n         */\r\n        buildMark: function (seriesIndex) {\r\n            var serie = this.series[seriesIndex];\r\n            if (this.selectedMap[serie.name]) {\r\n                serie.markLine && this._buildMarkLine(seriesIndex);\r\n                serie.markPoint && this._buildMarkPoint(seriesIndex);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标注逻辑\r\n         */\r\n        _buildMarkPoint: function (seriesIndex) {\r\n            var attachStyle =  (this.markAttachStyle || {})[seriesIndex];\r\n            var serie = this.series[seriesIndex];\r\n            var mpData;\r\n            var pos;\r\n            var markPoint = zrUtil.clone(serie.markPoint);\r\n            for (var i = 0, l = markPoint.data.length; i < l; i++) {\r\n                mpData = markPoint.data[i];\r\n                pos = this.getMarkCoord(seriesIndex, mpData);\r\n                mpData.x = mpData.x != null ? mpData.x : pos[0];\r\n                mpData.y = mpData.y != null ? mpData.y : pos[1];\r\n                if (mpData.type\r\n                    && (mpData.type === 'max' || mpData.type === 'min')\r\n                ) {\r\n                    // 特殊值内置支持\r\n                    mpData.value = pos[3];\r\n                    mpData.name = mpData.name || mpData.type;\r\n                    mpData.symbolSize = mpData.symbolSize\r\n                        || (zrArea.getTextWidth(pos[3], this.getFont()) / 2 + 5);\r\n                }\r\n            }\r\n            \r\n            var shapeList = this._markPoint(seriesIndex, markPoint);\r\n            \r\n            for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                var tarShape = shapeList[i];\r\n                tarShape.zlevel = serie.zlevel;\r\n                tarShape.z = serie.z + 1;\r\n                for (var key in attachStyle) {\r\n                    tarShape[key] = zrUtil.clone(attachStyle[key]);\r\n                }\r\n                this.shapeList.push(tarShape);\r\n            }\r\n            // 个别特殊图表需要自己addShape\r\n            if (this.type === ecConfig.CHART_TYPE_FORCE\r\n                || this.type === ecConfig.CHART_TYPE_CHORD\r\n            ) {\r\n                for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(shapeList[i]);\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标线逻辑\r\n         */\r\n        _buildMarkLine: function (seriesIndex) {\r\n            var attachStyle =  (this.markAttachStyle || {})[seriesIndex];\r\n            var serie = this.series[seriesIndex];\r\n            var pos;\r\n            var markLine = zrUtil.clone(serie.markLine);\r\n            for (var i = 0, l = markLine.data.length; i < l; i++) {\r\n                var mlData = markLine.data[i];\r\n                if (mlData.type\r\n                    && (mlData.type === 'max' || mlData.type === 'min' || mlData.type === 'average')\r\n                ) {\r\n                    // 特殊值内置支持\r\n                    pos = this.getMarkCoord(seriesIndex, mlData);\r\n                    markLine.data[i] = [zrUtil.clone(mlData), {}];\r\n                    markLine.data[i][0].name = mlData.name || mlData.type;\r\n                    markLine.data[i][0].value = mlData.type !== 'average'\r\n                                                ? pos[3]\r\n                                                : +pos[3].toFixed(\r\n                                                      markLine.precision != null \r\n                                                      ? markLine.precision \r\n                                                      : this.deepQuery(\r\n                                                            [this.ecTheme, ecConfig],\r\n                                                            'markLine.precision'\r\n                                                        )\r\n                                                  );\r\n                    pos = pos[2];\r\n                    mlData = [{},{}];\r\n                }\r\n                else {\r\n                    pos = [\r\n                        this.getMarkCoord(seriesIndex, mlData[0]),\r\n                        this.getMarkCoord(seriesIndex, mlData[1])\r\n                    ];\r\n                }\r\n                if (pos == null || pos[0] == null || pos[1] == null) {\r\n                    // 不在显示区域内\r\n                    continue;\r\n                }\r\n                markLine.data[i][0].x = mlData[0].x != null ? mlData[0].x : pos[0][0];\r\n                markLine.data[i][0].y = mlData[0].y != null ? mlData[0].y : pos[0][1];\r\n                markLine.data[i][1].x = mlData[1].x != null ? mlData[1].x : pos[1][0];\r\n                markLine.data[i][1].y = mlData[1].y != null ? mlData[1].y : pos[1][1];\r\n            }\r\n            \r\n            var shapeList = this._markLine(seriesIndex, markLine);\r\n\r\n            var isLarge = markLine.large;\r\n\r\n            if (isLarge) {\r\n                var shapeBundle = new ShapeBundle({\r\n                    style: {\r\n                        shapeList: shapeList\r\n                    }\r\n                });\r\n                var firstShape = shapeList[0];\r\n                if (firstShape) {\r\n                    zrUtil.merge(shapeBundle.style, firstShape.style);\r\n                    zrUtil.merge(shapeBundle.highlightStyle = {}, firstShape.highlightStyle);\r\n                    shapeBundle.style.brushType = 'stroke';\r\n                    shapeBundle.zlevel = serie.zlevel;\r\n                    shapeBundle.z = serie.z + 1;\r\n                    shapeBundle.hoverable = false;\r\n                    for (var key in attachStyle) {\r\n                        shapeBundle[key] = zrUtil.clone(attachStyle[key]);\r\n                    }\r\n                }\r\n                this.shapeList.push(shapeBundle);\r\n                this.zr.addShape(shapeBundle);\r\n\r\n                shapeBundle._mark = 'largeLine';\r\n                var effect = markLine.effect;\r\n                if (effect.show) {\r\n                    shapeBundle.effect = effect;\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                    var tarShape = shapeList[i];\r\n                    tarShape.zlevel = serie.zlevel;\r\n                    tarShape.z = serie.z + 1;\r\n                    for (var key in attachStyle) {\r\n                        tarShape[key] = zrUtil.clone(attachStyle[key]);\r\n                    }\r\n                    this.shapeList.push(tarShape);\r\n                }\r\n                // 个别特殊图表需要自己addShape\r\n                if (this.type === ecConfig.CHART_TYPE_FORCE\r\n                    || this.type === ecConfig.CHART_TYPE_CHORD\r\n                ) {\r\n                    for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                        this.zr.addShape(shapeList[i]);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标注多级控制构造\r\n         */\r\n        _markPoint: function (seriesIndex, mpOption) {\r\n            var serie = this.series[seriesIndex];\r\n            var component = this.component;\r\n            zrUtil.merge(\r\n                zrUtil.merge(\r\n                    mpOption,\r\n                    zrUtil.clone(this.ecTheme.markPoint || {})\r\n                ),\r\n                zrUtil.clone(ecConfig.markPoint)\r\n            );\r\n\r\n            mpOption.name = serie.name;\r\n                   \r\n            var pList = [];\r\n            var data = mpOption.data;\r\n            var itemShape;\r\n            \r\n            var dataRange = component.dataRange;\r\n            var legend = component.legend;\r\n            var color;\r\n            var value;\r\n            var queryTarget;\r\n            var nColor;\r\n            var eColor;\r\n            var effect;\r\n            var zrWidth = this.zr.getWidth();\r\n            var zrHeight = this.zr.getHeight();\r\n\r\n            if (!mpOption.large) {\r\n                for (var i = 0, l = data.length; i < l; i++) {\r\n                    if (data[i].x == null || data[i].y == null) {\r\n                        continue;\r\n                    }\r\n                    value = data[i].value != null ? data[i].value : '';\r\n                    // 图例\r\n                    if (legend) {\r\n                        color = legend.getColor(serie.name);\r\n                    }\r\n                    // 值域\r\n                    if (dataRange) {\r\n                        color = isNaN(value) ? color : dataRange.getColor(value);\r\n                        \r\n                        queryTarget = [data[i], mpOption];\r\n                        nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\r\n                                 || color;\r\n                        eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\r\n                                 || nColor;\r\n                        // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\r\n                        if (nColor == null && eColor == null) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    \r\n                    color = color == null ? this.zr.getColor(seriesIndex) : color;\r\n                    \r\n                    // 标准化一些参数\r\n                    data[i].tooltip = data[i].tooltip\r\n                                      || mpOption.tooltip\r\n                                      || {trigger:'item'}; // tooltip.trigger指定为item\r\n                    data[i].name = data[i].name != null ? data[i].name : '';\r\n                    data[i].value = value;\r\n\r\n                    // 复用getSymbolShape\r\n                    itemShape = this.getSymbolShape(\r\n                        mpOption, seriesIndex,      // 系列 \r\n                        data[i], i, data[i].name,   // 数据\r\n                        this.parsePercent(data[i].x, zrWidth),   // 坐标\r\n                        this.parsePercent(data[i].y, zrHeight),  // 坐标\r\n                        'pin', color,               // 默认symbol和color\r\n                        'rgba(0,0,0,0)',\r\n                        'horizontal'                // 走向，用于默认文字定位\r\n                    );\r\n                    itemShape._mark = 'point';\r\n                    \r\n                    effect = this.deepMerge(\r\n                        [data[i], mpOption],\r\n                        'effect'\r\n                    );\r\n                    if (effect.show) {\r\n                        itemShape.effect = effect;\r\n                    }\r\n                    \r\n                    if (serie.type === ecConfig.CHART_TYPE_MAP) {\r\n                        itemShape._geo = this.getMarkGeo(data[i]);\r\n                    }\r\n                    \r\n                    // 重新pack一下数据\r\n                    ecData.pack(\r\n                        itemShape,\r\n                        serie, seriesIndex,\r\n                        data[i], i,\r\n                        data[i].name,\r\n                        value\r\n                    );\r\n                    pList.push(itemShape);\r\n                }\r\n            }\r\n            else {\r\n                // 大规模MarkPoint\r\n                itemShape = this.getLargeMarkPointShape(seriesIndex, mpOption);\r\n                itemShape._mark = 'largePoint';\r\n                itemShape && pList.push(itemShape);\r\n            }\r\n            return pList;\r\n        },\r\n        \r\n        /**\r\n         * 标线多级控制构造\r\n         */\r\n        _markLine: (function () {\r\n            function normalizeOptionValue(mlOption, key) {\r\n                mlOption[key] = mlOption[key] instanceof Array\r\n                          ? mlOption[key].length > 1 \r\n                            ? mlOption[key] \r\n                            : [mlOption[key][0], mlOption[key][0]]\r\n                          : [mlOption[key], mlOption[key]];\r\n            }\r\n\r\n            return function (seriesIndex, mlOption) {\r\n                var serie = this.series[seriesIndex];\r\n                var component = this.component;\r\n                var dataRange = component.dataRange;\r\n                var legend = component.legend;\r\n\r\n                zrUtil.merge(\r\n                    zrUtil.merge(\r\n                        mlOption,\r\n                        zrUtil.clone(this.ecTheme.markLine || {})\r\n                    ),\r\n                    zrUtil.clone(ecConfig.markLine)\r\n                );\r\n\r\n                var defaultColor = legend ? legend.getColor(serie.name)\r\n                    : this.zr.getColor(seriesIndex);\r\n\r\n                // 标准化一些同时支持Array和String的参数\r\n                normalizeOptionValue(mlOption, 'symbol');\r\n                normalizeOptionValue(mlOption, 'symbolSize');\r\n                normalizeOptionValue(mlOption, 'symbolRotate');\r\n\r\n                // Normalize and filter data\r\n                var data = mlOption.data;\r\n                var edges = [];\r\n                var zrWidth = this.zr.getWidth();\r\n                var zrHeight = this.zr.getHeight();\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var mlData = data[i];\r\n                    if (isCoordAvailable(mlData[0])\r\n                        && isCoordAvailable(mlData[1])\r\n                    ) {\r\n                        // 组装一个mergeData\r\n                        var mergeData = this.deepMerge(mlData);\r\n                        var queryTarget = [mergeData, mlOption];\r\n                        var color = defaultColor;\r\n                        var value = mergeData.value != null ? mergeData.value : '';\r\n                        // 值域\r\n                        if (dataRange) {\r\n                            color = isNaN(value) ? color : dataRange.getColor(value);\r\n\r\n                            var nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\r\n                                     || color;\r\n                            var eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\r\n                                     || nColor;\r\n                            // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\r\n                            if (nColor == null && eColor == null) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        // 标准化一些参数\r\n                        mlData[0].tooltip = mergeData.tooltip\r\n                                            || mlOption.tooltip\r\n                                            || {trigger:'item'}; // tooltip.trigger指定为item\r\n                        mlData[0].name = mlData[0].name || '';\r\n                        mlData[1].name = mlData[1].name || '';\r\n                        mlData[0].value = value;\r\n\r\n                        edges.push({\r\n                            points: [\r\n                                [this.parsePercent(mlData[0].x, zrWidth),\r\n                                this.parsePercent(mlData[0].y, zrHeight)],\r\n                                [this.parsePercent(mlData[1].x, zrWidth),\r\n                                this.parsePercent(mlData[1].y, zrHeight)]\r\n                            ],\r\n                            rawData: mlData,\r\n                            color: color\r\n                        });\r\n                    }\r\n                }\r\n\r\n                var enableBundling = this.query(mlOption, 'bundling.enable');\r\n                if (enableBundling) {\r\n                    var edgeBundling = new EdgeBundling();\r\n                    edgeBundling.maxTurningAngle = this.query(\r\n                        mlOption, 'bundling.maxTurningAngle'\r\n                    ) / 180 * Math.PI;\r\n                    edges = edgeBundling.run(edges);\r\n                }\r\n\r\n                mlOption.name = serie.name;\r\n  \r\n                var shapeList = [];\r\n\r\n                for (var i = 0, l = edges.length; i < l; i++) {\r\n                    var edge = edges[i];\r\n                    var rawEdge = edge.rawEdge || edge; \r\n                    var mlData = rawEdge.rawData;\r\n                    var value = mlData.value != null ? mlData.value : '';\r\n\r\n                    var itemShape = this.getMarkLineShape(\r\n                        mlOption,\r\n                        seriesIndex,\r\n                        mlData,\r\n                        i,\r\n                        edge.points,\r\n                        enableBundling,\r\n                        rawEdge.color\r\n                    );\r\n                    itemShape._mark = 'line';\r\n                    \r\n                    var effect = this.deepMerge(\r\n                        [mlData[0], mlData[1], mlOption],\r\n                        'effect'\r\n                    );\r\n                    if (effect.show) {\r\n                        itemShape.effect = effect;\r\n                        itemShape.effect.large = mlOption.large;\r\n                    }\r\n                    \r\n                    if (serie.type === ecConfig.CHART_TYPE_MAP) {\r\n                        itemShape._geo = [\r\n                            this.getMarkGeo(mlData[0]),\r\n                            this.getMarkGeo(mlData[1])\r\n                        ];\r\n                    }\r\n                    \r\n                    // 重新pack一下数据\r\n                    ecData.pack(\r\n                        itemShape,\r\n                        serie, seriesIndex,\r\n                        mlData[0], i,\r\n                        mlData[0].name \r\n                            // 不要帮我代码规范\r\n                            + (mlData[1].name !== '' ? (' > ' + mlData[1].name) : ''),\r\n                        value\r\n                    );\r\n                    shapeList.push(itemShape);\r\n                }\r\n\r\n                return shapeList;\r\n            };\r\n        })(),\r\n        \r\n        getMarkCoord: function () {\r\n            // 无转换位置\r\n            return [0, 0];\r\n        },\r\n        \r\n        /**\r\n         * symbol构造器 \r\n         */\r\n        getSymbolShape: function (\r\n            serie, seriesIndex,     // 系列 \r\n            data, dataIndex, name,  // 数据\r\n            x, y,                   // 坐标\r\n            symbol, color,          // 默认symbol和color，来自legend或dataRange全局分配\r\n            emptyColor,             // 折线的emptySymbol用白色填充\r\n            orient                  // 走向，用于默认文字定位\r\n        ) {\r\n            var queryTarget = [data, serie];\r\n            var value = this.getDataFromOption(data, '-');\r\n            \r\n            symbol = this.deepQuery(queryTarget, 'symbol') || symbol;\r\n            var symbolSize = this.deepQuery(queryTarget, 'symbolSize');\r\n            symbolSize = typeof symbolSize === 'function'\r\n                         ? symbolSize(value)\r\n                         : symbolSize;\r\n            if (typeof symbolSize === 'number') {\r\n                symbolSize = [symbolSize, symbolSize];\r\n            }\r\n            var symbolRotate = this.deepQuery(queryTarget, 'symbolRotate');\r\n            \r\n            var normal = this.deepMerge(\r\n                queryTarget,\r\n                'itemStyle.normal'\r\n            );\r\n            var emphasis = this.deepMerge(\r\n                queryTarget,\r\n                'itemStyle.emphasis'\r\n            );\r\n            var nBorderWidth = normal.borderWidth != null\r\n                               ? normal.borderWidth\r\n                               : (normal.lineStyle && normal.lineStyle.width);\r\n            if (nBorderWidth == null) {\r\n                nBorderWidth = symbol.match('empty') ? 2 : 0;\r\n            }\r\n            var eBorderWidth = emphasis.borderWidth != null\r\n                               ? emphasis.borderWidth\r\n                               : (emphasis.lineStyle && emphasis.lineStyle.width);\r\n            if (eBorderWidth == null) {\r\n                eBorderWidth = nBorderWidth + 2;\r\n            }\r\n\r\n            var nColor = this.getItemStyleColor(normal.color, seriesIndex, dataIndex, data);\r\n            var eColor = this.getItemStyleColor(emphasis.color, seriesIndex, dataIndex, data);\r\n            \r\n            var width = symbolSize[0];\r\n            var height = symbolSize[1];\r\n            var itemShape = new IconShape({\r\n                style: {\r\n                    iconType: symbol.replace('empty', '').toLowerCase(),\r\n                    x: x - width,\r\n                    y: y - height,\r\n                    width: width * 2,\r\n                    height: height * 2,\r\n                    brushType: 'both',\r\n                    color: symbol.match('empty') \r\n                           ? emptyColor \r\n                           : (nColor || color),\r\n                    strokeColor: normal.borderColor || nColor || color,\r\n                    lineWidth: nBorderWidth\r\n                },\r\n                highlightStyle: {\r\n                    color: symbol.match('empty') \r\n                           ? emptyColor \r\n                           : (eColor || nColor || color),\r\n                    strokeColor: emphasis.borderColor \r\n                                 || normal.borderColor\r\n                                 || eColor\r\n                                 || nColor\r\n                                 || color,\r\n                    lineWidth: eBorderWidth\r\n                },\r\n                clickable: this.deepQuery(queryTarget, 'clickable')\r\n            });\r\n\r\n            if (symbol.match('image')) {\r\n                itemShape.style.image = symbol.replace(new RegExp('^image:\\\\/\\\\/'), '');\r\n                itemShape = new ImageShape({\r\n                    style: itemShape.style,\r\n                    highlightStyle: itemShape.highlightStyle,\r\n                    clickable: this.deepQuery(queryTarget, 'clickable')\r\n                });\r\n            }\r\n            \r\n            if (symbolRotate != null) {\r\n                itemShape.rotation = [\r\n                    symbolRotate * Math.PI / 180, x, y\r\n                ];\r\n            }\r\n            \r\n            if (symbol.match('star')) {\r\n                itemShape.style.iconType = 'star';\r\n                itemShape.style.n = \r\n                    (symbol.replace('empty', '').replace('star','') - 0) || 5;\r\n            }\r\n            \r\n            if (symbol === 'none') {\r\n                itemShape.invisible = true;\r\n                itemShape.hoverable = false;\r\n            }\r\n            \r\n            /*\r\n            if (this.deepQuery([data, serie, option], 'calculable')) {\r\n                this.setCalculable(itemShape);\r\n                itemShape.draggable = true;\r\n            }\r\n            */\r\n\r\n            itemShape = this.addLabel(\r\n                itemShape, \r\n                serie, data, name, \r\n                orient\r\n            );\r\n            \r\n            if (symbol.match('empty')) {\r\n                if (itemShape.style.textColor == null) {\r\n                    itemShape.style.textColor = itemShape.style.strokeColor;\r\n                }\r\n                if (itemShape.highlightStyle.textColor == null) {\r\n                    itemShape.highlightStyle.textColor = \r\n                        itemShape.highlightStyle.strokeColor;\r\n                }\r\n            }\r\n            \r\n            ecData.pack(\r\n                itemShape,\r\n                serie, seriesIndex,\r\n                data, dataIndex,\r\n                name\r\n            );\r\n\r\n            itemShape._x = x;\r\n            itemShape._y = y;\r\n            \r\n            itemShape._dataIndex = dataIndex;\r\n            itemShape._seriesIndex = seriesIndex;\r\n\r\n            return itemShape;\r\n        },\r\n        \r\n        /**\r\n         * 标线构造器 \r\n         */\r\n        getMarkLineShape: function (\r\n            mlOption,               // 系列 \r\n            seriesIndex,            // 系列索引\r\n            data,                   // 数据\r\n            dataIndex,              // 数据索引\r\n            points,                 // 坐标点\r\n            bundling,               // 是否边捆绑过\r\n            color                   // 默认color，来自legend或dataRange全局分配\r\n        ) {\r\n            var value0 = data[0].value != null ? data[0].value : '-';\r\n            var value1 = data[1].value != null ? data[1].value : '-';\r\n            var symbol = [\r\n                data[0].symbol || mlOption.symbol[0],\r\n                data[1].symbol || mlOption.symbol[1]\r\n            ];\r\n            var symbolSize = [\r\n                data[0].symbolSize || mlOption.symbolSize[0],\r\n                data[1].symbolSize || mlOption.symbolSize[1]\r\n            ];\r\n            symbolSize[0] = typeof symbolSize[0] === 'function'\r\n                            ? symbolSize[0](value0)\r\n                            : symbolSize[0];\r\n            symbolSize[1] = typeof symbolSize[1] === 'function'\r\n                            ? symbolSize[1](value1)\r\n                            : symbolSize[1];\r\n            var symbolRotate = [\r\n                this.query(data[0], 'symbolRotate') || mlOption.symbolRotate[0],\r\n                this.query(data[1], 'symbolRotate') || mlOption.symbolRotate[1]\r\n            ];\r\n            //console.log(symbol, symbolSize, symbolRotate);\r\n\r\n            var queryTarget = [data[0], data[1], mlOption];\r\n            var normal = this.deepMerge(\r\n                queryTarget,\r\n                'itemStyle.normal'\r\n            );\r\n            normal.color = this.getItemStyleColor(normal.color, seriesIndex, dataIndex, data);\r\n            var emphasis = this.deepMerge(\r\n                queryTarget,\r\n                'itemStyle.emphasis'\r\n            );\r\n            emphasis.color = this.getItemStyleColor(emphasis.color, seriesIndex, dataIndex, data);\r\n            \r\n            var nlineStyle = normal.lineStyle;\r\n            var elineStyle = emphasis.lineStyle;\r\n            \r\n            var nBorderWidth = nlineStyle.width;\r\n            if (nBorderWidth == null) {\r\n                nBorderWidth = normal.borderWidth;\r\n            }\r\n            var eBorderWidth = elineStyle.width;\r\n            if (eBorderWidth == null) {\r\n                eBorderWidth = emphasis.borderWidth != null \r\n                               ? emphasis.borderWidth\r\n                               : (nBorderWidth + 2);\r\n            }\r\n            var smoothness = this.deepQuery(queryTarget, 'smoothness');\r\n            if (! this.deepQuery(queryTarget, 'smooth')) {\r\n                smoothness = 0;\r\n            }\r\n\r\n            var ShapeCtor = bundling ? PolylineShape : MarkLineShape;\r\n            var itemShape = new ShapeCtor({\r\n                style: {\r\n                    symbol: symbol,\r\n                    symbolSize: symbolSize,\r\n                    symbolRotate: symbolRotate,\r\n                    // data: [data[0].name,data[1].name],\r\n                    brushType: 'both',\r\n                    lineType: nlineStyle.type,\r\n                    shadowColor: nlineStyle.shadowColor\r\n                                 || nlineStyle.color\r\n                                 || normal.borderColor\r\n                                 || normal.color\r\n                                 || color,\r\n                    shadowBlur: nlineStyle.shadowBlur,\r\n                    shadowOffsetX: nlineStyle.shadowOffsetX,\r\n                    shadowOffsetY: nlineStyle.shadowOffsetY,\r\n                    color: normal.color || color,\r\n                    strokeColor: nlineStyle.color\r\n                                 || normal.borderColor\r\n                                 || normal.color\r\n                                 || color,\r\n                    lineWidth: nBorderWidth,\r\n                    symbolBorderColor: normal.borderColor\r\n                                       || normal.color\r\n                                       || color,\r\n                    symbolBorder: normal.borderWidth\r\n                },\r\n                highlightStyle: {\r\n                    shadowColor: elineStyle.shadowColor,\r\n                    shadowBlur: elineStyle.shadowBlur,\r\n                    shadowOffsetX: elineStyle.shadowOffsetX,\r\n                    shadowOffsetY: elineStyle.shadowOffsetY,\r\n                    color: emphasis.color|| normal.color || color,\r\n                    strokeColor: elineStyle.color\r\n                                 || nlineStyle.color\r\n                                 || emphasis.borderColor \r\n                                 || normal.borderColor\r\n                                 || emphasis.color \r\n                                 || normal.color\r\n                                 || color,\r\n                    lineWidth: eBorderWidth,\r\n                    symbolBorderColor: emphasis.borderColor\r\n                                       || normal.borderColor\r\n                                       || emphasis.color\r\n                                       || normal.color\r\n                                       || color,\r\n                    symbolBorder: emphasis.borderWidth == null\r\n                                  ? (normal.borderWidth + 2)\r\n                                  : (emphasis.borderWidth)\r\n                },\r\n                clickable: this.deepQuery(queryTarget, 'clickable')\r\n            });\r\n            var shapeStyle = itemShape.style;\r\n            if (bundling) {\r\n                shapeStyle.pointList = points;\r\n                shapeStyle.smooth = smoothness;\r\n            }\r\n            else {\r\n                shapeStyle.xStart = points[0][0];\r\n                shapeStyle.yStart = points[0][1];\r\n                shapeStyle.xEnd = points[1][0];\r\n                shapeStyle.yEnd = points[1][1];\r\n                shapeStyle.curveness = smoothness;\r\n                itemShape.updatePoints(itemShape.style);\r\n            }\r\n            \r\n            itemShape = this.addLabel(\r\n                itemShape, \r\n                mlOption, \r\n                data[0], \r\n                data[0].name + ' : ' + data[1].name\r\n            );\r\n\r\n            return itemShape;\r\n        },\r\n        \r\n        /**\r\n         * 大规模标注构造器 \r\n         */\r\n        getLargeMarkPointShape: function(seriesIndex, mpOption) {\r\n            var serie = this.series[seriesIndex];\r\n            var component = this.component;\r\n            var data = mpOption.data;\r\n            var itemShape;\r\n            \r\n            var dataRange = component.dataRange;\r\n            var legend = component.legend;\r\n            var color;\r\n            var value;\r\n            var queryTarget = [data[0], mpOption];\r\n            var nColor;\r\n            var eColor;\r\n            var effect;\r\n            \r\n            // 图例\r\n            if (legend) {\r\n                color = legend.getColor(serie.name);\r\n            }\r\n            // 值域\r\n            if (dataRange) {\r\n                value = data[0].value != null ? data[0].value : '';\r\n                color = isNaN(value) ? color : dataRange.getColor(value);\r\n                \r\n                nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\r\n                         || color;\r\n                eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\r\n                         || nColor;\r\n                // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\r\n                if (nColor == null && eColor == null) {\r\n                    return;\r\n                }\r\n            }\r\n            color = this.deepMerge(queryTarget, 'itemStyle.normal').color \r\n                    || color;\r\n            \r\n            var symbol = this.deepQuery(queryTarget, 'symbol') || 'circle';\r\n            symbol = symbol.replace('empty', '').replace(/\\d/g, '');\r\n            \r\n            effect = this.deepMerge(\r\n                [data[0], mpOption],\r\n                'effect'\r\n            );\r\n            \r\n            var devicePixelRatio = window.devicePixelRatio || 1;\r\n            \r\n            //console.log(data)\r\n            itemShape = new SymbolShape({\r\n                style: {\r\n                    pointList: data,\r\n                    color: color,\r\n                    strokeColor: color,\r\n                    shadowColor: effect.shadowColor || color,\r\n                    shadowBlur: (effect.shadowBlur != null ? effect.shadowBlur : 8)\r\n                                 * devicePixelRatio,\r\n                    size: this.deepQuery(queryTarget, 'symbolSize'),\r\n                    iconType: symbol,\r\n                    brushType: 'fill',\r\n                    lineWidth:1\r\n                },\r\n                draggable: false,\r\n                hoverable: false\r\n            });\r\n            \r\n            if (effect.show) {\r\n                itemShape.effect = effect;\r\n            }\r\n            \r\n            return itemShape;\r\n        },\r\n        \r\n        backupShapeList: function () {\r\n            if (this.shapeList && this.shapeList.length > 0) {\r\n                this.lastShapeList = this.shapeList;\r\n                this.shapeList = [];\r\n            }\r\n            else {\r\n                this.lastShapeList = [];\r\n            }\r\n        },\r\n        \r\n        addShapeList: function () {\r\n            var maxLenth = this.option.animationThreshold / (this.canvasSupported ? 2 : 4);\r\n            var lastShapeList = this.lastShapeList;\r\n            var shapeList = this.shapeList;\r\n            var isUpdate = lastShapeList.length > 0;\r\n            var duration = isUpdate\r\n                           ? this.query(this.option, 'animationDurationUpdate')\r\n                           : this.query(this.option, 'animationDuration');\r\n            var easing = this.query(this.option, 'animationEasing');\r\n            var delay;\r\n            var key;\r\n            var oldMap = {};\r\n            var newMap = {};\r\n            if (this.option.animation \r\n                && !this.option.renderAsImage \r\n                && shapeList.length < maxLenth\r\n                && !this.motionlessOnce\r\n            ) {\r\n                // 通过已有的shape做动画过渡\r\n                for (var i = 0, l = lastShapeList.length; i < l; i++) {\r\n                    key = this._getAnimationKey(lastShapeList[i]);\r\n                    if (key.match('undefined')) {\r\n                        this.zr.delShape(lastShapeList[i].id);  // 非关键元素直接删除\r\n                    }\r\n                    else {\r\n                        key += lastShapeList[i].type;\r\n                        // https://github.com/ecomfe/echarts/issues/1219#issuecomment-71987602\r\n                        // 响应中断可能产生的重复元素\r\n                        if (oldMap[key]) {\r\n                            this.zr.delShape(lastShapeList[i].id);\r\n                        }\r\n                        else {\r\n                            oldMap[key] = lastShapeList[i];\r\n                        }\r\n                    }\r\n                }\r\n                for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                    key = this._getAnimationKey(shapeList[i]);\r\n                    if (key.match('undefined')) {\r\n                        this.zr.addShape(shapeList[i]);         // 非关键元素直接添加\r\n                    }\r\n                    else {\r\n                        key += shapeList[i].type;\r\n                        newMap[key] = shapeList[i];\r\n                    }\r\n                }\r\n                \r\n                for (key in oldMap) {\r\n                    if (!newMap[key]) {\r\n                        // 新的没有 删除\r\n                        this.zr.delShape(oldMap[key].id);\r\n                    }\r\n                }\r\n                for (key in newMap) {\r\n                    if (oldMap[key]) {\r\n                        // 新旧都有 动画过渡\r\n                        this.zr.delShape(oldMap[key].id);\r\n                        this._animateMod(\r\n                            oldMap[key], newMap[key], duration, easing, 0, isUpdate\r\n                        );\r\n                    }\r\n                    else {\r\n                        // 新有旧没有  添加并动画过渡\r\n                        //this._animateAdd(newMap[key], duration, easing);\r\n                        delay = (this.type == ecConfig.CHART_TYPE_LINE\r\n                                || this.type == ecConfig.CHART_TYPE_RADAR)\r\n                                && key.indexOf('icon') !== 0\r\n                                ? duration / 2\r\n                                : 0;\r\n                        this._animateMod(\r\n                            false, newMap[key], duration, easing, delay, isUpdate\r\n                        );\r\n                    }\r\n                }\r\n                this.zr.refresh();\r\n                this.animationEffect();\r\n            }\r\n            else {\r\n                this.motionlessOnce = false;\r\n                // clear old\r\n                this.zr.delShape(lastShapeList);\r\n                // 直接添加\r\n                for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(shapeList[i]);\r\n                }\r\n            }\r\n        },\r\n        \r\n        _getAnimationKey: function(shape) {\r\n            if (this.type != ecConfig.CHART_TYPE_MAP\r\n                && this.type != ecConfig.CHART_TYPE_TREEMAP\r\n                && this.type != ecConfig.CHART_TYPE_VENN\r\n                && this.type != ecConfig.CHART_TYPE_TREE\r\n                ) {\r\n                return ecData.get(shape, 'seriesIndex') + '_'\r\n                       + ecData.get(shape, 'dataIndex')\r\n                       + (shape._mark ? shape._mark : '')\r\n                       + (this.type === ecConfig.CHART_TYPE_RADAR \r\n                          ? ecData.get(shape, 'special') : '');\r\n            }\r\n            else {\r\n                return ecData.get(shape, 'seriesIndex') + '_'\r\n                       + ecData.get(shape, 'dataIndex')\r\n                       + (shape._mark ? shape._mark : 'undefined');\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 动画过渡 \r\n         */\r\n        _animateMod: function (oldShape, newShape, duration, easing, delay, isUpdate) {\r\n            switch (newShape.type) {\r\n                case 'polyline' :\r\n                case 'half-smooth-polygon' :\r\n                    ecAnimation.pointList(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'rectangle' :\r\n                    ecAnimation.rectangle(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'image' :\r\n                case 'icon' :\r\n                    ecAnimation.icon(this.zr, oldShape, newShape, duration, easing, delay);\r\n                    break;\r\n                case 'candle' :\r\n                    if (!isUpdate) {\r\n                        ecAnimation.candle(this.zr, oldShape, newShape, duration, easing);\r\n                    }\r\n                    else {\r\n                        this.zr.addShape(newShape);\r\n                    }\r\n                    break;\r\n                case 'ring' :\r\n                case 'sector' :\r\n                case 'circle' :\r\n                    if (!isUpdate) {\r\n                        // 进入动画，加旋转\r\n                        ecAnimation.ring(\r\n                            this.zr,\r\n                            oldShape,\r\n                            newShape, \r\n                            duration + ((ecData.get(newShape, 'dataIndex') || 0) % 20 * 100), \r\n                            easing\r\n                        );\r\n                    }\r\n                    else if (newShape.type === 'sector') {\r\n                        ecAnimation.sector(this.zr, oldShape, newShape, duration, easing);\r\n                    }\r\n                    else {\r\n                        this.zr.addShape(newShape);\r\n                    }\r\n                    break;\r\n                case 'text' :\r\n                    ecAnimation.text(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'polygon' :\r\n                    if (!isUpdate) {\r\n                        ecAnimation.polygon(this.zr, oldShape, newShape, duration, easing);\r\n                    }\r\n                    else {\r\n                        ecAnimation.pointList(this.zr, oldShape, newShape, duration, easing);\r\n                    }\r\n                    break;\r\n                case 'ribbon' :\r\n                    ecAnimation.ribbon(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'gauge-pointer' :\r\n                    ecAnimation.gaugePointer(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'mark-line' :\r\n                    ecAnimation.markline(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'bezier-curve' :\r\n                case 'line' :\r\n                    ecAnimation.line(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                default :\r\n                    this.zr.addShape(newShape);\r\n                    break;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标注动画\r\n         * @param {number} duration 时长\r\n         * @param {string=} easing 缓动效果\r\n         * @param {Array=} shapeList 指定特效对象，不指定默认使用this.shapeList\r\n         */\r\n        animationMark: function (duration , easing, shapeList) {\r\n            var shapeList = shapeList || this.shapeList;\r\n            for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                if (!shapeList[i]._mark) {\r\n                    continue;\r\n                }\r\n                this._animateMod(false, shapeList[i], duration, easing, 0, true);\r\n            }\r\n            this.animationEffect(shapeList);\r\n        },\r\n\r\n        /**\r\n         * 特效动画\r\n         * @param {Array=} shapeList 指定特效对象，不知道默认使用this.shapeList\r\n         */\r\n        animationEffect: function (shapeList) {\r\n            !shapeList && this.clearEffectShape();\r\n            shapeList = shapeList || this.shapeList;\r\n            if (shapeList == null) {\r\n                return;\r\n            }\r\n            var zlevel = ecConfig.EFFECT_ZLEVEL;\r\n            if (this.canvasSupported) {\r\n                this.zr.modLayer(\r\n                    zlevel,\r\n                    {\r\n                        motionBlur: true,\r\n                        lastFrameAlpha: this.option.effectBlendAlpha\r\n                            || ecConfig.effectBlendAlpha\r\n                    }\r\n                );\r\n            }\r\n            var shape;\r\n            for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                shape = shapeList[i];\r\n                if (!(shape._mark && shape.effect && shape.effect.show && ecEffect[shape._mark])) {\r\n                    continue;\r\n                }\r\n                ecEffect[shape._mark](this.zr, this.effectList, shape, zlevel);\r\n                this.effectList[this.effectList.length - 1]._mark = shape._mark;\r\n            }\r\n        },\r\n        \r\n        clearEffectShape: function (clearMotionBlur) {\r\n            var effectList = this.effectList;\r\n            if (this.zr && effectList && effectList.length > 0) {\r\n                clearMotionBlur && this.zr.modLayer(\r\n                    ecConfig.EFFECT_ZLEVEL, \r\n                    { motionBlur: false }\r\n                );\r\n                this.zr.delShape(effectList);\r\n\r\n                // 手动清除不会被 zr 自动清除的动画控制器\r\n                for (var i = 0; i < effectList.length; i++) {\r\n                    if (effectList[i].effectAnimator) {\r\n                        effectList[i].effectAnimator.stop();\r\n                    }\r\n                }\r\n            }\r\n            this.effectList = [];\r\n        },\r\n        \r\n        /**\r\n         * 动态标线标注添加\r\n         * @param {number} seriesIndex 系列索引\r\n         * @param {Object} markData 标线标注对象，支持多个\r\n         * @param {string} markType 标线标注类型\r\n         */\r\n        addMark: function (seriesIndex, markData, markType) {\r\n            var serie = this.series[seriesIndex];\r\n            if (this.selectedMap[serie.name]) {\r\n                var duration = this.query(this.option, 'animationDurationUpdate');\r\n                var easing = this.query(this.option, 'animationEasing');\r\n                // 备份，复用_buildMarkX\r\n                var oriMarkData = serie[markType].data;\r\n                var lastLength = this.shapeList.length;\r\n                \r\n                serie[markType].data = markData.data;\r\n                this['_build' + markType.replace('m', 'M')](seriesIndex);\r\n                if (this.option.animation && !this.option.renderAsImage) {\r\n                    // animationMark就会addShape\r\n                    this.animationMark(duration, easing, this.shapeList.slice(lastLength));\r\n                }\r\n                else {\r\n                    for (var i = lastLength, l = this.shapeList.length; i < l; i++) {\r\n                        this.zr.addShape(this.shapeList[i]);\r\n                    }\r\n                    this.zr.refreshNextFrame();\r\n                }\r\n                // 还原，复用_buildMarkX\r\n                serie[markType].data = oriMarkData;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 动态标线标注删除\r\n         * @param {number} seriesIndex 系列索引\r\n         * @param {string} markName 标线标注名称\r\n         * @param {string} markType 标线标注类型\r\n         */\r\n        delMark: function (seriesIndex, markName, markType) {\r\n            markType = markType.replace('mark', '').replace('large', '').toLowerCase();\r\n            var serie = this.series[seriesIndex];\r\n            if (this.selectedMap[serie.name]) {\r\n                var needRefresh = false;\r\n                var shapeList = [this.shapeList, this.effectList];\r\n                var len = 2;\r\n                while(len--) {\r\n                    for (var i = 0, l = shapeList[len].length; i < l; i++) {\r\n                        if (shapeList[len][i]._mark == markType\r\n                            && ecData.get(shapeList[len][i], 'seriesIndex') == seriesIndex\r\n                            && ecData.get(shapeList[len][i], 'name') == markName\r\n                        ) {\r\n                            this.zr.delShape(shapeList[len][i].id);\r\n                            shapeList[len].splice(i, 1);\r\n                            needRefresh = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                needRefresh && this.zr.refreshNextFrame();\r\n            }\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Base, ComponentBase);\r\n\r\n    return Base;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender: 数学辅助类\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * sin：正弦函数\r\n * cos：余弦函数\r\n * degreeToRadian：角度转弧度\r\n * radianToDegree：弧度转角度\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n\r\n        var _radians = Math.PI / 180;\r\n\r\n        /**\r\n         * @param {number} angle 弧度（角度）参数\r\n         * @param {boolean} isDegrees angle参数是否为角度计算，默认为false，angle为以弧度计量的角度\r\n         */\r\n        function sin(angle, isDegrees) {\r\n            return Math.sin(isDegrees ? angle * _radians : angle);\r\n        }\r\n\r\n        /**\r\n         * @param {number} angle 弧度（角度）参数\r\n         * @param {boolean} isDegrees angle参数是否为角度计算，默认为false，angle为以弧度计量的角度\r\n         */\r\n        function cos(angle, isDegrees) {\r\n            return Math.cos(isDegrees ? angle * _radians : angle);\r\n        }\r\n\r\n        /**\r\n         * 角度转弧度\r\n         * @param {Object} angle\r\n         */\r\n        function degreeToRadian(angle) {\r\n            return angle * _radians;\r\n        }\r\n\r\n        /**\r\n         * 弧度转角度\r\n         * @param {Object} angle\r\n         */\r\n        function radianToDegree(angle) {\r\n            return angle / _radians;\r\n        }\r\n\r\n        return {\r\n            sin : sin,\r\n            cos : cos,\r\n            degreeToRadian : degreeToRadian,\r\n            radianToDegree : radianToDegree\r\n        };\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\r\n * 可以用于 isInsidePath 判断以及获取boundingRect\r\n * \r\n * @module zrender/shape/tool/PathProxy\r\n * @author pissang (http://www.github.com/pissang)\r\n * \r\n * @example\r\n *     var SomeShape = function() {\r\n *         this._pathProxy = new PathProxy();\r\n *         ...\r\n *     }\r\n *     SomeShape.prototype.buildPath = function(ctx, style) {\r\n *         this._pathProxy.begin(ctx);\r\n *             .moveTo(style.x, style.y);\r\n *             .lineTo(style.x1, style.y1);\r\n *         ...\r\n *             .closePath();\r\n *     },\r\n *     SomeShape.prototype.getRect = function(style) {\r\n *         if (!style._rect) {\r\n *             // 这里必须要在 buildPath 之后才能调用\r\n *             style._rect = this._pathProxy.fastBoundingRect();\r\n *         }\r\n *         return this.style._rect;\r\n *     },\r\n *     SomeShape.prototype.isCover = function(x, y) {\r\n *         var rect = this.getRect(this.style);\r\n *         if (x >= rect.x\r\n *             && x <= (rect.x + rect.width)\r\n *             && y >= rect.y\r\n *             && y <= (rect.y + rect.height)\r\n *         ) {\r\n *             return area.isInsidePath(\r\n *                 this._pathProxy.pathCommands, 0, 'fill', x, y\r\n *             );\r\n *         }\r\n *     }\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    \r\n    var vector = __webpack_require__(5);\r\n    // var computeBoundingBox = require('../../tool/computeBoundingBox');\r\n\r\n    var PathSegment = function(command, points) {\r\n        this.command = command;\r\n        this.points = points || null;\r\n    };\r\n\r\n    /**\r\n     * @alias module:zrender/shape/tool/PathProxy\r\n     * @constructor\r\n     */\r\n    var PathProxy = function () {\r\n\r\n        /**\r\n         * Path描述的数组，用于`isInsidePath`的判断\r\n         * @type {Array.<Object>}\r\n         */\r\n        this.pathCommands = [];\r\n\r\n        this._ctx = null;\r\n\r\n        this._min = [];\r\n        this._max = [];\r\n    };\r\n\r\n    /**\r\n     * 快速计算Path包围盒（并不是最小包围盒）\r\n     * @return {Object}\r\n     */\r\n    PathProxy.prototype.fastBoundingRect = function () {\r\n        var min = this._min;\r\n        var max = this._max;\r\n        min[0] = min[1] = Infinity;\r\n        max[0] = max[1] = -Infinity;\r\n        for (var i = 0; i < this.pathCommands.length; i++) {\r\n            var seg = this.pathCommands[i];\r\n            var p = seg.points;\r\n            switch (seg.command) {\r\n                case 'M':\r\n                    vector.min(min, min, p);\r\n                    vector.max(max, max, p);\r\n                    break;\r\n                case 'L':\r\n                    vector.min(min, min, p);\r\n                    vector.max(max, max, p);\r\n                    break;\r\n                case 'C':\r\n                    for (var j = 0; j < 6; j += 2) {\r\n                        min[0] = Math.min(min[0], min[0], p[j]);\r\n                        min[1] = Math.min(min[1], min[1], p[j + 1]);\r\n                        max[0] = Math.max(max[0], max[0], p[j]);\r\n                        max[1] = Math.max(max[1], max[1], p[j + 1]);\r\n                    }\r\n                    break;\r\n                case 'Q':\r\n                    for (var j = 0; j < 4; j += 2) {\r\n                        min[0] = Math.min(min[0], min[0], p[j]);\r\n                        min[1] = Math.min(min[1], min[1], p[j + 1]);\r\n                        max[0] = Math.max(max[0], max[0], p[j]);\r\n                        max[1] = Math.max(max[1], max[1], p[j + 1]);\r\n                    }\r\n                    break;\r\n                case 'A':\r\n                    var cx = p[0];\r\n                    var cy = p[1];\r\n                    var rx = p[2];\r\n                    var ry = p[3];\r\n                    min[0] = Math.min(min[0], min[0], cx - rx);\r\n                    min[1] = Math.min(min[1], min[1], cy - ry);\r\n                    max[0] = Math.max(max[0], max[0], cx + rx);\r\n                    max[1] = Math.max(max[1], max[1], cy + ry);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            x: min[0],\r\n            y: min[1],\r\n            width: max[0] - min[0],\r\n            height: max[1] - min[1]\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @param  {CanvasRenderingContext2D} ctx\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.begin = function (ctx) {\r\n        this._ctx = ctx || null;\r\n        // 清空pathCommands\r\n        this.pathCommands.length = 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} x\r\n     * @param  {number} y\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.moveTo = function (x, y) {\r\n        this.pathCommands.push(new PathSegment('M', [x, y]));\r\n        if (this._ctx) {\r\n            this._ctx.moveTo(x, y);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} x\r\n     * @param  {number} y\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.lineTo = function (x, y) {\r\n        this.pathCommands.push(new PathSegment('L', [x, y]));\r\n        if (this._ctx) {\r\n            this._ctx.lineTo(x, y);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} x1\r\n     * @param  {number} y1\r\n     * @param  {number} x2\r\n     * @param  {number} y2\r\n     * @param  {number} x3\r\n     * @param  {number} y3\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\r\n        this.pathCommands.push(new PathSegment('C', [x1, y1, x2, y2, x3, y3]));\r\n        if (this._ctx) {\r\n            this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} x1\r\n     * @param  {number} y1\r\n     * @param  {number} x2\r\n     * @param  {number} y2\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\r\n        this.pathCommands.push(new PathSegment('Q', [x1, y1, x2, y2]));\r\n        if (this._ctx) {\r\n            this._ctx.quadraticCurveTo(x1, y1, x2, y2);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} cx\r\n     * @param  {number} cy\r\n     * @param  {number} r\r\n     * @param  {number} startAngle\r\n     * @param  {number} endAngle\r\n     * @param  {boolean} anticlockwise\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\r\n        this.pathCommands.push(new PathSegment(\r\n            'A', [cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1]\r\n        ));\r\n        if (this._ctx) {\r\n            this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    // TODO\r\n    PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\r\n        if (this._ctx) {\r\n            this._ctx.arcTo(x1, y1, x2, y2, radius);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    // TODO\r\n    PathProxy.prototype.rect = function (x, y, w, h) {\r\n        if (this._ctx) {\r\n            this._ctx.rect(x, y, w, h);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.closePath = function () {\r\n        this.pathCommands.push(new PathSegment('z'));\r\n        if (this._ctx) {\r\n            this._ctx.closePath();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 是否没有Path命令\r\n     * @return {boolean}\r\n     */\r\n    PathProxy.prototype.isEmpty = function() {\r\n        return this.pathCommands.length === 0;\r\n    };\r\n\r\n    PathProxy.PathSegment = PathSegment;\r\n\r\n    return PathProxy;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 水滴形状\r\n * @module zrender/shape/Droplet\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *   var Droplet = require('zrender/shape/Droplet');\r\n *   var shape = new Droplet({\r\n *       style: {\r\n *           x: 100,\r\n *           y: 100,\r\n *           a: 40,\r\n *           b: 40,\r\n *           brushType: 'both',\r\n *           color: 'blue',\r\n *           strokeColor: 'red',\r\n *           lineWidth: 3,\r\n *           text: 'Droplet'\r\n *       }    \r\n *   });\r\n *   zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IDropletStyle\r\n * @property {number} x 水滴中心x坐标\r\n * @property {number} y 水滴中心y坐标\r\n * @property {number} a 水滴横宽（中心到水平边缘最宽处距离）\r\n * @property {number} b 水滴纵高（中心到尖端距离）\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        'use strict';\r\n\r\n        var Base = __webpack_require__(1);\r\n        var PathProxy = __webpack_require__(35);\r\n        var area = __webpack_require__(2);\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Droplet\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Droplet = function(options) {\r\n            Base.call(this, options);\r\n            this._pathProxy = new PathProxy();\r\n            /**\r\n             * 水滴绘制样式\r\n             * @name module:zrender/shape/Droplet#style\r\n             * @type {module:zrender/shape/Droplet~IDropletStyle}\r\n             */\r\n            /**\r\n             * 水滴高亮绘制样式\r\n             * @name module:zrender/shape/Droplet#highlightStyle\r\n             * @type {module:zrender/shape/Droplet~IDropletStyle}\r\n             */\r\n        };\r\n\r\n        Droplet.prototype = {\r\n            type: 'droplet',\r\n\r\n            /**\r\n             * 创建水滴路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Droplet~IDropletStyle} style\r\n             */\r\n            buildPath : function(ctx, style) {\r\n                var path = this._pathProxy || new PathProxy();\r\n                path.begin(ctx);\r\n\r\n                path.moveTo(style.x, style.y + style.a);\r\n                path.bezierCurveTo(\r\n                    style.x + style.a,\r\n                    style.y + style.a,\r\n                    style.x + style.a * 3 / 2,\r\n                    style.y - style.a / 3,\r\n                    style.x,\r\n                    style.y - style.b\r\n                );\r\n                path.bezierCurveTo(\r\n                    style.x - style.a * 3 / 2,\r\n                    style.y - style.a / 3,\r\n                    style.x - style.a,\r\n                    style.y + style.a,\r\n                    style.x,\r\n                    style.y + style.a\r\n                );\r\n                path.closePath();\r\n            },\r\n\r\n            /**\r\n             * 计算返回水滴的包围盒矩形\r\n             * @param {module:zrender/shape/Droplet~IDropletStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                if (!this._pathProxy.isEmpty()) {\r\n                    this.buildPath(null, style);\r\n                }\r\n                return this._pathProxy.fastBoundingRect();\r\n            },\r\n\r\n            isCover: function (x, y) {\r\n                var originPos = this.transformCoordToLocal(x, y);\r\n                x = originPos[0];\r\n                y = originPos[1];\r\n                \r\n                if (this.isCoverRect(x, y)) {\r\n                    return area.isInsidePath(\r\n                        this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, x, y\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Droplet, Base);\r\n        return Droplet;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：大规模散点图图形\r\n * 可配图形属性：\r\n   {\r\n       // 基础属性\r\n       shape  : 'symbol',       // 必须，shape类标识，需要显式指定\r\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\r\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\r\n       invisible : {boolean},   // 默认为false，是否可见\r\n\r\n       // 样式属性，默认状态样式样式属性\r\n       style  : {\r\n           pointList     : {Array},   // 必须，二维数组，二维内容如下\r\n               x         : {number},  // 必须，横坐标\r\n               y         : {number},  // 必须，纵坐标数组\r\n               size      : {number},  // 必须，半宽\r\n               type      : {string=}, // 默认为'circle',图形类型\r\n       },\r\n\r\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\r\n       highlightStyle : {\r\n           // 同style\r\n       }\r\n\r\n       // 交互属性，详见shape.Base\r\n\r\n       // 事件属性，详见shape.Base\r\n   }\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(1);\r\n    var PolygonShape = __webpack_require__(22);\r\n    var polygonInstance = new PolygonShape({});\r\n    var zrUtil = __webpack_require__(0);\r\n\r\n    function Symbol(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Symbol.prototype =  {\r\n        type : 'symbol',\r\n        /**\r\n         * 创建矩形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            var pointList = style.pointList;\r\n            var len = pointList.length;\r\n            if (len === 0) {\r\n                return;\r\n            }\r\n\r\n            var subSize = 10000;\r\n            var subSetLength = Math.ceil(len / subSize);\r\n            var sub;\r\n            var subLen;\r\n            var isArray = pointList[0] instanceof Array;\r\n            var size = style.size ? style.size : 2;\r\n            var curSize = size;\r\n            var halfSize = size / 2;\r\n            var PI2 = Math.PI * 2;\r\n            var percent;\r\n            var x;\r\n            var y;\r\n            for (var j = 0; j < subSetLength; j++) {\r\n                ctx.beginPath();\r\n                sub = j * subSize;\r\n                subLen = sub + subSize;\r\n                subLen = subLen > len ? len : subLen;\r\n                for (var i = sub; i < subLen; i++) {\r\n                    if (style.random) {\r\n                        percent = style['randomMap' + (i % 20)] / 100;\r\n                        curSize = size * percent * percent;\r\n                        halfSize = curSize / 2;\r\n                    }\r\n                    if (isArray) {\r\n                        x = pointList[i][0];\r\n                        y = pointList[i][1];\r\n                    }\r\n                    else {\r\n                        x = pointList[i].x;\r\n                        y = pointList[i].y;\r\n                    }\r\n                    if (curSize < 3) {\r\n                        // 小于3像素视觉误差\r\n                        ctx.rect(x - halfSize, y - halfSize, curSize, curSize);\r\n                    }\r\n                    else {\r\n                        // 大于3像素才考虑图形\r\n                        switch (style.iconType) {\r\n                            case 'circle' :\r\n                                ctx.moveTo(x, y);\r\n                                ctx.arc(x, y, halfSize, 0, PI2, true);\r\n                                break;\r\n                            case 'diamond' :\r\n                                ctx.moveTo(x, y - halfSize);\r\n                                ctx.lineTo(x + halfSize / 3, y - halfSize / 3);\r\n                                ctx.lineTo(x + halfSize, y);\r\n                                ctx.lineTo(x + halfSize / 3, y + halfSize / 3);\r\n                                ctx.lineTo(x, y + halfSize);\r\n                                ctx.lineTo(x - halfSize / 3, y + halfSize / 3);\r\n                                ctx.lineTo(x - halfSize, y);\r\n                                ctx.lineTo(x - halfSize / 3, y - halfSize / 3);\r\n                                ctx.lineTo(x, y - halfSize);\r\n                                break;\r\n                            default :\r\n                                ctx.rect(x - halfSize, y - halfSize, curSize, curSize);\r\n                        }\r\n                    }\r\n                }\r\n                ctx.closePath();\r\n                if (j < (subSetLength - 1)) {\r\n                    switch (style.brushType) {\r\n                        case 'both':\r\n                            ctx.fill();\r\n                            style.lineWidth > 0 && ctx.stroke();  // js hint -_-\"\r\n                            break;\r\n                        case 'stroke':\r\n                            style.lineWidth > 0 && ctx.stroke();\r\n                            break;\r\n                        default:\r\n                            ctx.fill();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /* 像素模式\r\n        buildPath : function (ctx, style) {\r\n            var pointList = style.pointList;\r\n            var rect = this.getRect(style);\r\n            var ratio = window.devicePixelRatio || 1;\r\n            // console.log(rect)\r\n            // var ti = new Date();\r\n            // bbox取整\r\n            rect = {\r\n                x : Math.floor(rect.x),\r\n                y : Math.floor(rect.y),\r\n                width : Math.floor(rect.width),\r\n                height : Math.floor(rect.height)\r\n            };\r\n            var pixels = ctx.getImageData(\r\n                rect.x * ratio, rect.y * ratio,\r\n                rect.width * ratio, rect.height * ratio\r\n            );\r\n            var data = pixels.data;\r\n            var idx;\r\n            var zrColor = require('zrenderjs/tool/color');\r\n            var color = zrColor.toArray(style.color);\r\n            var r = color[0];\r\n            var g = color[1];\r\n            var b = color[2];\r\n            var width = rect.width;\r\n\r\n            for (var i = 1, l = pointList.length; i < l; i++) {\r\n                idx = ((Math.floor(pointList[i][0]) - rect.x) * ratio\r\n                       + (Math.floor(pointList[i][1])- rect.y) * width * ratio * ratio\r\n                      ) * 4;\r\n                data[idx] = r;\r\n                data[idx + 1] = g;\r\n                data[idx + 2] = b;\r\n                data[idx + 3] = 255;\r\n            }\r\n            ctx.putImageData(pixels, rect.x * ratio, rect.y * ratio);\r\n            // console.log(new Date() - ti);\r\n            return;\r\n        },\r\n        */\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            return style.__rect || polygonInstance.getRect(style);\r\n        },\r\n\r\n        isCover : __webpack_require__(28)\r\n    };\r\n\r\n    zrUtil.inherits(Symbol, Base);\r\n\r\n    return Symbol;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Catmull-Rom spline 插值折线\r\n * @module zrender/shape/util/smoothSpline\r\n * @author pissang (https://www.github.com/pissang) \r\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var vector = __webpack_require__(5);\r\n\r\n        /**\r\n         * @inner\r\n         */\r\n        function interpolate(p0, p1, p2, p3, t, t2, t3) {\r\n            var v0 = (p2 - p0) * 0.5;\r\n            var v1 = (p3 - p1) * 0.5;\r\n            return (2 * (p1 - p2) + v0 + v1) * t3 \r\n                    + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\r\n                    + v0 * t + p1;\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/shape/util/smoothSpline\r\n         * @param {Array} points 线段顶点数组\r\n         * @param {boolean} isLoop\r\n         * @param {Array} constraint \r\n         * @return {Array}\r\n         */\r\n        return function (points, isLoop, constraint) {\r\n            var len = points.length;\r\n            var ret = [];\r\n\r\n            var distance = 0;\r\n            for (var i = 1; i < len; i++) {\r\n                distance += vector.distance(points[i - 1], points[i]);\r\n            }\r\n            \r\n            var segs = distance / 5;\r\n            segs = segs < len ? len : segs;\r\n            for (var i = 0; i < segs; i++) {\r\n                var pos = i / (segs - 1) * (isLoop ? len : len - 1);\r\n                var idx = Math.floor(pos);\r\n\r\n                var w = pos - idx;\r\n\r\n                var p0;\r\n                var p1 = points[idx % len];\r\n                var p2;\r\n                var p3;\r\n                if (!isLoop) {\r\n                    p0 = points[idx === 0 ? idx : idx - 1];\r\n                    p2 = points[idx > len - 2 ? len - 1 : idx + 1];\r\n                    p3 = points[idx > len - 3 ? len - 1 : idx + 2];\r\n                }\r\n                else {\r\n                    p0 = points[(idx - 1 + len) % len];\r\n                    p2 = points[(idx + 1) % len];\r\n                    p3 = points[(idx + 2) % len];\r\n                }\r\n\r\n                var w2 = w * w;\r\n                var w3 = w * w2;\r\n\r\n                ret.push([\r\n                    interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\r\n                    interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\r\n                ]);\r\n            }\r\n            return ret;\r\n        };\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 贝塞尔平滑曲线 \r\n * @module zrender/shape/util/smoothBezier\r\n * @author pissang (https://www.github.com/pissang) \r\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var vector = __webpack_require__(5);\r\n\r\n        /**\r\n         * 贝塞尔平滑曲线\r\n         * @alias module:zrender/shape/util/smoothBezier\r\n         * @param {Array} points 线段顶点数组\r\n         * @param {number} smooth 平滑等级, 0-1\r\n         * @param {boolean} isLoop\r\n         * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\r\n         *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\r\n         *                           整个折线的包围盒做一个并集用来约束控制点。\r\n         * @param {Array} 计算出来的控制点数组\r\n         */\r\n        return function (points, smooth, isLoop, constraint) {\r\n            var cps = [];\r\n\r\n            var v = [];\r\n            var v1 = [];\r\n            var v2 = [];\r\n            var prevPoint;\r\n            var nextPoint;\r\n\r\n            var hasConstraint = !!constraint;\r\n            var min, max;\r\n            if (hasConstraint) {\r\n                min = [Infinity, Infinity];\r\n                max = [-Infinity, -Infinity];\r\n                for (var i = 0, len = points.length; i < len; i++) {\r\n                    vector.min(min, min, points[i]);\r\n                    vector.max(max, max, points[i]);\r\n                }\r\n                // 与指定的包围盒做并集\r\n                vector.min(min, min, constraint[0]);\r\n                vector.max(max, max, constraint[1]);\r\n            }\r\n\r\n            for (var i = 0, len = points.length; i < len; i++) {\r\n                var point = points[i];\r\n                var prevPoint;\r\n                var nextPoint;\r\n\r\n                if (isLoop) {\r\n                    prevPoint = points[i ? i - 1 : len - 1];\r\n                    nextPoint = points[(i + 1) % len];\r\n                } \r\n                else {\r\n                    if (i === 0 || i === len - 1) {\r\n                        cps.push(vector.clone(points[i]));\r\n                        continue;\r\n                    } \r\n                    else {\r\n                        prevPoint = points[i - 1];\r\n                        nextPoint = points[i + 1];\r\n                    }\r\n                }\r\n\r\n                vector.sub(v, nextPoint, prevPoint);\r\n\r\n                // use degree to scale the handle length\r\n                vector.scale(v, v, smooth);\r\n\r\n                var d0 = vector.distance(point, prevPoint);\r\n                var d1 = vector.distance(point, nextPoint);\r\n                var sum = d0 + d1;\r\n                if (sum !== 0) {\r\n                    d0 /= sum;\r\n                    d1 /= sum;\r\n                }\r\n\r\n                vector.scale(v1, v, -d0);\r\n                vector.scale(v2, v, d1);\r\n                var cp0 = vector.add([], point, v1);\r\n                var cp1 = vector.add([], point, v2);\r\n                if (hasConstraint) {\r\n                    vector.max(cp0, cp0, min);\r\n                    vector.min(cp0, cp0, max);\r\n                    vector.max(cp1, cp1, min);\r\n                    vector.min(cp1, cp1, max);\r\n                }\r\n                cps.push(cp0);\r\n                cps.push(cp1);\r\n            }\r\n            \r\n            if (isLoop) {\r\n                cps.push(vector.clone(cps.shift()));\r\n            }\r\n\r\n            return cps;\r\n        };\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 折线\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @module zrender/shape/Polyline\r\n * @example\r\n *     var Polyline = require('zrender/shape/Polyline');\r\n *     var shape = new Polyline({\r\n *         style: {\r\n *             pointList: [[0, 0], [100, 100], [100, 0]],\r\n *             smooth: 'bezier',\r\n *             strokeColor: 'purple'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IPolylineStyle\r\n * @property {Array.<number>} pointList 顶点坐标数组\r\n * @property {string|number} [smooth=''] 是否做平滑插值, 平滑算法可以选择 bezier, spline\r\n * @property {number} [smoothConstraint] 平滑约束\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {string} [lineJoin='miter'] 线段连接样式，可以是 miter, round, bevel\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(1);\r\n        var smoothSpline = __webpack_require__(38);\r\n        var smoothBezier = __webpack_require__(39);\r\n        var dashedLineTo = __webpack_require__(19);\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Polyline\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Polyline = function(options) {\r\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\r\n            this.textPosition = 'end';\r\n            Base.call(this, options);\r\n            /**\r\n             * 贝赛尔曲线绘制样式\r\n             * @name module:zrender/shape/Polyline#style\r\n             * @type {module:zrender/shape/Polyline~IPolylineStyle}\r\n             */\r\n            /**\r\n             * 贝赛尔曲线高亮绘制样式\r\n             * @name module:zrender/shape/Polyline#highlightStyle\r\n             * @type {module:zrender/shape/Polyline~IPolylineStyle}\r\n             */\r\n        };\r\n\r\n        Polyline.prototype =  {\r\n            type: 'polyline',\r\n\r\n            /**\r\n             * 创建多边形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Polyline~IPolylineStyle} style\r\n             */\r\n            buildPath : function(ctx, style) {\r\n                var pointList = style.pointList;\r\n                if (pointList.length < 2) {\r\n                    // 少于2个点就不画了~\r\n                    return;\r\n                }\r\n                \r\n                var len = Math.min(\r\n                    style.pointList.length, \r\n                    Math.round(style.pointListLength || style.pointList.length)\r\n                );\r\n                \r\n                if (style.smooth && style.smooth !== 'spline') {\r\n                    if (! style.controlPointList) {\r\n                        this.updateControlPoints(style);\r\n                    }\r\n                    var controlPointList = style.controlPointList;\r\n\r\n                    ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                    var cp1;\r\n                    var cp2;\r\n                    var p;\r\n                    for (var i = 0; i < len - 1; i++) {\r\n                        cp1 = controlPointList[i * 2];\r\n                        cp2 = controlPointList[i * 2 + 1];\r\n                        p = pointList[i + 1];\r\n                        ctx.bezierCurveTo(\r\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    if (style.smooth === 'spline') {\r\n                        pointList = smoothSpline(pointList);\r\n                        len = pointList.length;\r\n                    }\r\n                    if (!style.lineType || style.lineType == 'solid') {\r\n                        // 默认为实线\r\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                        for (var i = 1; i < len; i++) {\r\n                            ctx.lineTo(pointList[i][0], pointList[i][1]);\r\n                        }\r\n                    }\r\n                    else if (style.lineType == 'dashed'\r\n                            || style.lineType == 'dotted'\r\n                    ) {\r\n                        var dashLength = (style.lineWidth || 1) \r\n                                         * (style.lineType == 'dashed' ? 5 : 1);\r\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                        for (var i = 1; i < len; i++) {\r\n                            dashedLineTo(\r\n                                ctx,\r\n                                pointList[i - 1][0], pointList[i - 1][1],\r\n                                pointList[i][0], pointList[i][1],\r\n                                dashLength\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n                return;\r\n            },\r\n\r\n            updateControlPoints: function (style) {\r\n                style.controlPointList = smoothBezier(\r\n                    style.pointList, style.smooth, false, style.smoothConstraint\r\n                );\r\n            },\r\n\r\n            /**\r\n             * 计算返回折线包围盒矩形。\r\n             * @param {IZRenderBezierCurveStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function(style) {\r\n                return __webpack_require__(22).prototype.getRect(style);\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Polyline, Base);\r\n        return Polyline;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * ShapeBundle 捆绑多个 shape 的 buildPath 方法，但是共用同一个样式\r\n * @author pissang (https://github.com/pissang)\r\n * @module zrender/shape/ShapeBundle\r\n * @example\r\n *     var poly1 = new PolygonShape();\r\n *     var poly2 = new PolygonShape();\r\n *     var poly3 = new PolygonShape();\r\n *     var shapeBundle = new ShapeBundle({\r\n *         style: {\r\n *             shapeList: [poly1, poly2, poly3],\r\n *             color: 'red'\r\n *         }\r\n *     });\r\n *     zr.addShape(shapeBundle);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IShapeBundleStyle\r\n * @property {string} shapeList shape列表\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n    var Base = __webpack_require__(1);\r\n\r\n    var ShapeBundle = function (options) {\r\n        Base.call(this, options);\r\n        /**\r\n         * ShapeBundle绘制样式\r\n         * @name module:zrender/shape/ShapeBundle#style\r\n         * @type {module:zrender/shape/ShapeBundle~IShapeBundleStyle}\r\n         */\r\n        /**\r\n         * ShapeBundle高亮绘制样式\r\n         * @name module:zrender/shape/ShapeBundle#highlightStyle\r\n         * @type {module:zrender/shape/ShapeBundle~IShapeBundleStyle}\r\n         */\r\n    };\r\n\r\n    ShapeBundle.prototype = {\r\n\r\n        constructor: ShapeBundle,\r\n\r\n        type: 'shape-bundle',\r\n\r\n        brush: function (ctx, isHighlight) {\r\n            var style = this.beforeBrush(ctx, isHighlight);\r\n\r\n            ctx.beginPath();\r\n            for (var i = 0; i < style.shapeList.length; i++) {\r\n                var subShape = style.shapeList[i];\r\n                var subShapeStyle = subShape.style;\r\n                if (isHighlight) {\r\n                    subShapeStyle = subShape.getHighlightStyle(\r\n                        subShapeStyle,\r\n                        subShape.highlightStyle || {},\r\n                        subShape.brushTypeOnly\r\n                    );\r\n                }\r\n                subShape.buildPath(ctx, subShapeStyle);\r\n            }\r\n            switch (style.brushType) {\r\n                /* jshint ignore:start */\r\n                case 'both':\r\n                    ctx.fill();\r\n                case 'stroke':\r\n                    style.lineWidth > 0 && ctx.stroke();\r\n                    break;\r\n                /* jshint ignore:end */\r\n                default:\r\n                    ctx.fill();\r\n            }\r\n\r\n            this.drawText(ctx, style, this.style);\r\n\r\n            this.afterBrush(ctx);\r\n        },\r\n\r\n        /**\r\n         * 计算返回多边形包围盒矩阵\r\n         * @param {module:zrender/shape/Polygon~IShapeBundleStyle} style\r\n         * @return {module:zrender/shape/Base~IBoundingRect}\r\n         */\r\n        getRect: function (style) {\r\n            if (style.__rect) {\r\n                return style.__rect;\r\n            }\r\n            var minX = Infinity;\r\n            var maxX = -Infinity;\r\n            var minY = Infinity;\r\n            var maxY = -Infinity;\r\n            for (var i = 0; i < style.shapeList.length; i++) {\r\n                var subShape = style.shapeList[i];\r\n                // TODO Highlight style ?\r\n                var subRect = subShape.getRect(subShape.style);\r\n\r\n                var minX = Math.min(subRect.x, minX);\r\n                var minY = Math.min(subRect.y, minY);\r\n                var maxX = Math.max(subRect.x + subRect.width, maxX);\r\n                var maxY = Math.max(subRect.y + subRect.height, maxY);\r\n            }\r\n\r\n            style.__rect = {\r\n                x: minX,\r\n                y: minY,\r\n                width: maxX - minX,\r\n                height: maxY - minY\r\n            };\r\n\r\n            return style.__rect;\r\n        },\r\n\r\n        isCover: function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n            \r\n            if (this.isCoverRect(x, y)) {\r\n                for (var i = 0; i < this.style.shapeList.length; i++) {\r\n                    var subShape = this.style.shapeList[i];\r\n                    if (subShape.isCover(x, y)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n\r\n    __webpack_require__(0).inherits(ShapeBundle, Base);\r\n    return ShapeBundle;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); \n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 高精度数学运算\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n    // 除法函数，用来得到精确的除法结果 \r\n    // 说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。 \r\n    // 调用：accDiv(arg1,arg2) \r\n    // 返回值：arg1除以arg2的精确结果\r\n    function accDiv(arg1,arg2){\r\n        var s1 = arg1.toString();\r\n        var s2 = arg2.toString(); \r\n        var m = 0;\r\n        try {\r\n            m = s2.split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        try {\r\n            m -= s1.split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        \r\n        return (s1.replace('.', '') - 0) / (s2.replace('.', '') - 0) * Math.pow(10, m);\r\n    }\r\n\r\n    // 乘法函数，用来得到精确的乘法结果\r\n    // 说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。 \r\n    // 调用：accMul(arg1,arg2) \r\n    // 返回值：arg1乘以arg2的精确结果\r\n    function accMul(arg1, arg2) {\r\n        var s1 = arg1.toString();\r\n        var s2 = arg2.toString();\r\n        var m = 0;\r\n        try {\r\n            m += s1.split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        try {\r\n            m += s2.split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        \r\n        return (s1.replace('.', '') - 0) * (s2.replace('.', '') - 0) / Math.pow(10, m);\r\n    }\r\n\r\n    // 加法函数，用来得到精确的加法结果 \r\n    // 说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。 \r\n    // 调用：accAdd(arg1,arg2) \r\n    // 返回值：arg1加上arg2的精确结果 \r\n    function accAdd(arg1, arg2) {\r\n        var r1 = 0;\r\n        var r2 = 0;\r\n        try {\r\n            r1 = arg1.toString().split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        try {\r\n            r2 = arg2.toString().split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        \r\n        var m = Math.pow(10, Math.max(r1, r2));\r\n        return (Math.round(arg1 * m) + Math.round(arg2 * m)) / m; \r\n    }\r\n\r\n    //减法函数，用来得到精确的减法结果 \r\n    //说明：javascript的减法结果会有误差，在两个浮点数减法的时候会比较明显。这个函数返回较为精确的减法结果。 \r\n    //调用：accSub(arg1,arg2) \r\n    //返回值：arg1减法arg2的精确结果 \r\n    function accSub(arg1,arg2) {\r\n        return accAdd(arg1, -arg2);\r\n    }\r\n\r\n    return {\r\n        accDiv : accDiv,\r\n        accMul : accMul,\r\n        accAdd : accAdd,\r\n        accSub : accSub\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 圆环\r\n * @module zrender/shape/Ring\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * @example\r\n *     var Ring = require('zrender/shape/Ring');\r\n *     var shape = new Ring({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r0: 30,\r\n *             r: 50\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IRingStyle\r\n * @property {number} x 圆心x坐标\r\n * @property {number} y 圆心y坐标\r\n * @property {number} r0 内圆半径\r\n * @property {number} r 外圆半径\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(1);\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Ring\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Ring = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 圆环绘制样式\r\n             * @name module:zrender/shape/Ring#style\r\n             * @type {module:zrender/shape/Ring~IRingStyle}\r\n             */\r\n            /**\r\n             * 圆环高亮绘制样式\r\n             * @name module:zrender/shape/Ring#highlightStyle\r\n             * @type {module:zrender/shape/Ring~IRingStyle}\r\n             */\r\n        };\r\n\r\n        Ring.prototype = {\r\n            type: 'ring',\r\n\r\n            /**\r\n             * 创建圆环路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Ring~IRingStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                // 非零环绕填充优化\r\n                ctx.arc(style.x, style.y, style.r, 0, Math.PI * 2, false);\r\n                ctx.moveTo(style.x + style.r0, style.y);\r\n                ctx.arc(style.x, style.y, style.r0, 0, Math.PI * 2, true);\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回圆环包围盒矩阵\r\n             * @param {module:zrender/shape/Ring~IRingStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                style.__rect = {\r\n                    x : Math.round(style.x - style.r - lineWidth / 2),\r\n                    y : Math.round(style.y - style.r - lineWidth / 2),\r\n                    width : style.r * 2 + lineWidth,\r\n                    height : style.r * 2 + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Ring, Base);\r\n        return Ring;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VueEchartWordcloud_vue__ = __webpack_require__(45);\n\n\nvar comment = {\n    install: function install(Vue) {\n        Vue.component(__WEBPACK_IMPORTED_MODULE_0__VueEchartWordcloud_vue__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VueEchartWordcloud_vue__[\"a\" /* default */]);\n    }\n\n    // global 情况下自动安装\n};if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(comment);\n}\n\n// 导出模块\n/* harmony default export */ __webpack_exports__[\"default\"] = (comment);\n\n/***/ }),\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueEchartWordcloud_vue__ = __webpack_require__(31);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_21f2da39_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueEchartWordcloud_vue__ = __webpack_require__(97);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(46)\n}\nvar normalizeComponent = __webpack_require__(51)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-21f2da39\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueEchartWordcloud_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_21f2da39_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueEchartWordcloud_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(47);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(49)(\"effa1f34\", content, true, {});\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(48)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".chart-container[data-v-21f2da39]{background-color:transparent}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(50)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * ECharts, a javascript interactive chart library.\r\n *\r\n * Copyright (c) 2015, Baidu Inc.\r\n * All rights reserved.\r\n *\r\n * LICENSE\r\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\r\n */\r\n\r\n/**\r\n * echarts\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var ecConfig = __webpack_require__(4);\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrEvent = __webpack_require__(9);\r\n\r\n    var self = {};\r\n\r\n    var _canvasSupported = __webpack_require__(15).canvasSupported;\r\n    var _idBase = new Date() - 0;\r\n    var _instances = {};    // ECharts实例map索引\r\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\r\n\r\n    self.version = '2.2.7';\r\n    self.dependencies = {\r\n        zrender: '2.1.1'\r\n    };\r\n    /**\r\n     * 入口方法\r\n     */\r\n    self.init = function (dom, theme) {\r\n        var zrender = __webpack_require__(24);\r\n        if ((zrender.version.replace('.', '') - 0) < (self.dependencies.zrender.replace('.', '') - 0)) {\r\n            console.error(\r\n                'ZRender ' + zrender.version\r\n                + ' is too old for ECharts ' + self.version\r\n                + '. Current version need ZRender '\r\n                + self.dependencies.zrender + '+'\r\n            );\r\n        }\r\n\r\n        dom = dom instanceof Array ? dom[0] : dom;\r\n\r\n        // dom与echarts实例映射索引\r\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n        if (!key) {\r\n            key = _idBase++;\r\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, key);\r\n        }\r\n\r\n        if (_instances[key]) {\r\n            // 同一个dom上多次init，自动释放已有实例\r\n            _instances[key].dispose();\r\n        }\r\n        _instances[key] = new Echarts(dom);\r\n        _instances[key].id = key;\r\n        _instances[key].canvasSupported = _canvasSupported;\r\n        _instances[key].setTheme(theme);\r\n\r\n        return _instances[key];\r\n    };\r\n\r\n    /**\r\n     * 通过id获得ECharts实例，id可在实例化后读取\r\n     */\r\n    self.getInstanceById = function (key) {\r\n        return _instances[key];\r\n    };\r\n\r\n    /**\r\n     * 消息中心\r\n     */\r\n    function MessageCenter() {\r\n        zrEvent.Dispatcher.call(this);\r\n    }\r\n    zrUtil.merge(MessageCenter.prototype, zrEvent.Dispatcher.prototype, true);\r\n\r\n    /**\r\n     * 基于zrender实现Echarts接口层\r\n     * @param {HtmlElement} dom 必要\r\n     */\r\n    function Echarts(dom) {\r\n        // Fxxk IE11 for breaking initialization without a warrant;\r\n        // Just set something to let it be!\r\n        // by kener 2015-01-09\r\n        dom.innerHTML = '';\r\n        this._themeConfig = {}; // zrUtil.clone(ecConfig);\r\n\r\n        this.dom = dom;\r\n        // this._zr;\r\n        // this._option;                    // curOption clone\r\n        // this._optionRestore;             // for restore;\r\n        // this._island;\r\n        // this._toolbox;\r\n        // this._timeline;\r\n        // this._refreshInside;             // 内部刷新标志位\r\n\r\n        this._connected = false;\r\n        this._status = {                    // 用于图表间通信\r\n            dragIn: false,\r\n            dragOut: false,\r\n            needRefresh: false\r\n        };\r\n        this._curEventType = false;         // 破循环信号灯\r\n        this._chartList = [];               // 图表实例\r\n\r\n        this._messageCenter = new MessageCenter();\r\n\r\n        this._messageCenterOutSide = new MessageCenter();    // Echarts层的外部消息中心，做Echarts层的消息转发\r\n\r\n        // resize方法经常被绑定到window.resize上，闭包一个this\r\n        this.resize = this.resize();\r\n\r\n        // 初始化::构造函数\r\n        this._init();\r\n    }\r\n\r\n    /**\r\n     * ZRender EVENT\r\n     *\r\n     * @inner\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var ZR_EVENT = __webpack_require__(10).EVENT;\r\n\r\n    /**\r\n     * 要绑定监听的zrender事件列表\r\n     *\r\n     * @const\r\n     * @inner\r\n     * @type {Array}\r\n     */\r\n    var ZR_EVENT_LISTENS = [\r\n        'CLICK', 'DBLCLICK', 'MOUSEOVER', 'MOUSEOUT',\r\n        'DRAGSTART', 'DRAGEND', 'DRAGENTER', 'DRAGOVER', 'DRAGLEAVE', 'DROP'\r\n    ];\r\n\r\n    /**\r\n     * 对echarts的实例中的chartList属性成员，逐个进行方法调用，遍历顺序为逆序\r\n     * 由于在事件触发的默认行为处理中，多次用到相同逻辑，所以抽象了该方法\r\n     * 由于所有的调用场景里，最多只有两个参数，基于性能和体积考虑，这里就不使用call或者apply了\r\n     *\r\n     * @inner\r\n     * @param {ECharts} ecInstance ECharts实例\r\n     * @param {string} methodName 要调用的方法名\r\n     * @param {*} arg0 调用参数1\r\n     * @param {*} arg1 调用参数2\r\n     * @param {*} arg2 调用参数3\r\n     */\r\n    function callChartListMethodReverse(ecInstance, methodName, arg0, arg1, arg2) {\r\n        var chartList = ecInstance._chartList;\r\n        var len = chartList.length;\r\n\r\n        while (len--) {\r\n            var chart = chartList[len];\r\n            if (typeof chart[methodName] === 'function') {\r\n                chart[methodName](arg0, arg1, arg2);\r\n            }\r\n        }\r\n    }\r\n\r\n    Echarts.prototype = {\r\n        /**\r\n         * 初始化::构造函数\r\n         */\r\n        _init: function () {\r\n            var self = this;\r\n            var _zr = __webpack_require__(24).init(this.dom);\r\n            this._zr = _zr;\r\n\r\n            // wrap: n,e,d,t for name event data this\r\n            this._messageCenter.dispatch = function(type, event, eventPackage, that) {\r\n                eventPackage = eventPackage || {};\r\n                eventPackage.type = type;\r\n                eventPackage.event = event;\r\n\r\n                self._messageCenter.dispatchWithContext(type, eventPackage, that);\r\n                self._messageCenterOutSide.dispatchWithContext(type, eventPackage, that);\r\n\r\n                // 如下注掉的代码，@see: https://github.com/ecomfe/echarts-discuss/issues/3\r\n                // if (type != 'HOVER' && type != 'MOUSEOUT') {    // 频繁事件直接抛出\r\n                //     setTimeout(function(){\r\n                //         self._messageCenterOutSide.dispatchWithContext(\r\n                //             type, eventPackage, that\r\n                //         );\r\n                //     },50);\r\n                // }\r\n                // else {\r\n                //     self._messageCenterOutSide.dispatchWithContext(\r\n                //         type, eventPackage, that\r\n                //     );\r\n                // }\r\n            };\r\n\r\n            this._onevent = function(param){\r\n                return self.__onevent(param);\r\n            };\r\n            for (var e in ecConfig.EVENT) {\r\n                if (e != 'CLICK' && e != 'DBLCLICK'\r\n                    && e != 'HOVER' && e != 'MOUSEOUT' && e != 'MAP_ROAM'\r\n                ) {\r\n                    this._messageCenter.bind(ecConfig.EVENT[e], this._onevent, this);\r\n                }\r\n            }\r\n\r\n\r\n            var eventBehaviors = {};\r\n            this._onzrevent = function (param) {\r\n                return self[eventBehaviors[ param.type ]](param);\r\n            };\r\n\r\n            // 挂载关心的事件\r\n            for (var i = 0, len = ZR_EVENT_LISTENS.length; i < len; i++) {\r\n                var eventName = ZR_EVENT_LISTENS[i];\r\n                var eventValue = ZR_EVENT[eventName];\r\n                eventBehaviors[eventValue] = '_on' + eventName.toLowerCase();\r\n                _zr.on(eventValue, this._onzrevent);\r\n            }\r\n\r\n            this.chart = {};            // 图表索引\r\n            this.component = {};        // 组件索引\r\n\r\n            // 内置图表\r\n            // 孤岛\r\n            var Island = __webpack_require__(61);\r\n            this._island = new Island(this._themeConfig, this._messageCenter, _zr, {}, this);\r\n            this.chart.island = this._island;\r\n\r\n            // 内置通用组件\r\n            // 工具箱\r\n            var Toolbox = __webpack_require__(73);\r\n            this._toolbox = new Toolbox(this._themeConfig, this._messageCenter, _zr, {}, this);\r\n            this.component.toolbox = this._toolbox;\r\n\r\n            var componentLibrary = __webpack_require__(6);\r\n            componentLibrary.define('title', __webpack_require__(75));\r\n            componentLibrary.define('tooltip', __webpack_require__(76));\r\n            componentLibrary.define('legend', __webpack_require__(78));\r\n\r\n            if (_zr.getWidth() === 0 || _zr.getHeight() === 0) {\r\n                console.error('Dom’s width & height should be ready before init.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * ECharts事件处理中心\r\n         */\r\n        __onevent: function (param){\r\n            param.__echartsId = param.__echartsId || this.id;\r\n\r\n            // 来自其他联动图表的事件\r\n            var fromMyself = (param.__echartsId === this.id);\r\n\r\n            if (!this._curEventType) {\r\n                this._curEventType = param.type;\r\n            }\r\n\r\n            switch (param.type) {\r\n                case ecConfig.EVENT.LEGEND_SELECTED :\r\n                    this._onlegendSelected(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_ZOOM :\r\n                    if (!fromMyself) {\r\n                        var dz = this.component.dataZoom;\r\n                        if (dz) {\r\n                            dz.silence(true);\r\n                            dz.absoluteZoom(param.zoom);\r\n                            dz.silence(false);\r\n                        }\r\n                    }\r\n                    this._ondataZoom(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_RANGE :\r\n                    fromMyself && this._ondataRange(param);\r\n                    break;\r\n                case ecConfig.EVENT.MAGIC_TYPE_CHANGED :\r\n                    if (!fromMyself) {\r\n                        var tb = this.component.toolbox;\r\n                        if (tb) {\r\n                            tb.silence(true);\r\n                            tb.setMagicType(param.magicType);\r\n                            tb.silence(false);\r\n                        }\r\n                    }\r\n                    this._onmagicTypeChanged(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_VIEW_CHANGED :\r\n                    fromMyself && this._ondataViewChanged(param);\r\n                    break;\r\n                case ecConfig.EVENT.TOOLTIP_HOVER :\r\n                    fromMyself && this._tooltipHover(param);\r\n                    break;\r\n                case ecConfig.EVENT.RESTORE :\r\n                    this._onrestore();\r\n                    break;\r\n                case ecConfig.EVENT.REFRESH :\r\n                    fromMyself && this._onrefresh(param);\r\n                    break;\r\n                // 鼠标同步\r\n                case ecConfig.EVENT.TOOLTIP_IN_GRID :\r\n                case ecConfig.EVENT.TOOLTIP_OUT_GRID :\r\n                    if (!fromMyself) {\r\n                        // 只处理来自外部的鼠标同步\r\n                        var grid = this.component.grid;\r\n                        if (grid) {\r\n                            this._zr.trigger(\r\n                                'mousemove',\r\n                                {\r\n                                    connectTrigger: true,\r\n                                    zrenderX: grid.getX() + param.x * grid.getWidth(),\r\n                                    zrenderY: grid.getY() + param.y * grid.getHeight()\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                    else if (this._connected) {\r\n                        // 来自自己，并且存在多图联动，空间坐标映射修改参数分发\r\n                        var grid = this.component.grid;\r\n                        if (grid) {\r\n                            param.x = (param.event.zrenderX - grid.getX()) / grid.getWidth();\r\n                            param.y = (param.event.zrenderY - grid.getY()) / grid.getHeight();\r\n                        }\r\n                    }\r\n                    break;\r\n                /*\r\n                case ecConfig.EVENT.RESIZE :\r\n                case ecConfig.EVENT.DATA_CHANGED :\r\n                case ecConfig.EVENT.PIE_SELECTED :\r\n                case ecConfig.EVENT.MAP_SELECTED :\r\n                    break;\r\n                */\r\n            }\r\n\r\n            // 多图联动，只做自己的一级事件分发，避免级联事件循环\r\n            if (this._connected && fromMyself && this._curEventType === param.type) {\r\n                for (var c in this._connected) {\r\n                    this._connected[c].connectedEventHandler(param);\r\n                }\r\n                // 分发完毕后复位\r\n                this._curEventType = null;\r\n            }\r\n\r\n            if (!fromMyself || (!this._connected && fromMyself)) {  // 处理了完联动事件复位\r\n                this._curEventType = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 点击事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onclick: function (param) {\r\n            callChartListMethodReverse(this, 'onclick', param);\r\n\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.CLICK,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 双击事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _ondblclick: function (param) {\r\n            callChartListMethodReverse(this, 'ondblclick', param);\r\n\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.DBLCLICK,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 鼠标移入事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onmouseover: function (param) {\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.HOVER,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 鼠标移出事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onmouseout: function (param) {\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.MOUSEOUT,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragstart: function (param) {\r\n            // 复位用于图表间通信拖拽标识\r\n            this._status = {\r\n                dragIn: false,\r\n                dragOut: false,\r\n                needRefresh: false\r\n            };\r\n\r\n            callChartListMethodReverse(this, 'ondragstart', param);\r\n        },\r\n\r\n        /**\r\n         * dragging回调，可计算特性实现\r\n         */\r\n        _ondragenter: function (param) {\r\n            callChartListMethodReverse(this, 'ondragenter', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragover: function (param) {\r\n            callChartListMethodReverse(this, 'ondragover', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragleave: function (param) {\r\n            callChartListMethodReverse(this, 'ondragleave', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondrop: function (param) {\r\n            callChartListMethodReverse(this, 'ondrop', param, this._status);\r\n            this._island.ondrop(param, this._status);\r\n        },\r\n\r\n        /**\r\n         * dragdone回调 ，可计算特性实现\r\n         */\r\n        _ondragend: function (param) {\r\n            callChartListMethodReverse(this, 'ondragend', param, this._status);\r\n\r\n            this._timeline && this._timeline.ondragend(param, this._status);\r\n            this._island.ondragend(param, this._status);\r\n\r\n            // 发生过重计算\r\n            if (this._status.needRefresh) {\r\n                this._syncBackupData(this._option);\r\n\r\n                var messageCenter = this._messageCenter;\r\n                messageCenter.dispatch(\r\n                    ecConfig.EVENT.DATA_CHANGED,\r\n                    param.event,\r\n                    this._eventPackage(param.target),\r\n                    this\r\n                );\r\n                messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 图例选择响应\r\n         */\r\n        _onlegendSelected: function (param) {\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'onlegendSelected', param, this._status);\r\n\r\n            if (this._status.needRefresh) {\r\n                this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 数据区域缩放响应\r\n         */\r\n        _ondataZoom: function (param) {\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'ondataZoom', param, this._status);\r\n\r\n            if (this._status.needRefresh) {\r\n                this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 值域漫游响应\r\n         */\r\n        _ondataRange: function (param) {\r\n            this._clearEffect();\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'ondataRange', param, this._status);\r\n\r\n            // 没有相互影响，直接刷新即可\r\n            if (this._status.needRefresh) {\r\n                this._zr.refreshNextFrame();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 动态类型切换响应\r\n         */\r\n        _onmagicTypeChanged: function () {\r\n            this._clearEffect();\r\n            this._render(this._toolbox.getMagicOption());\r\n        },\r\n\r\n        /**\r\n         * 数据视图修改响应\r\n         */\r\n        _ondataViewChanged: function (param) {\r\n            this._syncBackupData(param.option);\r\n            this._messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_CHANGED,\r\n                null,\r\n                param,\r\n                this\r\n            );\r\n            this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n        },\r\n\r\n        /**\r\n         * tooltip与图表间通信\r\n         */\r\n        _tooltipHover: function (param) {\r\n            var tipShape = [];\r\n            callChartListMethodReverse(this, 'ontooltipHover', param, tipShape);\r\n        },\r\n\r\n        /**\r\n         * 还原\r\n         */\r\n        _onrestore: function () {\r\n            this.restore();\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        _onrefresh: function (param) {\r\n            this._refreshInside = true;\r\n            this.refresh(param);\r\n            this._refreshInside = false;\r\n        },\r\n\r\n        /**\r\n         * 数据修改后的反向同步dataZoom持有的备份数据\r\n         */\r\n        _syncBackupData: function (curOption) {\r\n            this.component.dataZoom && this.component.dataZoom.syncBackupData(curOption);\r\n        },\r\n\r\n        /**\r\n         * 打包Echarts层的事件附件\r\n         */\r\n        _eventPackage: function (target) {\r\n            if (target) {\r\n                var ecData = __webpack_require__(14);\r\n\r\n                var seriesIndex = ecData.get(target, 'seriesIndex');\r\n                var dataIndex = ecData.get(target, 'dataIndex');\r\n\r\n                dataIndex = seriesIndex != -1 && this.component.dataZoom\r\n                            ? this.component.dataZoom.getRealDataIndex(\r\n                                seriesIndex,\r\n                                dataIndex\r\n                              )\r\n                            : dataIndex;\r\n                return {\r\n                    seriesIndex: seriesIndex,\r\n                    seriesName: (ecData.get(target, 'series') || {}).name,\r\n                    dataIndex: dataIndex,\r\n                    data: ecData.get(target, 'data'),\r\n                    name: ecData.get(target, 'name'),\r\n                    value: ecData.get(target, 'value'),\r\n                    special: ecData.get(target, 'special')\r\n                };\r\n            }\r\n            return;\r\n        },\r\n\r\n        _noDataCheck: function(magicOption) {\r\n            var series = magicOption.series;\r\n\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].type == ecConfig.CHART_TYPE_MAP\r\n                    || (series[i].data && series[i].data.length > 0)\r\n                    || (series[i].markPoint && series[i].markPoint.data && series[i].markPoint.data.length > 0)\r\n                    || (series[i].markLine && series[i].markLine.data && series[i].markLine.data.length > 0)\r\n                    || (series[i].nodes && series[i].nodes.length > 0)\r\n                    || (series[i].links && series[i].links.length > 0)\r\n                    || (series[i].matrix && series[i].matrix.length > 0)\r\n                    || (series[i].eventList && series[i].eventList.length > 0)\r\n                ) {\r\n                    return false;   // 存在任意数据则为非空数据\r\n                }\r\n            }\r\n            var loadOption = (this._option && this._option.noDataLoadingOption)\r\n                || this._themeConfig.noDataLoadingOption\r\n                || ecConfig.noDataLoadingOption\r\n                || {\r\n                    text: (this._option && this._option.noDataText)\r\n                          || this._themeConfig.noDataText\r\n                          || ecConfig.noDataText,\r\n                    effect: (this._option && this._option.noDataEffect)\r\n                            || this._themeConfig.noDataEffect\r\n                            || ecConfig.noDataEffect\r\n                };\r\n            // 空数据\r\n            this.clear();\r\n            this.showLoading(loadOption);\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * 图表渲染\r\n         */\r\n        _render: function (magicOption) {\r\n            this._mergeGlobalConifg(magicOption);\r\n\r\n            if (this._noDataCheck(magicOption)) {\r\n                return;\r\n            }\r\n\r\n            var bgColor = magicOption.backgroundColor;\r\n            if (bgColor) {\r\n                if (!_canvasSupported\r\n                    && bgColor.indexOf('rgba') != -1\r\n                ) {\r\n                    // IE6~8对RGBA的处理，filter会带来其他颜色的影响\r\n                    var cList = bgColor.split(',');\r\n                    this.dom.style.filter = 'alpha(opacity=' +\r\n                        cList[3].substring(0, cList[3].lastIndexOf(')')) * 100\r\n                        + ')';\r\n                    cList.length = 3;\r\n                    cList[0] = cList[0].replace('a', '');\r\n                    this.dom.style.backgroundColor = cList.join(',') + ')';\r\n                }\r\n                else {\r\n                    this.dom.style.backgroundColor = bgColor;\r\n                }\r\n            }\r\n\r\n            this._zr.clearAnimation();\r\n            this._chartList = [];\r\n\r\n            var chartLibrary = __webpack_require__(29);\r\n            var componentLibrary = __webpack_require__(6);\r\n\r\n            if (magicOption.xAxis || magicOption.yAxis) {\r\n                magicOption.grid = magicOption.grid || {};\r\n                magicOption.dataZoom = magicOption.dataZoom || {};\r\n            }\r\n\r\n            var componentList = [\r\n                'title', 'legend', 'tooltip', 'dataRange', 'roamController',\r\n                'grid', 'dataZoom', 'xAxis', 'yAxis', 'polar'\r\n            ];\r\n\r\n            var ComponentClass;\r\n            var componentType;\r\n            var component;\r\n            for (var i = 0, l = componentList.length; i < l; i++) {\r\n                componentType = componentList[i];\r\n                component = this.component[componentType];\r\n\r\n                if (magicOption[componentType]) {\r\n                    if (component) {\r\n                        component.refresh && component.refresh(magicOption);\r\n                    }\r\n                    else {\r\n                        ComponentClass = componentLibrary.get(\r\n                            /^[xy]Axis$/.test(componentType) ? 'axis' : componentType\r\n                        );\r\n                        component = new ComponentClass(\r\n                            this._themeConfig, this._messageCenter, this._zr,\r\n                            magicOption, this, componentType\r\n                        );\r\n                        this.component[componentType] = component;\r\n                    }\r\n                    this._chartList.push(component);\r\n                }\r\n                else if (component) {\r\n                    component.dispose();\r\n                    this.component[componentType] = null;\r\n                    delete this.component[componentType];\r\n                }\r\n            }\r\n\r\n            var ChartClass;\r\n            var chartType;\r\n            var chart;\r\n            var chartMap = {};      // 记录已经初始化的图表\r\n            for (var i = 0, l = magicOption.series.length; i < l; i++) {\r\n                chartType = magicOption.series[i].type;\r\n                if (!chartType) {\r\n                    console.error('series[' + i + '] chart type has not been defined.');\r\n                    continue;\r\n                }\r\n\r\n                if (!chartMap[chartType]) {\r\n                    chartMap[chartType] = true;\r\n                    ChartClass = chartLibrary.get(chartType);\r\n                    if (ChartClass) {\r\n                        if (this.chart[chartType]) {\r\n                            chart = this.chart[chartType];\r\n                            chart.refresh(magicOption);\r\n                        }\r\n                        else {\r\n                            chart = new ChartClass(\r\n                                this._themeConfig, this._messageCenter, this._zr,\r\n                                magicOption, this\r\n                            );\r\n                        }\r\n                        this._chartList.push(chart);\r\n                        this.chart[chartType] = chart;\r\n                    }\r\n                    else {\r\n                        console.error(chartType + ' has not been required.');\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 已有实例但新option不带这类图表的实例释放\r\n            for (chartType in this.chart) {\r\n                if (chartType != ecConfig.CHART_TYPE_ISLAND  && !chartMap[chartType]) {\r\n                    this.chart[chartType].dispose();\r\n                    this.chart[chartType] = null;\r\n                    delete this.chart[chartType];\r\n                }\r\n            }\r\n\r\n            this.component.grid && this.component.grid.refixAxisShape(this.component);\r\n\r\n            this._island.refresh(magicOption);\r\n            this._toolbox.refresh(magicOption);\r\n\r\n            magicOption.animation && !magicOption.renderAsImage\r\n                ? this._zr.refresh()\r\n                : this._zr.render();\r\n\r\n            var imgId = 'IMG' + this.id;\r\n            var img = document.getElementById(imgId);\r\n            if (magicOption.renderAsImage && _canvasSupported) {\r\n                // IE8- 不支持图片渲染形式\r\n                if (img) {\r\n                    // 已经渲染过则更新显示\r\n                    img.src = this.getDataURL(magicOption.renderAsImage);\r\n                }\r\n                else {\r\n                    // 没有渲染过插入img dom\r\n                    img = this.getImage(magicOption.renderAsImage);\r\n                    img.id = imgId;\r\n                    img.style.position = 'absolute';\r\n                    img.style.left = 0;\r\n                    img.style.top = 0;\r\n                    this.dom.firstChild.appendChild(img);\r\n                }\r\n                this.un();\r\n                this._zr.un();\r\n                this._disposeChartList();\r\n                this._zr.clear();\r\n            }\r\n            else if (img) {\r\n                // 删除可能存在的img\r\n                img.parentNode.removeChild(img);\r\n            }\r\n            img = null;\r\n\r\n            this._option = magicOption;\r\n        },\r\n\r\n        /**\r\n         * 还原\r\n         */\r\n        restore: function () {\r\n            this._clearEffect();\r\n            this._option = zrUtil.clone(this._optionRestore);\r\n            this._disposeChartList();\r\n            this._island.clear();\r\n            this._toolbox.reset(this._option, true);\r\n            this._render(this._option);\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         * @param {Object=} param，可选参数，用于附带option，内部同步用，外部不建议带入数据修改，无法同步\r\n         */\r\n        refresh: function (param) {\r\n            this._clearEffect();\r\n            param = param || {};\r\n            var magicOption = param.option;\r\n\r\n            // 外部调用的refresh且有option带入\r\n            if (!this._refreshInside && magicOption) {\r\n                // 做简单的差异合并去同步内部持有的数据克隆，不建议带入数据\r\n                // 开启数据区域缩放、拖拽重计算、数据视图可编辑模式情况下，当用户产生了数据变化后无法同步\r\n                // 如有带入option存在数据变化，请重新setOption\r\n                magicOption = this.getOption();\r\n                zrUtil.merge(magicOption, param.option, true);\r\n                zrUtil.merge(this._optionRestore, param.option, true);\r\n                this._toolbox.reset(magicOption);\r\n            }\r\n\r\n            this._island.refresh(magicOption);\r\n            this._toolbox.refresh(magicOption);\r\n\r\n            // 停止动画\r\n            this._zr.clearAnimation();\r\n            // 先来后到，安顺序刷新各种图表，图表内部refresh优化检查magicOption，无需更新则不更新~\r\n            for (var i = 0, l = this._chartList.length; i < l; i++) {\r\n                this._chartList[i].refresh && this._chartList[i].refresh(magicOption);\r\n            }\r\n            this.component.grid && this.component.grid.refixAxisShape(this.component);\r\n            this._zr.refresh();\r\n        },\r\n\r\n        /**\r\n         * 释放图表实例\r\n         */\r\n        _disposeChartList: function () {\r\n            this._clearEffect();\r\n\r\n            // 停止动画\r\n            this._zr.clearAnimation();\r\n\r\n            var len = this._chartList.length;\r\n            while (len--) {\r\n                var chart = this._chartList[len];\r\n\r\n                if (chart) {\r\n                    var chartType = chart.type;\r\n                    this.chart[chartType] && delete this.chart[chartType];\r\n                    this.component[chartType] && delete this.component[chartType];\r\n                    chart.dispose && chart.dispose();\r\n                }\r\n            }\r\n\r\n            this._chartList = [];\r\n        },\r\n\r\n        /**\r\n         * 非图表全局属性merge~~\r\n         */\r\n        _mergeGlobalConifg: function (magicOption) {\r\n            var mergeList = [\r\n                // 背景颜色\r\n                'backgroundColor',\r\n\r\n                // 拖拽重计算相关\r\n                'calculable', 'calculableColor', 'calculableHolderColor',\r\n\r\n                // 孤岛显示连接符\r\n                'nameConnector', 'valueConnector',\r\n\r\n                // 动画相关\r\n                'animation', 'animationThreshold',\r\n                'animationDuration', 'animationDurationUpdate',\r\n                'animationEasing', 'addDataAnimation',\r\n\r\n                // 默认标志图形类型列表\r\n                'symbolList',\r\n\r\n                // 降低图表内元素拖拽敏感度，单位ms，不建议外部干预\r\n                'DRAG_ENABLE_TIME'\r\n            ];\r\n\r\n            var len = mergeList.length;\r\n            while (len--) {\r\n                var mergeItem = mergeList[len];\r\n                if (magicOption[mergeItem] == null) {\r\n                    magicOption[mergeItem] = this._themeConfig[mergeItem] != null\r\n                        ? this._themeConfig[mergeItem]\r\n                        : ecConfig[mergeItem];\r\n                }\r\n            }\r\n\r\n            // 数值系列的颜色列表，不传则采用内置颜色，可配数组，借用zrender实例注入，会有冲突风险，先这样\r\n            var themeColor = magicOption.color;\r\n            if (!(themeColor && themeColor.length)) {\r\n                themeColor = this._themeConfig.color || ecConfig.color;\r\n            }\r\n\r\n            this._zr.getColor = function (idx) {\r\n                var zrColor = __webpack_require__(3);\r\n                return zrColor.getColor(idx, themeColor);\r\n            };\r\n\r\n            if (!_canvasSupported) {\r\n                // 不支持Canvas的强制关闭动画\r\n                magicOption.animation = false;\r\n                magicOption.addDataAnimation = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 万能接口，配置图表实例任何可配置选项，多次调用时option选项做merge处理\r\n         * @param {Object} option\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并\r\n         */\r\n        setOption: function (option, notMerge) {\r\n            if (!option.timeline) {\r\n                return this._setOption(option, notMerge);\r\n            }\r\n            else {\r\n                return this._setTimelineOption(option);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 万能接口，配置图表实例任何可配置选项，多次调用时option选项做merge处理\r\n         * @param {Object} option\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并\r\n         * @param {boolean=} 默认false。keepTimeLine 表示从timeline组件调用而来，\r\n         *                   表示当前行为是timeline的数据切换，保持timeline，\r\n         *                   反之销毁timeline。 详见Issue #1601\r\n         */\r\n        _setOption: function (option, notMerge, keepTimeLine) {\r\n            if (!notMerge && this._option) {\r\n                this._option = zrUtil.merge(\r\n                    this.getOption(),\r\n                    zrUtil.clone(option),\r\n                    true\r\n                );\r\n            }\r\n            else {\r\n                this._option = zrUtil.clone(option);\r\n                !keepTimeLine && this._timeline && this._timeline.dispose();\r\n            }\r\n\r\n            this._optionRestore = zrUtil.clone(this._option);\r\n\r\n            if (!this._option.series || this._option.series.length === 0) {\r\n                this._zr.clear();\r\n                return;\r\n            }\r\n\r\n            if (this.component.dataZoom                         // 存在dataZoom控件\r\n                && (this._option.dataZoom                       // 并且新option也存在\r\n                    || (this._option.toolbox\r\n                        && this._option.toolbox.feature\r\n                        && this._option.toolbox.feature.dataZoom\r\n                        && this._option.toolbox.feature.dataZoom.show\r\n                    )\r\n                )\r\n            ) {\r\n                // dataZoom同步数据\r\n                this.component.dataZoom.syncOption(this._option);\r\n            }\r\n            this._toolbox.reset(this._option);\r\n            this._render(this._option);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 返回内部持有的当前显示option克隆\r\n         */\r\n        getOption: function () {\r\n            var magicOption = zrUtil.clone(this._option);\r\n\r\n            var self = this;\r\n            function restoreOption(prop) {\r\n                var restoreSource = self._optionRestore[prop];\r\n\r\n                if (restoreSource) {\r\n                    if (restoreSource instanceof Array) {\r\n                        var len = restoreSource.length;\r\n                        while (len--) {\r\n                            magicOption[prop][len].data = zrUtil.clone(\r\n                                restoreSource[len].data\r\n                            );\r\n                        }\r\n                    }\r\n                    else {\r\n                        magicOption[prop].data = zrUtil.clone(restoreSource.data);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 横轴数据还原\r\n            restoreOption('xAxis');\r\n\r\n            // 纵轴数据还原\r\n            restoreOption('yAxis');\r\n\r\n            // 系列数据还原\r\n            restoreOption('series');\r\n\r\n            return magicOption;\r\n        },\r\n\r\n        /**\r\n         * 数据设置快捷接口\r\n         * @param {Array} series\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并。\r\n         */\r\n        setSeries: function (series, notMerge) {\r\n            if (!notMerge) {\r\n                this.setOption({series: series});\r\n            }\r\n            else {\r\n                this._option.series = series;\r\n                this.setOption(this._option, notMerge);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 返回内部持有的当前显示series克隆\r\n         */\r\n        getSeries: function () {\r\n            return this.getOption().series;\r\n        },\r\n\r\n        /**\r\n         * timelineOption接口，配置图表实例任何可配置选项\r\n         * @param {Object} option\r\n         */\r\n        _setTimelineOption: function(option) {\r\n            this._timeline && this._timeline.dispose();\r\n            var Timeline = __webpack_require__(81);\r\n            var timeline = new Timeline(\r\n                this._themeConfig, this._messageCenter, this._zr, option, this\r\n            );\r\n            this._timeline = timeline;\r\n            this.component.timeline = this._timeline;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态数据添加\r\n         * 形参为单组数据参数，多组时为数据，内容同[seriesIdx, data, isShift, additionData]\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {number | Object} data 增加数据\r\n         * @param {boolean=} isHead 是否队头加入，默认，不指定或false时为队尾插入\r\n         * @param {boolean=} dataGrow 是否增长数据队列长度，默认，不指定或false时移出目标数组对位数据\r\n         * @param {string=} additionData 是否增加类目轴(饼图为图例)数据，附加操作同isHead和dataGrow\r\n         */\r\n        addData: function (seriesIdx, data, isHead, dataGrow, additionData) {\r\n            var params = seriesIdx instanceof Array\r\n                ? seriesIdx\r\n                : [[seriesIdx, data, isHead, dataGrow, additionData]];\r\n\r\n            //this._optionRestore 和 magicOption 都要同步\r\n            var magicOption = this.getOption();\r\n            var optionRestore = this._optionRestore;\r\n            var self = this;\r\n            for (var i = 0, l = params.length; i < l; i++) {\r\n                seriesIdx = params[i][0];\r\n                data = params[i][1];\r\n                isHead = params[i][2];\r\n                dataGrow = params[i][3];\r\n                additionData = params[i][4];\r\n\r\n                var seriesItem = optionRestore.series[seriesIdx];\r\n                var inMethod = isHead ? 'unshift' : 'push';\r\n                var outMethod = isHead ? 'pop' : 'shift';\r\n                if (seriesItem) {\r\n                    var seriesItemData = seriesItem.data;\r\n                    var mSeriesItemData = magicOption.series[seriesIdx].data;\r\n\r\n                    seriesItemData[inMethod](data);\r\n                    mSeriesItemData[inMethod](data);\r\n                    if (!dataGrow) {\r\n                        seriesItemData[outMethod]();\r\n                        data = mSeriesItemData[outMethod]();\r\n                    }\r\n\r\n                    if (additionData != null) {\r\n                        var legend;\r\n                        var legendData;\r\n\r\n                        if (seriesItem.type === ecConfig.CHART_TYPE_PIE\r\n                            && (legend = optionRestore.legend)\r\n                            && (legendData = legend.data)\r\n                        ) {\r\n                            var mLegendData = magicOption.legend.data;\r\n                            legendData[inMethod](additionData);\r\n                            mLegendData[inMethod](additionData);\r\n\r\n                            if (!dataGrow) {\r\n                                var legendDataIdx = zrUtil.indexOf(legendData, data.name);\r\n                                legendDataIdx != -1 && legendData.splice(legendDataIdx, 1);\r\n\r\n                                legendDataIdx = zrUtil.indexOf(mLegendData, data.name);\r\n                                legendDataIdx != -1 && mLegendData.splice(legendDataIdx, 1);\r\n                            }\r\n                        }\r\n                        else if (optionRestore.xAxis != null && optionRestore.yAxis != null) {\r\n                            // x轴类目\r\n                            var axisData;\r\n                            var mAxisData;\r\n                            var axisIdx = seriesItem.xAxisIndex || 0;\r\n\r\n                            if (optionRestore.xAxis[axisIdx].type == null\r\n                                || optionRestore.xAxis[axisIdx].type === 'category'\r\n                            ) {\r\n                                axisData = optionRestore.xAxis[axisIdx].data;\r\n                                mAxisData = magicOption.xAxis[axisIdx].data;\r\n\r\n                                axisData[inMethod](additionData);\r\n                                mAxisData[inMethod](additionData);\r\n                                if (!dataGrow) {\r\n                                    axisData[outMethod]();\r\n                                    mAxisData[outMethod]();\r\n                                }\r\n                            }\r\n\r\n                            // y轴类目\r\n                            axisIdx = seriesItem.yAxisIndex || 0;\r\n                            if (optionRestore.yAxis[axisIdx].type === 'category') {\r\n                                axisData = optionRestore.yAxis[axisIdx].data;\r\n                                mAxisData = magicOption.yAxis[axisIdx].data;\r\n\r\n                                axisData[inMethod](additionData);\r\n                                mAxisData[inMethod](additionData);\r\n                                if (!dataGrow) {\r\n                                    axisData[outMethod]();\r\n                                    mAxisData[outMethod]();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 同步图表内状态，动画需要\r\n                    this._option.series[seriesIdx].data = magicOption.series[seriesIdx].data;\r\n                }\r\n            }\r\n\r\n            this._zr.clearAnimation();\r\n            var chartList = this._chartList;\r\n            var chartAnimationCount = 0;\r\n            var chartAnimationDone = function () {\r\n                chartAnimationCount--;\r\n                if (chartAnimationCount === 0) {\r\n                    animationDone();\r\n                }\r\n            };\r\n            for (var i = 0, l = chartList.length; i < l; i++) {\r\n                if (magicOption.addDataAnimation && chartList[i].addDataAnimation) {\r\n                    chartAnimationCount++;\r\n                    chartList[i].addDataAnimation(params, chartAnimationDone);\r\n                }\r\n            }\r\n\r\n            // dataZoom同步数据\r\n            this.component.dataZoom && this.component.dataZoom.syncOption(magicOption);\r\n\r\n            this._option = magicOption;\r\n            function animationDone() {\r\n                if (!self._zr) {\r\n                    return; // 已经被释放\r\n                }\r\n                self._zr.clearAnimation();\r\n                for (var i = 0, l = chartList.length; i < l; i++) {\r\n                    // 有addData动画就去掉过渡动画\r\n                    chartList[i].motionlessOnce =\r\n                        magicOption.addDataAnimation && chartList[i].addDataAnimation;\r\n                }\r\n                self._messageCenter.dispatch(\r\n                    ecConfig.EVENT.REFRESH,\r\n                    null,\r\n                    {option: magicOption},\r\n                    self\r\n                );\r\n            }\r\n\r\n            if (!magicOption.addDataAnimation) {\r\n                setTimeout(animationDone, 0);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态[标注 | 标线]添加\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {Object} markData [标注 | 标线]对象，支持多个\r\n         */\r\n        addMarkPoint: function (seriesIdx, markData) {\r\n            return this._addMark(seriesIdx, markData, 'markPoint');\r\n        },\r\n\r\n        addMarkLine: function (seriesIdx, markData) {\r\n            return this._addMark(seriesIdx, markData, 'markLine');\r\n        },\r\n\r\n        _addMark: function (seriesIdx, markData, markType) {\r\n            var series = this._option.series;\r\n            var seriesItem;\r\n\r\n            if (series && (seriesItem = series[seriesIdx])) {\r\n                var seriesR = this._optionRestore.series;\r\n                var seriesRItem = seriesR[seriesIdx];\r\n                var markOpt = seriesItem[markType];\r\n                var markOptR = seriesRItem[markType];\r\n\r\n                markOpt = seriesItem[markType] = markOpt || {data: []};\r\n                markOptR = seriesRItem[markType] = markOptR || {data: []};\r\n\r\n                for (var key in markData) {\r\n                    if (key === 'data') {\r\n                        // 数据concat\r\n                        markOpt.data = markOpt.data.concat(markData.data);\r\n                        markOptR.data = markOptR.data.concat(markData.data);\r\n                    }\r\n                    else if (typeof markData[key] != 'object' || markOpt[key] == null) {\r\n                        // 简单类型或新值直接赋值\r\n                        markOpt[key] = markOptR[key] = markData[key];\r\n                    }\r\n                    else {\r\n                        // 非数据的复杂对象merge\r\n                        zrUtil.merge(markOpt[key], markData[key], true);\r\n                        zrUtil.merge(markOptR[key], markData[key], true);\r\n                    }\r\n                }\r\n\r\n                var chart = this.chart[seriesItem.type];\r\n                chart && chart.addMark(seriesIdx, markData, markType);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态[标注 | 标线]删除\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {string} markName [标注 | 标线]名称\r\n         */\r\n        delMarkPoint: function (seriesIdx, markName) {\r\n            return this._delMark(seriesIdx, markName, 'markPoint');\r\n        },\r\n\r\n        delMarkLine: function (seriesIdx, markName) {\r\n            return this._delMark(seriesIdx, markName, 'markLine');\r\n        },\r\n\r\n        _delMark: function (seriesIdx, markName, markType) {\r\n            var series = this._option.series;\r\n            var seriesItem;\r\n            var mark;\r\n            var dataArray;\r\n\r\n            if (!(\r\n                    series\r\n                    && (seriesItem = series[seriesIdx])\r\n                    && (mark = seriesItem[markType])\r\n                    && (dataArray = mark.data)\r\n                )\r\n            ) {\r\n                return this;\r\n            }\r\n\r\n            markName = markName.split(' > ');\r\n            var targetIndex = -1;\r\n\r\n            for (var i = 0, l = dataArray.length; i < l; i++) {\r\n                var dataItem = dataArray[i];\r\n                if (dataItem instanceof Array) {\r\n                    if (dataItem[0].name === markName[0]\r\n                        && dataItem[1].name === markName[1]\r\n                    ) {\r\n                        targetIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                else if (dataItem.name === markName[0]) {\r\n                    targetIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (targetIndex > -1) {\r\n                dataArray.splice(targetIndex, 1);\r\n                this._optionRestore.series[seriesIdx][markType].data.splice(targetIndex, 1);\r\n\r\n                var chart = this.chart[seriesItem.type];\r\n                chart && chart.delMark(seriesIdx, markName.join(' > '), markType);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 获取当前dom\r\n         */\r\n        getDom: function () {\r\n            return this.dom;\r\n        },\r\n\r\n        /**\r\n         * 获取当前zrender实例，可用于添加额为的shape和深度控制\r\n         */\r\n        getZrender: function () {\r\n            return this._zr;\r\n        },\r\n\r\n        /**\r\n         * 获取Base64图片dataURL\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return imgDataURL\r\n         */\r\n        getDataURL: function (imgType) {\r\n            if (!_canvasSupported) {\r\n                return '';\r\n            }\r\n\r\n            if (this._chartList.length === 0) {\r\n                // 渲染为图片\r\n                var imgId = 'IMG' + this.id;\r\n                var img = document.getElementById(imgId);\r\n                if (img) {\r\n                    return img.src;\r\n                }\r\n            }\r\n\r\n            // 清除可能存在的tooltip元素\r\n            var tooltip = this.component.tooltip;\r\n            tooltip && tooltip.hideTip();\r\n\r\n            switch (imgType) {\r\n                case 'jpeg':\r\n                    break;\r\n                default:\r\n                    imgType = 'png';\r\n            }\r\n\r\n            var bgColor = this._option.backgroundColor;\r\n            if (bgColor && bgColor.replace(' ','') === 'rgba(0,0,0,0)') {\r\n                bgColor = '#fff';\r\n            }\r\n\r\n            return this._zr.toDataURL('image/' + imgType, bgColor);\r\n        },\r\n\r\n        /**\r\n         * 获取img\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return img dom\r\n         */\r\n        getImage: function (imgType) {\r\n            var title = this._optionRestore.title;\r\n            var imgDom = document.createElement('img');\r\n            imgDom.src = this.getDataURL(imgType);\r\n            imgDom.title = (title && title.text) || 'ECharts';\r\n            return imgDom;\r\n        },\r\n\r\n        /**\r\n         * 获取多图联动的Base64图片dataURL\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return imgDataURL\r\n         */\r\n        getConnectedDataURL: function (imgType) {\r\n            if (!this.isConnected()) {\r\n                return this.getDataURL(imgType);\r\n            }\r\n\r\n            var tempDom = this.dom;\r\n            var imgList = {\r\n                'self': {\r\n                    img: this.getDataURL(imgType),\r\n                    left: tempDom.offsetLeft,\r\n                    top: tempDom.offsetTop,\r\n                    right: tempDom.offsetLeft + tempDom.offsetWidth,\r\n                    bottom: tempDom.offsetTop + tempDom.offsetHeight\r\n                }\r\n            };\r\n\r\n            var minLeft = imgList.self.left;\r\n            var minTop = imgList.self.top;\r\n            var maxRight = imgList.self.right;\r\n            var maxBottom = imgList.self.bottom;\r\n\r\n            for (var c in this._connected) {\r\n                tempDom = this._connected[c].getDom();\r\n                imgList[c] = {\r\n                    img: this._connected[c].getDataURL(imgType),\r\n                    left: tempDom.offsetLeft,\r\n                    top: tempDom.offsetTop,\r\n                    right: tempDom.offsetLeft + tempDom.offsetWidth,\r\n                    bottom: tempDom.offsetTop + tempDom.offsetHeight\r\n                };\r\n\r\n                minLeft = Math.min(minLeft, imgList[c].left);\r\n                minTop = Math.min(minTop, imgList[c].top);\r\n                maxRight = Math.max(maxRight, imgList[c].right);\r\n                maxBottom = Math.max(maxBottom, imgList[c].bottom);\r\n            }\r\n\r\n            var zrDom = document.createElement('div');\r\n            zrDom.style.position = 'absolute';\r\n            zrDom.style.left = '-4000px';\r\n            zrDom.style.width = (maxRight - minLeft) + 'px';\r\n            zrDom.style.height = (maxBottom - minTop) + 'px';\r\n            document.body.appendChild(zrDom);\r\n\r\n            var zrImg = __webpack_require__(24).init(zrDom);\r\n\r\n            var ImageShape = __webpack_require__(12);\r\n            for (var c in imgList) {\r\n                zrImg.addShape(new ImageShape({\r\n                    style: {\r\n                        x: imgList[c].left - minLeft,\r\n                        y: imgList[c].top - minTop,\r\n                        image: imgList[c].img\r\n                    }\r\n                }));\r\n            }\r\n\r\n            zrImg.render();\r\n            var bgColor = this._option.backgroundColor;\r\n            if (bgColor && bgColor.replace(/ /g, '') === 'rgba(0,0,0,0)') {\r\n                bgColor = '#fff';\r\n            }\r\n\r\n            var image = zrImg.toDataURL('image/png', bgColor);\r\n\r\n            setTimeout(function () {\r\n                zrImg.dispose();\r\n                zrDom.parentNode.removeChild(zrDom);\r\n                zrDom = null;\r\n            }, 100);\r\n\r\n            return image;\r\n        },\r\n\r\n        /**\r\n         * 获取多图联动的img\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return img dom\r\n         */\r\n        getConnectedImage: function (imgType) {\r\n            var title = this._optionRestore.title;\r\n            var imgDom = document.createElement('img');\r\n            imgDom.src = this.getConnectedDataURL(imgType);\r\n            imgDom.title = (title && title.text) || 'ECharts';\r\n            return imgDom;\r\n        },\r\n\r\n        /**\r\n         * 外部接口绑定事件\r\n         * @param {Object} eventName 事件名称\r\n         * @param {Object} eventListener 事件响应函数\r\n         */\r\n        on: function (eventName, eventListener) {\r\n            this._messageCenterOutSide.bind(eventName, eventListener, this);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 外部接口解除事件绑定\r\n         * @param {Object} eventName 事件名称\r\n         * @param {Object} eventListener 事件响应函数\r\n         */\r\n        un: function (eventName, eventListener) {\r\n            this._messageCenterOutSide.unbind(eventName, eventListener);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 多图联动\r\n         * @param connectTarget{ECharts | Array <ECharts>} connectTarget 联动目标\r\n         */\r\n        connect: function (connectTarget) {\r\n            if (!connectTarget) {\r\n                return this;\r\n            }\r\n\r\n            if (!this._connected) {\r\n                this._connected = {};\r\n            }\r\n\r\n            if (connectTarget instanceof Array) {\r\n                for (var i = 0, l = connectTarget.length; i < l; i++) {\r\n                    this._connected[connectTarget[i].id] = connectTarget[i];\r\n                }\r\n            }\r\n            else {\r\n                this._connected[connectTarget.id] = connectTarget;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 解除多图联动\r\n         * @param connectTarget{ECharts | Array <ECharts>} connectTarget 解除联动目标\r\n         */\r\n        disConnect: function (connectTarget) {\r\n            if (!connectTarget || !this._connected) {\r\n                return this;\r\n            }\r\n\r\n            if (connectTarget instanceof Array) {\r\n                for (var i = 0, l = connectTarget.length; i < l; i++) {\r\n                    delete this._connected[connectTarget[i].id];\r\n                }\r\n            }\r\n            else {\r\n                delete this._connected[connectTarget.id];\r\n            }\r\n\r\n            for (var k in this._connected) {\r\n                return k, this; // 非空\r\n            }\r\n\r\n            // 空，转为标志位\r\n            this._connected = false;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 联动事件响应\r\n         */\r\n        connectedEventHandler: function (param) {\r\n            if (param.__echartsId != this.id) {\r\n                // 来自其他联动图表的事件\r\n                this._onevent(param);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 是否存在多图联动\r\n         */\r\n        isConnected: function () {\r\n            return !!this._connected;\r\n        },\r\n\r\n        /**\r\n         * 显示loading过渡\r\n         * @param {Object} loadingOption\r\n         */\r\n        showLoading: function (loadingOption) {\r\n            var effectList = {\r\n                bar: __webpack_require__(83),\r\n                bubble: __webpack_require__(84),\r\n                dynamicLine: __webpack_require__(85),\r\n                ring: __webpack_require__(86),\r\n                spin: __webpack_require__(87),\r\n                whirling: __webpack_require__(88)\r\n            };\r\n            this._toolbox.hideDataView();\r\n\r\n            loadingOption = loadingOption || {};\r\n\r\n            var textStyle = loadingOption.textStyle || {};\r\n            loadingOption.textStyle = textStyle;\r\n\r\n            var finalTextStyle = zrUtil.merge(\r\n                zrUtil.merge(\r\n                    zrUtil.clone(textStyle),\r\n                    this._themeConfig.textStyle\r\n                ),\r\n                ecConfig.textStyle\r\n            );\r\n\r\n            textStyle.textFont = finalTextStyle.fontStyle + ' '\r\n                                 + finalTextStyle.fontWeight + ' '\r\n                                 + finalTextStyle.fontSize + 'px '\r\n                                 + finalTextStyle.fontFamily;\r\n\r\n            textStyle.text = loadingOption.text\r\n                             || (this._option && this._option.loadingText)\r\n                             || this._themeConfig.loadingText\r\n                             || ecConfig.loadingText;\r\n\r\n            if (loadingOption.x != null) {\r\n                textStyle.x = loadingOption.x;\r\n            }\r\n            if (loadingOption.y != null) {\r\n                textStyle.y = loadingOption.y;\r\n            }\r\n\r\n            loadingOption.effectOption = loadingOption.effectOption || {};\r\n            loadingOption.effectOption.textStyle = textStyle;\r\n\r\n            var Effect = loadingOption.effect;\r\n            if (typeof Effect === 'string' || Effect == null) {\r\n                Effect =  effectList[\r\n                              loadingOption.effect\r\n                              || (this._option && this._option.loadingEffect)\r\n                              || this._themeConfig.loadingEffect\r\n                              || ecConfig.loadingEffect\r\n                          ]\r\n                          || effectList.spin;\r\n            }\r\n            this._zr.showLoading(new Effect(loadingOption.effectOption));\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 隐藏loading过渡\r\n         */\r\n        hideLoading: function () {\r\n            this._zr.hideLoading();\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 主题设置\r\n         */\r\n        setTheme: function (theme) {\r\n            if (theme) {\r\n               if (typeof theme === 'string') {\r\n                    // 默认主题\r\n                    switch (theme) {\r\n                        case 'macarons':\r\n                            theme = __webpack_require__(89);\r\n                            break;\r\n                        case 'infographic':\r\n                            theme = __webpack_require__(90);\r\n                            break;\r\n                        default:\r\n                            theme = {}; // require('./theme/default');\r\n                    }\r\n                }\r\n                else {\r\n                    theme = theme || {};\r\n                }\r\n\r\n                // // 复位默认配置\r\n                // // this._themeConfig会被别的对象引用持有\r\n                // // 所以不能改成this._themeConfig = {};\r\n                // for (var key in this._themeConfig) {\r\n                //     delete this._themeConfig[key];\r\n                // }\r\n                // for (var key in ecConfig) {\r\n                //     this._themeConfig[key] = zrUtil.clone(ecConfig[key]);\r\n                // }\r\n\r\n                // // 颜色数组随theme，不merge\r\n                // theme.color && (this._themeConfig.color = []);\r\n\r\n                // // 默认标志图形类型列表，不merge\r\n                // theme.symbolList && (this._themeConfig.symbolList = []);\r\n\r\n                // // 应用新主题\r\n                // zrUtil.merge(this._themeConfig, zrUtil.clone(theme), true);\r\n                this._themeConfig = theme;\r\n            }\r\n\r\n            if (!_canvasSupported) {   // IE8-\r\n                var textStyle = this._themeConfig.textStyle;\r\n                textStyle && textStyle.fontFamily && textStyle.fontFamily2\r\n                    && (textStyle.fontFamily = textStyle.fontFamily2);\r\n\r\n                textStyle = ecConfig.textStyle;\r\n                textStyle.fontFamily = textStyle.fontFamily2;\r\n            }\r\n\r\n            this._timeline && this._timeline.setTheme(true);\r\n            this._optionRestore && this.restore();\r\n        },\r\n\r\n        /**\r\n         * 视图区域大小变化更新，不默认绑定，供使用方按需调用\r\n         */\r\n        resize: function () {\r\n            var self = this;\r\n            return function(){\r\n                self._clearEffect();\r\n                self._zr.resize();\r\n                if (self._option && self._option.renderAsImage && _canvasSupported) {\r\n                    // 渲染为图片重走render模式\r\n                    self._render(self._option);\r\n                    return self;\r\n                }\r\n                // 停止动画\r\n                self._zr.clearAnimation();\r\n                self._island.resize();\r\n                self._toolbox.resize();\r\n                self._timeline && self._timeline.resize();\r\n                // 先来后到，不能仅刷新自己，也不能在上一个循环中刷新，如坐标系数据改变会影响其他图表的大小\r\n                // 所以安顺序刷新各种图表，图表内部refresh优化无需更新则不更新~\r\n                for (var i = 0, l = self._chartList.length; i < l; i++) {\r\n                    self._chartList[i].resize && self._chartList[i].resize();\r\n                }\r\n                self.component.grid && self.component.grid.refixAxisShape(self.component);\r\n                self._zr.refresh();\r\n                self._messageCenter.dispatch(ecConfig.EVENT.RESIZE, null, null, self);\r\n                return self;\r\n            };\r\n        },\r\n\r\n        _clearEffect: function() {\r\n            this._zr.modLayer(ecConfig.EFFECT_ZLEVEL, { motionBlur: false });\r\n            this._zr.painter.clearLayer(ecConfig.EFFECT_ZLEVEL);\r\n        },\r\n\r\n        /**\r\n         * 清除已渲染内容 ，clear后echarts实例可用\r\n         */\r\n        clear: function () {\r\n            this._disposeChartList();\r\n            this._zr.clear();\r\n            this._option = {};\r\n            this._optionRestore = {};\r\n            this.dom.style.backgroundColor = null;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 释放，dispose后echarts实例不可用\r\n         */\r\n        dispose: function () {\r\n            var key = this.dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n            key && delete _instances[key];\r\n\r\n            this._island.dispose();\r\n            this._toolbox.dispose();\r\n            this._timeline && this._timeline.dispose();\r\n            this._messageCenter.unbind();\r\n            this.clear();\r\n            this._zr.dispose();\r\n            this._zr = null;\r\n        }\r\n    };\r\n\r\n    return self;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Handler控制模块\r\n * @module zrender/Handler\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n *\r\n */\r\n// TODO mouseover 只触发一次\r\n// 目前的高亮因为每次都需要 addHover 所以不能只是开始的时候触发一次\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n        'use strict';\r\n\r\n        var config = __webpack_require__(10);\r\n        var env = __webpack_require__(15);\r\n        var eventTool = __webpack_require__(9);\r\n        var util = __webpack_require__(0);\r\n        var vec2 = __webpack_require__(5);\r\n        var mat2d = __webpack_require__(21);\r\n        var EVENT = config.EVENT;\r\n\r\n        var Eventful = __webpack_require__(20);\r\n\r\n        var domHandlerNames = [\r\n            'resize', 'click', 'dblclick',\r\n            'mousewheel', 'mousemove', 'mouseout', 'mouseup', 'mousedown',\r\n            'touchstart', 'touchend', 'touchmove'\r\n        ];\r\n\r\n        var isZRenderElement = function (event) {\r\n            // 暂时忽略 IE8-\r\n            if (window.G_vmlCanvasManager) {\r\n                return true;\r\n            }\r\n\r\n            event = event || window.event;\r\n\r\n            // 进入对象优先~\r\n            var target = event.toElement\r\n                          || event.relatedTarget\r\n                          || event.srcElement\r\n                          || event.target;\r\n\r\n            return target && target.className.match(config.elementClassName)\r\n        };\r\n\r\n        var domHandlers = {\r\n            /**\r\n             * 窗口大小改变响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            resize: function (event) {\r\n                event = event || window.event;\r\n                this._lastHover = null;\r\n                this._isMouseDown = 0;\r\n                \r\n                // 分发config.EVENT.RESIZE事件，global\r\n                this.dispatch(EVENT.RESIZE, event);\r\n            },\r\n\r\n            /**\r\n             * 点击响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            click: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n\r\n                // 分发config.EVENT.CLICK事件\r\n                var _lastHover = this._lastHover;\r\n                if ((_lastHover && _lastHover.clickable)\r\n                    || !_lastHover\r\n                ) {\r\n\r\n                    // 判断没有发生拖拽才触发click事件\r\n                    if (this._clickThreshold < 5) {\r\n                        this._dispatchAgency(_lastHover, EVENT.CLICK, event);\r\n                    }\r\n                }\r\n\r\n                this._mousemoveHandler(event);\r\n            },\r\n            \r\n            /**\r\n             * 双击响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            dblclick: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = event || window.event;\r\n                event = this._zrenderEventFixed(event);\r\n\r\n                // 分发config.EVENT.DBLCLICK事件\r\n                var _lastHover = this._lastHover;\r\n                if ((_lastHover && _lastHover.clickable)\r\n                    || !_lastHover\r\n                ) {\r\n\r\n                    // 判断没有发生拖拽才触发dblclick事件\r\n                    if (this._clickThreshold < 5) {\r\n                        this._dispatchAgency(_lastHover, EVENT.DBLCLICK, event);\r\n                    }\r\n                }\r\n\r\n                this._mousemoveHandler(event);\r\n            },\r\n            \r\n\r\n            /**\r\n             * 鼠标滚轮响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mousewheel: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n\r\n                // http://www.sitepoint.com/html5-javascript-mouse-wheel/\r\n                // https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/mousewheel\r\n                var delta = event.wheelDelta // Webkit\r\n                            || -event.detail; // Firefox\r\n                var scale = delta > 0 ? 1.1 : 1 / 1.1;\r\n\r\n                var needsRefresh = false;\r\n\r\n                var mouseX = this._mouseX;\r\n                var mouseY = this._mouseY;\r\n                this.painter.eachBuildinLayer(function (layer) {\r\n                    var pos = layer.position;\r\n                    if (layer.zoomable) {\r\n                        layer.__zoom = layer.__zoom || 1;\r\n                        var newZoom = layer.__zoom;\r\n                        newZoom *= scale;\r\n                        newZoom = Math.max(\r\n                            Math.min(layer.maxZoom, newZoom),\r\n                            layer.minZoom\r\n                        );\r\n                        scale = newZoom / layer.__zoom;\r\n                        layer.__zoom = newZoom;\r\n                        // Keep the mouse center when scaling\r\n                        pos[0] -= (mouseX - pos[0]) * (scale - 1);\r\n                        pos[1] -= (mouseY - pos[1]) * (scale - 1);\r\n                        layer.scale[0] *= scale;\r\n                        layer.scale[1] *= scale;\r\n                        layer.dirty = true;\r\n                        needsRefresh = true;\r\n\r\n                        // Prevent browser default scroll action \r\n                        eventTool.stop(event);\r\n                    }\r\n                });\r\n                if (needsRefresh) {\r\n                    this.painter.refresh();\r\n                }\r\n\r\n                // 分发config.EVENT.MOUSEWHEEL事件\r\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEWHEEL, event);\r\n                this._mousemoveHandler(event);\r\n            },\r\n\r\n            /**\r\n             * 鼠标（手指）移动响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mousemove: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                if (this.painter.isLoading()) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n                this._lastX = this._mouseX;\r\n                this._lastY = this._mouseY;\r\n                this._mouseX = eventTool.getX(event);\r\n                this._mouseY = eventTool.getY(event);\r\n                var dx = this._mouseX - this._lastX;\r\n                var dy = this._mouseY - this._lastY;\r\n\r\n                // 可能出现config.EVENT.DRAGSTART事件\r\n                // 避免手抖点击误认为拖拽\r\n                // if (this._mouseX - this._lastX > 1 || this._mouseY - this._lastY > 1) {\r\n                this._processDragStart(event);\r\n                // }\r\n                this._hasfound = 0;\r\n                this._event = event;\r\n\r\n                this._iterateAndFindHover();\r\n\r\n                // 找到的在迭代函数里做了处理，没找到得在迭代完后处理\r\n                if (!this._hasfound) {\r\n                    // 过滤首次拖拽产生的mouseout和dragLeave\r\n                    if (!this._draggingTarget\r\n                        || (this._lastHover && this._lastHover != this._draggingTarget)\r\n                    ) {\r\n                        // 可能出现config.EVENT.MOUSEOUT事件\r\n                        this._processOutShape(event);\r\n\r\n                        // 可能出现config.EVENT.DRAGLEAVE事件\r\n                        this._processDragLeave(event);\r\n                    }\r\n\r\n                    this._lastHover = null;\r\n                    this.storage.delHover();\r\n                    this.painter.clearHover();\r\n                }\r\n\r\n                // set cursor for root element\r\n                var cursor = 'default';\r\n\r\n                // 如果存在拖拽中元素，被拖拽的图形元素最后addHover\r\n                if (this._draggingTarget) {\r\n                    this.storage.drift(this._draggingTarget.id, dx, dy);\r\n                    this._draggingTarget.modSelf();\r\n                    this.storage.addHover(this._draggingTarget);\r\n\r\n                    // 拖拽不触发click事件\r\n                    this._clickThreshold++;\r\n                }\r\n                else if (this._isMouseDown) {\r\n                    var needsRefresh = false;\r\n                    // Layer dragging\r\n                    this.painter.eachBuildinLayer(function (layer) {\r\n                        if (layer.panable) {\r\n                            // PENDING\r\n                            cursor = 'move';\r\n                            // Keep the mouse center when scaling\r\n                            layer.position[0] += dx;\r\n                            layer.position[1] += dy;\r\n                            needsRefresh = true;\r\n                            layer.dirty = true;\r\n                        }\r\n                    });\r\n                    if (needsRefresh) {\r\n                        this.painter.refresh();\r\n                    }\r\n                }\r\n\r\n                if (this._draggingTarget || (this._hasfound && this._lastHover.draggable)) {\r\n                    cursor = 'move';\r\n                }\r\n                else if (this._hasfound && this._lastHover.clickable) {\r\n                    cursor = 'pointer';\r\n                }\r\n                this.root.style.cursor = cursor;\r\n\r\n                // 分发config.EVENT.MOUSEMOVE事件\r\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEMOVE, event);\r\n\r\n                if (this._draggingTarget || this._hasfound || this.storage.hasHoverShape()) {\r\n                    this.painter.refreshHover();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 鼠标（手指）离开响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mouseout: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n\r\n                var element = event.toElement || event.relatedTarget;\r\n                if (element != this.root) {\r\n                    while (element && element.nodeType != 9) {\r\n                        // 忽略包含在root中的dom引起的mouseOut\r\n                        if (element == this.root) {\r\n                            this._mousemoveHandler(event);\r\n                            return;\r\n                        }\r\n\r\n                        element = element.parentNode;\r\n                    }\r\n                }\r\n\r\n                event.zrenderX = this._lastX;\r\n                event.zrenderY = this._lastY;\r\n                this.root.style.cursor = 'default';\r\n                this._isMouseDown = 0;\r\n\r\n                this._processOutShape(event);\r\n                this._processDrop(event);\r\n                this._processDragEnd(event);\r\n                if (!this.painter.isLoading()) {\r\n                    this.painter.refreshHover();\r\n                }\r\n                \r\n                this.dispatch(EVENT.GLOBALOUT, event);\r\n            },\r\n\r\n            /**\r\n             * 鼠标（手指）按下响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mousedown: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                // 重置 clickThreshold\r\n                this._clickThreshold = 0;\r\n\r\n                if (this._lastDownButton == 2) {\r\n                    this._lastDownButton = event.button;\r\n                    this._mouseDownTarget = null;\r\n                    // 仅作为关闭右键菜单使用\r\n                    return;\r\n                }\r\n\r\n                this._lastMouseDownMoment = new Date();\r\n                event = this._zrenderEventFixed(event);\r\n                this._isMouseDown = 1;\r\n\r\n                // 分发config.EVENT.MOUSEDOWN事件\r\n                this._mouseDownTarget = this._lastHover;\r\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEDOWN, event);\r\n                this._lastDownButton = event.button;\r\n            },\r\n\r\n            /**\r\n             * 鼠标（手指）抬起响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mouseup: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n                this.root.style.cursor = 'default';\r\n                this._isMouseDown = 0;\r\n                this._mouseDownTarget = null;\r\n\r\n                // 分发config.EVENT.MOUSEUP事件\r\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEUP, event);\r\n                this._processDrop(event);\r\n                this._processDragEnd(event);\r\n            },\r\n\r\n            /**\r\n             * Touch开始响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            touchstart: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                // eventTool.stop(event);// 阻止浏览器默认事件，重要\r\n                event = this._zrenderEventFixed(event, true);\r\n                this._lastTouchMoment = new Date();\r\n\r\n                // 平板补充一次findHover\r\n                this._mobileFindFixed(event);\r\n                this._mousedownHandler(event);\r\n            },\r\n\r\n            /**\r\n             * Touch移动响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            touchmove: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event, true);\r\n                this._mousemoveHandler(event);\r\n                if (this._isDragging) {\r\n                    eventTool.stop(event);// 阻止浏览器默认事件，重要\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Touch结束响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            touchend: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                // eventTool.stop(event);// 阻止浏览器默认事件，重要\r\n                event = this._zrenderEventFixed(event, true);\r\n                this._mouseupHandler(event);\r\n                \r\n                var now = new Date();\r\n                if (now - this._lastTouchMoment < EVENT.touchClickDelay) {\r\n                    this._mobileFindFixed(event);\r\n                    this._clickHandler(event);\r\n                    if (now - this._lastClickMoment < EVENT.touchClickDelay / 2) {\r\n                        this._dblclickHandler(event);\r\n                        if (this._lastHover && this._lastHover.clickable) {\r\n                            eventTool.stop(event);// 阻止浏览器默认事件，重要\r\n                        }\r\n                    }\r\n                    this._lastClickMoment = now;\r\n                }\r\n                this.painter.clearHover();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * bind一个参数的function\r\n         * \r\n         * @inner\r\n         * @param {Function} handler 要bind的function\r\n         * @param {Object} context 运行时this环境\r\n         * @return {Function}\r\n         */\r\n        // function bind1Arg(handler, context) {\r\n        //     return function (e) {\r\n        //         return handler.call(context, e);\r\n        //     };\r\n        // }\r\n        function bind2Arg(handler, context) {\r\n            return function (arg1, arg2) {\r\n                return handler.call(context, arg1, arg2);\r\n            };\r\n        }\r\n\r\n        function bind3Arg(handler, context) {\r\n            return function (arg1, arg2, arg3) {\r\n                return handler.call(context, arg1, arg2, arg3);\r\n            };\r\n        }\r\n        /**\r\n         * 为控制类实例初始化dom 事件处理函数\r\n         * \r\n         * @inner\r\n         * @param {module:zrender/Handler} instance 控制类实例\r\n         */\r\n        function initDomHandler(instance) {\r\n            var len = domHandlerNames.length;\r\n            while (len--) {\r\n                var name = domHandlerNames[len];\r\n                instance['_' + name + 'Handler'] = bind2Arg(domHandlers[name], instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/Handler\r\n         * @constructor\r\n         * @extends module:zrender/mixin/Eventful\r\n         * @param {HTMLElement} root 绘图区域\r\n         * @param {module:zrender/Storage} storage Storage实例\r\n         * @param {module:zrender/Painter} painter Painter实例\r\n         */\r\n        var Handler = function(root, storage, painter) {\r\n            // 添加事件分发器特性\r\n            Eventful.call(this);\r\n\r\n            this.root = root;\r\n            this.storage = storage;\r\n            this.painter = painter;\r\n\r\n            // 各种事件标识的私有变量\r\n            // this._hasfound = false;              //是否找到hover图形元素\r\n            // this._lastHover = null;              //最后一个hover图形元素\r\n            // this._mouseDownTarget = null;\r\n            // this._draggingTarget = null;         //当前被拖拽的图形元素\r\n            // this._isMouseDown = false;\r\n            // this._isDragging = false;\r\n            // this._lastMouseDownMoment;\r\n            // this._lastTouchMoment;\r\n            // this._lastDownButton;\r\n\r\n            this._lastX = \r\n            this._lastY = \r\n            this._mouseX = \r\n            this._mouseY = 0;\r\n\r\n            this._findHover = bind3Arg(findHover, this);\r\n            this._domHover = painter.getDomHover();\r\n            initDomHandler(this);\r\n\r\n            // 初始化，事件绑定，支持的所有事件都由如下原生事件计算得来\r\n            if (window.addEventListener) {\r\n                window.addEventListener('resize', this._resizeHandler);\r\n                \r\n                if (env.os.tablet || env.os.phone) {\r\n                    // mobile支持\r\n                    root.addEventListener('touchstart', this._touchstartHandler);\r\n                    root.addEventListener('touchmove', this._touchmoveHandler);\r\n                    root.addEventListener('touchend', this._touchendHandler);\r\n                }\r\n                else {\r\n                    // mobile的click/move/up/down自己模拟\r\n                    root.addEventListener('click', this._clickHandler);\r\n                    root.addEventListener('dblclick', this._dblclickHandler);\r\n                    root.addEventListener('mousewheel', this._mousewheelHandler);\r\n                    root.addEventListener('mousemove', this._mousemoveHandler);\r\n                    root.addEventListener('mousedown', this._mousedownHandler);\r\n                    root.addEventListener('mouseup', this._mouseupHandler);\r\n                } \r\n                root.addEventListener('DOMMouseScroll', this._mousewheelHandler);\r\n                root.addEventListener('mouseout', this._mouseoutHandler);\r\n            }\r\n            else {\r\n                window.attachEvent('onresize', this._resizeHandler);\r\n\r\n                root.attachEvent('onclick', this._clickHandler);\r\n                //root.attachEvent('ondblclick ', this._dblclickHandler);\r\n                root.ondblclick = this._dblclickHandler;\r\n                root.attachEvent('onmousewheel', this._mousewheelHandler);\r\n                root.attachEvent('onmousemove', this._mousemoveHandler);\r\n                root.attachEvent('onmouseout', this._mouseoutHandler);\r\n                root.attachEvent('onmousedown', this._mousedownHandler);\r\n                root.attachEvent('onmouseup', this._mouseupHandler);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 自定义事件绑定\r\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\r\n         * @param {Function} handler 响应函数\r\n         * @param {Object} [context] 响应函数\r\n         */\r\n        Handler.prototype.on = function (eventName, handler, context) {\r\n            this.bind(eventName, handler, context);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 自定义事件解绑\r\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\r\n         * @param {Function} handler 响应函数\r\n         */\r\n        Handler.prototype.un = function (eventName, handler) {\r\n            this.unbind(eventName, handler);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 事件触发\r\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\r\n         * @param {event=} eventArgs event dom事件对象\r\n         */\r\n        Handler.prototype.trigger = function (eventName, eventArgs) {\r\n            switch (eventName) {\r\n                case EVENT.RESIZE:\r\n                case EVENT.CLICK:\r\n                case EVENT.DBLCLICK:\r\n                case EVENT.MOUSEWHEEL:\r\n                case EVENT.MOUSEMOVE:\r\n                case EVENT.MOUSEDOWN:\r\n                case EVENT.MOUSEUP:\r\n                case EVENT.MOUSEOUT:\r\n                    this['_' + eventName + 'Handler'](eventArgs, true);\r\n                    break;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 释放，解绑所有事件\r\n         */\r\n        Handler.prototype.dispose = function () {\r\n            var root = this.root;\r\n\r\n            if (window.removeEventListener) {\r\n                window.removeEventListener('resize', this._resizeHandler);\r\n\r\n                if (env.os.tablet || env.os.phone) {\r\n                    // mobile支持\r\n                    root.removeEventListener('touchstart', this._touchstartHandler);\r\n                    root.removeEventListener('touchmove', this._touchmoveHandler);\r\n                    root.removeEventListener('touchend', this._touchendHandler);\r\n                }\r\n                else {\r\n                    // mobile的click自己模拟\r\n                    root.removeEventListener('click', this._clickHandler);\r\n                    root.removeEventListener('dblclick', this._dblclickHandler);\r\n                    root.removeEventListener('mousewheel', this._mousewheelHandler);\r\n                    root.removeEventListener('mousemove', this._mousemoveHandler);\r\n                    root.removeEventListener('mousedown', this._mousedownHandler);\r\n                    root.removeEventListener('mouseup', this._mouseupHandler);\r\n                }\r\n                root.removeEventListener('DOMMouseScroll', this._mousewheelHandler);\r\n                root.removeEventListener('mouseout', this._mouseoutHandler);\r\n            }\r\n            else {\r\n                window.detachEvent('onresize', this._resizeHandler);\r\n\r\n                root.detachEvent('onclick', this._clickHandler);\r\n                root.detachEvent('dblclick', this._dblclickHandler);\r\n                root.detachEvent('onmousewheel', this._mousewheelHandler);\r\n                root.detachEvent('onmousemove', this._mousemoveHandler);\r\n                root.detachEvent('onmouseout', this._mouseoutHandler);\r\n                root.detachEvent('onmousedown', this._mousedownHandler);\r\n                root.detachEvent('onmouseup', this._mouseupHandler);\r\n            }\r\n\r\n            this.root =\r\n            this._domHover =\r\n            this.storage =\r\n            this.painter = null;\r\n            \r\n            this.un();\r\n        };\r\n\r\n        /**\r\n         * 拖拽开始\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragStart = function (event) {\r\n            var _lastHover = this._lastHover;\r\n\r\n            if (this._isMouseDown\r\n                && _lastHover\r\n                && _lastHover.draggable\r\n                && !this._draggingTarget\r\n                && this._mouseDownTarget == _lastHover\r\n            ) {\r\n                // 拖拽点击生效时长阀门，某些场景需要降低拖拽敏感度\r\n                if (_lastHover.dragEnableTime && \r\n                    new Date() - this._lastMouseDownMoment < _lastHover.dragEnableTime\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                var _draggingTarget = _lastHover;\r\n                this._draggingTarget = _draggingTarget;\r\n                this._isDragging = 1;\r\n\r\n                _draggingTarget.invisible = true;\r\n                this.storage.mod(_draggingTarget.id);\r\n\r\n                // 分发config.EVENT.DRAGSTART事件\r\n                this._dispatchAgency(\r\n                    _draggingTarget,\r\n                    EVENT.DRAGSTART,\r\n                    event\r\n                );\r\n                this.painter.refresh();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽进入目标元素\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragEnter = function (event) {\r\n            if (this._draggingTarget) {\r\n                // 分发config.EVENT.DRAGENTER事件\r\n                this._dispatchAgency(\r\n                    this._lastHover,\r\n                    EVENT.DRAGENTER,\r\n                    event,\r\n                    this._draggingTarget\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽在目标元素上移动\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragOver = function (event) {\r\n            if (this._draggingTarget) {\r\n                // 分发config.EVENT.DRAGOVER事件\r\n                this._dispatchAgency(\r\n                    this._lastHover,\r\n                    EVENT.DRAGOVER,\r\n                    event,\r\n                    this._draggingTarget\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽离开目标元素\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragLeave = function (event) {\r\n            if (this._draggingTarget) {\r\n                // 分发config.EVENT.DRAGLEAVE事件\r\n                this._dispatchAgency(\r\n                    this._lastHover,\r\n                    EVENT.DRAGLEAVE,\r\n                    event,\r\n                    this._draggingTarget\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽在目标元素上完成\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDrop = function (event) {\r\n            if (this._draggingTarget) {\r\n                this._draggingTarget.invisible = false;\r\n                this.storage.mod(this._draggingTarget.id);\r\n                this.painter.refresh();\r\n\r\n                // 分发config.EVENT.DROP事件\r\n                this._dispatchAgency(\r\n                    this._lastHover,\r\n                    EVENT.DROP,\r\n                    event,\r\n                    this._draggingTarget\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽结束\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragEnd = function (event) {\r\n            if (this._draggingTarget) {\r\n                // 分发config.EVENT.DRAGEND事件\r\n                this._dispatchAgency(\r\n                    this._draggingTarget,\r\n                    EVENT.DRAGEND,\r\n                    event\r\n                );\r\n\r\n                this._lastHover = null;\r\n            }\r\n\r\n            this._isDragging = 0;\r\n            this._draggingTarget = null;\r\n        };\r\n\r\n        /**\r\n         * 鼠标在某个图形元素上移动\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processOverShape = function (event) {\r\n            // 分发config.EVENT.MOUSEOVER事件\r\n            this._dispatchAgency(this._lastHover, EVENT.MOUSEOVER, event);\r\n        };\r\n\r\n        /**\r\n         * 鼠标离开某个图形元素\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processOutShape = function (event) {\r\n            // 分发config.EVENT.MOUSEOUT事件\r\n            this._dispatchAgency(this._lastHover, EVENT.MOUSEOUT, event);\r\n        };\r\n\r\n        /**\r\n         * 事件分发代理\r\n         * \r\n         * @private\r\n         * @param {Object} targetShape 目标图形元素\r\n         * @param {string} eventName 事件名称\r\n         * @param {Object} event 事件对象\r\n         * @param {Object=} draggedShape 拖拽事件特有，当前被拖拽图形元素\r\n         */\r\n        Handler.prototype._dispatchAgency = function (targetShape, eventName, event, draggedShape) {\r\n            var eventHandler = 'on' + eventName;\r\n            var eventPacket = {\r\n                type : eventName,\r\n                event : event,\r\n                target : targetShape,\r\n                cancelBubble: false\r\n            };\r\n\r\n            var el = targetShape;\r\n\r\n            if (draggedShape) {\r\n                eventPacket.dragged = draggedShape;\r\n            }\r\n\r\n            while (el) {\r\n                el[eventHandler] \r\n                && (eventPacket.cancelBubble = el[eventHandler](eventPacket));\r\n                el.dispatch(eventName, eventPacket);\r\n\r\n                el = el.parent;\r\n                \r\n                if (eventPacket.cancelBubble) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (targetShape) {\r\n                // 冒泡到顶级 zrender 对象\r\n                if (!eventPacket.cancelBubble) {\r\n                    this.dispatch(eventName, eventPacket);\r\n                }\r\n            }\r\n            else if (!draggedShape) {\r\n                // 无hover目标，无拖拽对象，原生事件分发\r\n                var eveObj = {\r\n                    type: eventName,\r\n                    event: event\r\n                };\r\n                this.dispatch(eventName, eveObj);\r\n                // 分发事件到用户自定义层\r\n                this.painter.eachOtherLayer(function (layer) {\r\n                    if (typeof(layer[eventHandler]) == 'function') {\r\n                        layer[eventHandler](eveObj);\r\n                    }\r\n                    if (layer.dispatch) {\r\n                        layer.dispatch(eventName, eveObj);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 迭代寻找hover shape\r\n         * @private\r\n         * @method\r\n         */\r\n        Handler.prototype._iterateAndFindHover = (function() {\r\n            var invTransform = mat2d.create();\r\n            return function() {\r\n                var list = this.storage.getShapeList();\r\n                var currentZLevel;\r\n                var currentLayer;\r\n                var tmp = [ 0, 0 ];\r\n                for (var i = list.length - 1; i >= 0 ; i--) {\r\n                    var shape = list[i];\r\n\r\n                    if (currentZLevel !== shape.zlevel) {\r\n                        currentLayer = this.painter.getLayer(shape.zlevel, currentLayer);\r\n                        tmp[0] = this._mouseX;\r\n                        tmp[1] = this._mouseY;\r\n\r\n                        if (currentLayer.needTransform) {\r\n                            mat2d.invert(invTransform, currentLayer.transform);\r\n                            vec2.applyTransform(tmp, tmp, invTransform);\r\n                        }\r\n                    }\r\n\r\n                    if (this._findHover(shape, tmp[0], tmp[1])) {\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        })();\r\n        \r\n        // touch指尖错觉的尝试偏移量配置\r\n        var MOBILE_TOUCH_OFFSETS = [\r\n            { x: 10 },\r\n            { x: -20 },\r\n            { x: 10, y: 10 },\r\n            { y: -20 }\r\n        ];\r\n\r\n        // touch有指尖错觉，四向尝试，让touch上的点击更好触发事件\r\n        Handler.prototype._mobileFindFixed = function (event) {\r\n            this._lastHover = null;\r\n            this._mouseX = event.zrenderX;\r\n            this._mouseY = event.zrenderY;\r\n\r\n            this._event = event;\r\n\r\n            this._iterateAndFindHover();\r\n            for (var i = 0; !this._lastHover && i < MOBILE_TOUCH_OFFSETS.length ; i++) {\r\n                var offset = MOBILE_TOUCH_OFFSETS[ i ];\r\n                offset.x && (this._mouseX += offset.x);\r\n                offset.y && (this._mouseY += offset.y);\r\n\r\n                this._iterateAndFindHover();\r\n            }\r\n\r\n            if (this._lastHover) {\r\n                event.zrenderX = this._mouseX;\r\n                event.zrenderY = this._mouseY;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 迭代函数，查找hover到的图形元素并即时做些事件分发\r\n         * \r\n         * @inner\r\n         * @param {Object} shape 图形元素\r\n         * @param {number} x\r\n         * @param {number} y\r\n         */\r\n        function findHover(shape, x, y) {\r\n            if (\r\n                (this._draggingTarget && this._draggingTarget.id == shape.id) // 迭代到当前拖拽的图形上\r\n                || shape.isSilent() // 打酱油的路过，啥都不响应的shape~\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            var event = this._event;\r\n            if (shape.isCover(x, y)) {\r\n                if (shape.hoverable) {\r\n                    this.storage.addHover(shape);\r\n                }\r\n                // 查找是否在 clipShape 中\r\n                var p = shape.parent;\r\n                while (p) {\r\n                    if (p.clipShape && !p.clipShape.isCover(this._mouseX, this._mouseY))  {\r\n                        // 已经被祖先 clip 掉了\r\n                        return false;\r\n                    }\r\n                    p = p.parent;\r\n                }\r\n\r\n                if (this._lastHover != shape) {\r\n                    this._processOutShape(event);\r\n\r\n                    // 可能出现config.EVENT.DRAGLEAVE事件\r\n                    this._processDragLeave(event);\r\n\r\n                    this._lastHover = shape;\r\n\r\n                    // 可能出现config.EVENT.DRAGENTER事件\r\n                    this._processDragEnter(event);\r\n                }\r\n\r\n                this._processOverShape(event);\r\n\r\n                // 可能出现config.EVENT.DRAGOVER\r\n                this._processDragOver(event);\r\n\r\n                this._hasfound = 1;\r\n\r\n                return true;    // 找到则中断迭代查找\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标\r\n         * \r\n         * @private\r\n         */\r\n        Handler.prototype._zrenderEventFixed = function (event, isTouch) {\r\n            if (event.zrenderFixed) {\r\n                return event;\r\n            }\r\n\r\n            if (!isTouch) {\r\n                event = event || window.event;\r\n                // 进入对象优先~\r\n                var target = event.toElement\r\n                              || event.relatedTarget\r\n                              || event.srcElement\r\n                              || event.target;\r\n\r\n                if (target && target != this._domHover) {\r\n                    event.zrenderX = (typeof event.offsetX != 'undefined'\r\n                                        ? event.offsetX\r\n                                        : event.layerX)\r\n                                      + target.offsetLeft;\r\n                    event.zrenderY = (typeof event.offsetY != 'undefined'\r\n                                        ? event.offsetY\r\n                                        : event.layerY)\r\n                                      + target.offsetTop;\r\n                }\r\n            }\r\n            else {\r\n                var touch = event.type != 'touchend'\r\n                                ? event.targetTouches[0]\r\n                                : event.changedTouches[0];\r\n                if (touch) {\r\n                    var rBounding = this.painter._domRoot.getBoundingClientRect();\r\n                    // touch事件坐标是全屏的~\r\n                    event.zrenderX = touch.clientX - rBounding.left;\r\n                    event.zrenderY = touch.clientY - rBounding.top;\r\n                }\r\n            }\r\n\r\n            event.zrenderFixed = 1;\r\n            return event;\r\n        };\r\n\r\n        util.merge(Handler.prototype, Eventful.prototype, true);\r\n\r\n        return Handler;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Painter绘图模块\r\n * @module zrender/Painter\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\r\n !(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        'use strict';\r\n\r\n        var config = __webpack_require__(10);\r\n        var util = __webpack_require__(0);\r\n        // var vec2 = require('./tool/vector');\r\n        var log = __webpack_require__(25);\r\n        // var matrix = require('./tool/matrix');\r\n        var BaseLoadingEffect = __webpack_require__(11);\r\n\r\n        var Layer = __webpack_require__(55);\r\n\r\n        // 返回false的方法，用于避免页面被选中\r\n        function returnFalse() {\r\n            return false;\r\n        }\r\n\r\n        // 什么都不干的空方法\r\n        function doNothing() {}\r\n\r\n        function isLayerValid(layer) {\r\n            if (!layer) {\r\n                return false;\r\n            }\r\n            \r\n            if (layer.isBuildin) {\r\n                return true;\r\n            }\r\n\r\n            if (typeof(layer.resize) !== 'function'\r\n                || typeof(layer.refresh) !== 'function'\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/Painter\r\n         * @constructor\r\n         * @param {HTMLElement} root 绘图容器\r\n         * @param {module:zrender/Storage} storage\r\n         */\r\n        var Painter = function (root, storage) {\r\n            /**\r\n             * 绘图容器\r\n             * @type {HTMLElement}\r\n             */\r\n            this.root = root;\r\n            root.style['-webkit-tap-highlight-color'] = 'transparent';\r\n            root.style['-webkit-user-select'] = 'none';\r\n            root.style['user-select'] = 'none';\r\n            root.style['-webkit-touch-callout'] = 'none';\r\n\r\n            /**\r\n             * @type {module:zrender/Storage}\r\n             */\r\n            this.storage = storage;\r\n\r\n            root.innerHTML = '';\r\n            this._width = this._getWidth(); // 宽，缓存记录\r\n            this._height = this._getHeight(); // 高，缓存记录\r\n\r\n            var domRoot = document.createElement('div');\r\n            this._domRoot = domRoot;\r\n\r\n            // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n            domRoot.style.position = 'relative';\r\n            domRoot.style.overflow = 'hidden';\r\n            domRoot.style.width = this._width + 'px';\r\n            domRoot.style.height = this._height + 'px';\r\n            root.appendChild(domRoot);\r\n\r\n            this._layers = {};\r\n\r\n            this._zlevelList = [];\r\n\r\n            this._layerConfig = {};\r\n\r\n            this._loadingEffect = new BaseLoadingEffect({});\r\n            this.shapeToImage = this._createShapeToImageProcessor();\r\n\r\n            // 创建各层canvas\r\n            // 背景\r\n            this._bgDom = document.createElement('div');\r\n            this._bgDom.style.cssText = [\r\n                'position:absolute;left:0px;top:0px;width:',\r\n                this._width, 'px;height:', this._height + 'px;', \r\n                '-webkit-user-select:none;user-select;none;',\r\n                '-webkit-touch-callout:none;'\r\n            ].join('');\r\n            this._bgDom.setAttribute('data-zr-dom-id', 'bg');\r\n            this._bgDom.className = config.elementClassName;\r\n\r\n            domRoot.appendChild(this._bgDom);\r\n            this._bgDom.onselectstart = returnFalse;\r\n\r\n            // 高亮\r\n            var hoverLayer = new Layer('_zrender_hover_', this);\r\n            this._layers['hover'] = hoverLayer;\r\n            domRoot.appendChild(hoverLayer.dom);\r\n            hoverLayer.initContext();\r\n\r\n            hoverLayer.dom.onselectstart = returnFalse;\r\n            hoverLayer.dom.style['-webkit-user-select'] = 'none';\r\n            hoverLayer.dom.style['user-select'] = 'none';\r\n            hoverLayer.dom.style['-webkit-touch-callout'] = 'none';\r\n\r\n            // Will be injected by zrender instance\r\n            this.refreshNextFrame = null;\r\n        };\r\n\r\n        /**\r\n         * 首次绘图，创建各种dom和context\r\n         * \r\n         * @param {Function} callback 绘画结束后的回调函数\r\n         */\r\n        Painter.prototype.render = function (callback) {\r\n            if (this.isLoading()) {\r\n                this.hideLoading();\r\n            }\r\n            // TODO\r\n            this.refresh(callback, true);\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 刷新\r\n         * @param {Function} callback 刷新结束后的回调函数\r\n         * @param {boolean} paintAll 强制绘制所有shape\r\n         */\r\n        Painter.prototype.refresh = function (callback, paintAll) {\r\n            var list = this.storage.getShapeList(true);\r\n            this._paintList(list, paintAll);\r\n\r\n            // Paint custum layers\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var z = this._zlevelList[i];\r\n                var layer = this._layers[z];\r\n                if (! layer.isBuildin && layer.refresh) {\r\n                    layer.refresh();\r\n                }\r\n            }\r\n\r\n            if (typeof callback == 'function') {\r\n                callback();\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        Painter.prototype._preProcessLayer = function (layer) {\r\n            layer.unusedCount++;\r\n            layer.updateTransform();\r\n        };\r\n\r\n        Painter.prototype._postProcessLayer = function (layer) {\r\n            layer.dirty = false;\r\n            // 删除过期的层\r\n            // PENDING\r\n            // if (layer.unusedCount >= 500) {\r\n            //     this.delLayer(z);\r\n            // }\r\n            if (layer.unusedCount == 1) {\r\n                layer.clear();\r\n            }\r\n        };\r\n \r\n        Painter.prototype._paintList = function (list, paintAll) {\r\n\r\n            if (typeof(paintAll) == 'undefined') {\r\n                paintAll = false;\r\n            }\r\n\r\n            this._updateLayerStatus(list);\r\n\r\n            var currentLayer;\r\n            var currentZLevel;\r\n            var ctx;\r\n\r\n            this.eachBuildinLayer(this._preProcessLayer);\r\n\r\n            // var invTransform = [];\r\n\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                var shape = list[i];\r\n\r\n                // Change draw layer\r\n                if (currentZLevel !== shape.zlevel) {\r\n                    if (currentLayer) {\r\n                        if (currentLayer.needTransform) {\r\n                            ctx.restore();\r\n                        }\r\n                        ctx.flush && ctx.flush();\r\n                    }\r\n\r\n                    currentZLevel = shape.zlevel;\r\n                    currentLayer = this.getLayer(currentZLevel);\r\n\r\n                    if (!currentLayer.isBuildin) {\r\n                        log(\r\n                            'ZLevel ' + currentZLevel\r\n                            + ' has been used by unkown layer ' + currentLayer.id\r\n                        );\r\n                    }\r\n\r\n                    ctx = currentLayer.ctx;\r\n\r\n                    // Reset the count\r\n                    currentLayer.unusedCount = 0;\r\n\r\n                    if (currentLayer.dirty || paintAll) {\r\n                        currentLayer.clear();\r\n                    }\r\n\r\n                    if (currentLayer.needTransform) {\r\n                        ctx.save();\r\n                        currentLayer.setTransform(ctx);\r\n                    }\r\n                }\r\n\r\n                if ((currentLayer.dirty || paintAll) && !shape.invisible) {\r\n                    if (\r\n                        !shape.onbrush\r\n                        || (shape.onbrush && !shape.onbrush(ctx, false))\r\n                    ) {\r\n                        if (config.catchBrushException) {\r\n                            try {\r\n                                shape.brush(ctx, false, this.refreshNextFrame);\r\n                            }\r\n                            catch (error) {\r\n                                log(\r\n                                    error,\r\n                                    'brush error of ' + shape.type,\r\n                                    shape\r\n                                );\r\n                            }\r\n                        }\r\n                        else {\r\n                            shape.brush(ctx, false, this.refreshNextFrame);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                shape.__dirty = false;\r\n            }\r\n\r\n            if (currentLayer) {\r\n                if (currentLayer.needTransform) {\r\n                    ctx.restore();\r\n                }\r\n                ctx.flush && ctx.flush();\r\n            }\r\n\r\n            this.eachBuildinLayer(this._postProcessLayer);\r\n        };\r\n\r\n        /**\r\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\r\n         * @param {number} zlevel\r\n         * @return {module:zrender/Layer}\r\n         */\r\n        Painter.prototype.getLayer = function (zlevel) {\r\n            var layer = this._layers[zlevel];\r\n            if (!layer) {\r\n                // Create a new layer\r\n                layer = new Layer(zlevel, this);\r\n                layer.isBuildin = true;\r\n\r\n                if (this._layerConfig[zlevel]) {\r\n                    util.merge(layer, this._layerConfig[zlevel], true);\r\n                }\r\n\r\n                layer.updateTransform();\r\n\r\n                this.insertLayer(zlevel, layer);\r\n\r\n                // Context is created after dom inserted to document\r\n                // Or excanvas will get 0px clientWidth and clientHeight\r\n                layer.initContext();\r\n            }\r\n\r\n            return layer;\r\n        };\r\n\r\n        Painter.prototype.insertLayer = function (zlevel, layer) {\r\n            if (this._layers[zlevel]) {\r\n                log('ZLevel ' + zlevel + ' has been used already');\r\n                return;\r\n            }\r\n            // Check if is a valid layer\r\n            if (!isLayerValid(layer)) {\r\n                log('Layer of zlevel ' + zlevel + ' is not valid');\r\n                return;\r\n            }\r\n\r\n            var len = this._zlevelList.length;\r\n            var prevLayer = null;\r\n            var i = -1;\r\n            if (len > 0 && zlevel > this._zlevelList[0]) {\r\n                for (i = 0; i < len - 1; i++) {\r\n                    if (\r\n                        this._zlevelList[i] < zlevel\r\n                        && this._zlevelList[i + 1] > zlevel\r\n                    ) {\r\n                        break;\r\n                    }\r\n                }\r\n                prevLayer = this._layers[this._zlevelList[i]];\r\n            }\r\n            this._zlevelList.splice(i + 1, 0, zlevel);\r\n\r\n            var prevDom = prevLayer ? prevLayer.dom : this._bgDom;\r\n            if (prevDom.nextSibling) {\r\n                prevDom.parentNode.insertBefore(\r\n                    layer.dom,\r\n                    prevDom.nextSibling\r\n                );\r\n            }\r\n            else {\r\n                prevDom.parentNode.appendChild(layer.dom);\r\n            }\r\n\r\n            this._layers[zlevel] = layer;\r\n        };\r\n\r\n        // Iterate each layer\r\n        Painter.prototype.eachLayer = function (cb, context) {\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var z = this._zlevelList[i];\r\n                cb.call(context, this._layers[z], z);\r\n            }\r\n        };\r\n\r\n        // Iterate each buildin layer\r\n        Painter.prototype.eachBuildinLayer = function (cb, context) {\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var z = this._zlevelList[i];\r\n                var layer = this._layers[z];\r\n                if (layer.isBuildin) {\r\n                    cb.call(context, layer, z);\r\n                }\r\n            }\r\n        };\r\n\r\n        // Iterate each other layer except buildin layer\r\n        Painter.prototype.eachOtherLayer = function (cb, context) {\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var z = this._zlevelList[i];\r\n                var layer = this._layers[z];\r\n                if (! layer.isBuildin) {\r\n                    cb.call(context, layer, z);\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 获取所有已创建的层\r\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\r\n         */\r\n        Painter.prototype.getLayers = function () {\r\n            return this._layers;\r\n        };\r\n\r\n        Painter.prototype._updateLayerStatus = function (list) {\r\n            \r\n            var layers = this._layers;\r\n\r\n            var elCounts = {};\r\n\r\n            this.eachBuildinLayer(function (layer, z) {\r\n                elCounts[z] = layer.elCount;\r\n                layer.elCount = 0;\r\n            });\r\n\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                var shape = list[i];\r\n                var zlevel = shape.zlevel;\r\n                var layer = layers[zlevel];\r\n                if (layer) {\r\n                    layer.elCount++;\r\n                    // 已经被标记为需要刷新\r\n                    if (layer.dirty) {\r\n                        continue;\r\n                    }\r\n                    layer.dirty = shape.__dirty;\r\n                }\r\n            }\r\n\r\n            // 层中的元素数量有发生变化\r\n            this.eachBuildinLayer(function (layer, z) {\r\n                if (elCounts[z] !== layer.elCount) {\r\n                    layer.dirty = true;\r\n                }\r\n            });\r\n        };\r\n\r\n        /**\r\n         * 指定的图形列表\r\n         * @param {Array.<module:zrender/shape/Base>} shapeList 需要更新的图形元素列表\r\n         * @param {Function} [callback] 视图更新后回调函数\r\n         */\r\n        Painter.prototype.refreshShapes = function (shapeList, callback) {\r\n            for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                var shape = shapeList[i];\r\n                shape.modSelf();\r\n            }\r\n\r\n            this.refresh(callback);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 设置loading特效\r\n         * \r\n         * @param {Object} loadingEffect loading特效\r\n         * @return {Painter}\r\n         */\r\n        Painter.prototype.setLoadingEffect = function (loadingEffect) {\r\n            this._loadingEffect = loadingEffect;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清除hover层外所有内容\r\n         */\r\n        Painter.prototype.clear = function () {\r\n            this.eachBuildinLayer(this._clearLayer);\r\n            return this;\r\n        };\r\n\r\n        Painter.prototype._clearLayer = function (layer) {\r\n            layer.clear();\r\n        };\r\n\r\n        /**\r\n         * 修改指定zlevel的绘制参数\r\n         * \r\n         * @param {string} zlevel\r\n         * @param {Object} config 配置对象\r\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\r\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\r\n         * @param {number} [config.lastFrameAlpha=0.7]\r\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n         * @param {Array.<number>} [position] 层的平移\r\n         * @param {Array.<number>} [rotation] 层的旋转\r\n         * @param {Array.<number>} [scale] 层的缩放\r\n         * @param {boolean} [zoomable=false] 层是否支持鼠标缩放操作\r\n         * @param {boolean} [panable=false] 层是否支持鼠标平移操作\r\n         */\r\n        Painter.prototype.modLayer = function (zlevel, config) {\r\n            if (config) {\r\n                if (!this._layerConfig[zlevel]) {\r\n                    this._layerConfig[zlevel] = config;\r\n                }\r\n                else {\r\n                    util.merge(this._layerConfig[zlevel], config, true);\r\n                }\r\n\r\n                var layer = this._layers[zlevel];\r\n\r\n                if (layer) {\r\n                    util.merge(layer, this._layerConfig[zlevel], true);\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 删除指定层\r\n         * @param {number} zlevel 层所在的zlevel\r\n         */\r\n        Painter.prototype.delLayer = function (zlevel) {\r\n            var layer = this._layers[zlevel];\r\n            if (!layer) {\r\n                return;\r\n            }\r\n            // Save config\r\n            this.modLayer(zlevel, {\r\n                position: layer.position,\r\n                rotation: layer.rotation,\r\n                scale: layer.scale\r\n            });\r\n            layer.dom.parentNode.removeChild(layer.dom);\r\n            delete this._layers[zlevel];\r\n\r\n            this._zlevelList.splice(util.indexOf(this._zlevelList, zlevel), 1);\r\n        };\r\n\r\n        /**\r\n         * 刷新hover层\r\n         */\r\n        Painter.prototype.refreshHover = function () {\r\n            this.clearHover();\r\n            var list = this.storage.getHoverShapes(true);\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                this._brushHover(list[i]);\r\n            }\r\n            var ctx = this._layers.hover.ctx;\r\n            ctx.flush && ctx.flush();\r\n\r\n            this.storage.delHover();\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清除hover层所有内容\r\n         */\r\n        Painter.prototype.clearHover = function () {\r\n            var hover = this._layers.hover;\r\n            hover && hover.clear();\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 显示loading\r\n         * \r\n         * @param {Object=} loadingEffect loading效果对象\r\n         */\r\n        Painter.prototype.showLoading = function (loadingEffect) {\r\n            this._loadingEffect && this._loadingEffect.stop();\r\n            loadingEffect && this.setLoadingEffect(loadingEffect);\r\n            this._loadingEffect.start(this);\r\n            this.loading = true;\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * loading结束\r\n         */\r\n        Painter.prototype.hideLoading = function () {\r\n            this._loadingEffect.stop();\r\n\r\n            this.clearHover();\r\n            this.loading = false;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * loading结束判断\r\n         */\r\n        Painter.prototype.isLoading = function () {\r\n            return this.loading;\r\n        };\r\n\r\n        /**\r\n         * 区域大小变化后重绘\r\n         */\r\n        Painter.prototype.resize = function () {\r\n            var domRoot = this._domRoot;\r\n            domRoot.style.display = 'none';\r\n\r\n            var width = this._getWidth();\r\n            var height = this._getHeight();\r\n\r\n            domRoot.style.display = '';\r\n\r\n            // 优化没有实际改变的resize\r\n            if (this._width != width || height != this._height) {\r\n                this._width = width;\r\n                this._height = height;\r\n\r\n                domRoot.style.width = width + 'px';\r\n                domRoot.style.height = height + 'px';\r\n\r\n                for (var id in this._layers) {\r\n\r\n                    this._layers[id].resize(width, height);\r\n                }\r\n\r\n                this.refresh(null, true);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清除单独的一个层\r\n         * @param {number} zLevel\r\n         */\r\n        Painter.prototype.clearLayer = function (zLevel) {\r\n            var layer = this._layers[zLevel];\r\n            if (layer) {\r\n                layer.clear();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 释放\r\n         */\r\n        Painter.prototype.dispose = function () {\r\n            if (this.isLoading()) {\r\n                this.hideLoading();\r\n            }\r\n\r\n            this.root.innerHTML = '';\r\n\r\n            this.root =\r\n            this.storage =\r\n\r\n            this._domRoot = \r\n            this._layers = null;\r\n        };\r\n\r\n        Painter.prototype.getDomHover = function () {\r\n            return this._layers.hover.dom;\r\n        };\r\n\r\n        /**\r\n         * 图像导出\r\n         * @param {string} type\r\n         * @param {string} [backgroundColor='#fff'] 背景色\r\n         * @return {string} 图片的Base64 url\r\n         */\r\n        Painter.prototype.toDataURL = function (type, backgroundColor, args) {\r\n            if (window['G_vmlCanvasManager']) {\r\n                return null;\r\n            }\r\n\r\n            var imageLayer = new Layer('image', this);\r\n            this._bgDom.appendChild(imageLayer.dom);\r\n            imageLayer.initContext();\r\n            \r\n            var ctx = imageLayer.ctx;\r\n            imageLayer.clearColor = backgroundColor || '#fff';\r\n            imageLayer.clear();\r\n            \r\n            var self = this;\r\n            // 升序遍历，shape上的zlevel指定绘画图层的z轴层叠\r\n\r\n            this.storage.iterShape(\r\n                function (shape) {\r\n                    if (!shape.invisible) {\r\n                        if (!shape.onbrush // 没有onbrush\r\n                            // 有onbrush并且调用执行返回false或undefined则继续粉刷\r\n                            || (shape.onbrush && !shape.onbrush(ctx, false))\r\n                        ) {\r\n                            if (config.catchBrushException) {\r\n                                try {\r\n                                    shape.brush(ctx, false, self.refreshNextFrame);\r\n                                }\r\n                                catch (error) {\r\n                                    log(\r\n                                        error,\r\n                                        'brush error of ' + shape.type,\r\n                                        shape\r\n                                    );\r\n                                }\r\n                            }\r\n                            else {\r\n                                shape.brush(ctx, false, self.refreshNextFrame);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                { normal: 'up', update: true }\r\n            );\r\n            var image = imageLayer.dom.toDataURL(type, args); \r\n            ctx = null;\r\n            this._bgDom.removeChild(imageLayer.dom);\r\n            return image;\r\n        };\r\n\r\n        /**\r\n         * 获取绘图区域宽度\r\n         */\r\n        Painter.prototype.getWidth = function () {\r\n            return this._width;\r\n        };\r\n\r\n        /**\r\n         * 获取绘图区域高度\r\n         */\r\n        Painter.prototype.getHeight = function () {\r\n            return this._height;\r\n        };\r\n\r\n        Painter.prototype._getWidth = function () {\r\n            var root = this.root;\r\n            var stl = root.currentStyle\r\n                      || document.defaultView.getComputedStyle(root);\r\n\r\n            return ((root.clientWidth || parseInt(stl.width, 10))\r\n                    - parseInt(stl.paddingLeft, 10) // 请原谅我这比较粗暴\r\n                    - parseInt(stl.paddingRight, 10)).toFixed(0) - 0;\r\n        };\r\n\r\n        Painter.prototype._getHeight = function () {\r\n            var root = this.root;\r\n            var stl = root.currentStyle\r\n                      || document.defaultView.getComputedStyle(root);\r\n\r\n            return ((root.clientHeight || parseInt(stl.height, 10))\r\n                    - parseInt(stl.paddingTop, 10) // 请原谅我这比较粗暴\r\n                    - parseInt(stl.paddingBottom, 10)).toFixed(0) - 0;\r\n        };\r\n\r\n        Painter.prototype._brushHover = function (shape) {\r\n            var ctx = this._layers.hover.ctx;\r\n\r\n            if (!shape.onbrush // 没有onbrush\r\n                // 有onbrush并且调用执行返回false或undefined则继续粉刷\r\n                || (shape.onbrush && !shape.onbrush(ctx, true))\r\n            ) {\r\n                var layer = this.getLayer(shape.zlevel);\r\n                if (layer.needTransform) {\r\n                    ctx.save();\r\n                    layer.setTransform(ctx);\r\n                }\r\n                // Retina 优化\r\n                if (config.catchBrushException) {\r\n                    try {\r\n                        shape.brush(ctx, true, this.refreshNextFrame);\r\n                    }\r\n                    catch (error) {\r\n                        log(\r\n                            error, 'hoverBrush error of ' + shape.type, shape\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    shape.brush(ctx, true, this.refreshNextFrame);\r\n                }\r\n                if (layer.needTransform) {\r\n                    ctx.restore();\r\n                }\r\n            }\r\n        };\r\n\r\n        Painter.prototype._shapeToImage = function (\r\n            id, shape, width, height, devicePixelRatio\r\n        ) {\r\n            var canvas = document.createElement('canvas');\r\n            var ctx = canvas.getContext('2d');\r\n            \r\n            canvas.style.width = width + 'px';\r\n            canvas.style.height = height + 'px';\r\n            canvas.setAttribute('width', width * devicePixelRatio);\r\n            canvas.setAttribute('height', height * devicePixelRatio);\r\n\r\n            ctx.clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);\r\n\r\n            var shapeTransform = {\r\n                position : shape.position,\r\n                rotation : shape.rotation,\r\n                scale : shape.scale\r\n            };\r\n            shape.position = [ 0, 0, 0 ];\r\n            shape.rotation = 0;\r\n            shape.scale = [ 1, 1 ];\r\n            if (shape) {\r\n                shape.brush(ctx, false);\r\n            }\r\n\r\n            var ImageShape = __webpack_require__(12);\r\n            var imgShape = new ImageShape({\r\n                id : id,\r\n                style : {\r\n                    x : 0,\r\n                    y : 0,\r\n                    image : canvas\r\n                }\r\n            });\r\n\r\n            if (shapeTransform.position != null) {\r\n                imgShape.position = shape.position = shapeTransform.position;\r\n            }\r\n\r\n            if (shapeTransform.rotation != null) {\r\n                imgShape.rotation = shape.rotation = shapeTransform.rotation;\r\n            }\r\n\r\n            if (shapeTransform.scale != null) {\r\n                imgShape.scale = shape.scale = shapeTransform.scale;\r\n            }\r\n\r\n            return imgShape;\r\n        };\r\n\r\n        Painter.prototype._createShapeToImageProcessor = function () {\r\n            if (window['G_vmlCanvasManager']) {\r\n                return doNothing;\r\n            }\r\n\r\n            var me = this;\r\n\r\n            return function (id, e, width, height) {\r\n                return me._shapeToImage(\r\n                    id, e, width, height, config.devicePixelRatio\r\n                );\r\n            };\r\n        };\r\n\r\n        return Painter;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * @module zrender/Layer\r\n * @author pissang(https://www.github.com/pissang)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n    var Transformable = __webpack_require__(27);\r\n    var util = __webpack_require__(0);\r\n    var vmlCanvasManager = window['G_vmlCanvasManager'];\r\n    var config = __webpack_require__(10);\r\n\r\n    function returnFalse() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 创建dom\r\n     * \r\n     * @inner\r\n     * @param {string} id dom id 待用\r\n     * @param {string} type dom type，such as canvas, div etc.\r\n     * @param {Painter} painter painter instance\r\n     */\r\n    function createDom(id, type, painter) {\r\n        var newDom = document.createElement(type);\r\n        var width = painter.getWidth();\r\n        var height = painter.getHeight();\r\n\r\n        // 没append呢，请原谅我这样写，清晰~\r\n        newDom.style.position = 'absolute';\r\n        newDom.style.left = 0;\r\n        newDom.style.top = 0;\r\n        newDom.style.width = width + 'px';\r\n        newDom.style.height = height + 'px';\r\n        newDom.width = width * config.devicePixelRatio;\r\n        newDom.height = height * config.devicePixelRatio;\r\n\r\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\r\n        newDom.setAttribute('data-zr-dom-id', id);\r\n        return newDom;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/Layer\r\n     * @constructor\r\n     * @extends module:zrender/mixin/Transformable\r\n     * @param {string} id\r\n     * @param {module:zrender/Painter} painter\r\n     */\r\n    var Layer = function(id, painter) {\r\n\r\n        this.id = id;\r\n\r\n        this.dom = createDom(id, 'canvas', painter);\r\n        this.dom.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n        this.dom.style['-webkit-user-select'] = 'none';\r\n        this.dom.style['user-select'] = 'none';\r\n        this.dom.style['-webkit-touch-callout'] = 'none';\r\n        this.dom.style['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\r\n\r\n        this.dom.className = config.elementClassName;\r\n\r\n        vmlCanvasManager && vmlCanvasManager.initElement(this.dom);\r\n\r\n        this.domBack = null;\r\n        this.ctxBack = null;\r\n\r\n        this.painter = painter;\r\n\r\n        this.unusedCount = 0;\r\n\r\n        this.config = null;\r\n\r\n        this.dirty = true;\r\n\r\n        this.elCount = 0;\r\n\r\n        // Configs\r\n        /**\r\n         * 每次清空画布的颜色\r\n         * @type {string}\r\n         * @default 0\r\n         */\r\n        this.clearColor = 0;\r\n        /**\r\n         * 是否开启动态模糊\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.motionBlur = false;\r\n        /**\r\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n         * @type {number}\r\n         * @default 0.7\r\n         */\r\n        this.lastFrameAlpha = 0.7;\r\n        /**\r\n         * 层是否支持鼠标平移操作\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.zoomable = false;\r\n        /**\r\n         * 层是否支持鼠标缩放操作\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.panable = false;\r\n\r\n        this.maxZoom = Infinity;\r\n        this.minZoom = 0;\r\n\r\n        Transformable.call(this);\r\n    };\r\n\r\n    Layer.prototype.initContext = function () {\r\n        this.ctx = this.dom.getContext('2d');\r\n\r\n        var dpr = config.devicePixelRatio;\r\n        if (dpr != 1) { \r\n            this.ctx.scale(dpr, dpr);\r\n        }\r\n    };\r\n\r\n    Layer.prototype.createBackBuffer = function () {\r\n        if (vmlCanvasManager) { // IE 8- should not support back buffer\r\n            return;\r\n        }\r\n        this.domBack = createDom('back-' + this.id, 'canvas', this.painter);\r\n        this.ctxBack = this.domBack.getContext('2d');\r\n\r\n        var dpr = config.devicePixelRatio;\r\n\r\n        if (dpr != 1) { \r\n            this.ctxBack.scale(dpr, dpr);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param  {number} width\r\n     * @param  {number} height\r\n     */\r\n    Layer.prototype.resize = function (width, height) {\r\n        var dpr = config.devicePixelRatio;\r\n\r\n        this.dom.style.width = width + 'px';\r\n        this.dom.style.height = height + 'px';\r\n\r\n        this.dom.setAttribute('width', width * dpr);\r\n        this.dom.setAttribute('height', height * dpr);\r\n\r\n        if (dpr != 1) { \r\n            this.ctx.scale(dpr, dpr);\r\n        }\r\n\r\n        if (this.domBack) {\r\n            this.domBack.setAttribute('width', width * dpr);\r\n            this.domBack.setAttribute('height', height * dpr);\r\n\r\n            if (dpr != 1) { \r\n                this.ctxBack.scale(dpr, dpr);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 清空该层画布\r\n     */\r\n    Layer.prototype.clear = function () {\r\n        var dom = this.dom;\r\n        var ctx = this.ctx;\r\n        var width = dom.width;\r\n        var height = dom.height;\r\n\r\n        var haveClearColor = this.clearColor && !vmlCanvasManager;\r\n        var haveMotionBLur = this.motionBlur && !vmlCanvasManager;\r\n        var lastFrameAlpha = this.lastFrameAlpha;\r\n        \r\n        var dpr = config.devicePixelRatio;\r\n\r\n        if (haveMotionBLur) {\r\n            if (!this.domBack) {\r\n                this.createBackBuffer();\r\n            } \r\n\r\n            this.ctxBack.globalCompositeOperation = 'copy';\r\n            this.ctxBack.drawImage(\r\n                dom, 0, 0,\r\n                width / dpr,\r\n                height / dpr\r\n            );\r\n        }\r\n\r\n        ctx.clearRect(0, 0, width / dpr, height / dpr);\r\n        if (haveClearColor) {\r\n            ctx.save();\r\n            ctx.fillStyle = this.clearColor;\r\n            ctx.fillRect(0, 0, width / dpr, height / dpr);\r\n            ctx.restore();\r\n        }\r\n\r\n        if (haveMotionBLur) {\r\n            var domBack = this.domBack;\r\n            ctx.save();\r\n            ctx.globalAlpha = lastFrameAlpha;\r\n            ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);\r\n            ctx.restore();\r\n        }\r\n    };\r\n\r\n    util.merge(Layer.prototype, Transformable.prototype);\r\n\r\n    return Layer;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Storage内容仓库模块\r\n * @module zrender/Storage\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @author errorrik (errorrik@gmail.com)\r\n * @author pissang (https://github.com/pissang/)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n        'use strict';\r\n\r\n        var util = __webpack_require__(0);\r\n\r\n        var Group = __webpack_require__(57);\r\n\r\n        var defaultIterateOption = {\r\n            hover: false,\r\n            normal: 'down',\r\n            update: false\r\n        };\r\n\r\n        function shapeCompareFunc(a, b) {\r\n            if (a.zlevel == b.zlevel) {\r\n                if (a.z == b.z) {\r\n                    return a.__renderidx - b.__renderidx;\r\n                }\r\n                return a.z - b.z;\r\n            }\r\n            return a.zlevel - b.zlevel;\r\n        }\r\n        /**\r\n         * 内容仓库 (M)\r\n         * @alias module:zrender/Storage\r\n         * @constructor\r\n         */\r\n        var Storage = function () {\r\n            // 所有常规形状，id索引的map\r\n            this._elements = {};\r\n\r\n            // 高亮层形状，不稳定，动态增删，数组位置也是z轴方向，靠前显示在下方\r\n            this._hoverElements = [];\r\n\r\n            this._roots = [];\r\n\r\n            this._shapeList = [];\r\n\r\n            this._shapeListOffset = 0;\r\n        };\r\n\r\n        /**\r\n         * 遍历迭代器\r\n         * \r\n         * @param {Function} fun 迭代回调函数，return true终止迭代\r\n         * @param {Object} [option] 迭代参数，缺省为仅降序遍历普通层图形\r\n         * @param {boolean} [option.hover=true] 是否是高亮层图形\r\n         * @param {string} [option.normal='up'] 是否是普通层图形，迭代时是否指定及z轴顺序\r\n         * @param {boolean} [option.update=false] 是否在迭代前更新形状列表\r\n         * \r\n         */\r\n        Storage.prototype.iterShape = function (fun, option) {\r\n            if (!option) {\r\n                option = defaultIterateOption;\r\n            }\r\n\r\n            if (option.hover) {\r\n                // 高亮层数据遍历\r\n                for (var i = 0, l = this._hoverElements.length; i < l; i++) {\r\n                    var el = this._hoverElements[i];\r\n                    el.updateTransform();\r\n                    if (fun(el)) {\r\n                        return this;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (option.update) {\r\n                this.updateShapeList();\r\n            }\r\n\r\n            // 遍历: 'down' | 'up'\r\n            switch (option.normal) {\r\n                case 'down':\r\n                    // 降序遍历，高层优先\r\n                    var l = this._shapeList.length;\r\n                    while (l--) {\r\n                        if (fun(this._shapeList[l])) {\r\n                            return this;\r\n                        }\r\n                    }\r\n                    break;\r\n                // case 'up':\r\n                default:\r\n                    // 升序遍历，底层优先\r\n                    for (var i = 0, l = this._shapeList.length; i < l; i++) {\r\n                        if (fun(this._shapeList[i])) {\r\n                            return this;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 返回hover层的形状数组\r\n         * @param  {boolean} [update=false] 是否在返回前更新图形的变换\r\n         * @return {Array.<module:zrender/shape/Base>}\r\n         */\r\n        Storage.prototype.getHoverShapes = function (update) {\r\n            // hoverConnect\r\n            var hoverElements = [];\r\n            for (var i = 0, l = this._hoverElements.length; i < l; i++) {\r\n                hoverElements.push(this._hoverElements[i]);\r\n                var target = this._hoverElements[i].hoverConnect;\r\n                if (target) {\r\n                    var shape;\r\n                    target = target instanceof Array ? target : [target];\r\n                    for (var j = 0, k = target.length; j < k; j++) {\r\n                        shape = target[j].id ? target[j] : this.get(target[j]);\r\n                        if (shape) {\r\n                            hoverElements.push(shape);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            hoverElements.sort(shapeCompareFunc);\r\n            if (update) {\r\n                for (var i = 0, l = hoverElements.length; i < l; i++) {\r\n                    hoverElements[i].updateTransform();\r\n                }\r\n            }\r\n            return hoverElements;\r\n        };\r\n\r\n        /**\r\n         * 返回所有图形的绘制队列\r\n         * @param  {boolean} [update=false] 是否在返回前更新该数组\r\n         * 详见{@link module:zrender/shape/Base.prototype.updateShapeList}\r\n         * @return {Array.<module:zrender/shape/Base>}\r\n         */\r\n        Storage.prototype.getShapeList = function (update) {\r\n            if (update) {\r\n                this.updateShapeList();\r\n            }\r\n            return this._shapeList;\r\n        };\r\n\r\n        /**\r\n         * 更新图形的绘制队列。\r\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\r\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\r\n         */\r\n        Storage.prototype.updateShapeList = function () {\r\n            this._shapeListOffset = 0;\r\n            for (var i = 0, len = this._roots.length; i < len; i++) {\r\n                var root = this._roots[i];\r\n                this._updateAndAddShape(root);\r\n            }\r\n            this._shapeList.length = this._shapeListOffset;\r\n\r\n            for (var i = 0, len = this._shapeList.length; i < len; i++) {\r\n                this._shapeList[i].__renderidx = i;\r\n            }\r\n\r\n            this._shapeList.sort(shapeCompareFunc);\r\n        };\r\n\r\n        Storage.prototype._updateAndAddShape = function (el, clipShapes) {\r\n            \r\n            if (el.ignore) {\r\n                return;\r\n            }\r\n\r\n            el.updateTransform();\r\n\r\n            if (el.clipShape) {\r\n                // clipShape 的变换是基于 group 的变换\r\n                el.clipShape.parent = el;\r\n                el.clipShape.updateTransform();\r\n\r\n                // PENDING 效率影响\r\n                if (clipShapes) {\r\n                    clipShapes = clipShapes.slice();\r\n                    clipShapes.push(el.clipShape);\r\n                } else {\r\n                    clipShapes = [el.clipShape];\r\n                }\r\n            }\r\n\r\n            if (el.type == 'group') {\r\n                \r\n                for (var i = 0; i < el._children.length; i++) {\r\n                    var child = el._children[i];\r\n\r\n                    // Force to mark as dirty if group is dirty\r\n                    child.__dirty = el.__dirty || child.__dirty;\r\n\r\n                    this._updateAndAddShape(child, clipShapes);\r\n                }\r\n\r\n                // Mark group clean here\r\n                el.__dirty = false;\r\n                \r\n            }\r\n            else {\r\n                el.__clipShapes = clipShapes;\r\n\r\n                this._shapeList[this._shapeListOffset++] = el;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 修改图形(Shape)或者组(Group)\r\n         * \r\n         * @param {string|module:zrender/shape/Base|module:zrender/Group} el\r\n         * @param {Object} [params] 参数\r\n         */\r\n        Storage.prototype.mod = function (el, params) {\r\n            if (typeof (el) === 'string') {\r\n                el = this._elements[el];\r\n            }\r\n            if (el) {\r\n\r\n                el.modSelf();\r\n\r\n                if (params) {\r\n                    // 如果第二个参数直接使用 shape\r\n                    // parent, _storage, __clipShapes 三个属性会有循环引用\r\n                    // 主要为了向 1.x 版本兼容，2.x 版本不建议使用第二个参数\r\n                    if (params.parent || params._storage || params.__clipShapes) {\r\n                        var target = {};\r\n                        for (var name in params) {\r\n                            if (\r\n                                name === 'parent'\r\n                                || name === '_storage'\r\n                                || name === '__clipShapes'\r\n                            ) {\r\n                                continue;\r\n                            }\r\n                            if (params.hasOwnProperty(name)) {\r\n                                target[name] = params[name];\r\n                            }\r\n                        }\r\n                        util.merge(el, target, true);\r\n                    }\r\n                    else {\r\n                        util.merge(el, params, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 移动指定的图形(Shape)或者组(Group)的位置\r\n         * @param {string} shapeId 形状唯一标识\r\n         * @param {number} dx\r\n         * @param {number} dy\r\n         */\r\n        Storage.prototype.drift = function (shapeId, dx, dy) {\r\n            var shape = this._elements[shapeId];\r\n            if (shape) {\r\n                shape.needTransform = true;\r\n                if (shape.draggable === 'horizontal') {\r\n                    dy = 0;\r\n                }\r\n                else if (shape.draggable === 'vertical') {\r\n                    dx = 0;\r\n                }\r\n                if (!shape.ondrift // ondrift\r\n                    // 有onbrush并且调用执行返回false或undefined则继续\r\n                    || (shape.ondrift && !shape.ondrift(dx, dy))\r\n                ) {\r\n                    shape.drift(dx, dy);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 添加高亮层数据\r\n         * \r\n         * @param {module:zrender/shape/Base} shape\r\n         */\r\n        Storage.prototype.addHover = function (shape) {\r\n            shape.updateNeedTransform();\r\n            this._hoverElements.push(shape);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清空高亮层数据\r\n         */\r\n        Storage.prototype.delHover = function () {\r\n            this._hoverElements = [];\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 是否有图形在高亮层里\r\n         * @return {boolean}\r\n         */\r\n        Storage.prototype.hasHoverShape = function () {\r\n            return this._hoverElements.length > 0;\r\n        };\r\n\r\n        /**\r\n         * 添加图形(Shape)或者组(Group)到根节点\r\n         * @param {module:zrender/shape/Shape|module:zrender/Group} el\r\n         */\r\n        Storage.prototype.addRoot = function (el) {\r\n            // Element has been added\r\n            if (this._elements[el.id]) {\r\n                return;\r\n            }\r\n\r\n            if (el instanceof Group) {\r\n                el.addChildrenToStorage(this);\r\n            }\r\n\r\n            this.addToMap(el);\r\n            this._roots.push(el);\r\n        };\r\n\r\n        /**\r\n         * 删除指定的图形(Shape)或者组(Group)\r\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\r\n         */\r\n        Storage.prototype.delRoot = function (elId) {\r\n            if (typeof(elId) == 'undefined') {\r\n                // 不指定elId清空\r\n                for (var i = 0; i < this._roots.length; i++) {\r\n                    var root = this._roots[i];\r\n                    if (root instanceof Group) {\r\n                        root.delChildrenFromStorage(this);\r\n                    }\r\n                }\r\n\r\n                this._elements = {};\r\n                this._hoverElements = [];\r\n                this._roots = [];\r\n                this._shapeList = [];\r\n                this._shapeListOffset = 0;\r\n\r\n                return;\r\n            }\r\n\r\n            if (elId instanceof Array) {\r\n                for (var i = 0, l = elId.length; i < l; i++) {\r\n                    this.delRoot(elId[i]);\r\n                }\r\n                return;\r\n            }\r\n\r\n            var el;\r\n            if (typeof(elId) == 'string') {\r\n                el = this._elements[elId];\r\n            }\r\n            else {\r\n                el = elId;\r\n            }\r\n\r\n            var idx = util.indexOf(this._roots, el);\r\n            if (idx >= 0) {\r\n                this.delFromMap(el.id);\r\n                this._roots.splice(idx, 1);\r\n                if (el instanceof Group) {\r\n                    el.delChildrenFromStorage(this);\r\n                }\r\n            }\r\n        };\r\n\r\n        Storage.prototype.addToMap = function (el) {\r\n            if (el instanceof Group) {\r\n                el._storage = this;\r\n            }\r\n            el.modSelf();\r\n\r\n            this._elements[el.id] = el;\r\n\r\n            return this;\r\n        };\r\n\r\n        Storage.prototype.get = function (elId) {\r\n            return this._elements[elId];\r\n        };\r\n\r\n        Storage.prototype.delFromMap = function (elId) {\r\n            var el = this._elements[elId];\r\n            if (el) {\r\n                delete this._elements[elId];\r\n\r\n                if (el instanceof Group) {\r\n                    el._storage = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清空并且释放Storage\r\n         */\r\n        Storage.prototype.dispose = function () {\r\n            this._elements = \r\n            this._renderList = \r\n            this._roots =\r\n            this._hoverElements = null;\r\n        };\r\n\r\n        return Storage;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\r\n * @module zrender/Group\r\n * @example\r\n *     var Group = require('zrender/Group');\r\n *     var Circle = require('zrender/shape/Circle');\r\n *     var g = new Group();\r\n *     g.position[0] = 100;\r\n *     g.position[1] = 100;\r\n *     g.addChild(new Circle({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r: 20,\r\n *             brushType: 'fill'\r\n *         }\r\n *     }));\r\n *     zr.addGroup(g);\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n\r\n    var guid = __webpack_require__(26);\r\n    var util = __webpack_require__(0);\r\n\r\n    var Transformable = __webpack_require__(27);\r\n    var Eventful = __webpack_require__(20);\r\n\r\n    /**\r\n     * @alias module:zrender/Group\r\n     * @constructor\r\n     * @extends module:zrender/mixin/Transformable\r\n     * @extends module:zrender/mixin/Eventful\r\n     */\r\n    var Group = function(options) {\r\n\r\n        options = options || {};\r\n\r\n        /**\r\n         * Group id\r\n         * @type {string}\r\n         */\r\n        this.id = options.id || guid();\r\n\r\n        for (var key in options) {\r\n            this[key] = options[key];\r\n        }\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        this.type = 'group';\r\n\r\n        /**\r\n         * 用于裁剪的图形(shape)，所有 Group 内的图形在绘制时都会被这个图形裁剪\r\n         * 该图形会继承Group的变换\r\n         * @type {module:zrender/shape/Base}\r\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\r\n         */\r\n        this.clipShape = null;\r\n\r\n        this._children = [];\r\n\r\n        this._storage = null;\r\n\r\n        this.__dirty = true;\r\n\r\n        // Mixin\r\n        Transformable.call(this);\r\n        Eventful.call(this);\r\n    };\r\n\r\n    /**\r\n     * 是否忽略该 Group 及其所有子节点\r\n     * @type {boolean}\r\n     * @default false\r\n     */\r\n    Group.prototype.ignore = false;\r\n\r\n    /**\r\n     * 复制并返回一份新的包含所有儿子节点的数组\r\n     * @return {Array.<module:zrender/Group|module:zrender/shape/Base>}\r\n     */\r\n    Group.prototype.children = function() {\r\n        return this._children.slice();\r\n    };\r\n\r\n    /**\r\n     * 获取指定 index 的儿子节点\r\n     * @param  {number} idx\r\n     * @return {module:zrender/Group|module:zrender/shape/Base}\r\n     */\r\n    Group.prototype.childAt = function(idx) {\r\n        return this._children[idx];\r\n    };\r\n\r\n    /**\r\n     * 添加子节点，可以是Shape或者Group\r\n     * @param {module:zrender/Group|module:zrender/shape/Base} child\r\n     */\r\n    // TODO Type Check\r\n    Group.prototype.addChild = function(child) {\r\n        if (child == this) {\r\n            return;\r\n        }\r\n        \r\n        if (child.parent == this) {\r\n            return;\r\n        }\r\n        if (child.parent) {\r\n            child.parent.removeChild(child);\r\n        }\r\n\r\n        this._children.push(child);\r\n        child.parent = this;\r\n\r\n        if (this._storage && this._storage !== child._storage) {\r\n            \r\n            this._storage.addToMap(child);\r\n\r\n            if (child instanceof Group) {\r\n                child.addChildrenToStorage(this._storage);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 移除子节点\r\n     * @param {module:zrender/Group|module:zrender/shape/Base} child\r\n     */\r\n    // TODO Type Check\r\n    Group.prototype.removeChild = function(child) {\r\n        var idx = util.indexOf(this._children, child);\r\n\r\n        if (idx >= 0) {\r\n            this._children.splice(idx, 1);\r\n        }\r\n        child.parent = null;\r\n\r\n        if (this._storage) {\r\n            \r\n            this._storage.delFromMap(child.id);\r\n\r\n            if (child instanceof Group) {\r\n                child.delChildrenFromStorage(this._storage);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 移除所有子节点\r\n     */\r\n    Group.prototype.clearChildren = function () {\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            if (this._storage) {\r\n                this._storage.delFromMap(child.id);\r\n                if (child instanceof Group) {\r\n                    child.delChildrenFromStorage(this._storage);\r\n                }\r\n            }\r\n        }\r\n        this._children.length = 0;\r\n    };\r\n\r\n    /**\r\n     * 遍历所有子节点\r\n     * @param  {Function} cb\r\n     * @param  {}   context\r\n     */\r\n    Group.prototype.eachChild = function(cb, context) {\r\n        var haveContext = !!context;\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            if (haveContext) {\r\n                cb.call(context, child);\r\n            } else {\r\n                cb(child);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 深度优先遍历所有子孙节点\r\n     * @param  {Function} cb\r\n     * @param  {}   context\r\n     */\r\n    Group.prototype.traverse = function(cb, context) {\r\n        var haveContext = !!context;\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            if (haveContext) {\r\n                cb.call(context, child);\r\n            } else {\r\n                cb(child);\r\n            }\r\n\r\n            if (child.type === 'group') {\r\n                child.traverse(cb, context);\r\n            }\r\n        }\r\n    };\r\n\r\n    Group.prototype.addChildrenToStorage = function(storage) {\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            storage.addToMap(child);\r\n            if (child instanceof Group) {\r\n                child.addChildrenToStorage(storage);\r\n            }\r\n        }\r\n    };\r\n\r\n    Group.prototype.delChildrenFromStorage = function(storage) {\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            storage.delFromMap(child.id);\r\n            if (child instanceof Group) {\r\n                child.delChildrenFromStorage(storage);\r\n            }\r\n        }\r\n    };\r\n\r\n    Group.prototype.modSelf = function() {\r\n        this.__dirty = true;\r\n    };\r\n\r\n    util.merge(Group.prototype, Transformable.prototype, true);\r\n    util.merge(Group.prototype, Eventful.prototype, true);\r\n\r\n    return Group;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 动画主类, 调度和管理所有动画控制器\r\n * \r\n * @module zrender/animation/Animation\r\n * @author pissang(https://github.com/pissang)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n        \r\n        'use strict';\r\n\r\n        var Clip = __webpack_require__(59);\r\n        var color = __webpack_require__(3);\r\n        var util = __webpack_require__(0);\r\n        var Dispatcher = __webpack_require__(9).Dispatcher;\r\n\r\n        var requestAnimationFrame = window.requestAnimationFrame\r\n                                    || window.msRequestAnimationFrame\r\n                                    || window.mozRequestAnimationFrame\r\n                                    || window.webkitRequestAnimationFrame\r\n                                    || function (func) {\r\n                                        setTimeout(func, 16);\r\n                                    };\r\n\r\n        var arraySlice = Array.prototype.slice;\r\n\r\n        /**\r\n         * @typedef {Object} IZRenderStage\r\n         * @property {Function} update\r\n         */\r\n        \r\n        /** \r\n         * @alias module:zrender/animation/Animation\r\n         * @constructor\r\n         * @param {Object} [options]\r\n         * @param {Function} [options.onframe]\r\n         * @param {IZRenderStage} [options.stage]\r\n         * @example\r\n         *     var animation = new Animation();\r\n         *     var obj = {\r\n         *         x: 100,\r\n         *         y: 100\r\n         *     };\r\n         *     animation.animate(node.position)\r\n         *         .when(1000, {\r\n         *             x: 500,\r\n         *             y: 500\r\n         *         })\r\n         *         .when(2000, {\r\n         *             x: 100,\r\n         *             y: 100\r\n         *         })\r\n         *         .start('spline');\r\n         */\r\n        var Animation = function (options) {\r\n\r\n            options = options || {};\r\n\r\n            this.stage = options.stage || {};\r\n\r\n            this.onframe = options.onframe || function() {};\r\n\r\n            // private properties\r\n            this._clips = [];\r\n\r\n            this._running = false;\r\n\r\n            this._time = 0;\r\n\r\n            Dispatcher.call(this);\r\n        };\r\n\r\n        Animation.prototype = {\r\n            /**\r\n             * 添加动画片段\r\n             * @param {module:zrender/animation/Clip} clip\r\n             */\r\n            add: function(clip) {\r\n                this._clips.push(clip);\r\n            },\r\n            /**\r\n             * 删除动画片段\r\n             * @param {module:zrender/animation/Clip} clip\r\n             */\r\n            remove: function(clip) {\r\n                if (clip.__inStep) {\r\n                    // 如果是在 step 中，不能直接移除\r\n                    // 需要标记为 needsRemove 然后在所有 clip step 完成后移除\r\n                    clip.__needsRemove = true;\r\n                }\r\n                else {\r\n                    var idx = util.indexOf(this._clips, clip);\r\n                    if (idx >= 0) {\r\n                        this._clips.splice(idx, 1);\r\n                    }\r\n                }\r\n            },\r\n            _update: function() {\r\n\r\n                var time = new Date().getTime();\r\n                var delta = time - this._time;\r\n                var clips = this._clips;\r\n                var len = clips.length;\r\n\r\n                var deferredEvents = [];\r\n                var deferredClips = [];\r\n                for (var i = 0; i < len; i++) {\r\n                    var clip = clips[i];\r\n                    clip.__inStep = true;\r\n                    var e = clip.step(time);\r\n                    clip.__inStep = false;\r\n                    // Throw out the events need to be called after\r\n                    // stage.update, like destroy\r\n                    if (e) {\r\n                        deferredEvents.push(e);\r\n                        deferredClips.push(clip);\r\n                    }\r\n                }\r\n\r\n                // Remove the finished clip\r\n                for (var i = 0; i < len;) {\r\n                    if (clips[i].__needsRemove) {\r\n                        clips[i] = clips[len - 1];\r\n                        clips.pop();\r\n                        len--;\r\n                    }\r\n                    else {\r\n                        i++;\r\n                    }\r\n                }\r\n\r\n                len = deferredEvents.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    deferredClips[i].fire(deferredEvents[i]);\r\n                }\r\n\r\n                this._time = time;\r\n\r\n                this.onframe(delta);\r\n\r\n                this.dispatch('frame', delta);\r\n\r\n                if (this.stage.update) {\r\n                    this.stage.update();\r\n                }\r\n            },\r\n            /**\r\n             * 开始运行动画\r\n             */\r\n            start: function () {\r\n                var self = this;\r\n\r\n                this._running = true;\r\n\r\n                function step() {\r\n                    if (self._running) {\r\n                        \r\n                        requestAnimationFrame(step);\r\n\r\n                        self._update();\r\n                    }\r\n                }\r\n\r\n                this._time = new Date().getTime();\r\n                requestAnimationFrame(step);\r\n            },\r\n            /**\r\n             * 停止运行动画\r\n             */\r\n            stop: function () {\r\n                this._running = false;\r\n            },\r\n            /**\r\n             * 清除所有动画片段\r\n             */\r\n            clear : function () {\r\n                this._clips = [];\r\n            },\r\n            /**\r\n             * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\r\n             * @param  {Object} target\r\n             * @param  {Object} options\r\n             * @param  {boolean} [options.loop=false] 是否循环播放动画\r\n             * @param  {Function} [options.getter=null]\r\n             *         如果指定getter函数，会通过getter函数取属性值\r\n             * @param  {Function} [options.setter=null]\r\n             *         如果指定setter函数，会通过setter函数设置属性值\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            animate : function (target, options) {\r\n                options = options || {};\r\n                var deferred = new Animator(\r\n                    target,\r\n                    options.loop,\r\n                    options.getter, \r\n                    options.setter\r\n                );\r\n                deferred.animation = this;\r\n                return deferred;\r\n            },\r\n            constructor: Animation\r\n        };\r\n\r\n        util.merge(Animation.prototype, Dispatcher.prototype, true);\r\n\r\n        function _defaultGetter(target, key) {\r\n            return target[key];\r\n        }\r\n\r\n        function _defaultSetter(target, key, value) {\r\n            target[key] = value;\r\n        }\r\n\r\n        function _interpolateNumber(p0, p1, percent) {\r\n            return (p1 - p0) * percent + p0;\r\n        }\r\n\r\n        function _interpolateArray(p0, p1, percent, out, arrDim) {\r\n            var len = p0.length;\r\n            if (arrDim == 1) {\r\n                for (var i = 0; i < len; i++) {\r\n                    out[i] = _interpolateNumber(p0[i], p1[i], percent); \r\n                }\r\n            }\r\n            else {\r\n                var len2 = p0[0].length;\r\n                for (var i = 0; i < len; i++) {\r\n                    for (var j = 0; j < len2; j++) {\r\n                        out[i][j] = _interpolateNumber(\r\n                            p0[i][j], p1[i][j], percent\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function _isArrayLike(data) {\r\n            switch (typeof data) {\r\n                case 'undefined':\r\n                case 'string':\r\n                    return false;\r\n            }\r\n            \r\n            return typeof data.length !== 'undefined';\r\n        }\r\n\r\n        function _catmullRomInterpolateArray(\r\n            p0, p1, p2, p3, t, t2, t3, out, arrDim\r\n        ) {\r\n            var len = p0.length;\r\n            if (arrDim == 1) {\r\n                for (var i = 0; i < len; i++) {\r\n                    out[i] = _catmullRomInterpolate(\r\n                        p0[i], p1[i], p2[i], p3[i], t, t2, t3\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                var len2 = p0[0].length;\r\n                for (var i = 0; i < len; i++) {\r\n                    for (var j = 0; j < len2; j++) {\r\n                        out[i][j] = _catmullRomInterpolate(\r\n                            p0[i][j], p1[i][j], p2[i][j], p3[i][j],\r\n                            t, t2, t3\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function _catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\r\n            var v0 = (p2 - p0) * 0.5;\r\n            var v1 = (p3 - p1) * 0.5;\r\n            return (2 * (p1 - p2) + v0 + v1) * t3 \r\n                    + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\r\n                    + v0 * t + p1;\r\n        }\r\n\r\n        function _cloneValue(value) {\r\n            if (_isArrayLike(value)) {\r\n                var len = value.length;\r\n                if (_isArrayLike(value[0])) {\r\n                    var ret = [];\r\n                    for (var i = 0; i < len; i++) {\r\n                        ret.push(arraySlice.call(value[i]));\r\n                    }\r\n                    return ret;\r\n                }\r\n                else {\r\n                    return arraySlice.call(value);\r\n                }\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n\r\n        function rgba2String(rgba) {\r\n            rgba[0] = Math.floor(rgba[0]);\r\n            rgba[1] = Math.floor(rgba[1]);\r\n            rgba[2] = Math.floor(rgba[2]);\r\n\r\n            return 'rgba(' + rgba.join(',') + ')';\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/animation/Animation~Animator\r\n         * @constructor\r\n         * @param {Object} target\r\n         * @param {boolean} loop\r\n         * @param {Function} getter\r\n         * @param {Function} setter\r\n         */\r\n        var Animator = function(target, loop, getter, setter) {\r\n            this._tracks = {};\r\n            this._target = target;\r\n\r\n            this._loop = loop || false;\r\n\r\n            this._getter = getter || _defaultGetter;\r\n            this._setter = setter || _defaultSetter;\r\n\r\n            this._clipCount = 0;\r\n\r\n            this._delay = 0;\r\n\r\n            this._doneList = [];\r\n\r\n            this._onframeList = [];\r\n\r\n            this._clipList = [];\r\n        };\r\n\r\n        Animator.prototype = {\r\n            /**\r\n             * 设置动画关键帧\r\n             * @param  {number} time 关键帧时间，单位是ms\r\n             * @param  {Object} props 关键帧的属性值，key-value表示\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            when : function(time /* ms */, props) {\r\n                for (var propName in props) {\r\n                    if (!this._tracks[propName]) {\r\n                        this._tracks[propName] = [];\r\n                        // If time is 0 \r\n                        //  Then props is given initialize value\r\n                        // Else\r\n                        //  Initialize value from current prop value\r\n                        if (time !== 0) {\r\n                            this._tracks[propName].push({\r\n                                time : 0,\r\n                                value : _cloneValue(\r\n                                    this._getter(this._target, propName)\r\n                                )\r\n                            });\r\n                        }\r\n                    }\r\n                    this._tracks[propName].push({\r\n                        time : parseInt(time, 10),\r\n                        value : props[propName]\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * 添加动画每一帧的回调函数\r\n             * @param  {Function} callback\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            during: function (callback) {\r\n                this._onframeList.push(callback);\r\n                return this;\r\n            },\r\n            /**\r\n             * 开始执行动画\r\n             * @param  {string|Function} easing \r\n             *         动画缓动函数，详见{@link module:zrender/animation/easing}\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            start: function (easing) {\r\n\r\n                var self = this;\r\n                var setter = this._setter;\r\n                var getter = this._getter;\r\n                var useSpline = easing === 'spline';\r\n\r\n                var ondestroy = function() {\r\n                    self._clipCount--;\r\n                    if (self._clipCount === 0) {\r\n                        // Clear all tracks\r\n                        self._tracks = {};\r\n\r\n                        var len = self._doneList.length;\r\n                        for (var i = 0; i < len; i++) {\r\n                            self._doneList[i].call(self);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                var createTrackClip = function (keyframes, propName) {\r\n                    var trackLen = keyframes.length;\r\n                    if (!trackLen) {\r\n                        return;\r\n                    }\r\n                    // Guess data type\r\n                    var firstVal = keyframes[0].value;\r\n                    var isValueArray = _isArrayLike(firstVal);\r\n                    var isValueColor = false;\r\n\r\n                    // For vertices morphing\r\n                    var arrDim = (\r\n                            isValueArray \r\n                            && _isArrayLike(firstVal[0])\r\n                        )\r\n                        ? 2 : 1;\r\n                    // Sort keyframe as ascending\r\n                    keyframes.sort(function(a, b) {\r\n                        return a.time - b.time;\r\n                    });\r\n                    var trackMaxTime;\r\n                    if (trackLen) {\r\n                        trackMaxTime = keyframes[trackLen - 1].time;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    // Percents of each keyframe\r\n                    var kfPercents = [];\r\n                    // Value of each keyframe\r\n                    var kfValues = [];\r\n                    for (var i = 0; i < trackLen; i++) {\r\n                        kfPercents.push(keyframes[i].time / trackMaxTime);\r\n                        // Assume value is a color when it is a string\r\n                        var value = keyframes[i].value;\r\n                        if (typeof(value) == 'string') {\r\n                            value = color.toArray(value);\r\n                            if (value.length === 0) {    // Invalid color\r\n                                value[0] = value[1] = value[2] = 0;\r\n                                value[3] = 1;\r\n                            }\r\n                            isValueColor = true;\r\n                        }\r\n                        kfValues.push(value);\r\n                    }\r\n\r\n                    // Cache the key of last frame to speed up when \r\n                    // animation playback is sequency\r\n                    var cacheKey = 0;\r\n                    var cachePercent = 0;\r\n                    var start;\r\n                    var i;\r\n                    var w;\r\n                    var p0;\r\n                    var p1;\r\n                    var p2;\r\n                    var p3;\r\n\r\n\r\n                    if (isValueColor) {\r\n                        var rgba = [ 0, 0, 0, 0 ];\r\n                    }\r\n\r\n                    var onframe = function (target, percent) {\r\n                        // Find the range keyframes\r\n                        // kf1-----kf2---------current--------kf3\r\n                        // find kf2 and kf3 and do interpolation\r\n                        if (percent < cachePercent) {\r\n                            // Start from next key\r\n                            start = Math.min(cacheKey + 1, trackLen - 1);\r\n                            for (i = start; i >= 0; i--) {\r\n                                if (kfPercents[i] <= percent) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            i = Math.min(i, trackLen - 2);\r\n                        }\r\n                        else {\r\n                            for (i = cacheKey; i < trackLen; i++) {\r\n                                if (kfPercents[i] > percent) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            i = Math.min(i - 1, trackLen - 2);\r\n                        }\r\n                        cacheKey = i;\r\n                        cachePercent = percent;\r\n\r\n                        var range = (kfPercents[i + 1] - kfPercents[i]);\r\n                        if (range === 0) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            w = (percent - kfPercents[i]) / range;\r\n                        }\r\n                        if (useSpline) {\r\n                            p1 = kfValues[i];\r\n                            p0 = kfValues[i === 0 ? i : i - 1];\r\n                            p2 = kfValues[i > trackLen - 2 ? trackLen - 1 : i + 1];\r\n                            p3 = kfValues[i > trackLen - 3 ? trackLen - 1 : i + 2];\r\n                            if (isValueArray) {\r\n                                _catmullRomInterpolateArray(\r\n                                    p0, p1, p2, p3, w, w * w, w * w * w,\r\n                                    getter(target, propName),\r\n                                    arrDim\r\n                                );\r\n                            }\r\n                            else {\r\n                                var value;\r\n                                if (isValueColor) {\r\n                                    value = _catmullRomInterpolateArray(\r\n                                        p0, p1, p2, p3, w, w * w, w * w * w,\r\n                                        rgba, 1\r\n                                    );\r\n                                    value = rgba2String(rgba);\r\n                                }\r\n                                else {\r\n                                    value = _catmullRomInterpolate(\r\n                                        p0, p1, p2, p3, w, w * w, w * w * w\r\n                                    );\r\n                                }\r\n                                setter(\r\n                                    target,\r\n                                    propName,\r\n                                    value\r\n                                );\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (isValueArray) {\r\n                                _interpolateArray(\r\n                                    kfValues[i], kfValues[i + 1], w,\r\n                                    getter(target, propName),\r\n                                    arrDim\r\n                                );\r\n                            }\r\n                            else {\r\n                                var value;\r\n                                if (isValueColor) {\r\n                                    _interpolateArray(\r\n                                        kfValues[i], kfValues[i + 1], w,\r\n                                        rgba, 1\r\n                                    );\r\n                                    value = rgba2String(rgba);\r\n                                }\r\n                                else {\r\n                                    value = _interpolateNumber(kfValues[i], kfValues[i + 1], w);\r\n                                }\r\n                                setter(\r\n                                    target,\r\n                                    propName,\r\n                                    value\r\n                                );\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < self._onframeList.length; i++) {\r\n                            self._onframeList[i](target, percent);\r\n                        }\r\n                    };\r\n\r\n                    var clip = new Clip({\r\n                        target : self._target,\r\n                        life : trackMaxTime,\r\n                        loop : self._loop,\r\n                        delay : self._delay,\r\n                        onframe : onframe,\r\n                        ondestroy : ondestroy\r\n                    });\r\n\r\n                    if (easing && easing !== 'spline') {\r\n                        clip.easing = easing;\r\n                    }\r\n                    self._clipList.push(clip);\r\n                    self._clipCount++;\r\n                    self.animation.add(clip);\r\n                };\r\n\r\n                for (var propName in this._tracks) {\r\n                    createTrackClip(this._tracks[propName], propName);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * 停止动画\r\n             */\r\n            stop : function() {\r\n                for (var i = 0; i < this._clipList.length; i++) {\r\n                    var clip = this._clipList[i];\r\n                    this.animation.remove(clip);\r\n                }\r\n                this._clipList = [];\r\n            },\r\n            /**\r\n             * 设置动画延迟开始的时间\r\n             * @param  {number} time 单位ms\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            delay : function (time) {\r\n                this._delay = time;\r\n                return this;\r\n            },\r\n            /**\r\n             * 添加动画结束的回调\r\n             * @param  {Function} cb\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            done : function(cb) {\r\n                if (cb) {\r\n                    this._doneList.push(cb);\r\n                }\r\n                return this;\r\n            }\r\n        };\r\n\r\n        return Animation;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 动画主控制器\r\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\r\n * @config life(1000) 动画时长\r\n * @config delay(0) 动画延迟时间\r\n * @config loop(true)\r\n * @config gap(0) 循环的间隔时间\r\n * @config onframe\r\n * @config easing(optional)\r\n * @config ondestroy(optional)\r\n * @config onrestart(optional)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n\r\n        var Easing = __webpack_require__(60);\r\n\r\n        function Clip(options) {\r\n\r\n            this._targetPool = options.target || {};\r\n            if (!(this._targetPool instanceof Array)) {\r\n                this._targetPool = [ this._targetPool ];\r\n            }\r\n\r\n            // 生命周期\r\n            this._life = options.life || 1000;\r\n            // 延时\r\n            this._delay = options.delay || 0;\r\n            // 开始时间\r\n            this._startTime = new Date().getTime() + this._delay;// 单位毫秒\r\n\r\n            // 结束时间\r\n            this._endTime = this._startTime + this._life * 1000;\r\n\r\n            // 是否循环\r\n            this.loop = typeof options.loop == 'undefined'\r\n                        ? false : options.loop;\r\n\r\n            this.gap = options.gap || 0;\r\n\r\n            this.easing = options.easing || 'Linear';\r\n\r\n            this.onframe = options.onframe;\r\n            this.ondestroy = options.ondestroy;\r\n            this.onrestart = options.onrestart;\r\n        }\r\n\r\n        Clip.prototype = {\r\n            step : function (time) {\r\n                var percent = (time - this._startTime) / this._life;\r\n\r\n                // 还没开始\r\n                if (percent < 0) {\r\n                    return;\r\n                }\r\n\r\n                percent = Math.min(percent, 1);\r\n\r\n                var easingFunc = typeof this.easing == 'string'\r\n                                 ? Easing[this.easing]\r\n                                 : this.easing;\r\n                var schedule = typeof easingFunc === 'function'\r\n                    ? easingFunc(percent)\r\n                    : percent;\r\n\r\n                this.fire('frame', schedule);\r\n\r\n                // 结束\r\n                if (percent == 1) {\r\n                    if (this.loop) {\r\n                        this.restart();\r\n                        // 重新开始周期\r\n                        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\r\n                        return 'restart';\r\n                    }\r\n                    \r\n                    // 动画完成将这个控制器标识为待删除\r\n                    // 在Animation.update中进行批量删除\r\n                    this.__needsRemove = true;\r\n                    return 'destroy';\r\n                }\r\n                \r\n                return null;\r\n            },\r\n            restart : function() {\r\n                var time = new Date().getTime();\r\n                var remainder = (time - this._startTime) % this._life;\r\n                this._startTime = new Date().getTime() - remainder + this.gap;\r\n\r\n                this.__needsRemove = false;\r\n            },\r\n            fire : function(eventType, arg) {\r\n                for (var i = 0, len = this._targetPool.length; i < len; i++) {\r\n                    if (this['on' + eventType]) {\r\n                        this['on' + eventType](this._targetPool[i], arg);\r\n                    }\r\n                }\r\n            },\r\n            constructor: Clip\r\n        };\r\n\r\n        return Clip;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n        /**\r\n         * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\r\n         * @see http://sole.github.io/tween.js/examples/03_graphs.html\r\n         * @exports zrender/animation/easing\r\n         */\r\n        var easing = {\r\n            // 线性\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            Linear: function (k) {\r\n                return k;\r\n            },\r\n\r\n            // 二次方的缓动（t^2）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuadraticIn: function (k) {\r\n                return k * k;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuadraticOut: function (k) {\r\n                return k * (2 - k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuadraticInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * k * k;\r\n                }\r\n                return -0.5 * (--k * (k - 2) - 1);\r\n            },\r\n\r\n            // 三次方的缓动（t^3）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CubicIn: function (k) {\r\n                return k * k * k;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CubicOut: function (k) {\r\n                return --k * k * k + 1;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CubicInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * k * k * k;\r\n                }\r\n                return 0.5 * ((k -= 2) * k * k + 2);\r\n            },\r\n\r\n            // 四次方的缓动（t^4）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuarticIn: function (k) {\r\n                return k * k * k * k;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuarticOut: function (k) {\r\n                return 1 - (--k * k * k * k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuarticInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * k * k * k * k;\r\n                }\r\n                return -0.5 * ((k -= 2) * k * k * k - 2);\r\n            },\r\n\r\n            // 五次方的缓动（t^5）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuinticIn: function (k) {\r\n                return k * k * k * k * k;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuinticOut: function (k) {\r\n                return --k * k * k * k * k + 1;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuinticInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * k * k * k * k * k;\r\n                }\r\n                return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n            },\r\n\r\n            // 正弦曲线的缓动（sin(t)）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            SinusoidalIn: function (k) {\r\n                return 1 - Math.cos(k * Math.PI / 2);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            SinusoidalOut: function (k) {\r\n                return Math.sin(k * Math.PI / 2);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            SinusoidalInOut: function (k) {\r\n                return 0.5 * (1 - Math.cos(Math.PI * k));\r\n            },\r\n\r\n            // 指数曲线的缓动（2^t）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ExponentialIn: function (k) {\r\n                return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ExponentialOut: function (k) {\r\n                return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ExponentialInOut: function (k) {\r\n                if (k === 0) {\r\n                    return 0;\r\n                }\r\n                if (k === 1) {\r\n                    return 1;\r\n                }\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * Math.pow(1024, k - 1);\r\n                }\r\n                return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n            },\r\n\r\n            // 圆形曲线的缓动（sqrt(1-t^2)）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CircularIn: function (k) {\r\n                return 1 - Math.sqrt(1 - k * k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CircularOut: function (k) {\r\n                return Math.sqrt(1 - (--k * k));\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CircularInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n                }\r\n                return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n            },\r\n\r\n            // 创建类似于弹簧在停止前来回振荡的动画\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ElasticIn: function (k) {\r\n                var s; \r\n                var a = 0.1;\r\n                var p = 0.4;\r\n                if (k === 0) {\r\n                    return 0;\r\n                }\r\n                if (k === 1) {\r\n                    return 1;\r\n                }\r\n                if (!a || a < 1) {\r\n                    a = 1; s = p / 4;\r\n                }\r\n                else {\r\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n                }\r\n                return -(a * Math.pow(2, 10 * (k -= 1)) *\r\n                            Math.sin((k - s) * (2 * Math.PI) / p));\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ElasticOut: function (k) {\r\n                var s;\r\n                var a = 0.1;\r\n                var p = 0.4;\r\n                if (k === 0) {\r\n                    return 0;\r\n                }\r\n                if (k === 1) {\r\n                    return 1;\r\n                }\r\n                if (!a || a < 1) {\r\n                    a = 1; s = p / 4;\r\n                }\r\n                else {\r\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n                }\r\n                return (a * Math.pow(2, -10 * k) *\r\n                        Math.sin((k - s) * (2 * Math.PI) / p) + 1);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ElasticInOut: function (k) {\r\n                var s;\r\n                var a = 0.1;\r\n                var p = 0.4;\r\n                if (k === 0) {\r\n                    return 0;\r\n                }\r\n                if (k === 1) {\r\n                    return 1;\r\n                }\r\n                if (!a || a < 1) {\r\n                    a = 1; s = p / 4;\r\n                }\r\n                else {\r\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n                }\r\n                if ((k *= 2) < 1) {\r\n                    return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\r\n                        * Math.sin((k - s) * (2 * Math.PI) / p));\r\n                }\r\n                return a * Math.pow(2, -10 * (k -= 1))\r\n                        * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\r\n            },\r\n\r\n            // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BackIn: function (k) {\r\n                var s = 1.70158;\r\n                return k * k * ((s + 1) * k - s);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BackOut: function (k) {\r\n                var s = 1.70158;\r\n                return --k * k * ((s + 1) * k + s) + 1;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BackInOut: function (k) {\r\n                var s = 1.70158 * 1.525;\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * (k * k * ((s + 1) * k - s));\r\n                }\r\n                return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n            },\r\n\r\n            // 创建弹跳效果\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BounceIn: function (k) {\r\n                return 1 - easing.BounceOut(1 - k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BounceOut: function (k) {\r\n                if (k < (1 / 2.75)) {\r\n                    return 7.5625 * k * k;\r\n                }\r\n                else if (k < (2 / 2.75)) {\r\n                    return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n                }\r\n                else if (k < (2.5 / 2.75)) {\r\n                    return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n                }\r\n                else {\r\n                    return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n                }\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BounceInOut: function (k) {\r\n                if (k < 0.5) {\r\n                    return easing.BounceIn(k * 2) * 0.5;\r\n                }\r\n                return easing.BounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n            }\r\n        };\r\n\r\n        return easing;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件：孤岛数据\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var ChartBase = __webpack_require__(33);\r\n    \r\n    // 图形依赖\r\n    var CircleShape = __webpack_require__(23);\r\n    \r\n    var ecConfig = __webpack_require__(4);\r\n    ecConfig.island = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 5,                       // 二级层叠\r\n        r: 15,\r\n        calculateStep: 0.1  // 滚轮可计算步长 0.1 = 10%\r\n    };\r\n\r\n    var ecData = __webpack_require__(14);\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrEvent = __webpack_require__(9);\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表选项\r\n     */\r\n    function Island(ecTheme, messageCenter, zr, option, myChart) {\r\n        // 图表基类\r\n        ChartBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this._nameConnector;\r\n        this._valueConnector;\r\n        this._zrHeight = this.zr.getHeight();\r\n        this._zrWidth = this.zr.getWidth();\r\n\r\n        var self = this;\r\n        /**\r\n         * 滚轮改变孤岛数据值\r\n         */\r\n        self.shapeHandler.onmousewheel = function (param) {\r\n            var shape = param.target;\r\n\r\n            var event = param.event;\r\n            var delta = zrEvent.getDelta(event);\r\n            delta = delta > 0 ? (-1) : 1;\r\n            shape.style.r -= delta;\r\n            shape.style.r = shape.style.r < 5 ? 5 : shape.style.r;\r\n\r\n            var value = ecData.get(shape, 'value');\r\n            var dvalue = value * self.option.island.calculateStep;\r\n            value = dvalue > 1\r\n                    ? (Math.round(value - dvalue * delta))\r\n                    : +(value - dvalue * delta).toFixed(2);\r\n\r\n            var name = ecData.get(shape, 'name');\r\n            shape.style.text = name + ':' + value;\r\n\r\n            ecData.set(shape, 'value', value);\r\n            ecData.set(shape, 'name', name);\r\n\r\n            self.zr.modShape(shape.id);\r\n            self.zr.refreshNextFrame();\r\n            zrEvent.stop(event);\r\n        };\r\n    }\r\n    \r\n    Island.prototype = {\r\n        type: ecConfig.CHART_TYPE_ISLAND,\r\n        /**\r\n         * 孤岛合并\r\n         *\r\n         * @param {string} tarShapeIndex 目标索引\r\n         * @param {Object} srcShape 源目标，合入目标后删除\r\n         */\r\n        _combine: function (tarShape, srcShape) {\r\n            var zrColor = __webpack_require__(3);\r\n            var accMath = __webpack_require__(42);\r\n            var value = accMath.accAdd(\r\n                            ecData.get(tarShape, 'value'),\r\n                            ecData.get(srcShape, 'value')\r\n                        );\r\n            var name = ecData.get(tarShape, 'name')\r\n                       + this._nameConnector\r\n                       + ecData.get(srcShape, 'name');\r\n\r\n            tarShape.style.text = name + this._valueConnector + value;\r\n\r\n            ecData.set(tarShape, 'value', value);\r\n            ecData.set(tarShape, 'name', name);\r\n            tarShape.style.r = this.option.island.r;\r\n            tarShape.style.color = zrColor.mix(\r\n                tarShape.style.color,\r\n                srcShape.style.color\r\n            );\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                newOption.island = this.reformOption(newOption.island);\r\n                this.option = newOption;\r\n    \r\n                this._nameConnector = this.option.nameConnector;\r\n                this._valueConnector = this.option.valueConnector;\r\n            }\r\n        },\r\n        \r\n        getOption: function () {\r\n            return this.option;\r\n        },\r\n\r\n        resize: function () {\r\n            var newWidth = this.zr.getWidth();\r\n            var newHieght = this.zr.getHeight();\r\n            var xScale = newWidth / (this._zrWidth || newWidth);\r\n            var yScale = newHieght / (this._zrHeight || newHieght);\r\n            if (xScale === 1 && yScale === 1) {\r\n                return;\r\n            }\r\n            this._zrWidth = newWidth;\r\n            this._zrHeight = newHieght;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.modShape(\r\n                    this.shapeList[i].id,\r\n                    {\r\n                        style: {\r\n                            x: Math.round(this.shapeList[i].style.x * xScale),\r\n                            y: Math.round(this.shapeList[i].style.y * yScale)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        add: function (shape) {\r\n            var name = ecData.get(shape, 'name');\r\n            var value = ecData.get(shape, 'value');\r\n            var seriesName = ecData.get(shape, 'series') != null\r\n                             ? ecData.get(shape, 'series').name\r\n                             : '';\r\n            var font = this.getFont(this.option.island.textStyle);\r\n            var islandOption = this.option.island;\r\n            var islandShape = {\r\n                zlevel: islandOption.zlevel,\r\n                z: islandOption.z,\r\n                style: {\r\n                    x: shape.style.x,\r\n                    y: shape.style.y,\r\n                    r: this.option.island.r,\r\n                    color: shape.style.color || shape.style.strokeColor,\r\n                    text: name + this._valueConnector + value,\r\n                    textFont: font\r\n                },\r\n                draggable: true,\r\n                hoverable: true,\r\n                onmousewheel: this.shapeHandler.onmousewheel,\r\n                _type: 'island'\r\n            };\r\n            if (islandShape.style.color === '#fff') {\r\n                islandShape.style.color = shape.style.strokeColor;\r\n            }\r\n            this.setCalculable(islandShape);\r\n            islandShape.dragEnableTime = 0;\r\n            ecData.pack(\r\n                islandShape,\r\n                {name:seriesName}, -1,\r\n                value, -1,\r\n                name\r\n            );\r\n            islandShape = new CircleShape(islandShape);\r\n            this.shapeList.push(islandShape);\r\n            this.zr.addShape(islandShape);\r\n        },\r\n\r\n        del: function (shape) {\r\n            this.zr.delShape(shape.id);\r\n            var newShapeList = [];\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].id != shape.id) {\r\n                    newShapeList.push(this.shapeList[i]);\r\n                }\r\n            }\r\n            this.shapeList = newShapeList;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽进来， 重载基类方法\r\n         */\r\n        ondrop: function (param, status) {\r\n            if (!this.isDrop || !param.target) {\r\n                // 没有在当前实例上发生拖拽行为则直接返回\r\n                return;\r\n            }\r\n            // 拖拽产生孤岛数据合并\r\n            var target = param.target;      // 拖拽安放目标\r\n            var dragged = param.dragged;    // 当前被拖拽的图形对象\r\n\r\n            this._combine(target, dragged);\r\n            this.zr.modShape(target.id);\r\n\r\n            status.dragIn = true;\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDrop = false;\r\n\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽出去， 重载基类方法\r\n         */\r\n        ondragend: function (param, status) {\r\n            var target = param.target;      // 拖拽安放目标\r\n            if (!this.isDragend) {\r\n                // 拖拽的不是孤岛数据，如果没有图表接受孤岛数据，需要新增孤岛数据\r\n                if (!status.dragIn) {\r\n                    target.style.x = zrEvent.getX(param.event);\r\n                    target.style.y = zrEvent.getY(param.event);\r\n                    this.add(target);\r\n                    status.needRefresh = true;\r\n                }\r\n            }\r\n            else {\r\n                // 拖拽的是孤岛数据，如果有图表接受了孤岛数据，需要删除孤岛数据\r\n                if (status.dragIn) {\r\n                    this.del(target);\r\n                    status.needRefresh = true;\r\n                }\r\n            }\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n\r\n            return;\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Island, ChartBase);\r\n    \r\n    // 图表注册\r\n    __webpack_require__(29).define('island', Island);\r\n    \r\n    return Island;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * n角星（n>3）\r\n * @module zrender/shape/Star\r\n * @author sushuang (宿爽, sushuang0322@gmail.com)\r\n * @example\r\n *     var Star = require('zrender/shape/Star');\r\n *     var shape = new Star({\r\n *         style: {\r\n *             x: 200,\r\n *             y: 100,\r\n *             r: 150,\r\n *             n: 5,\r\n *             text: '五角星'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IStarStyle\r\n * @property {number} x n角星外接圆心x坐标\r\n * @property {number} y n角星外接圆心y坐标\r\n * @property {number} r n角星外接圆半径\r\n * @property {number} [r0] n角星内部顶点（凹点）的外接圆半径。\r\n *                         如果不指定此参数，则自动计算：取相隔外部顶点连线的交点作内部顶点。\r\n * @property {number} n 指明几角星\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n        var math = __webpack_require__(34);\r\n        var sin = math.sin;\r\n        var cos = math.cos;\r\n        var PI = Math.PI;\r\n\r\n        var Base = __webpack_require__(1);\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Star\r\n         * @param {Object} options\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         */\r\n        var Star = function(options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * n角星绘制样式\r\n             * @name module:zrender/shape/Star#style\r\n             * @type {module:zrender/shape/Star~IStarStyle}\r\n             */\r\n            /**\r\n             * n角星高亮绘制样式\r\n             * @name module:zrender/shape/Star#highlightStyle\r\n             * @type {module:zrender/shape/Star~IStarStyle}\r\n             */\r\n        };\r\n\r\n        Star.prototype = {\r\n            type: 'star',\r\n\r\n            /**\r\n             * 创建n角星（n>3）路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Star~IStarStyle} style\r\n             */\r\n            buildPath : function(ctx, style) {\r\n                var n = style.n;\r\n                if (!n || n < 2) {\r\n                    return;\r\n                }\r\n\r\n                var x = style.x;\r\n                var y = style.y;\r\n                var r = style.r;\r\n                var r0 = style.r0;\r\n\r\n                // 如果未指定内部顶点外接圆半径，则自动计算\r\n                if (r0 == null) {\r\n                    r0 = n > 4\r\n                        // 相隔的外部顶点的连线的交点，\r\n                        // 被取为内部交点，以此计算r0\r\n                        ? r * cos(2 * PI / n) / cos(PI / n)\r\n                        // 二三四角星的特殊处理\r\n                        : r / 3;\r\n                }\r\n\r\n                var dStep = PI / n;\r\n                var deg = -PI / 2;\r\n                var xStart = x + r * cos(deg);\r\n                var yStart = y + r * sin(deg);\r\n                deg += dStep;\r\n\r\n                // 记录边界点，用于判断inside\r\n                var pointList = style.pointList = [];\r\n                pointList.push([ xStart, yStart ]);\r\n                for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\r\n                    ri = i % 2 === 0 ? r0 : r;\r\n                    pointList.push([ x + ri * cos(deg), y + ri * sin(deg) ]);\r\n                    deg += dStep;\r\n                }\r\n                pointList.push([ xStart, yStart ]);\r\n\r\n                // 绘制\r\n                ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                for (var i = 0; i < pointList.length; i++) {\r\n                    ctx.lineTo(pointList[i][0], pointList[i][1]);\r\n                }\r\n                \r\n                ctx.closePath();\r\n\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 返回n角星包围盒矩形\r\n             * @param {module:zrender/shape/Star~IStarStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function(style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                style.__rect = {\r\n                    x : Math.round(style.x - style.r - lineWidth / 2),\r\n                    y : Math.round(style.y - style.r - lineWidth / 2),\r\n                    width : style.r * 2 + lineWidth,\r\n                    height : style.r * 2 + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Star, Base);\r\n        return Star;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * @module zrender/shape/Heart\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *   var Heart = require('zrender/shape/Heart');\r\n *   var shape = new Heart({\r\n *       style: {\r\n *           x: 100,\r\n *           y: 100,\r\n *           a: 40,\r\n *           b: 40,\r\n *           brushType: 'both',\r\n *           color: 'blue',\r\n *           strokeColor: 'red',\r\n *           lineWidth: 3,\r\n *           text: 'Heart'\r\n *       }    \r\n *   });\r\n *   zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IHeartStyle\r\n * @property {number} x 心形内部尖端横坐标\r\n * @property {number} y 心形内部尖端纵坐标\r\n * @property {number} a 心形横宽（中轴线到水平边缘最宽处距离）\r\n * @property {number} b 心形纵高（内尖到外尖距离）\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        'use strict';\r\n        \r\n        var Base = __webpack_require__(1);\r\n        var PathProxy = __webpack_require__(35);\r\n        var area = __webpack_require__(2);\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Heart\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Heart = function (options) {\r\n            Base.call(this, options);\r\n\r\n            this._pathProxy = new PathProxy();\r\n            /**\r\n             * 心形绘制样式\r\n             * @name module:zrender/shape/Heart#style\r\n             * @type {module:zrender/shape/Heart~IHeartStyle}\r\n             */\r\n            /**\r\n             * 心形高亮绘制样式\r\n             * @name module:zrender/shape/Heart#highlightStyle\r\n             * @type {module:zrender/shape/Heart~IHeartStyle}\r\n             */\r\n        };\r\n\r\n        Heart.prototype = {\r\n            type: 'heart',\r\n\r\n            /**\r\n             * 创建扇形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Heart~IHeartStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                var path = this._pathProxy || new PathProxy();\r\n                path.begin(ctx);\r\n\r\n                path.moveTo(style.x, style.y);\r\n                path.bezierCurveTo(\r\n                    style.x + style.a / 2,\r\n                    style.y - style.b * 2 / 3,\r\n                    style.x + style.a * 2,\r\n                    style.y + style.b / 3,\r\n                    style.x,\r\n                    style.y + style.b\r\n                );\r\n                path.bezierCurveTo(\r\n                    style.x - style.a *  2,\r\n                    style.y + style.b / 3,\r\n                    style.x - style.a / 2,\r\n                    style.y - style.b * 2 / 3,\r\n                    style.x,\r\n                    style.y\r\n                );\r\n                path.closePath();\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回心形的包围盒矩形\r\n             * @param {module:zrender/shape/Heart~IHeartStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                if (!this._pathProxy.isEmpty()) {\r\n                    this.buildPath(null, style);\r\n                }\r\n                return this._pathProxy.fastBoundingRect();\r\n            },\r\n\r\n            isCover: function (x, y) {\r\n                var originPos = this.transformCoordToLocal(x, y);\r\n                x = originPos[0];\r\n                y = originPos[1];\r\n                \r\n                if (this.isCoverRect(x, y)) {\r\n                    return area.isInsidePath(\r\n                        this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, x, y\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(Heart, Base);\r\n        return Heart;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         Yi Shen(https://github.com/pissang)\r\n *\r\n * shape类：标线\r\n */\r\n\r\n/**\r\n * @typedef {Object} IMarkLineStyle\r\n * @property {number} xStart 起点x坐标\r\n * @property {number} yStart 起点y坐标\r\n * @property {number} xEnd 终止点x坐标\r\n * @property {number} yEnd 终止点y坐标\r\n * @property {number} cpX1 控制点x坐标，可以使用updatePoints自动根据curveness计算\r\n * @property {number} cpY1 控制点y坐标，可以使用updatePoints自动根据curveness计算\r\n * @property {number} curveness 曲度\r\n * @property {Array.<string>} symbol\r\n * @property {Array.<number>} symbolRotate\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(1);\r\n    var IconShape = __webpack_require__(13);\r\n    var LineShape = __webpack_require__(18);\r\n    var lineInstance = new LineShape({});\r\n    var CurveShape = __webpack_require__(65);\r\n    var curveInstance = new CurveShape({});\r\n\r\n    var area = __webpack_require__(2);\r\n    var dashedLineTo = __webpack_require__(19);\r\n    var zrUtil = __webpack_require__(0);\r\n    var curveTool = __webpack_require__(17);\r\n\r\n    function MarkLine(options) {\r\n        Base.call(this, options);\r\n\r\n        if (this.style.curveness > 0) {\r\n            this.updatePoints(this.style);\r\n        }\r\n        if (this.highlightStyle.curveness > 0) {\r\n            this.updatePoints(this.highlightStyle);\r\n        }\r\n    }\r\n\r\n    MarkLine.prototype =  {\r\n        type : 'mark-line',\r\n        /**\r\n         * 画刷\r\n         * @param ctx 画布句柄\r\n         * @param isHighlight   是否为高亮状态\r\n         * @param updateCallback 让painter更新视图，base.brush没用，需要的话重载brush\r\n         */\r\n        brush : function (ctx, isHighlight) {\r\n            var style = this.style;\r\n\r\n            if (isHighlight) {\r\n                // 根据style扩展默认高亮样式\r\n                style = this.getHighlightStyle(\r\n                    style,\r\n                    this.highlightStyle || {}\r\n                );\r\n            }\r\n\r\n            ctx.save();\r\n            this.setContext(ctx, style);\r\n\r\n            // 设置transform\r\n            this.setTransform(ctx);\r\n\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            this.buildPath(ctx, style);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            this.brushSymbol(ctx, style, 0);\r\n            this.brushSymbol(ctx, style, 1);\r\n\r\n            this.drawText(ctx, style, this.style);\r\n\r\n            ctx.restore();\r\n        },\r\n\r\n        /**\r\n         * 创建线条路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            var lineType = style.lineType || 'solid';\r\n\r\n            ctx.moveTo(style.xStart, style.yStart);\r\n            if (style.curveness > 0) {\r\n                // FIXME Bezier 在少部分浏览器上暂时不支持虚线\r\n                var lineDash = null;\r\n                switch (lineType) {\r\n                    case 'dashed':\r\n                        lineDash = [5, 5];\r\n                        break;\r\n                    case'dotted':\r\n                        lineDash = [1, 1];\r\n                        break;\r\n                }\r\n                if (lineDash && ctx.setLineDash) {\r\n                    ctx.setLineDash(lineDash);\r\n                }\r\n                \r\n                ctx.quadraticCurveTo(\r\n                    style.cpX1, style.cpY1, style.xEnd, style.yEnd\r\n                );\r\n            }\r\n            else {\r\n                if (lineType == 'solid') {\r\n                    ctx.lineTo(style.xEnd, style.yEnd);\r\n                }\r\n                else {\r\n                    var dashLength = (style.lineWidth || 1) \r\n                        * (style.lineType == 'dashed' ? 5 : 1);\r\n                    dashedLineTo(\r\n                        ctx, style.xStart, style.yStart,\r\n                        style.xEnd, style.yEnd, dashLength\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update cpX1 and cpY1 according to curveniss\r\n         * @param  {Object} style\r\n         */\r\n        updatePoints: function (style) {\r\n            var curveness = style.curveness || 0;\r\n            var inv = 1;\r\n\r\n            var x0 = style.xStart;\r\n            var y0 = style.yStart;\r\n            var x2 = style.xEnd;\r\n            var y2 = style.yEnd;\r\n            var x1 = (x0 + x2) / 2 - inv * (y0 - y2) * curveness;\r\n            var y1 =(y0 + y2) / 2 - inv * (x2 - x0) * curveness;\r\n\r\n            style.cpX1 = x1;\r\n            style.cpY1 = y1;\r\n        },\r\n\r\n        /**\r\n         * 标线始末标注\r\n         */\r\n        brushSymbol : function (ctx, style, idx) {\r\n            if (style.symbol[idx] == 'none') {\r\n                return;\r\n            }\r\n            ctx.save();\r\n            ctx.beginPath();\r\n\r\n            ctx.lineWidth = style.symbolBorder;\r\n            ctx.strokeStyle = style.symbolBorderColor;\r\n            // symbol\r\n            var symbol = style.symbol[idx].replace('empty', '')\r\n                                              .toLowerCase();\r\n            if (style.symbol[idx].match('empty')) {\r\n                ctx.fillStyle = '#fff'; //'rgba(0, 0, 0, 0)';\r\n            }\r\n\r\n            // symbolRotate\r\n            var x0 = style.xStart;\r\n            var y0 = style.yStart;\r\n            var x2 = style.xEnd;\r\n            var y2 = style.yEnd;\r\n            var x = idx === 0 ? x0 : x2;\r\n            var y = idx === 0 ? y0 : y2;\r\n            var curveness = style.curveness || 0;\r\n            var rotate = style.symbolRotate[idx] != null ? (style.symbolRotate[idx] - 0) : 0;\r\n            rotate = rotate / 180 * Math.PI;\r\n\r\n            if (symbol == 'arrow' && rotate === 0) {\r\n                if (curveness === 0) {\r\n                    var sign = idx === 0 ? -1 : 1; \r\n                    rotate = Math.PI / 2 + Math.atan2(\r\n                        sign * (y2 - y0), sign * (x2 - x0)\r\n                    );\r\n                }\r\n                else {\r\n                    var x1 = style.cpX1;\r\n                    var y1 = style.cpY1;\r\n\r\n                    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\r\n                    var dx = quadraticDerivativeAt(x0, x1, x2, idx);\r\n                    var dy = quadraticDerivativeAt(y0, y1, y2, idx);\r\n\r\n                    rotate = Math.PI / 2 + Math.atan2(dy, dx);\r\n                }\r\n            }\r\n            \r\n            ctx.translate(x, y);\r\n\r\n            if (rotate !== 0) {\r\n                ctx.rotate(rotate);\r\n            }\r\n\r\n            // symbolSize\r\n            var symbolSize = style.symbolSize[idx];\r\n            IconShape.prototype.buildPath(ctx, {\r\n                x: -symbolSize,\r\n                y: -symbolSize,\r\n                width: symbolSize * 2,\r\n                height: symbolSize * 2,\r\n                iconType: symbol\r\n            });\r\n\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        },\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            style.curveness > 0 ? curveInstance.getRect(style)\r\n                : lineInstance.getRect(style);\r\n            return style.__rect;\r\n        },\r\n\r\n        isCover : function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n\r\n            // 快速预判并保留判断矩形\r\n            if (this.isCoverRect(x, y)) {\r\n                // 矩形内\r\n                return this.style.curveness > 0\r\n                       ? area.isInside(curveInstance, this.style, x, y)\r\n                       : area.isInside(lineInstance, this.style, x, y);\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(MarkLine, Base);\r\n\r\n    return MarkLine;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * 贝塞尔曲线\r\n * @module zrender/shape/BezierCurve\r\n * @author Neil (杨骥, 511415343@qq.com)\r\n * @example\r\n *     var BezierCurve = require('zrender/shape/BezierCurve');\r\n *     var shape = new BezierCurve({\r\n *         style: {\r\n *             xStart: 0,\r\n *             yStart: 0,\r\n *             cpX1: 100,\r\n *             cpY1: 0,\r\n *             cpX2: 0,\r\n *             cpY2: 100,\r\n *             xEnd: 100,\r\n *             yEnd: 100,\r\n *             strokeColor: 'red'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IBezierCurveStyle\r\n * @property {number} xStart 起点x坐标\r\n * @property {number} yStart 起点y坐标\r\n * @property {number} cpX1 第一个控制点x坐标\r\n * @property {number} cpY1 第一个控制点y坐标\r\n * @property {number} [cpX2] 第二个控制点x坐标，如果不给则为二次贝塞尔曲线\r\n * @property {number} [cpY2] 第二个控制点y坐标，如果不给则为二次贝塞尔曲线\r\n * @property {number} xEnd 终止点x坐标\r\n * @property {number} yEnd 终止点y坐标\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        'use strict';\r\n\r\n        var Base = __webpack_require__(1);\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/BezierCurve\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var BezierCurve = function(options) {\r\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\r\n            this.textPosition = 'end';\r\n            Base.call(this, options);\r\n            /**\r\n             * 贝赛尔曲线绘制样式\r\n             * @name module:zrender/shape/BezierCurve#style\r\n             * @type {module:zrender/shape/BezierCurve~IBezierCurveStyle}\r\n             */\r\n            /**\r\n             * 贝赛尔曲线高亮绘制样式\r\n             * @name module:zrender/shape/BezierCurve#highlightStyle\r\n             * @type {module:zrender/shape/BezierCurve~IBezierCurveStyle}\r\n             */\r\n        };\r\n\r\n        BezierCurve.prototype = {\r\n            type: 'bezier-curve',\r\n\r\n            /**\r\n             * 创建贝塞尔曲线路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/BezierCurve~IBezierCurveStyle} style\r\n             */\r\n            buildPath : function(ctx, style) {\r\n                ctx.moveTo(style.xStart, style.yStart);\r\n                if (typeof style.cpX2 != 'undefined'\r\n                    && typeof style.cpY2 != 'undefined'\r\n                ) {\r\n                    ctx.bezierCurveTo(\r\n                        style.cpX1, style.cpY1,\r\n                        style.cpX2, style.cpY2,\r\n                        style.xEnd, style.yEnd\r\n                    );\r\n                }\r\n                else {\r\n                    ctx.quadraticCurveTo(\r\n                        style.cpX1, style.cpY1,\r\n                        style.xEnd, style.yEnd\r\n                    );\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 计算返回贝赛尔曲线包围盒矩形。\r\n             * 该包围盒是直接从四个控制点计算，并非最小包围盒。\r\n             * @param {module:zrender/shape/BezierCurve~IBezierCurveStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function(style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var _minX = Math.min(style.xStart, style.xEnd, style.cpX1);\r\n                var _minY = Math.min(style.yStart, style.yEnd, style.cpY1);\r\n                var _maxX = Math.max(style.xStart, style.xEnd, style.cpX1);\r\n                var _maxY = Math.max(style.yStart, style.yEnd, style.cpY1);\r\n                var _x2 = style.cpX2;\r\n                var _y2 = style.cpY2;\r\n\r\n                if (typeof _x2 != 'undefined'\r\n                    && typeof _y2 != 'undefined'\r\n                ) {\r\n                    _minX = Math.min(_minX, _x2);\r\n                    _minY = Math.min(_minY, _y2);\r\n                    _maxX = Math.max(_maxX, _x2);\r\n                    _maxY = Math.max(_maxY, _y2);\r\n                }\r\n\r\n                var lineWidth = style.lineWidth || 1;\r\n                style.__rect = {\r\n                    x : _minX - lineWidth,\r\n                    y : _minY - lineWidth,\r\n                    width : _maxX - _minX + lineWidth,\r\n                    height : _maxY - _minY + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        __webpack_require__(0).inherits(BezierCurve, Base);\r\n        return BezierCurve;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts图表动画基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var zrUtil = __webpack_require__(0);\r\n    var curveTool = __webpack_require__(17);\r\n    \r\n    /**\r\n     * 折线型动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function pointList(zr, oldShape, newShape, duration, easing) {\r\n        var newPointList = newShape.style.pointList;\r\n        var newPointListLen = newPointList.length;\r\n        var oldPointList;\r\n\r\n        if (!oldShape) {        // add\r\n            oldPointList = [];\r\n            if (newShape._orient != 'vertical') {\r\n                var y = newPointList[0][1];\r\n                for (var i = 0; i < newPointListLen; i++) {\r\n                    oldPointList[i] = [newPointList[i][0], y];\r\n                }\r\n            }\r\n            else {\r\n                var x = newPointList[0][0];\r\n                for (var i = 0; i < newPointListLen; i++) {\r\n                    oldPointList[i] = [x, newPointList[i][1]];\r\n                }\r\n            }\r\n\r\n            if (newShape.type == 'half-smooth-polygon') {\r\n                oldPointList[newPointListLen - 1] = zrUtil.clone(newPointList[newPointListLen - 1]);\r\n                oldPointList[newPointListLen - 2] = zrUtil.clone(newPointList[newPointListLen - 2]);\r\n            }\r\n            oldShape = {style : {pointList : oldPointList}};\r\n        }\r\n        \r\n        oldPointList = oldShape.style.pointList;\r\n        var oldPointListLen = oldPointList.length;\r\n        if (oldPointListLen == newPointListLen) {\r\n            newShape.style.pointList = oldPointList;\r\n        }\r\n        else if (oldPointListLen < newPointListLen) {\r\n            // 原来短，新的长，补全\r\n            newShape.style.pointList = oldPointList.concat(newPointList.slice(oldPointListLen));\r\n        }\r\n        else {\r\n            // 原来长，新的短，截断\r\n            newShape.style.pointList = oldPointList.slice(0, newPointListLen);\r\n        }\r\n\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                { pointList: newPointList }\r\n            )\r\n            .during(function () {\r\n                // Updating bezier points\r\n                if (newShape.updateControlPoints) {\r\n                    newShape.updateControlPoints(newShape.style);\r\n                }\r\n            })\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 复制样式\r\n     * \r\n     * @inner\r\n     * @param {Object} target 目标对象\r\n     * @param {Object} source 源对象\r\n     * @param {...string} props 复制的属性列表\r\n     */\r\n    function cloneStyle(target, source) {\r\n        var len = arguments.length;\r\n        for (var i = 2; i < len; i++) {\r\n            var prop = arguments[i];\r\n            target.style[prop] = source.style[prop];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 方型动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function rectangle(zr, oldShape, newShape, duration, easing) {\r\n        var newShapeStyle = newShape.style;\r\n        if (!oldShape) {        // add\r\n            oldShape = {\r\n                position : newShape.position,\r\n                style : {\r\n                    x : newShapeStyle.x,\r\n                    y : newShape._orient == 'vertical'\r\n                        ? newShapeStyle.y + newShapeStyle.height\r\n                        : newShapeStyle.y,\r\n                    width: newShape._orient == 'vertical' \r\n                           ? newShapeStyle.width : 0,\r\n                    height: newShape._orient != 'vertical' \r\n                           ? newShapeStyle.height : 0\r\n                }\r\n            };\r\n        }\r\n        \r\n        var newX = newShapeStyle.x;\r\n        var newY = newShapeStyle.y;\r\n        var newWidth = newShapeStyle.width;\r\n        var newHeight = newShapeStyle.height;\r\n        var newPosition = [newShape.position[0], newShape.position[1]];\r\n        cloneStyle(\r\n            newShape, oldShape,\r\n            'x', 'y', 'width', 'height'\r\n        );\r\n        newShape.position = oldShape.position;\r\n\r\n        zr.addShape(newShape);\r\n        if (newPosition[0] != oldShape.position[0] || newPosition[1] != oldShape.position[1]) {\r\n            zr.animate(newShape.id, '')\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        position: newPosition\r\n                    }\r\n                )\r\n                .start(easing);\r\n        }\r\n        \r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    x: newX,\r\n                    y: newY,\r\n                    width: newWidth,\r\n                    height: newHeight\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 蜡烛动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function candle(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            var y = newShape.style.y;\r\n            oldShape = {style : {y : [y[0], y[0], y[0], y[0]]}};\r\n        }\r\n        \r\n        var newY = newShape.style.y;\r\n        newShape.style.y = oldShape.style.y;\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                { y: newY }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n\r\n    /**\r\n     * 环型动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function ring(zr, oldShape, newShape, duration, easing) {\r\n        var x = newShape.style.x;\r\n        var y = newShape.style.y;\r\n        var r0 = newShape.style.r0;\r\n        var r = newShape.style.r;\r\n        \r\n        newShape.__animating = true;\r\n\r\n        if (newShape._animationAdd != 'r') {\r\n            newShape.style.r0 = 0;\r\n            newShape.style.r = 0;\r\n            newShape.rotation = [Math.PI*2, x, y];\r\n            \r\n            zr.addShape(newShape);\r\n            zr.animate(newShape.id, 'style')\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        r0 : r0,\r\n                        r : r\r\n                    }\r\n                )\r\n                .done(function() {\r\n                    newShape.__animating = false;\r\n                })\r\n                .start(easing);\r\n            zr.animate(newShape.id, '')\r\n                .when(\r\n                    duration,\r\n                    { rotation : [0, x, y] }\r\n                )\r\n                .start(easing);\r\n        }\r\n        else {\r\n            newShape.style.r0 = newShape.style.r;\r\n            \r\n            zr.addShape(newShape);\r\n            zr.animate(newShape.id, 'style')\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        r0 : r0\r\n                    }\r\n                )\r\n                .done(function() {\r\n                    newShape.__animating = false;\r\n                })\r\n                .start(easing);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 扇形动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function sector(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            if (newShape._animationAdd != 'r') {\r\n                oldShape = {\r\n                    style : {\r\n                        startAngle : newShape.style.startAngle,\r\n                        endAngle : newShape.style.startAngle\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                oldShape = {style : {r0 : newShape.style.r}};\r\n            }\r\n        }\r\n        \r\n        var startAngle = newShape.style.startAngle;\r\n        var endAngle = newShape.style.endAngle;\r\n        \r\n        cloneStyle(\r\n            newShape, oldShape,\r\n            'startAngle', 'endAngle'\r\n        );\r\n        \r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    startAngle : startAngle,\r\n                    endAngle : endAngle\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 文本动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function text(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            oldShape = {\r\n                style : {\r\n                    x : newShape.style.textAlign == 'left' \r\n                        ? newShape.style.x + 100\r\n                        : newShape.style.x - 100,\r\n                    y : newShape.style.y\r\n                }\r\n            };\r\n        }\r\n        \r\n        var x = newShape.style.x;\r\n        var y = newShape.style.y;\r\n        \r\n        cloneStyle(\r\n            newShape, oldShape,\r\n            'x', 'y'\r\n        );\r\n        \r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    x : x,\r\n                    y : y\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 多边形动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function polygon(zr, oldShape, newShape, duration, easing) {\r\n        var rect = __webpack_require__(22).prototype.getRect(newShape.style);\r\n        var x = rect.x + rect.width / 2;\r\n        var y = rect.y + rect.height / 2;\r\n        \r\n        newShape.scale = [0.1, 0.1, x, y];\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, '')\r\n            .when(\r\n                duration,\r\n                {\r\n                    scale : [1, 1, x, y]\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 和弦动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function ribbon(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            oldShape = {\r\n                style : {\r\n                    source0 : 0,\r\n                    source1 : newShape.style.source1 > 0 ? 360 : -360,\r\n                    target0 : 0,\r\n                    target1 : newShape.style.target1 > 0 ? 360 : -360\r\n                }\r\n            };\r\n        }\r\n        \r\n        var source0 = newShape.style.source0;\r\n        var source1 = newShape.style.source1;\r\n        var target0 = newShape.style.target0;\r\n        var target1 = newShape.style.target1;\r\n        \r\n        if (oldShape.style) {\r\n            cloneStyle(\r\n                newShape, oldShape,\r\n                'source0', 'source1', 'target0', 'target1'\r\n            );\r\n        }\r\n        \r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    source0 : source0,\r\n                    source1 : source1,\r\n                    target0 : target0,\r\n                    target1 : target1\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * gaugePointer动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function gaugePointer(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            oldShape = {\r\n                style : {\r\n                    angle : newShape.style.startAngle\r\n                }\r\n            };\r\n        }\r\n        \r\n        var angle = newShape.style.angle;\r\n        newShape.style.angle = oldShape.style.angle;\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    angle : angle\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * icon动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function icon(zr, oldShape, newShape, duration, easing, delay) {\r\n        // 避免markPoint特效取值在动画帧上\r\n        newShape.style._x = newShape.style.x;\r\n        newShape.style._y = newShape.style.y;\r\n        newShape.style._width = newShape.style.width;\r\n        newShape.style._height = newShape.style.height;\r\n\r\n        if (!oldShape) {    // add\r\n            var x = newShape._x || 0;\r\n            var y = newShape._y || 0;\r\n            newShape.scale = [0.01, 0.01, x, y];\r\n            zr.addShape(newShape);\r\n            newShape.__animating = true;\r\n            zr.animate(newShape.id, '')\r\n                .delay(delay)\r\n                .when(\r\n                    duration,\r\n                    {scale : [1, 1, x, y]}\r\n                )\r\n                .done(function() {\r\n                    newShape.__animating = false;\r\n                })\r\n                .start(easing || 'QuinticOut');\r\n        }\r\n        else {              // mod\r\n            rectangle(zr, oldShape, newShape, duration, easing);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * line动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function line(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {\r\n            oldShape = {\r\n                style : {\r\n                    xStart : newShape.style.xStart,\r\n                    yStart : newShape.style.yStart,\r\n                    xEnd : newShape.style.xStart,\r\n                    yEnd : newShape.style.yStart\r\n                }\r\n            };\r\n        }\r\n        \r\n        var xStart = newShape.style.xStart;\r\n        var xEnd = newShape.style.xEnd;\r\n        var yStart = newShape.style.yStart;\r\n        var yEnd = newShape.style.yEnd;\r\n\r\n        cloneStyle(\r\n            newShape, oldShape,\r\n            'xStart', 'xEnd', 'yStart', 'yEnd'\r\n        );\r\n\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    xStart: xStart,\r\n                    xEnd: xEnd,\r\n                    yStart: yStart,\r\n                    yEnd: yEnd\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * markline动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function markline(zr, oldShape, newShape, duration, easing) {\r\n        easing = easing || 'QuinticOut';\r\n        newShape.__animating = true;\r\n        zr.addShape(newShape);\r\n        var newShapeStyle = newShape.style;\r\n\r\n        var animationDone = function () {\r\n            newShape.__animating = false;\r\n        };\r\n        var x0 = newShapeStyle.xStart;\r\n        var y0 = newShapeStyle.yStart;\r\n        var x2 = newShapeStyle.xEnd;\r\n        var y2 = newShapeStyle.yEnd;\r\n        if (newShapeStyle.curveness > 0) {\r\n            newShape.updatePoints(newShapeStyle);\r\n            var obj = { p: 0 };\r\n            var x1 = newShapeStyle.cpX1;\r\n            var y1 = newShapeStyle.cpY1;\r\n            var newXArr = [];\r\n            var newYArr = [];\r\n            var subdivide = curveTool.quadraticSubdivide;\r\n            zr.animation.animate(obj)\r\n                .when(duration, { p: 1 })\r\n                .during(function () {\r\n                    // Calculate subdivided curve\r\n                    subdivide(x0, x1, x2, obj.p, newXArr);\r\n                    subdivide(y0, y1, y2, obj.p, newYArr);\r\n                    newShapeStyle.cpX1 = newXArr[1];\r\n                    newShapeStyle.cpY1 = newYArr[1];\r\n                    newShapeStyle.xEnd = newXArr[2];\r\n                    newShapeStyle.yEnd = newYArr[2];\r\n                    zr.modShape(newShape);\r\n                })\r\n                .done(animationDone)\r\n                .start(easing);\r\n        }\r\n        else {\r\n            zr.animate(newShape.id, 'style')\r\n                .when(0, {\r\n                    xEnd: x0,\r\n                    yEnd: y0\r\n                })\r\n                .when(duration, {\r\n                    xEnd: x2,\r\n                    yEnd: y2\r\n                })\r\n                .done(animationDone)\r\n                .start(easing);\r\n        }\r\n    }\r\n\r\n    return {\r\n        pointList : pointList,\r\n        rectangle : rectangle,\r\n        candle : candle,\r\n        ring : ring,\r\n        sector : sector,\r\n        text : text,\r\n        polygon : polygon,\r\n        ribbon : ribbon,\r\n        gaugePointer : gaugePointer,\r\n        icon : icon,\r\n        line : line,\r\n        markline : markline\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts图表特效基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var ecData = __webpack_require__(14);\r\n    \r\n    var CircleShape = __webpack_require__(23);\r\n    var ImageShape = __webpack_require__(12);\r\n    var curveTool = __webpack_require__(17);\r\n    var IconShape = __webpack_require__(13);\r\n    var SymbolShape = __webpack_require__(37);\r\n    var ShapeBundle = __webpack_require__(41);\r\n    var Polyline = __webpack_require__(40);\r\n    var vec2 = __webpack_require__(5);\r\n\r\n    var canvasSupported = __webpack_require__(15).canvasSupported;\r\n    \r\n    function point(zr, effectList, shape, zlevel) {\r\n        var effect = shape.effect;\r\n        var color = effect.color || shape.style.strokeColor || shape.style.color;\r\n        var shadowColor = effect.shadowColor || color;\r\n        var size = effect.scaleSize;\r\n        var distance = effect.bounceDistance;\r\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\r\n                         ? effect.shadowBlur : size;\r\n\r\n        var effectShape;\r\n        if (shape.type !== 'image') {\r\n            effectShape = new IconShape({\r\n                zlevel : zlevel,\r\n                style : {\r\n                    brushType : 'stroke',\r\n                    iconType : shape.style.iconType != 'droplet'\r\n                               ? shape.style.iconType\r\n                               : 'circle',\r\n                    x : shadowBlur + 1, // 线宽\r\n                    y : shadowBlur + 1,\r\n                    n : shape.style.n,\r\n                    width : shape.style._width * size,\r\n                    height : shape.style._height * size,\r\n                    lineWidth : 1,\r\n                    strokeColor : color,\r\n                    shadowColor : shadowColor,\r\n                    shadowBlur : shadowBlur\r\n                },\r\n                draggable : false,\r\n                hoverable : false\r\n            });\r\n            if (shape.style.iconType == 'pin') {\r\n                effectShape.style.y += effectShape.style.height / 2 * 1.5;\r\n            }\r\n\r\n            if (canvasSupported) {  // 提高性能，换成image\r\n                effectShape.style.image = zr.shapeToImage(\r\n                    effectShape, \r\n                    effectShape.style.width + shadowBlur * 2 + 2, \r\n                    effectShape.style.height + shadowBlur * 2 + 2\r\n                ).style.image;\r\n                \r\n                effectShape = new ImageShape({\r\n                    zlevel : effectShape.zlevel,\r\n                    style : effectShape.style,\r\n                    draggable : false,\r\n                    hoverable : false\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            effectShape = new ImageShape({\r\n                zlevel : zlevel,\r\n                style : shape.style,\r\n                draggable : false,\r\n                hoverable : false\r\n            });\r\n        }\r\n        \r\n        ecData.clone(shape, effectShape);\r\n        \r\n        // 改变坐标，不能移到前面\r\n        effectShape.position = shape.position;\r\n        effectList.push(effectShape);\r\n        zr.addShape(effectShape);\r\n        \r\n        var devicePixelRatio = shape.type !== 'image' ? (window.devicePixelRatio || 1) : 1;\r\n        var offset = (effectShape.style.width / devicePixelRatio - shape.style._width) / 2;\r\n        effectShape.style.x = shape.style._x - offset;\r\n        effectShape.style.y = shape.style._y - offset;\r\n\r\n        if (shape.style.iconType == 'pin') {\r\n            effectShape.style.y -= shape.style.height / 2 * 1.5;\r\n        }\r\n\r\n        var duration = (effect.period + Math.random() * 10) * 100;\r\n        \r\n        zr.modShape(\r\n            shape.id, \r\n            { invisible : true}\r\n        );\r\n        \r\n        var centerX = effectShape.style.x + (effectShape.style.width) / 2 / devicePixelRatio;\r\n        var centerY = effectShape.style.y + (effectShape.style.height) / 2 / devicePixelRatio;\r\n\r\n        if (effect.type === 'scale') {\r\n            // 放大效果\r\n            zr.modShape(\r\n                effectShape.id, \r\n                {\r\n                    scale : [0.1, 0.1, centerX, centerY]\r\n                }\r\n            );\r\n            \r\n            zr.animate(effectShape.id, '', effect.loop)\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        scale : [1, 1, centerX, centerY]\r\n                    }\r\n                )\r\n                .done(function() {\r\n                    shape.effect.show = false;\r\n                    zr.delShape(effectShape.id);\r\n                })\r\n                .start();\r\n        }\r\n        else {\r\n            zr.animate(effectShape.id, 'style', effect.loop)\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        y : effectShape.style.y - distance\r\n                    }\r\n                )\r\n                .when(\r\n                    duration * 2,\r\n                    {\r\n                        y : effectShape.style.y\r\n                    }\r\n                )\r\n                .done(function() {\r\n                    shape.effect.show = false;\r\n                    zr.delShape(effectShape.id);\r\n                })\r\n                .start();\r\n        }\r\n        \r\n    }\r\n    \r\n    function largePoint(zr, effectList, shape, zlevel) {\r\n        var effect = shape.effect;\r\n        var color = effect.color || shape.style.strokeColor || shape.style.color;\r\n        var size = effect.scaleSize;\r\n        var shadowColor = effect.shadowColor || color;\r\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\r\n                         ? effect.shadowBlur : (size * 2);\r\n        var devicePixelRatio = window.devicePixelRatio || 1;\r\n        var effectShape = new SymbolShape({\r\n            zlevel : zlevel,\r\n            position : shape.position,\r\n            scale : shape.scale,\r\n            style : {\r\n                pointList : shape.style.pointList,\r\n                iconType : shape.style.iconType,\r\n                color : color,\r\n                strokeColor : color,\r\n                shadowColor : shadowColor,\r\n                shadowBlur : shadowBlur * devicePixelRatio,\r\n                random : true,\r\n                brushType: 'fill',\r\n                lineWidth:1,\r\n                size : shape.style.size\r\n            },\r\n            draggable : false,\r\n            hoverable : false\r\n        });\r\n        \r\n        effectList.push(effectShape);\r\n        zr.addShape(effectShape);\r\n        zr.modShape(\r\n            shape.id, \r\n            { invisible : true}\r\n        );\r\n        \r\n        var duration = Math.round(effect.period * 100);\r\n        var clip1 = {};\r\n        var clip2 = {};\r\n        for (var i = 0; i < 20; i++) {\r\n            effectShape.style['randomMap' + i] = 0;\r\n            clip1 = {};\r\n            clip1['randomMap' + i] = 100;\r\n            clip2 = {};\r\n            clip2['randomMap' + i] = 0;\r\n            effectShape.style['randomMap' + i] = Math.random() * 100;\r\n            zr.animate(effectShape.id, 'style', true)\r\n                .when(duration, clip1)\r\n                .when(duration * 2, clip2)\r\n                .when(duration * 3, clip1)\r\n                .when(duration * 4, clip1)\r\n                .delay(Math.random() * duration * i)\r\n                //.delay(duration / 15 * (15 - i + 1))\r\n                .start();\r\n            \r\n        }\r\n    }\r\n    \r\n    function line(zr, effectList, shape, zlevel, isLarge) {\r\n        var effect = shape.effect;\r\n        var shapeStyle = shape.style;\r\n        var color = effect.color || shapeStyle.strokeColor || shapeStyle.color;\r\n        var shadowColor = effect.shadowColor || shapeStyle.strokeColor || color;\r\n        var size = shapeStyle.lineWidth * effect.scaleSize;\r\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\r\n                         ? effect.shadowBlur : size;\r\n\r\n        var effectShape = new CircleShape({\r\n            zlevel : zlevel,\r\n            style : {\r\n                x : shadowBlur,\r\n                y : shadowBlur,\r\n                r : size,\r\n                color : color,\r\n                shadowColor : shadowColor,\r\n                shadowBlur : shadowBlur\r\n            },\r\n            hoverable : false\r\n        });\r\n\r\n        var offset = 0;\r\n        if (canvasSupported && ! isLarge) {  // 提高性能，换成image\r\n            var zlevel = effectShape.zlevel;\r\n            effectShape = zr.shapeToImage(\r\n                effectShape,\r\n                (size + shadowBlur) * 2,\r\n                (size + shadowBlur) * 2\r\n            );\r\n            effectShape.zlevel = zlevel;\r\n            effectShape.hoverable = false;\r\n\r\n            offset = shadowBlur;\r\n        }\r\n\r\n        if (! isLarge) {\r\n            ecData.clone(shape, effectShape);\r\n            // 改变坐标， 不能移到前面\r\n            effectShape.position = shape.position;\r\n            effectList.push(effectShape);\r\n            zr.addShape(effectShape);\r\n        }\r\n\r\n        var effectDone = function () {\r\n            if (! isLarge) {\r\n                shape.effect.show = false;\r\n                zr.delShape(effectShape.id);   \r\n            }\r\n            effectShape.effectAnimator = null;\r\n        };\r\n\r\n        if (shape instanceof Polyline) {\r\n            var distanceList = [0];\r\n            var totalDist = 0;\r\n            var pointList = shapeStyle.pointList;\r\n            var controlPointList = shapeStyle.controlPointList;\r\n            for (var i = 1; i < pointList.length; i++) {\r\n                if (controlPointList) {\r\n                    var cp1 = controlPointList[(i - 1) * 2];\r\n                    var cp2 = controlPointList[(i - 1) * 2 + 1];\r\n                    totalDist += vec2.dist(pointList[i - 1], cp1)\r\n                         + vec2.dist(cp1, cp2)\r\n                         + vec2.dist(cp2, pointList[i]);\r\n                }\r\n                else {\r\n                    totalDist += vec2.dist(pointList[i - 1], pointList[i]);\r\n                }\r\n                distanceList.push(totalDist);\r\n            }\r\n            var obj = { p: 0 };\r\n            var animator = zr.animation.animate(obj, { loop: effect.loop });\r\n\r\n            for (var i = 0; i < distanceList.length; i++) {\r\n                animator.when(distanceList[i] * effect.period, { p: i });\r\n            }\r\n            animator.during(function () {\r\n                var i = Math.floor(obj.p);\r\n                var x, y;\r\n                if (i == pointList.length - 1) {\r\n                    x = pointList[i][0];\r\n                    y = pointList[i][1];\r\n                }\r\n                else {\r\n                    var t = obj.p - i;\r\n                    var p0 = pointList[i];\r\n                    var p1 = pointList[i + 1];\r\n                    if (controlPointList) {\r\n                        var cp1 = controlPointList[i * 2];\r\n                        var cp2 = controlPointList[i * 2 + 1];\r\n                        x = curveTool.cubicAt(\r\n                            p0[0], cp1[0], cp2[0], p1[0], t\r\n                        );\r\n                        y = curveTool.cubicAt(\r\n                            p0[1], cp1[1], cp2[1], p1[1], t\r\n                        );\r\n                    }\r\n                    else {\r\n                        x = (p1[0] - p0[0]) * t + p0[0];\r\n                        y = (p1[1] - p0[1]) * t + p0[1];   \r\n                    }\r\n                }\r\n                effectShape.style.x = x;\r\n                effectShape.style.y = y;\r\n                if (! isLarge) {\r\n                    zr.modShape(effectShape);\r\n                }\r\n            })\r\n            .done(effectDone)\r\n            .start();\r\n\r\n            animator.duration = totalDist * effect.period;\r\n\r\n            effectShape.effectAnimator = animator;\r\n        }\r\n        else {\r\n            var x0 = shapeStyle.xStart - offset;\r\n            var y0 = shapeStyle.yStart - offset;\r\n            var x2 = shapeStyle.xEnd - offset;\r\n            var y2 = shapeStyle.yEnd - offset;\r\n            effectShape.style.x = x0;\r\n            effectShape.style.y = y0;\r\n\r\n            var distance = (x2 - x0) * (x2 - x0) + (y2 - y0) * (y2 - y0);\r\n            var duration = Math.round(Math.sqrt(Math.round(\r\n                distance * effect.period * effect.period\r\n            )));\r\n\r\n            if (shape.style.curveness > 0) {\r\n                var x1 = shapeStyle.cpX1 - offset;\r\n                var y1 = shapeStyle.cpY1 - offset;\r\n                effectShape.effectAnimator = zr.animation.animate(effectShape, { loop: effect.loop })\r\n                    .when(duration, { p: 1 })\r\n                    .during(function (target, t) {\r\n                        effectShape.style.x = curveTool.quadraticAt(\r\n                            x0, x1, x2, t\r\n                        );\r\n                        effectShape.style.y = curveTool.quadraticAt(\r\n                            y0, y1, y2, t\r\n                        );\r\n                        if (! isLarge) {\r\n                            zr.modShape(effectShape);\r\n                        }\r\n                    })\r\n                    .done(effectDone)\r\n                    .start();\r\n            }\r\n            else {\r\n                // 不用 zr.animate，因为在用 ShapeBundle 的时候单个 effectShape 不会\r\n                // 被加到 zrender 中\r\n                effectShape.effectAnimator = zr.animation.animate(effectShape.style, { loop: effect.loop })\r\n                    .when(duration, {\r\n                        x: x2,\r\n                        y: y2\r\n                    })\r\n                    .during(function () {\r\n                        if (! isLarge) {\r\n                            zr.modShape(effectShape);\r\n                        }\r\n                    })\r\n                    .done(effectDone)\r\n                    .start();\r\n            }\r\n            effectShape.effectAnimator.duration = duration;\r\n        }\r\n        return effectShape;\r\n    }\r\n\r\n    function largeLine(zr, effectList, shape, zlevel) {\r\n        var effectShape = new ShapeBundle({\r\n            style: {\r\n                shapeList: []\r\n            },\r\n            zlevel: zlevel,\r\n            hoverable: false\r\n        });\r\n        var shapeList = shape.style.shapeList;\r\n        var effect = shape.effect;\r\n        effectShape.position = shape.position;\r\n\r\n        var maxDuration = 0;\r\n        var subEffectAnimators = [];\r\n        for (var i = 0; i < shapeList.length; i++) {\r\n            shapeList[i].effect = effect;\r\n            var subEffectShape = line(zr, null, shapeList[i], zlevel, true);\r\n            var subEffectAnimator = subEffectShape.effectAnimator;\r\n            effectShape.style.shapeList.push(subEffectShape);\r\n            if (subEffectAnimator.duration > maxDuration) {\r\n                maxDuration = subEffectAnimator.duration;\r\n            }\r\n            if (i === 0) {\r\n                effectShape.style.color = subEffectShape.style.color;\r\n                effectShape.style.shadowBlur = subEffectShape.style.shadowBlur;\r\n                effectShape.style.shadowColor = subEffectShape.style.shadowColor;\r\n            }\r\n            subEffectAnimators.push(subEffectAnimator);\r\n        }\r\n        effectList.push(effectShape);\r\n        zr.addShape(effectShape);\r\n\r\n        var clearAllAnimators = function () {\r\n            for (var i = 0; i < subEffectAnimators.length; i++) {\r\n                subEffectAnimators[i].stop();\r\n            }\r\n        };\r\n        if (maxDuration) {\r\n            effectShape.__dummy = 0;\r\n            // Proxy animator\r\n            var animator = zr.animate(effectShape.id, '', effect.loop)\r\n                .when(maxDuration, {\r\n                    __dummy: 1\r\n                })\r\n                .during(function () {\r\n                    zr.modShape(effectShape);\r\n                })\r\n                .done(function () {\r\n                    shape.effect.show = false;\r\n                    zr.delShape(effectShape.id);\r\n                })\r\n                .start();\r\n            var oldStop = animator.stop;\r\n\r\n            animator.stop = function () {\r\n                clearAllAnimators();\r\n                oldStop.call(this);\r\n            };\r\n        }\r\n    }\r\n\r\n    return {\r\n        point : point,\r\n        largePoint : largePoint,\r\n        line : line,\r\n        largeLine: largeLine\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts层级查找方法\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(require) {\r\n    var zrUtil = __webpack_require__(0);\r\n    \r\n    /**\r\n     * 获取嵌套选项的基础方法\r\n     * 返回optionTarget中位于optionLocation上的值，如果没有定义，则返回undefined\r\n     */\r\n    function query(optionTarget, optionLocation) {\r\n        if (typeof optionTarget == 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!optionLocation) {\r\n            return optionTarget;\r\n        }\r\n\r\n        optionLocation = optionLocation.split('.');\r\n        var length = optionLocation.length;\r\n        var curIdx = 0;\r\n        while (curIdx < length) {\r\n            optionTarget = optionTarget[optionLocation[curIdx]];\r\n            if (typeof optionTarget == 'undefined') {\r\n                return;\r\n            }\r\n            curIdx++;\r\n        }\r\n\r\n        return optionTarget;\r\n    }\r\n        \r\n    /**\r\n     * 获取多级控制嵌套属性的基础方法\r\n     * 返回ctrList中优先级最高（最靠前）的非undefined属性，ctrList中均无定义则返回undefined\r\n     */\r\n    function deepQuery(ctrList, optionLocation) {\r\n        var finalOption;\r\n        for (var i = 0, l = ctrList.length; i < l; i++) {\r\n            finalOption = query(ctrList[i], optionLocation);\r\n            if (typeof finalOption != 'undefined') {\r\n                return finalOption;\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 获取多级控制嵌套属性的基础方法\r\n     * 根据ctrList中优先级合并产出目标属性\r\n     */\r\n    function deepMerge(ctrList, optionLocation) {\r\n        var finalOption;\r\n        var len = ctrList.length;\r\n        while (len--) {\r\n            var tempOption = query(ctrList[len], optionLocation);\r\n            if (typeof tempOption != 'undefined') {\r\n                if (typeof finalOption == 'undefined') {\r\n                    finalOption = zrUtil.clone(tempOption);\r\n                }\r\n                else {\r\n                    zrUtil.merge(\r\n                        finalOption, tempOption, true\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        \r\n        return finalOption;\r\n    }\r\n    \r\n    return {\r\n        query : query,\r\n        deepQuery : deepQuery,\r\n        deepMerge : deepMerge\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts数字运算相关\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n    function _trim(str) {\r\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n    }\r\n    \r\n    /**\r\n     * 百分比计算\r\n     */\r\n    function parsePercent(value, maxValue) {\r\n        if (typeof value === 'string') {\r\n            if (_trim(value).match(/%$/)) {\r\n                return parseFloat(value) / 100 * maxValue;\r\n            }\r\n\r\n            return parseFloat(value);\r\n        }\r\n\r\n        return value;\r\n    }\r\n    \r\n    /**\r\n     * 获取中心坐标\r\n     */ \r\n    function parseCenter(zr, center) {\r\n        return [\r\n            parsePercent(center[0], zr.getWidth()),\r\n            parsePercent(center[1], zr.getHeight())\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * 获取自适应半径\r\n     */ \r\n    function parseRadius(zr, radius) {\r\n        // 传数组实现环形图，[内半径，外半径]，传单个则默认为外半径为\r\n        if (!(radius instanceof Array)) {\r\n            radius = [0, radius];\r\n        }\r\n        var zrSize = Math.min(zr.getWidth(), zr.getHeight()) / 2;\r\n        return [\r\n            parsePercent(radius[0], zrSize),\r\n            parsePercent(radius[1], zrSize)\r\n        ];\r\n    }\r\n    \r\n    /**\r\n     * 每三位默认加,格式化\r\n     */\r\n    function addCommas(x) {\r\n        if (isNaN(x)) {\r\n            return '-';\r\n        }\r\n        x = (x + '').split('.');\r\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,') \r\n               + (x.length > 1 ? ('.' + x[1]) : '');\r\n    }\r\n\r\n    /**\r\n     * 获取数字的小数位数\r\n     * @param {number} val\r\n     */\r\n    \r\n    // It is much faster than methods converting number to string as follows \r\n    //      var tmp = val.toString();\r\n    //      return tmp.length - 1 - tmp.indexOf('.');\r\n    // especially when precision is low\r\n    function getPrecision(val) {\r\n        var e = 1;\r\n        var count = 0;\r\n        while (Math.round(val * e) / e !== val) {\r\n            e *= 10;\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n    \r\n    return {\r\n        parsePercent: parsePercent,\r\n        parseCenter: parseCenter,\r\n        parseRadius: parseRadius,\r\n        addCommas: addCommas,\r\n        getPrecision: getPrecision\r\n    };\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Edge bundling laytout\r\n *\r\n * Use MINGLE algorithm\r\n * Multilevel agglomerative edge bundling for visualizing large graphs\r\n *\r\n * @module echarts/layout/EdgeBundling\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n    var KDTree = __webpack_require__(71);\r\n    var vec2 = __webpack_require__(5);\r\n    var v2Create = vec2.create;\r\n    var v2DistSquare = vec2.distSquare;\r\n    var v2Dist = vec2.dist;\r\n    var v2Copy = vec2.copy;\r\n    var v2Clone = vec2.clone;\r\n\r\n    function squaredDistance(a, b) {\r\n        a = a.array;\r\n        b = b.array;\r\n\r\n        var x = b[0] - a[0];\r\n        var y = b[1] - a[1];\r\n        var z = b[2] - a[2];\r\n        var w = b[3] - a[3];\r\n\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    function CoarsenedEdge(group) {\r\n        this.points = [\r\n            group.mp0, group.mp1\r\n        ];\r\n\r\n        this.group = group;\r\n    }\r\n\r\n    function Edge(edge) {\r\n        var points = edge.points;\r\n        // Sort on y\r\n        if (\r\n            points[0][1] < points[1][1]\r\n            // If coarsened edge is flipped, the final composition of meet point\r\n            // will be unordered\r\n            || edge instanceof CoarsenedEdge\r\n        ) {\r\n            this.array = [points[0][0], points[0][1], points[1][0], points[1][1]];\r\n            this._startPoint = points[0];\r\n            this._endPoint = points[1];\r\n        }\r\n        else {\r\n            this.array = [points[1][0], points[1][1], points[0][0], points[0][1]];\r\n            this._startPoint = points[1];\r\n            this._endPoint = points[0];\r\n        }\r\n\r\n        this.ink = v2Dist(points[0], points[1]);\r\n\r\n        this.edge = edge;\r\n\r\n        this.group = null;\r\n    }\r\n\r\n    Edge.prototype.getStartPoint = function () {\r\n        return this._startPoint;\r\n    };\r\n\r\n    Edge.prototype.getEndPoint = function () {\r\n        return this._endPoint;\r\n    };\r\n\r\n    function BundledEdgeGroup() {\r\n\r\n        this.edgeList = [];\r\n\r\n        this.mp0 = v2Create();\r\n        this.mp1 = v2Create();\r\n\r\n        this.ink = 0;\r\n    }\r\n\r\n    BundledEdgeGroup.prototype.addEdge = function (edge) {\r\n        edge.group = this;\r\n        this.edgeList.push(edge);\r\n    };\r\n\r\n    BundledEdgeGroup.prototype.removeEdge = function (edge) {\r\n        edge.group = null;\r\n        this.edgeList.splice(this.edgeList.indexOf(edge), 1);\r\n    };\r\n\r\n    /**\r\n     * @constructor\r\n     * @alias module:echarts/layout/EdgeBundling\r\n     */\r\n    function EdgeBundling() {\r\n        this.maxNearestEdge = 6;\r\n        this.maxTurningAngle = Math.PI / 4;\r\n        this.maxIteration = 20;\r\n    }\r\n\r\n    EdgeBundling.prototype = {\r\n        \r\n        constructor: EdgeBundling,\r\n\r\n        run: function (rawEdges) {\r\n            var res = this._iterate(rawEdges);\r\n            var nIterate = 0;\r\n            while (nIterate++ < this.maxIteration) {\r\n                var coarsenedEdges = [];\r\n                for (var i = 0; i < res.groups.length; i++) {\r\n                    coarsenedEdges.push(new CoarsenedEdge(res.groups[i]));\r\n                }\r\n                var newRes = this._iterate(coarsenedEdges);\r\n                if (newRes.savedInk <= 0) {\r\n                    break;\r\n                } else {\r\n                    res = newRes;\r\n                }\r\n            }\r\n\r\n            // Get new edges\r\n            var newEdges = [];\r\n\r\n            function pointApproxEqual(p0, p1) {\r\n                // Use Float32Array may affect the precision\r\n                return v2DistSquare(p0, p1) < 1e-10;\r\n            }\r\n            // Clone all points to make sure all points in edge will not reference to the same array\r\n            // And clean the duplicate points\r\n            function cleanEdgePoints(edgePoints, rawEdgePoints) {\r\n                var res = [];\r\n                var off = 0;\r\n                for (var i = 0; i < edgePoints.length; i++) {\r\n                    if (! (off > 0 && pointApproxEqual(edgePoints[i], res[off - 1]))) {\r\n                        res[off++] = v2Clone(edgePoints[i]);\r\n                    }\r\n                }\r\n                // Edge has been reversed\r\n                if (rawEdgePoints[0] && !pointApproxEqual(res[0], rawEdgePoints[0])) {\r\n                    res = res.reverse();\r\n                }\r\n                return res;\r\n            }\r\n\r\n            var buildNewEdges = function (groups, fromEdgePoints) {\r\n                var newEdgePoints;\r\n                for (var i = 0; i < groups.length; i++) {\r\n                    var group = groups[i];\r\n                    if (\r\n                        group.edgeList[0]\r\n                        && (group.edgeList[0].edge instanceof CoarsenedEdge)\r\n                    ) {\r\n                        var newGroups = [];\r\n                        for (var j = 0; j < group.edgeList.length; j++) {\r\n                            newGroups.push(group.edgeList[j].edge.group);\r\n                        }\r\n                        if (! fromEdgePoints) {\r\n                            newEdgePoints = [];\r\n                        } else {\r\n                            newEdgePoints = fromEdgePoints.slice();\r\n                        }\r\n                        newEdgePoints.unshift(group.mp0);\r\n                        newEdgePoints.push(group.mp1);\r\n                        buildNewEdges(newGroups, newEdgePoints);\r\n                    } else {\r\n                        // console.log(group.edgeList.length);\r\n                        for (var j = 0; j < group.edgeList.length; j++) {\r\n                            var edge = group.edgeList[j];\r\n                            if (! fromEdgePoints) {\r\n                                newEdgePoints = [];\r\n                            } else {\r\n                                newEdgePoints = fromEdgePoints.slice();\r\n                            }\r\n                            newEdgePoints.unshift(group.mp0);\r\n                            newEdgePoints.push(group.mp1);\r\n                            newEdgePoints.unshift(edge.getStartPoint());\r\n                            newEdgePoints.push(edge.getEndPoint());\r\n                            newEdges.push({\r\n                                points: cleanEdgePoints(newEdgePoints, edge.edge.points),\r\n                                rawEdge: edge.edge\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            buildNewEdges(res.groups);\r\n\r\n            return newEdges;\r\n        },\r\n\r\n        _iterate: function (rawEdges) {\r\n            var edges = [];\r\n            var groups = [];\r\n            var totalSavedInk = 0;\r\n            for (var i = 0; i < rawEdges.length; i++) {\r\n                var edge = new Edge(rawEdges[i]);\r\n                edges.push(edge);\r\n            }\r\n\r\n            var tree = new KDTree(edges, 4);\r\n\r\n            var nearests = [];\r\n\r\n            var _mp0 = v2Create();\r\n            var _mp1 = v2Create();\r\n            var _newGroupInk = 0;\r\n            var mp0 = v2Create();\r\n            var mp1 = v2Create();\r\n            var newGroupInk = 0;\r\n            for (var i = 0; i < edges.length; i++) {\r\n                var edge = edges[i];\r\n                if (edge.group) {\r\n                    // Edge have been groupped\r\n                    continue;\r\n                }\r\n                tree.nearestN(\r\n                    edge, this.maxNearestEdge,\r\n                    squaredDistance, nearests\r\n                );\r\n                var maxSavedInk = 0;\r\n                var mostSavingInkEdge = null;\r\n                var lastCheckedGroup = null;\r\n                for (var j = 0; j < nearests.length; j++) {\r\n                    var nearest = nearests[j];\r\n                    var savedInk = 0;\r\n                    if (nearest.group) {\r\n                        if (nearest.group !== lastCheckedGroup) {\r\n                            lastCheckedGroup = nearest.group;\r\n                            _newGroupInk = this._calculateGroupEdgeInk(\r\n                                nearest.group, edge, _mp0, _mp1\r\n                            );\r\n                            savedInk = nearest.group.ink + edge.ink - _newGroupInk;\r\n                        }\r\n                    }\r\n                    else {\r\n                        _newGroupInk = this._calculateEdgeEdgeInk(\r\n                            edge, nearest, _mp0, _mp1\r\n                        );\r\n                        savedInk = nearest.ink + edge.ink - _newGroupInk;\r\n                    }\r\n                    if (savedInk > maxSavedInk) {\r\n                        maxSavedInk = savedInk;\r\n                        mostSavingInkEdge = nearest;\r\n                        v2Copy(mp1, _mp1);\r\n                        v2Copy(mp0, _mp0);\r\n                        newGroupInk = _newGroupInk;\r\n                    }\r\n                }\r\n                if (mostSavingInkEdge) {\r\n                    totalSavedInk += maxSavedInk;\r\n                    var group;\r\n                    if (! mostSavingInkEdge.group) {\r\n                        group = new BundledEdgeGroup();\r\n                        groups.push(group);\r\n                        group.addEdge(mostSavingInkEdge);\r\n                    }\r\n                    group = mostSavingInkEdge.group;\r\n                    // Use the meet point and group ink calculated before\r\n                    v2Copy(group.mp0, mp0);\r\n                    v2Copy(group.mp1, mp1);\r\n                    group.ink = newGroupInk;\r\n                    mostSavingInkEdge.group.addEdge(edge);\r\n                }\r\n                else {\r\n                    var group = new BundledEdgeGroup();\r\n                    groups.push(group);\r\n                    v2Copy(group.mp0, edge.getStartPoint());\r\n                    v2Copy(group.mp1, edge.getEndPoint());\r\n                    group.ink = edge.ink;\r\n                    group.addEdge(edge);\r\n                }\r\n            }\r\n\r\n            return {\r\n                groups: groups,\r\n                edges: edges,\r\n                savedInk: totalSavedInk\r\n            };\r\n        },\r\n\r\n        _calculateEdgeEdgeInk: (function () {\r\n            var startPointSet = [];\r\n            var endPointSet = [];\r\n            return function (e0, e1, mp0, mp1) {\r\n                startPointSet[0] = e0.getStartPoint();\r\n                startPointSet[1] = e1.getStartPoint();\r\n                endPointSet[0] = e0.getEndPoint();\r\n                endPointSet[1] = e1.getEndPoint();\r\n\r\n                this._calculateMeetPoints(\r\n                    startPointSet, endPointSet, mp0, mp1\r\n                );\r\n                var ink = v2Dist(startPointSet[0], mp0)\r\n                    + v2Dist(mp0, mp1)\r\n                    + v2Dist(mp1, endPointSet[0])\r\n                    + v2Dist(startPointSet[1], mp0)\r\n                    + v2Dist(mp1, endPointSet[1]);\r\n\r\n                return ink;\r\n            };\r\n        })(),\r\n\r\n        _calculateGroupEdgeInk: function (group, edgeTryAdd, mp0, mp1) {\r\n            var startPointSet = [];\r\n            var endPointSet = [];\r\n            for (var i = 0; i < group.edgeList.length; i++) {\r\n                var edge = group.edgeList[i];\r\n                startPointSet.push(edge.getStartPoint());\r\n                endPointSet.push(edge.getEndPoint());\r\n            }\r\n            startPointSet.push(edgeTryAdd.getStartPoint());\r\n            endPointSet.push(edgeTryAdd.getEndPoint());\r\n\r\n            this._calculateMeetPoints(\r\n                startPointSet, endPointSet, mp0, mp1\r\n            );\r\n\r\n            var ink = v2Dist(mp0, mp1);\r\n            for (var i = 0; i < startPointSet.length; i++) {\r\n                ink += v2Dist(startPointSet[i], mp0)\r\n                    + v2Dist(endPointSet[i], mp1);\r\n            }\r\n\r\n            return ink;\r\n        },\r\n\r\n        /**\r\n         * Calculating the meet points\r\n         * @method\r\n         * @param {Array} startPointSet Start points set of bundled edges\r\n         * @param {Array} endPointSet End points set of bundled edges\r\n         * @param {Array.<number>} mp0 Output meet point 0\r\n         * @param {Array.<number>} mp1 Output meet point 1\r\n         */\r\n        _calculateMeetPoints: (function () {\r\n            var cp0 = v2Create();\r\n            var cp1 = v2Create();\r\n            return function (startPointSet, endPointSet, mp0, mp1) {\r\n                vec2.set(cp0, 0, 0);\r\n                vec2.set(cp1, 0, 0);\r\n                var len = startPointSet.length;\r\n                // Calculate the centroid of start points set\r\n                for (var i = 0; i < len; i++) {\r\n                    vec2.add(cp0, cp0, startPointSet[i]);\r\n                }\r\n                vec2.scale(cp0, cp0, 1 / len);\r\n\r\n                // Calculate the centroid of end points set\r\n                len = endPointSet.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    vec2.add(cp1, cp1, endPointSet[i]);\r\n                }\r\n                vec2.scale(cp1, cp1, 1 / len);\r\n\r\n                this._limitTurningAngle(\r\n                    startPointSet, cp0, cp1, mp0\r\n                );\r\n                this._limitTurningAngle(\r\n                    endPointSet, cp1, cp0, mp1\r\n                );\r\n            };\r\n        })(),\r\n\r\n        _limitTurningAngle: (function () {\r\n            var v10 = v2Create();\r\n            var vTmp = v2Create();\r\n            var project = v2Create();\r\n            var tmpOut = v2Create();\r\n            return function (pointSet, p0, p1, out) {\r\n                // Limit the max turning angle\r\n                var maxTurningAngleCos = Math.cos(this.maxTurningAngle);\r\n                var maxTurningAngleTan = Math.tan(this.maxTurningAngle);\r\n\r\n                vec2.sub(v10, p0, p1);\r\n                vec2.normalize(v10, v10);\r\n\r\n                // Simply copy the centroid point if no need to turn the angle\r\n                vec2.copy(out, p0);\r\n\r\n                var maxMovement = 0;\r\n                for (var i = 0; i < pointSet.length; i++) {\r\n                    var p = pointSet[i];\r\n                    vec2.sub(vTmp, p, p0);\r\n                    var len = vec2.len(vTmp);\r\n                    vec2.scale(vTmp, vTmp, 1 / len);\r\n                    var turningAngleCos = vec2.dot(vTmp, v10);\r\n                    // Turning angle is to large\r\n                    if (turningAngleCos < maxTurningAngleCos) {\r\n                        // Calculat p's project point on vector p1-p0 \r\n                        // and distance to the vector\r\n                        vec2.scaleAndAdd(\r\n                            project, p0, v10, len * turningAngleCos\r\n                        );\r\n                        var distance = v2Dist(project, p);\r\n\r\n                        // Use the max turning angle to calculate the new meet point\r\n                        var d = distance / maxTurningAngleTan;\r\n                        vec2.scaleAndAdd(tmpOut, project, v10, -d);\r\n\r\n                        var movement = v2DistSquare(tmpOut, p0);\r\n                        if (movement > maxMovement) {\r\n                            maxMovement = movement;\r\n                            vec2.copy(out, tmpOut);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        })()\r\n    };\r\n\r\n    return EdgeBundling;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * K-Dimension Tree\r\n *\r\n * @module echarts/data/KDTree\r\n * @author Yi Shen(https://github.com/pissang)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n    var quickSelect = __webpack_require__(72);\r\n\r\n    function Node(axis, data) {\r\n        this.left = null;\r\n        this.right = null;\r\n        this.axis = axis;\r\n\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     * @alias module:echarts/data/KDTree\r\n     * @param {Array} points List of points.\r\n     * each point needs an array property to repesent the actual data\r\n     * @param {Number} [dimension]\r\n     *        Point dimension.\r\n     *        Default will use the first point's length as dimensiont\r\n     */\r\n    var KDTree = function (points, dimension) {\r\n        if (!points.length) {\r\n            return;\r\n        }\r\n\r\n        if (!dimension) {\r\n            dimension = points[0].array.length;\r\n        }\r\n        this.dimension = dimension;\r\n        this.root = this._buildTree(points, 0, points.length - 1, 0);\r\n\r\n        // Use one stack to avoid allocation \r\n        // each time searching the nearest point\r\n        this._stack = [];\r\n        // Again avoid allocating a new array\r\n        // each time searching nearest N points\r\n        this._nearstNList = [];\r\n    };\r\n\r\n    /**\r\n     * Resursively build the tree\r\n     */\r\n    KDTree.prototype._buildTree = function (points, left, right, axis) {\r\n        if (right < left) {\r\n            return null;\r\n        }\r\n\r\n        var medianIndex = Math.floor((left + right) / 2);\r\n        medianIndex = quickSelect(\r\n            points, left, right, medianIndex,\r\n            function (a, b) {\r\n                return a.array[axis] - b.array[axis];\r\n            }\r\n        );\r\n        var median = points[medianIndex];\r\n\r\n        var node = new Node(axis, median);\r\n\r\n        axis = (axis + 1) % this.dimension;\r\n        if (right > left) {\r\n            node.left = this._buildTree(points, left, medianIndex - 1, axis);\r\n            node.right = this._buildTree(points, medianIndex + 1, right, axis);   \r\n        }\r\n\r\n        return node;\r\n    };\r\n\r\n    /**\r\n     * Find nearest point\r\n     * @param  {Array} target Target point\r\n     * @param  {Function} squaredDistance Squared distance function\r\n     * @return {Array} Nearest point\r\n     */\r\n    KDTree.prototype.nearest = function (target, squaredDistance) {\r\n        var curr = this.root;\r\n        var stack = this._stack;\r\n        var idx = 0;\r\n        var minDist = Infinity;\r\n        var nearestNode = null;\r\n        if (curr.data !== target) {\r\n            minDist = squaredDistance(curr.data, target);\r\n            nearestNode = curr;\r\n        }\r\n\r\n        if (target.array[curr.axis] < curr.data.array[curr.axis]) {\r\n            // Left first\r\n            curr.right && (stack[idx++] = curr.right);\r\n            curr.left && (stack[idx++] = curr.left);\r\n        }\r\n        else {\r\n            // Right first\r\n            curr.left && (stack[idx++] = curr.left);\r\n            curr.right && (stack[idx++] = curr.right);\r\n        }\r\n\r\n        while (idx--) {\r\n            curr = stack[idx];\r\n            var currDist = target.array[curr.axis] - curr.data.array[curr.axis];\r\n            var isLeft = currDist < 0;\r\n            var needsCheckOtherSide = false;\r\n            currDist = currDist * currDist;\r\n            // Intersecting right hyperplane with minDist hypersphere\r\n            if (currDist < minDist) {\r\n                currDist = squaredDistance(curr.data, target);\r\n                if (currDist < minDist && curr.data !== target) {\r\n                    minDist = currDist;\r\n                    nearestNode = curr;\r\n                }\r\n                needsCheckOtherSide = true;\r\n            }\r\n            if (isLeft) {\r\n                if (needsCheckOtherSide) {\r\n                    curr.right && (stack[idx++] = curr.right);\r\n                }\r\n                // Search in the left area\r\n                curr.left && (stack[idx++] = curr.left);\r\n            }\r\n            else {\r\n                if (needsCheckOtherSide) {\r\n                    curr.left && (stack[idx++] = curr.left);\r\n                }\r\n                // Search the right area\r\n                curr.right && (stack[idx++] = curr.right);\r\n            }\r\n        }\r\n\r\n        return nearestNode.data;\r\n    };\r\n\r\n    KDTree.prototype._addNearest = function (found, dist, node) {\r\n        var nearestNList = this._nearstNList;\r\n\r\n        // Insert to the right position\r\n        // Sort from small to large\r\n        for (var i = found - 1; i > 0; i--) {\r\n            if (dist >= nearestNList[i - 1].dist) {                \r\n                break;\r\n            }\r\n            else {\r\n                nearestNList[i].dist = nearestNList[i - 1].dist;\r\n                nearestNList[i].node = nearestNList[i - 1].node;\r\n            }\r\n        }\r\n\r\n        nearestNList[i].dist = dist;\r\n        nearestNList[i].node = node;\r\n    };\r\n\r\n    /**\r\n     * Find nearest N points\r\n     * @param  {Array} target Target point\r\n     * @param  {number} N\r\n     * @param  {Function} squaredDistance Squared distance function\r\n     * @param  {Array} [output] Output nearest N points\r\n     */\r\n    KDTree.prototype.nearestN = function (target, N, squaredDistance, output) {\r\n        if (N <= 0) {\r\n            output.length = 0;\r\n            return output;\r\n        }\r\n\r\n        var curr = this.root;\r\n        var stack = this._stack;\r\n        var idx = 0;\r\n\r\n        var nearestNList = this._nearstNList;\r\n        for (var i = 0; i < N; i++) {\r\n            // Allocate\r\n            if (!nearestNList[i]) {\r\n                nearestNList[i] = {};\r\n            }\r\n            nearestNList[i].dist = 0;\r\n            nearestNList[i].node = null;\r\n        }\r\n        var currDist = squaredDistance(curr.data, target);\r\n\r\n        var found = 0;\r\n        if (curr.data !== target) {\r\n            found++;\r\n            this._addNearest(found, currDist, curr);\r\n        }\r\n\r\n        if (target.array[curr.axis] < curr.data.array[curr.axis]) {\r\n            // Left first\r\n            curr.right && (stack[idx++] = curr.right);\r\n            curr.left && (stack[idx++] = curr.left);\r\n        }\r\n        else {\r\n            // Right first\r\n            curr.left && (stack[idx++] = curr.left);\r\n            curr.right && (stack[idx++] = curr.right);\r\n        }\r\n\r\n        while (idx--) {\r\n            curr = stack[idx];\r\n            var currDist = target.array[curr.axis] - curr.data.array[curr.axis];\r\n            var isLeft = currDist < 0;\r\n            var needsCheckOtherSide = false;\r\n            currDist = currDist * currDist;\r\n            // Intersecting right hyperplane with minDist hypersphere\r\n            if (found < N || currDist < nearestNList[found - 1].dist) {\r\n                currDist = squaredDistance(curr.data, target);\r\n                if (\r\n                    (found < N || currDist < nearestNList[found - 1].dist)\r\n                    && curr.data !== target\r\n                ) {\r\n                    if (found < N) {\r\n                        found++;\r\n                    }\r\n                    this._addNearest(found, currDist, curr);\r\n                }\r\n                needsCheckOtherSide = true;\r\n            }\r\n            if (isLeft) {\r\n                if (needsCheckOtherSide) {\r\n                    curr.right && (stack[idx++] = curr.right);\r\n                }\r\n                // Search in the left area\r\n                curr.left && (stack[idx++] = curr.left);\r\n            }\r\n            else {\r\n                if (needsCheckOtherSide) {\r\n                    curr.left && (stack[idx++] = curr.left);\r\n                }\r\n                // Search the right area\r\n                curr.right && (stack[idx++] = curr.right);\r\n            }\r\n        }\r\n\r\n        // Copy to output\r\n        for (var i = 0; i < found; i++) {\r\n            output[i] = nearestNList[i].node.data;\r\n        }\r\n        output.length = found;\r\n\r\n        return output;\r\n    };\r\n\r\n    return KDTree;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * Quick select n-th element in an array.\r\n *\r\n * Note: it will change the elements placement in array.\r\n *\r\n * @module echarts/data/quickSelect\r\n * @author Yi Shen(https://github.com/pissang)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n\r\n    function defaultCompareFunc(a, b) {\r\n        return a - b;\r\n    }\r\n\r\n    function swapElement(list, idx0, idx1) {\r\n        var tmp = list[idx0];\r\n        list[idx0] = list[idx1];\r\n        list[idx1] = tmp;\r\n    }\r\n\r\n    function select(list, left, right, nth, compareFunc) {\r\n        var pivotIdx = left;\r\n        while (right > left) {\r\n            var pivotIdx = Math.round((right + left) / 2);\r\n            var pivotValue = list[pivotIdx];\r\n            // Swap pivot to the end\r\n            swapElement(list, pivotIdx, right);\r\n            pivotIdx = left;\r\n            for (var i = left; i <= right - 1; i++) {\r\n                if (compareFunc(pivotValue, list[i]) >= 0) {\r\n                    swapElement(list, i, pivotIdx);\r\n                    pivotIdx++;\r\n                }\r\n            }\r\n            swapElement(list, right, pivotIdx);\r\n\r\n            if (pivotIdx === nth) {\r\n                return pivotIdx;\r\n            } else if (pivotIdx < nth) {\r\n                left = pivotIdx + 1;\r\n            } else {\r\n                right = pivotIdx - 1;\r\n            }\r\n        }\r\n        // Left == right\r\n        return left;\r\n    }\r\n\r\n    /**\r\n     * @alias module:echarts/data/quickSelect\r\n     * @param {Array} list\r\n     * @param {number} [left]\r\n     * @param {number} [right]\r\n     * @param {number} nth\r\n     * @param {Function} [compareFunc]\r\n     * @example\r\n     *     var quickSelect = require('echarts/data/quickSelect');\r\n     *     var list = [5, 2, 1, 4, 3]\r\n     *     quickSelect(list, 3);\r\n     *     quickSelect(list, 0, 3, 1, function (a, b) {return a - b});\r\n     *\r\n     * @return {number}\r\n     */\r\n    function quickSelect(list, left, right, nth, compareFunc) {\r\n        if (arguments.length <= 3) {\r\n            nth = left;\r\n            if (arguments.length == 2) {\r\n                compareFunc = defaultCompareFunc;\r\n            } else {\r\n                compareFunc = right;\r\n            }\r\n            left = 0;\r\n            right = list.length - 1;\r\n        }\r\n        return select(list, left, right, nth, compareFunc);\r\n    }\r\n    \r\n    return quickSelect;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件：工具箱\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(8);\r\n    \r\n    // 图形依赖\r\n    var LineShape = __webpack_require__(18);\r\n    var ImageShape = __webpack_require__(12);\r\n    var RectangleShape = __webpack_require__(7);\r\n    var IconShape = __webpack_require__(13);\r\n    \r\n    var ecConfig = __webpack_require__(4);\r\n    ecConfig.toolbox = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 6,                       // 二级层叠\r\n        show: false,\r\n        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：\r\n                                   // 'horizontal' ¦ 'vertical'\r\n        x: 'right',                // 水平安放位置，默认为全图右对齐，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        color: ['#1e90ff','#22bb22','#4b0082','#d2691e'],\r\n        disableColor: '#ddd',\r\n        effectiveColor: 'red',\r\n        backgroundColor: 'rgba(0,0,0,0)', // 工具箱背景颜色\r\n        borderColor: '#ccc',       // 工具箱边框颜色\r\n        borderWidth: 0,            // 工具箱边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 工具箱内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，\r\n                                   // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n        itemSize: 16,              // 工具箱图形宽度\r\n        showTitle: true,\r\n        // textStyle: {},\r\n        feature: {\r\n            mark: {\r\n                show: false,\r\n                title: {\r\n                    mark: '辅助线开关',\r\n                    markUndo: '删除辅助线',\r\n                    markClear: '清空辅助线'\r\n                },\r\n                lineStyle: {\r\n                    width: 1,\r\n                    color: '#1e90ff',\r\n                    type: 'dashed'\r\n                }\r\n            },\r\n            dataZoom: {\r\n                show: false,\r\n                title: {\r\n                    dataZoom: '区域缩放',\r\n                    dataZoomReset: '区域缩放后退'\r\n                }\r\n            },\r\n            dataView: {\r\n                show: false,\r\n                title: '数据视图',\r\n                readOnly: false,\r\n                lang: ['数据视图', '关闭', '刷新']\r\n            },\r\n            magicType: {\r\n                show: false,\r\n                title: {\r\n                    line: '折线图切换',\r\n                    bar: '柱形图切换',\r\n                    stack: '堆积',\r\n                    tiled: '平铺',\r\n                    force: '力导向布局图切换',\r\n                    chord: '和弦图切换',\r\n                    pie: '饼图切换',\r\n                    funnel: '漏斗图切换'\r\n                },\r\n                /*\r\n                option: {\r\n                    line: {},\r\n                    bar: {},\r\n                    stack: {},\r\n                    tiled: {},\r\n                    force: {},\r\n                    chord: {},\r\n                    pie: {},\r\n                    funnel: {}\r\n                },\r\n                */\r\n                type: [] // 'line', 'bar', 'stack', 'tiled', 'force', 'chord', 'pie', 'funnel'\r\n            },\r\n            restore: {\r\n                show: false,\r\n                title: '还原'\r\n            },\r\n            saveAsImage: {\r\n                show: false,\r\n                title: '保存为图片',\r\n                type: 'png',\r\n                lang: ['点击保存'] \r\n            }\r\n        }\r\n    };\r\n\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrConfig = __webpack_require__(10);\r\n    var zrEvent = __webpack_require__(9);\r\n    \r\n    var _MAGICTYPE_STACK = 'stack';\r\n    var _MAGICTYPE_TILED = 'tiled';\r\n        \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {HtmlElement} dom 目标对象\r\n     * @param {ECharts} myChart 当前图表实例\r\n     */\r\n    function Toolbox(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.dom = myChart.dom;\r\n        \r\n        this._magicType = {};\r\n        this._magicMap = {};\r\n        this._isSilence = false;\r\n        \r\n        this._iconList;\r\n        this._iconShapeMap = {};\r\n        //this._itemGroupLocation;\r\n        this._featureTitle = {};             // 文字\r\n        this._featureIcon = {};              // 图标\r\n        this._featureColor = {};             // 颜色\r\n        this._featureOption = {};\r\n        this._enableColor = 'red';\r\n        this._disableColor = '#ccc';\r\n        // this._markStart;\r\n        // this._marking;\r\n        // this._markShape;\r\n        // this._zoomStart;\r\n        // this._zooming;\r\n        // this._zoomShape;\r\n        // this._zoomQueue;\r\n        // this._dataView;\r\n        this._markShapeList = [];\r\n        var self = this;\r\n        self._onMark = function (param) {\r\n            self.__onMark(param);\r\n        };\r\n        self._onMarkUndo = function (param) {\r\n            self.__onMarkUndo(param);\r\n        };\r\n        self._onMarkClear = function (param) {\r\n            self.__onMarkClear(param);\r\n        };\r\n        self._onDataZoom = function (param) {\r\n            self.__onDataZoom(param);\r\n        };\r\n        self._onDataZoomReset = function (param) {\r\n            self.__onDataZoomReset(param);\r\n        };\r\n        self._onDataView = function (param) {\r\n            self.__onDataView(param);\r\n        };\r\n        self._onRestore = function (param) {\r\n            self.__onRestore(param);\r\n        };\r\n        self._onSaveAsImage = function (param) {\r\n            self.__onSaveAsImage(param);\r\n        };\r\n        self._onMagicType = function (param) {\r\n            self.__onMagicType(param);\r\n        };\r\n        self._onCustomHandler = function (param) {\r\n            self.__onCustomHandler(param);\r\n        };\r\n        self._onmousemove = function (param) {\r\n            return self.__onmousemove(param);\r\n        };\r\n\r\n        self._onmousedown = function (param) {\r\n            return self.__onmousedown(param);\r\n        };\r\n        \r\n        self._onmouseup = function (param) {\r\n            return self.__onmouseup(param);\r\n        };\r\n        \r\n        self._onclick = function (param) {\r\n            return self.__onclick(param);\r\n        };\r\n    }\r\n\r\n    Toolbox.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TOOLBOX,\r\n        _buildShape: function () {\r\n            this._iconList = [];\r\n            var toolboxOption = this.option.toolbox;\r\n            this._enableColor = toolboxOption.effectiveColor;\r\n            this._disableColor = toolboxOption.disableColor;\r\n            var feature = toolboxOption.feature;\r\n            var iconName = [];\r\n            for (var key in feature){\r\n                if (feature[key].show) {\r\n                    switch (key) {\r\n                        case 'mark' :\r\n                            iconName.push({ key: key, name: 'mark' });\r\n                            iconName.push({ key: key, name: 'markUndo' });\r\n                            iconName.push({ key: key, name: 'markClear' });\r\n                            break;\r\n                        case 'magicType' :\r\n                            for (var i = 0, l = feature[key].type.length; i < l; i++) {\r\n                                feature[key].title[feature[key].type[i] + 'Chart']\r\n                                    = feature[key].title[feature[key].type[i]];\r\n                                if (feature[key].option) {\r\n                                    feature[key].option[feature[key].type[i] + 'Chart']\r\n                                        = feature[key].option[feature[key].type[i]];\r\n                                }\r\n                                iconName.push({ key: key, name: feature[key].type[i] + 'Chart' });\r\n                            }\r\n                            break;\r\n                        case 'dataZoom' :\r\n                            iconName.push({ key: key, name: 'dataZoom' });\r\n                            iconName.push({ key: key, name: 'dataZoomReset' });\r\n                            break;\r\n                        case 'saveAsImage' :\r\n                            if (this.canvasSupported) {\r\n                                iconName.push({ key: key, name: 'saveAsImage' });\r\n                            }\r\n                            break;\r\n                        default :\r\n                            iconName.push({ key: key, name: key });\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (iconName.length > 0) {\r\n                var name;\r\n                var key;\r\n                for (var i = 0, l = iconName.length; i < l; i++) {\r\n                    name = iconName[i].name;\r\n                    key = iconName[i].key;\r\n                    this._iconList.push(name);\r\n                    this._featureTitle[name] = feature[key].title[name] || feature[key].title;\r\n                    if (feature[key].icon) {\r\n                        this._featureIcon[name] = feature[key].icon[name] || feature[key].icon;\r\n                    }\r\n                    if (feature[key].color) {\r\n                        this._featureColor[name] = feature[key].color[name] || feature[key].color;\r\n                    }\r\n                    if (feature[key].option) {\r\n                        this._featureOption[name] = feature[key].option[name] \r\n                                                    || feature[key].option;\r\n                    }\r\n                }\r\n                this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n                this._buildBackground();\r\n                this._buildItem();\r\n\r\n                for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(this.shapeList[i]);\r\n                }\r\n                if (this._iconShapeMap['mark']) {\r\n                    this._iconDisable(this._iconShapeMap['markUndo']);\r\n                    this._iconDisable(this._iconShapeMap['markClear']);\r\n                }\r\n                if (this._iconShapeMap['dataZoomReset'] && this._zoomQueue.length === 0) {\r\n                    this._iconDisable(this._iconShapeMap['dataZoomReset']);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有图例元素\r\n         */\r\n        _buildItem: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var iconLength = this._iconList.length;\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemSize = toolboxOption.itemSize;\r\n            var itemGap = toolboxOption.itemGap;\r\n            var itemShape;\r\n\r\n            var color = toolboxOption.color instanceof Array\r\n                        ? toolboxOption.color : [toolboxOption.color];\r\n            \r\n            var textFont = this.getFont(toolboxOption.textStyle);\r\n            var textPosition;\r\n            var textAlign;\r\n            var textBaseline;\r\n            if (toolboxOption.orient === 'horizontal') {\r\n                textPosition = this._itemGroupLocation.y / this.zr.getHeight() < 0.5\r\n                               ? 'bottom' : 'top';\r\n                textAlign = this._itemGroupLocation.x / this.zr.getWidth() < 0.5\r\n                            ? 'left' : 'right';\r\n                textBaseline = this._itemGroupLocation.y / this.zr.getHeight() < 0.5\r\n                               ? 'top' : 'bottom';\r\n            }\r\n            else {\r\n                textPosition = this._itemGroupLocation.x / this.zr.getWidth() < 0.5\r\n                               ? 'right' : 'left';\r\n            }\r\n            \r\n           this._iconShapeMap = {};\r\n           var self = this;\r\n\r\n            for (var i = 0; i < iconLength; i++) {\r\n                // 图形\r\n                itemShape = {\r\n                    type: 'icon',\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        x: lastX,\r\n                        y: lastY,\r\n                        width: itemSize,\r\n                        height: itemSize,\r\n                        iconType: this._iconList[i],\r\n                        lineWidth: 1,\r\n                        strokeColor: this._featureColor[this._iconList[i]] \r\n                                     || color[i % color.length],\r\n                        brushType: 'stroke'\r\n                    },\r\n                    highlightStyle: {\r\n                        lineWidth: 1,\r\n                        text: toolboxOption.showTitle \r\n                              ? this._featureTitle[this._iconList[i]]\r\n                              : undefined,\r\n                        textFont: textFont,\r\n                        textPosition: textPosition,\r\n                        strokeColor: this._featureColor[this._iconList[i]] \r\n                                     || color[i % color.length]\r\n                    },\r\n                    hoverable: true,\r\n                    clickable: true\r\n                };\r\n                \r\n                if (this._featureIcon[this._iconList[i]]) {\r\n                    itemShape.style.image = this._featureIcon[this._iconList[i]].replace(\r\n                        new RegExp('^image:\\\\/\\\\/'), ''\r\n                    );\r\n                    itemShape.style.opacity = 0.8;\r\n                    itemShape.highlightStyle.opacity = 1;\r\n                    itemShape.type = 'image';\r\n                }\r\n                \r\n                if (toolboxOption.orient === 'horizontal') {\r\n                    // 修正左对齐第一个或右对齐最后一个\r\n                    if (i === 0 && textAlign === 'left') {\r\n                        itemShape.highlightStyle.textPosition = 'specific';\r\n                        itemShape.highlightStyle.textAlign = textAlign;\r\n                        itemShape.highlightStyle.textBaseline = textBaseline;\r\n                        itemShape.highlightStyle.textX = lastX;\r\n                        itemShape.highlightStyle.textY = textBaseline === 'top' \r\n                                                     ? lastY + itemSize + 10\r\n                                                     : lastY - 10;\r\n                    }\r\n                    if (i === iconLength - 1 && textAlign === 'right') {\r\n                        itemShape.highlightStyle.textPosition = 'specific';\r\n                        itemShape.highlightStyle.textAlign = textAlign;\r\n                        itemShape.highlightStyle.textBaseline = textBaseline;\r\n                        itemShape.highlightStyle.textX = lastX + itemSize;\r\n                        itemShape.highlightStyle.textY = textBaseline === 'top' \r\n                                                         ? lastY + itemSize + 10\r\n                                                         : lastY - 10;\r\n                    }\r\n                }\r\n                \r\n                switch(this._iconList[i]) {\r\n                    case 'mark':\r\n                        itemShape.onclick = self._onMark;\r\n                        break;\r\n                    case 'markUndo':\r\n                        itemShape.onclick = self._onMarkUndo;\r\n                        break;\r\n                    case 'markClear':\r\n                        itemShape.onclick = self._onMarkClear;\r\n                        break;\r\n                    case 'dataZoom':\r\n                        itemShape.onclick = self._onDataZoom;\r\n                        break;\r\n                    case 'dataZoomReset':\r\n                        itemShape.onclick = self._onDataZoomReset;\r\n                        break;\r\n                    case 'dataView' :\r\n                        if (!this._dataView) {\r\n                            var DataView = __webpack_require__(74);\r\n                            this._dataView = new DataView(\r\n                                this.ecTheme, this.messageCenter, this.zr, this.option, this.myChart\r\n                            );\r\n                        }\r\n                        itemShape.onclick = self._onDataView;\r\n                        break;\r\n                    case 'restore':\r\n                        itemShape.onclick = self._onRestore;\r\n                        break;\r\n                    case 'saveAsImage':\r\n                        itemShape.onclick = self._onSaveAsImage;\r\n                        break;\r\n                    default:\r\n                        if (this._iconList[i].match('Chart')) {\r\n                            itemShape._name = this._iconList[i].replace('Chart', '');\r\n                            itemShape.onclick = self._onMagicType;\r\n                        }\r\n                        else {\r\n                            itemShape.onclick = self._onCustomHandler;\r\n                        }\r\n                        break;\r\n                }\r\n\r\n                if (itemShape.type === 'icon') {\r\n                    itemShape = new IconShape(itemShape);\r\n                }\r\n                else if (itemShape.type === 'image') {\r\n                    itemShape = new ImageShape(itemShape);\r\n                }\r\n                this.shapeList.push(itemShape);\r\n                this._iconShapeMap[this._iconList[i]] = itemShape;\r\n\r\n                if (toolboxOption.orient === 'horizontal') {\r\n                    lastX += itemSize + itemGap;\r\n                }\r\n                else {\r\n                    lastY += itemSize + itemGap;\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var padding = this.reformCssArray(this.option.toolbox.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: toolboxOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: toolboxOption.backgroundColor,\r\n                    strokeColor: toolboxOption.borderColor,\r\n                    lineWidth: toolboxOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算图例实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var padding = this.reformCssArray(this.option.toolbox.padding);\r\n            var iconLength = this._iconList.length;\r\n            var itemGap = toolboxOption.itemGap;\r\n            var itemSize = toolboxOption.itemSize;\r\n            var totalWidth = 0;\r\n            var totalHeight = 0;\r\n\r\n            if (toolboxOption.orient === 'horizontal') {\r\n                // 水平布局，计算总宽度，别忘减去最后一个的itemGap\r\n                totalWidth = (itemSize + itemGap) * iconLength - itemGap;\r\n                totalHeight = itemSize;\r\n            }\r\n            else {\r\n                // 垂直布局，计算总高度\r\n                totalHeight = (itemSize + itemGap) * iconLength - itemGap;\r\n                totalWidth = itemSize;\r\n            }\r\n\r\n            var x;\r\n            var zrWidth = this.zr.getWidth();\r\n            switch (toolboxOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + toolboxOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - toolboxOption.borderWidth;\r\n                    break;\r\n                default :\r\n                    x = toolboxOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    break;\r\n            }\r\n\r\n            var y;\r\n            var zrHeight = this.zr.getHeight();\r\n            switch (toolboxOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + toolboxOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[2]\r\n                        - toolboxOption.borderWidth;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = toolboxOption.y - 0;\r\n                    y = isNaN(y) ? 0 : y;\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight\r\n            };\r\n        },\r\n\r\n        __onmousemove: function (param) {\r\n            if (this._marking) {\r\n                this._markShape.style.xEnd = zrEvent.getX(param.event);\r\n                this._markShape.style.yEnd = zrEvent.getY(param.event);\r\n                this.zr.addHoverShape(this._markShape);\r\n            }\r\n            if (this._zooming) {\r\n                this._zoomShape.style.width = \r\n                    zrEvent.getX(param.event) - this._zoomShape.style.x;\r\n                this._zoomShape.style.height = \r\n                    zrEvent.getY(param.event) - this._zoomShape.style.y;\r\n                this.zr.addHoverShape(this._zoomShape);\r\n                this.dom.style.cursor = 'crosshair';\r\n                zrEvent.stop(param.event);\r\n            }\r\n            if (this._zoomStart\r\n                && (this.dom.style.cursor != 'pointer' && this.dom.style.cursor != 'move')\r\n            ) {\r\n                this.dom.style.cursor = 'crosshair';\r\n            }\r\n        },\r\n\r\n        __onmousedown: function (param) {\r\n            if (param.target) {\r\n                return;\r\n            }\r\n            this._zooming = true;\r\n            var x = zrEvent.getX(param.event);\r\n            var y = zrEvent.getY(param.event);\r\n            var zoomOption = this.option.dataZoom || {};\r\n            this._zoomShape = new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    x: x,\r\n                    y: y,\r\n                    width: 1,\r\n                    height: 1,\r\n                    brushType: 'both'\r\n                },\r\n                highlightStyle: {\r\n                    lineWidth: 2,\r\n                    color: zoomOption.fillerColor \r\n                           || ecConfig.dataZoom.fillerColor,\r\n                    strokeColor: zoomOption.handleColor \r\n                                  || ecConfig.dataZoom.handleColor,\r\n                    brushType: 'both'\r\n                }\r\n            });\r\n            this.zr.addHoverShape(this._zoomShape);\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onmouseup: function (/*param*/) {\r\n            if (!this._zoomShape \r\n                || Math.abs(this._zoomShape.style.width) < 10 \r\n                || Math.abs(this._zoomShape.style.height) < 10\r\n            ) {\r\n                this._zooming = false;\r\n                return true;\r\n            }\r\n            if (this._zooming && this.component.dataZoom) {\r\n                this._zooming = false;\r\n                \r\n                var zoom = this.component.dataZoom.rectZoom(this._zoomShape.style);\r\n                if (zoom) {\r\n                    this._zoomQueue.push({\r\n                        start: zoom.start,\r\n                        end: zoom.end,\r\n                        start2: zoom.start2,\r\n                        end2: zoom.end2\r\n                    });\r\n                    this._iconEnable(this._iconShapeMap['dataZoomReset']);\r\n                    this.zr.refreshNextFrame();\r\n                }\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onclick: function (param) {\r\n            if (param.target) {\r\n                return;\r\n            }\r\n            if (this._marking) {\r\n                this._marking = false;\r\n                this._markShapeList.push(this._markShape);\r\n                this._iconEnable(this._iconShapeMap['markUndo']);\r\n                this._iconEnable(this._iconShapeMap['markClear']);\r\n                this.zr.addShape(this._markShape);\r\n                this.zr.refreshNextFrame();\r\n            } \r\n            else if (this._markStart) {\r\n                this._marking = true;\r\n                var x = zrEvent.getX(param.event);\r\n                var y = zrEvent.getY(param.event);\r\n                this._markShape = new LineShape({\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        xStart: x,\r\n                        yStart: y,\r\n                        xEnd: x,\r\n                        yEnd: y,\r\n                        lineWidth: this.query(\r\n                                       this.option,\r\n                                       'toolbox.feature.mark.lineStyle.width'\r\n                                   ),\r\n                        strokeColor: this.query(\r\n                                         this.option,\r\n                                         'toolbox.feature.mark.lineStyle.color'\r\n                                     ),\r\n                        lineType: this.query(\r\n                                      this.option,\r\n                                      'toolbox.feature.mark.lineStyle.type'\r\n                                  )\r\n                    }\r\n                });\r\n                this.zr.addHoverShape(this._markShape);\r\n            }\r\n        },\r\n        \r\n        __onMark: function (param) {\r\n            var target = param.target;\r\n            if (this._marking || this._markStart) {\r\n                // 取消\r\n                this._resetMark();\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            else {\r\n                // 启用Mark\r\n                this._resetZoom();   // mark与dataZoom互斥\r\n                \r\n                this.zr.modShape(target.id, {style: {strokeColor: this._enableColor}});\r\n                this.zr.refreshNextFrame();\r\n                this._markStart = true;\r\n                var self = this;\r\n                setTimeout(function (){\r\n                    self.zr\r\n                    && self.zr.on(zrConfig.EVENT.CLICK, self._onclick)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n                }, 10);\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onMarkUndo: function () {\r\n            if (this._marking) {\r\n                this._marking = false;\r\n            } else {\r\n                var len = this._markShapeList.length;\r\n                if (len >= 1) {\r\n                    var target = this._markShapeList[len - 1];\r\n                    this.zr.delShape(target.id);\r\n                    this.zr.refreshNextFrame();\r\n                    this._markShapeList.pop();\r\n                    if (len === 1) {\r\n                        this._iconDisable(this._iconShapeMap['markUndo']);\r\n                        this._iconDisable(this._iconShapeMap['markClear']);\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        __onMarkClear: function () {\r\n            if (this._marking) {\r\n                this._marking = false;\r\n            }\r\n            var len = this._markShapeList.length;\r\n            if (len > 0) {\r\n                while(len--) {\r\n                    this.zr.delShape(this._markShapeList.pop().id);\r\n                }\r\n                this._iconDisable(this._iconShapeMap['markUndo']);\r\n                this._iconDisable(this._iconShapeMap['markClear']);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            return true;\r\n        },\r\n        \r\n        __onDataZoom: function (param) {\r\n            var target = param.target;\r\n            if (this._zooming || this._zoomStart) {\r\n                // 取消\r\n                this._resetZoom();\r\n                this.zr.refreshNextFrame();\r\n                this.dom.style.cursor = 'default';\r\n            }\r\n            else {\r\n                // 启用Zoom\r\n                this._resetMark();   // mark与dataZoom互斥\r\n                \r\n                this.zr.modShape(target.id, {style: {strokeColor: this._enableColor}});\r\n                this.zr.refreshNextFrame();\r\n                this._zoomStart = true;\r\n                var self = this;\r\n                setTimeout(function (){\r\n                    self.zr\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEDOWN, self._onmousedown)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEUP, self._onmouseup)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n                }, 10);\r\n                \r\n                this.dom.style.cursor = 'crosshair';\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onDataZoomReset: function () {\r\n            if (this._zooming) {\r\n                this._zooming = false;\r\n            }\r\n            this._zoomQueue.pop();\r\n            //console.log(this._zoomQueue)\r\n            if (this._zoomQueue.length > 0) {\r\n                this.component.dataZoom.absoluteZoom(\r\n                    this._zoomQueue[this._zoomQueue.length - 1]\r\n                );\r\n            }\r\n            else {\r\n                this.component.dataZoom.rectZoom();\r\n                this._iconDisable(this._iconShapeMap['dataZoomReset']);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            \r\n            return true;\r\n        },\r\n\r\n        _resetMark: function () {\r\n            this._marking = false;\r\n            if (this._markStart) {\r\n                this._markStart = false;\r\n                if (this._iconShapeMap['mark']) {\r\n                    // 还原图标为未生效状态\r\n                    this.zr.modShape(\r\n                        this._iconShapeMap['mark'].id,\r\n                        {\r\n                            style: {\r\n                                strokeColor: this._iconShapeMap['mark']\r\n                                                 .highlightStyle\r\n                                                 .strokeColor\r\n                            }\r\n                         }\r\n                    );\r\n                }\r\n                \r\n                this.zr.un(zrConfig.EVENT.CLICK, this._onclick);\r\n                this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            }\r\n        },\r\n        \r\n        _resetZoom: function () {\r\n            this._zooming = false;\r\n            if (this._zoomStart) {\r\n                this._zoomStart = false;\r\n                if (this._iconShapeMap['dataZoom']) {\r\n                    // 还原图标为未生效状态\r\n                    this.zr.modShape(\r\n                        this._iconShapeMap['dataZoom'].id,\r\n                        {\r\n                            style: {\r\n                                strokeColor: this._iconShapeMap['dataZoom']\r\n                                                 .highlightStyle\r\n                                                 .strokeColor\r\n                            }\r\n                         }\r\n                    );\r\n                }\r\n                \r\n                this.zr.un(zrConfig.EVENT.MOUSEDOWN, this._onmousedown);\r\n                this.zr.un(zrConfig.EVENT.MOUSEUP, this._onmouseup);\r\n                this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            }\r\n        },\r\n\r\n        _iconDisable: function (target) {\r\n            if (target.type != 'image') {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: false,\r\n                    clickable: false,\r\n                    style: {\r\n                        strokeColor: this._disableColor\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: false,\r\n                    clickable: false,\r\n                    style: {\r\n                        opacity: 0.3\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _iconEnable: function (target) {\r\n            if (target.type != 'image') {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: true,\r\n                    clickable: true,\r\n                    style: {\r\n                        strokeColor: target.highlightStyle.strokeColor\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: true,\r\n                    clickable: true,\r\n                    style: {\r\n                        opacity: 0.8\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        __onDataView: function () {\r\n            this._dataView.show(this.option);\r\n            return true;\r\n        },\r\n\r\n        __onRestore: function (){\r\n            this._resetMark();\r\n            this._resetZoom();\r\n            this.messageCenter.dispatch(ecConfig.EVENT.RESTORE, null, null, this.myChart);\r\n            return true;\r\n        },\r\n        \r\n        __onSaveAsImage: function () {\r\n            var saveOption = this.option.toolbox.feature.saveAsImage;\r\n            var imgType = saveOption.type || 'png';\r\n            if (imgType != 'png' && imgType != 'jpeg') {\r\n                imgType = 'png';\r\n            }\r\n            \r\n            var image;\r\n            if (!this.myChart.isConnected()) {\r\n                image = this.zr.toDataURL(\r\n                    'image/' + imgType,\r\n                    this.option.backgroundColor \r\n                    && this.option.backgroundColor.replace(' ','') === 'rgba(0,0,0,0)'\r\n                        ? '#fff' : this.option.backgroundColor\r\n                );\r\n            }\r\n            else {\r\n                image = this.myChart.getConnectedDataURL(imgType);\r\n            }\r\n             \r\n            var downloadDiv = document.createElement('div');\r\n            downloadDiv.id = '__echarts_download_wrap__';\r\n            downloadDiv.style.cssText = 'position:fixed;'\r\n                + 'z-index:99999;'\r\n                + 'display:block;'\r\n                + 'top:0;left:0;'\r\n                + 'background-color:rgba(33,33,33,0.5);'\r\n                + 'text-align:center;'\r\n                + 'width:100%;'\r\n                + 'height:100%;'\r\n                + 'line-height:' \r\n                + document.documentElement.clientHeight + 'px;';\r\n                \r\n            var downloadLink = document.createElement('a');\r\n            //downloadLink.onclick = _saveImageForIE;\r\n            downloadLink.href = image;\r\n            downloadLink.setAttribute(\r\n                'download',\r\n                (saveOption.name \r\n                 ? saveOption.name \r\n                 : (this.option.title && (this.option.title.text || this.option.title.subtext))\r\n                   ? (this.option.title.text || this.option.title.subtext)\r\n                   : 'ECharts')\r\n                + '.' + imgType \r\n            );\r\n            downloadLink.innerHTML = '<img style=\"vertical-align:middle\" src=\"' + image \r\n                + '\" title=\"'\r\n                + ((!!window.ActiveXObject || 'ActiveXObject' in window)\r\n                  ? '右键->图片另存为'\r\n                  : (saveOption.lang ? saveOption.lang[0] : '点击保存'))\r\n                + '\"/>';\r\n            \r\n            downloadDiv.appendChild(downloadLink);\r\n            document.body.appendChild(downloadDiv);\r\n            downloadLink = null;\r\n            downloadDiv = null;\r\n            \r\n            setTimeout(function (){\r\n                var _d = document.getElementById('__echarts_download_wrap__');\r\n                if (_d) {\r\n                    _d.onclick = function () {\r\n                        var d = document.getElementById(\r\n                            '__echarts_download_wrap__'\r\n                        );\r\n                        d.onclick = null;\r\n                        d.innerHTML = '';\r\n                        document.body.removeChild(d);\r\n                        d = null;\r\n                    };\r\n                    _d = null;\r\n                }\r\n            }, 500);\r\n            \r\n            /*\r\n            function _saveImageForIE() {\r\n                window.win = window.open(image);\r\n                win.document.execCommand(\"SaveAs\");\r\n                win.close()\r\n            }\r\n            */\r\n            return;\r\n        },\r\n\r\n        __onMagicType: function (param) {\r\n            this._resetMark();\r\n            var itemName = param.target._name;\r\n            if (!this._magicType[itemName]) {\r\n                // 启用\r\n                this._magicType[itemName] = true;\r\n                // 折柱互斥\r\n                if (itemName === ecConfig.CHART_TYPE_LINE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_BAR] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_BAR) {\r\n                    this._magicType[ecConfig.CHART_TYPE_LINE] = false;\r\n                }\r\n                // 饼图漏斗互斥\r\n                if (itemName === ecConfig.CHART_TYPE_PIE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_FUNNEL] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_FUNNEL) {\r\n                    this._magicType[ecConfig.CHART_TYPE_PIE] = false;\r\n                }\r\n                // 力导和弦互斥\r\n                if (itemName === ecConfig.CHART_TYPE_FORCE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_CHORD] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_CHORD) {\r\n                    this._magicType[ecConfig.CHART_TYPE_FORCE] = false;\r\n                }\r\n                // 堆积平铺互斥\r\n                if (itemName === _MAGICTYPE_STACK) {\r\n                    this._magicType[_MAGICTYPE_TILED] = false;\r\n                }\r\n                else if (itemName === _MAGICTYPE_TILED) {\r\n                    this._magicType[_MAGICTYPE_STACK] = false;\r\n                }\r\n                this.messageCenter.dispatch(\r\n                    ecConfig.EVENT.MAGIC_TYPE_CHANGED,\r\n                    param.event,\r\n                    { magicType: this._magicType },\r\n                    this.myChart\r\n                );\r\n            }\r\n            \r\n            return true;\r\n        },\r\n        \r\n        setMagicType: function (magicType) {\r\n            this._resetMark();\r\n            this._magicType = magicType;\r\n            \r\n            !this._isSilence && this.messageCenter.dispatch(\r\n                ecConfig.EVENT.MAGIC_TYPE_CHANGED,\r\n                null,\r\n                { magicType: this._magicType },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        // 用户自定义扩展toolbox方法\r\n        __onCustomHandler: function (param) {\r\n            var target = param.target.style.iconType;\r\n            var featureHandler = this.option.toolbox.feature[target].onclick;\r\n            if (typeof featureHandler === 'function') {\r\n                featureHandler.call(this, this.option);\r\n            }\r\n        },\r\n\r\n        // 重置备份还原状态等\r\n        reset: function (newOption, isRestore) {\r\n            isRestore && this.clear();\r\n            \r\n            if (this.query(newOption, 'toolbox.show')\r\n                && this.query(newOption, 'toolbox.feature.magicType.show')\r\n            ) {\r\n                var magicType = newOption.toolbox.feature.magicType.type;\r\n                var len = magicType.length;\r\n                this._magicMap = {};     // 标识可控类型\r\n                while (len--) {\r\n                    this._magicMap[magicType[len]] = true;\r\n                }\r\n\r\n                len = newOption.series.length;\r\n                var oriType;        // 备份还原可控类型\r\n                var axis;\r\n                while (len--) {\r\n                    oriType = newOption.series[len].type;\r\n                    if (this._magicMap[oriType]) {\r\n                        axis = newOption.xAxis instanceof Array\r\n                               ? newOption.xAxis[newOption.series[len].xAxisIndex || 0]\r\n                               : newOption.xAxis;\r\n                        if (axis && (axis.type || 'category') === 'category') {\r\n                            axis.__boundaryGap = axis.boundaryGap != null\r\n                                                 ? axis.boundaryGap : true;\r\n                        }\r\n                        axis = newOption.yAxis instanceof Array\r\n                               ? newOption.yAxis[newOption.series[len].yAxisIndex || 0]\r\n                               : newOption.yAxis;\r\n                        if (axis && axis.type === 'category') {\r\n                            axis.__boundaryGap = axis.boundaryGap != null\r\n                                                 ? axis.boundaryGap : true;\r\n                        }\r\n                        newOption.series[len].__type = oriType;\r\n                        // 避免不同类型图表类型的样式污染\r\n                        newOption.series[len].__itemStyle = zrUtil.clone(\r\n                            newOption.series[len].itemStyle || {}\r\n                        );\r\n                    }\r\n                    \r\n                    if (this._magicMap[_MAGICTYPE_STACK] || this._magicMap[_MAGICTYPE_TILED]) {\r\n                        newOption.series[len].__stack = newOption.series[len].stack;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            this._magicType = isRestore ? {} : (this._magicType || {});\r\n            for (var itemName in this._magicType) {\r\n                if (this._magicType[itemName]) {\r\n                    this.option = newOption;\r\n                    this.getMagicOption();\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            // 框选缩放\r\n            var zoomOption = newOption.dataZoom;\r\n            if (zoomOption && zoomOption.show) {\r\n                var start = zoomOption.start != null\r\n                            && zoomOption.start >= 0\r\n                            && zoomOption.start <= 100\r\n                            ? zoomOption.start : 0;\r\n                var end = zoomOption.end != null\r\n                          && zoomOption.end >= 0\r\n                          && zoomOption.end <= 100\r\n                          ? zoomOption.end : 100;\r\n                if (start > end) {\r\n                    // 大小颠倒自动翻转\r\n                    start = start + end;\r\n                    end = start - end;\r\n                    start = start - end;\r\n                }\r\n                this._zoomQueue = [{\r\n                    start: start,\r\n                    end: end,\r\n                    start2: 0,\r\n                    end2: 100\r\n                }];\r\n            }\r\n            else {\r\n                this._zoomQueue = [];\r\n            }\r\n        },\r\n        \r\n        getMagicOption: function (){\r\n            var axis;\r\n            var chartType;\r\n            if (this._magicType[ecConfig.CHART_TYPE_LINE] \r\n                || this._magicType[ecConfig.CHART_TYPE_BAR]\r\n            ) {\r\n                // 图表类型有折柱切换\r\n                var boundaryGap = this._magicType[ecConfig.CHART_TYPE_LINE] ? false : true;\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    chartType = this.option.series[i].type;\r\n                    if (chartType == ecConfig.CHART_TYPE_LINE\r\n                        || chartType == ecConfig.CHART_TYPE_BAR\r\n                    ) {\r\n                        axis = this.option.xAxis instanceof Array\r\n                               ? this.option.xAxis[this.option.series[i].xAxisIndex || 0]\r\n                               : this.option.xAxis;\r\n                        if (axis && (axis.type || 'category') === 'category') {\r\n                            axis.boundaryGap = boundaryGap ? true : axis.__boundaryGap;\r\n                        }\r\n                        axis = this.option.yAxis instanceof Array\r\n                               ? this.option.yAxis[this.option.series[i].yAxisIndex || 0]\r\n                               : this.option.yAxis;\r\n                        if (axis && axis.type === 'category') {\r\n                            axis.boundaryGap = boundaryGap ? true : axis.__boundaryGap;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                this._defaultMagic(ecConfig.CHART_TYPE_LINE, ecConfig.CHART_TYPE_BAR);\r\n            }\r\n            this._defaultMagic(ecConfig.CHART_TYPE_CHORD, ecConfig.CHART_TYPE_FORCE);\r\n            this._defaultMagic(ecConfig.CHART_TYPE_PIE, ecConfig.CHART_TYPE_FUNNEL);\r\n            \r\n            if (this._magicType[_MAGICTYPE_STACK] || this._magicType[_MAGICTYPE_TILED]) {\r\n                // 有堆积平铺切换\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    if (this._magicType[_MAGICTYPE_STACK]) {\r\n                        // 启用堆积\r\n                        this.option.series[i].stack = '_ECHARTS_STACK_KENER_2014_';\r\n                        chartType = _MAGICTYPE_STACK;\r\n                    }\r\n                    else if (this._magicType[_MAGICTYPE_TILED]) {\r\n                        // 启用平铺\r\n                        this.option.series[i].stack = null;\r\n                        chartType = _MAGICTYPE_TILED;\r\n                    }\r\n                    if (this._featureOption[chartType + 'Chart']) {\r\n                        zrUtil.merge(\r\n                            this.option.series[i],\r\n                            this._featureOption[chartType + 'Chart'] || {},\r\n                            true\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            return this.option;\r\n        },\r\n        \r\n        _defaultMagic : function(cType1, cType2) {\r\n            if (this._magicType[cType1] || this._magicType[cType2]) {\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    var chartType = this.option.series[i].type;\r\n                    if (chartType == cType1 || chartType == cType2) {\r\n                        this.option.series[i].type = this._magicType[cType1] ? cType1 : cType2;\r\n                        // 避免不同类型图表类型的样式污染\r\n                        this.option.series[i].itemStyle = zrUtil.clone(\r\n                            this.option.series[i].__itemStyle\r\n                        );\r\n                        chartType = this.option.series[i].type;\r\n                        if (this._featureOption[chartType + 'Chart']) {\r\n                            zrUtil.merge(\r\n                                this.option.series[i],\r\n                                this._featureOption[chartType + 'Chart'] || {},\r\n                                true\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        silence: function (s) {\r\n            this._isSilence = s;\r\n        },\r\n        \r\n        resize: function () {\r\n            this._resetMark();\r\n            this.clear();\r\n            if (this.option && this.option.toolbox && this.option.toolbox.show) {\r\n               this._buildShape();\r\n            }\r\n            if (this._dataView) {\r\n                this._dataView.resize();\r\n            }\r\n        },\r\n\r\n        hideDataView: function () {\r\n            if (this._dataView) {\r\n                this._dataView.hide();\r\n            }\r\n        },\r\n        \r\n        clear: function(notMark) {\r\n            if (this.zr) {\r\n                this.zr.delShape(this.shapeList);\r\n                this.shapeList = [];\r\n                \r\n                if (!notMark) {\r\n                    this.zr.delShape(this._markShapeList);\r\n                    this._markShapeList = [];\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 释放后实例不可用\r\n         */\r\n        onbeforDispose: function () {\r\n            if (this._dataView) {\r\n                this._dataView.dispose();\r\n                this._dataView = null;\r\n            }\r\n            this._markShapeList = null;\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this._resetMark();\r\n                this._resetZoom();\r\n                \r\n                newOption.toolbox = this.reformOption(newOption.toolbox);\r\n                this.option = newOption;\r\n                \r\n                this.clear(true);\r\n    \r\n                if (newOption.toolbox.show) {\r\n                    this._buildShape();\r\n                }\r\n    \r\n                this.hideDataView();\r\n            }\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Toolbox, Base);\r\n    \r\n    __webpack_require__(6).define('toolbox', Toolbox);\r\n    \r\n    return Toolbox;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件：提示框\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(8);\r\n\r\n    var ecConfig = __webpack_require__(4);\r\n    var zrUtil = __webpack_require__(0);\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 提示框参数\r\n     * @param {HtmlElement} dom 目标对象\r\n     */\r\n    function DataView(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.dom = myChart.dom;\r\n        \r\n        // dataview dom & css\r\n        this._tDom = document.createElement('div');\r\n        this._textArea = document.createElement('textArea');\r\n        this._buttonRefresh = document.createElement('button');\r\n        // 高级浏览器默认type为submit\r\n        // 如果图表出现在form表单时，点击button后会提交表单\r\n        // 设置为button，防止点击button后提交表单\r\n        this._buttonRefresh.setAttribute('type', 'button');\r\n        this._buttonClose = document.createElement('button');\r\n        this._buttonClose.setAttribute('type', 'button');\r\n        this._hasShow = false;\r\n\r\n        // 缓存一些高宽数据\r\n        this._zrHeight = zr.getHeight();\r\n        this._zrWidth = zr.getWidth();\r\n    \r\n        this._tDom.className = 'echarts-dataview';\r\n        this.hide();\r\n        this.dom.firstChild.appendChild(this._tDom);\r\n\r\n        if (window.addEventListener) {\r\n            this._tDom.addEventListener('click', this._stop);\r\n            this._tDom.addEventListener('mousewheel', this._stop);\r\n            this._tDom.addEventListener('mousemove', this._stop);\r\n            this._tDom.addEventListener('mousedown', this._stop);\r\n            this._tDom.addEventListener('mouseup', this._stop);\r\n\r\n            // mobile支持\r\n            this._tDom.addEventListener('touchstart', this._stop);\r\n            this._tDom.addEventListener('touchmove', this._stop);\r\n            this._tDom.addEventListener('touchend', this._stop);\r\n        }\r\n        else {\r\n            this._tDom.attachEvent('onclick', this._stop);\r\n            this._tDom.attachEvent('onmousewheel', this._stop);\r\n            this._tDom.attachEvent('onmousemove', this._stop);\r\n            this._tDom.attachEvent('onmousedown', this._stop);\r\n            this._tDom.attachEvent('onmouseup', this._stop);\r\n        }\r\n    }\r\n    \r\n    DataView.prototype = {\r\n        type : ecConfig.COMPONENT_TYPE_DATAVIEW,\r\n        _lang : ['Data View', 'close', 'refresh'],\r\n        // 通用样式\r\n        _gCssText : 'position:absolute;'\r\n                    + 'display:block;'\r\n                    + 'overflow:hidden;'\r\n                    + 'transition:height 0.8s,background-color 1s;'\r\n                    + '-moz-transition:height 0.8s,background-color 1s;'\r\n                    + '-webkit-transition:height 0.8s,background-color 1s;'\r\n                    + '-o-transition:height 0.8s,background-color 1s;'\r\n                    + 'z-index:1;'\r\n                    + 'left:0;'\r\n                    + 'top:0;',\r\n        hide : function () {\r\n            this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                           + 'height:' + 0 + 'px;'\r\n                           + 'background-color:#f0ffff;';\r\n            this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n            // 这是个很恶心的事情\r\n            /*\r\n            this.dom.onselectstart = function () {\r\n                return false;\r\n            };\r\n            */\r\n        },\r\n\r\n        show : function (newOption) {\r\n            this._hasShow = true;\r\n            var lang = this.query(this.option, 'toolbox.feature.dataView.lang')\r\n                       || this._lang;\r\n\r\n            this.option = newOption;\r\n\r\n            this._tDom.innerHTML = '<p style=\"padding:8px 0;margin:0 0 10px 0;'\r\n                              + 'border-bottom:1px solid #eee\">'\r\n                              + (lang[0] || this._lang[0])\r\n                              + '</p>';\r\n\r\n            var customContent = this.query(\r\n                this.option, 'toolbox.feature.dataView.optionToContent'\r\n            );\r\n            if (typeof customContent != 'function') {\r\n                this._textArea.value = this._optionToContent();\r\n            }\r\n            else {\r\n                // innerHTML the custom optionToContent;\r\n                this._textArea = document.createElement('div');\r\n                this._textArea.innerHTML = customContent(this.option);\r\n            }\r\n\r\n            this._textArea.style.cssText =\r\n                'display:block;margin:0 0 8px 0;padding:4px 6px;overflow:auto;'\r\n                + 'width:100%;'\r\n                + 'height:' + (this._zrHeight - 100) + 'px;';\r\n\r\n            this._tDom.appendChild(this._textArea);\r\n\r\n            this._buttonClose.style.cssText = 'float:right;padding:1px 6px;';\r\n            this._buttonClose.innerHTML = lang[1] || this._lang[1];\r\n            var self = this;\r\n            this._buttonClose.onclick = function (){\r\n                self.hide();\r\n            };\r\n            this._tDom.appendChild(this._buttonClose);\r\n\r\n            if (this.query(this.option, 'toolbox.feature.dataView.readOnly')\r\n                === false\r\n            ) {\r\n                this._buttonRefresh.style.cssText =\r\n                    'float:right;margin-right:10px;padding:1px 6px;';\r\n                this._buttonRefresh.innerHTML = lang[2] || this._lang[2];\r\n                this._buttonRefresh.onclick = function (){\r\n                    self._save();\r\n                };\r\n                this._textArea.readOnly = false;\r\n                this._textArea.style.cursor = 'default';\r\n            }\r\n            else {\r\n                this._buttonRefresh.style.cssText =\r\n                    'display:none';\r\n                this._textArea.readOnly = true;\r\n                this._textArea.style.cursor = 'text';\r\n            }\r\n            this._tDom.appendChild(this._buttonRefresh);\r\n\r\n            this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                           + 'height:' + this._zrHeight + 'px;'\r\n                           + 'background-color:#fff;';\r\n            this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n            // 这是个很恶心的事情\r\n            /*\r\n            this.dom.onselectstart = function () {\r\n                return true;\r\n            };\r\n            */\r\n        },\r\n\r\n        _optionToContent : function () {\r\n            var i;\r\n            var j;\r\n            var k;\r\n            var len;\r\n            var data;\r\n            var valueList;\r\n            var axisList = [];\r\n            var content = '';\r\n            if (this.option.xAxis) {\r\n                if (this.option.xAxis instanceof Array) {\r\n                    axisList = this.option.xAxis;\r\n                } else {\r\n                    axisList = [this.option.xAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    // 横纵默认为类目\r\n                    if ((axisList[i].type || 'category') == 'category') {\r\n                        valueList = [];\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            valueList.push(this.getDataFromOption(axisList[i].data[j]));\r\n                        }\r\n                        content += valueList.join(', ') + '\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.option.yAxis) {\r\n                if (this.option.yAxis instanceof Array) {\r\n                    axisList = this.option.yAxis;\r\n                } else {\r\n                    axisList = [this.option.yAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    if (axisList[i].type  == 'category') {\r\n                        valueList = [];\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            valueList.push(this.getDataFromOption(axisList[i].data[j]));\r\n                        }\r\n                        content += valueList.join(', ') + '\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            var series = this.option.series;\r\n            var itemName;\r\n            for (i = 0, len = series.length; i < len; i++) {\r\n                valueList = [];\r\n                for (j = 0, k = series[i].data.length; j < k; j++) {\r\n                    data = series[i].data[j];\r\n                    if (series[i].type == ecConfig.CHART_TYPE_PIE\r\n                        || series[i].type == ecConfig.CHART_TYPE_MAP\r\n                    ) {\r\n                        itemName = (data.name || '-') + ':';\r\n                    }\r\n                    else {\r\n                        itemName = '';\r\n                    }\r\n                    \r\n                    if (series[i].type == ecConfig.CHART_TYPE_SCATTER) {\r\n                        data = this.getDataFromOption(data).join(', ');\r\n                    }\r\n                    valueList.push(itemName + this.getDataFromOption(data));\r\n                }\r\n                content += (series[i].name || '-') + ' : \\n';\r\n                content += valueList.join(\r\n                    series[i].type == ecConfig.CHART_TYPE_SCATTER ? '\\n': ', '\r\n                );\r\n                content += '\\n\\n';\r\n            }\r\n\r\n            return content;\r\n        },\r\n\r\n        _save : function () {\r\n            var customContent = this.query(\r\n                this.option, 'toolbox.feature.dataView.contentToOption'\r\n            );\r\n            if (typeof customContent != 'function') {\r\n                var text = this._textArea.value.split('\\n');\r\n                var content = [];\r\n                for (var i = 0, l = text.length; i < l; i++) {\r\n                    text[i] = this._trim(text[i]);\r\n                    if (text[i] !== '') {\r\n                        content.push(text[i]);\r\n                    }\r\n                }\r\n                this._contentToOption(content);\r\n            }\r\n            else {\r\n                // return the textArea dom for custom contentToOption\r\n                customContent(this._textArea, this.option);\r\n            }\r\n\r\n            this.hide();\r\n            \r\n            var self = this;\r\n            setTimeout(\r\n                function (){\r\n                    self.messageCenter && self.messageCenter.dispatch(\r\n                        ecConfig.EVENT.DATA_VIEW_CHANGED,\r\n                        null,\r\n                        {option : self.option},\r\n                        self.myChart\r\n                    );\r\n                },\r\n                // 有动画，所以高级浏览器时间更长点\r\n                self.canvasSupported ? 800 : 100\r\n            );\r\n        },\r\n\r\n        _contentToOption : function (content) {\r\n            var i;\r\n            var j;\r\n            var k;\r\n            var len;\r\n            var data;\r\n            var axisList = [];\r\n\r\n            var contentIdx = 0;\r\n            var contentValueList;\r\n            var value;\r\n\r\n            if (this.option.xAxis) {\r\n                if (this.option.xAxis instanceof Array) {\r\n                    axisList = this.option.xAxis;\r\n                } else {\r\n                    axisList = [this.option.xAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    // 横纵默认为类目\r\n                    if ((axisList[i].type || 'category') == 'category'\r\n                    ) {\r\n                        contentValueList = content[contentIdx].split(',');\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            value = this._trim(contentValueList[j] || '');\r\n                            data = axisList[i].data[j];\r\n                            if (typeof axisList[i].data[j].value != 'undefined'\r\n                            ) {\r\n                                axisList[i].data[j].value = value;\r\n                            }\r\n                            else {\r\n                                axisList[i].data[j] = value;\r\n                            }\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.option.yAxis) {\r\n                if (this.option.yAxis instanceof Array) {\r\n                    axisList = this.option.yAxis;\r\n                } else {\r\n                    axisList = [this.option.yAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    if (axisList[i].type  == 'category') {\r\n                        contentValueList = content[contentIdx].split(',');\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            value = this._trim(contentValueList[j] || '');\r\n                            data = axisList[i].data[j];\r\n                            if (typeof axisList[i].data[j].value != 'undefined'\r\n                            ) {\r\n                                axisList[i].data[j].value = value;\r\n                            }\r\n                            else {\r\n                                axisList[i].data[j] = value;\r\n                            }\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            var series = this.option.series;\r\n            for (i = 0, len = series.length; i < len; i++) {\r\n                contentIdx++;\r\n                if (series[i].type == ecConfig.CHART_TYPE_SCATTER) {\r\n                    for (var j = 0, k = series[i].data.length; j < k; j++) {\r\n                        contentValueList = content[contentIdx];\r\n                        value = contentValueList.replace(' ','').split(',');\r\n                        if (typeof series[i].data[j].value != 'undefined'\r\n                        ) {\r\n                            series[i].data[j].value = value;\r\n                        }\r\n                        else {\r\n                            series[i].data[j] = value;\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n                else {\r\n                    contentValueList = content[contentIdx].split(',');\r\n                    for (var j = 0, k = series[i].data.length; j < k; j++) {\r\n                        value = (contentValueList[j] || '').replace(/.*:/,'');\r\n                        value = this._trim(value);\r\n                        value = (value != '-' && value !== '')\r\n                                ? (value - 0)\r\n                                : '-';\r\n                        if (typeof series[i].data[j].value != 'undefined'\r\n                        ) {\r\n                            series[i].data[j].value = value;\r\n                        }\r\n                        else {\r\n                            series[i].data[j] = value;\r\n                        }\r\n                    }\r\n                    contentIdx++;\r\n                }\r\n            }\r\n        },\r\n\r\n        _trim : function (str){\r\n            var trimer = new RegExp(\r\n                '(^[\\\\s\\\\t\\\\xa0\\\\u3000]+)|([\\\\u3000\\\\xa0\\\\s\\\\t]+\\x24)', 'g'\r\n            );\r\n            return str.replace(trimer, '');\r\n        },\r\n\r\n        // 阻塞zrender事件\r\n        _stop : function (e){\r\n            e = e || window.event;\r\n            if (e.stopPropagation) {\r\n                e.stopPropagation();\r\n            }\r\n            else {\r\n                e.cancelBubble = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * zrender事件响应：窗口大小改变\r\n         */\r\n        resize : function () {\r\n            this._zrHeight = this.zr.getHeight();\r\n            this._zrWidth = this.zr.getWidth();\r\n            if (this._tDom.offsetHeight > 10) {\r\n                this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                               + 'height:' + this._zrHeight + 'px;'\r\n                               + 'background-color:#fff;';\r\n                this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n                this._textArea.style.cssText = 'display:block;margin:0 0 8px 0;'\r\n                                        + 'padding:4px 6px;overflow:auto;'\r\n                                        + 'width:100%;'\r\n                                        + 'height:' + (this._zrHeight - 100) + 'px;';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用，重载基类方法\r\n         */\r\n        dispose : function () {\r\n            if (window.removeEventListener) {\r\n                this._tDom.removeEventListener('click', this._stop);\r\n                this._tDom.removeEventListener('mousewheel', this._stop);\r\n                this._tDom.removeEventListener('mousemove', this._stop);\r\n                this._tDom.removeEventListener('mousedown', this._stop);\r\n                this._tDom.removeEventListener('mouseup', this._stop);\r\n\r\n                // mobile支持\r\n                this._tDom.removeEventListener('touchstart', this._stop);\r\n                this._tDom.removeEventListener('touchmove', this._stop);\r\n                this._tDom.removeEventListener('touchend', this._stop);\r\n            }\r\n            else {\r\n                this._tDom.detachEvent('onclick', this._stop);\r\n                this._tDom.detachEvent('onmousewheel', this._stop);\r\n                this._tDom.detachEvent('onmousemove', this._stop);\r\n                this._tDom.detachEvent('onmousedown', this._stop);\r\n                this._tDom.detachEvent('onmouseup', this._stop);\r\n            }\r\n\r\n            this._buttonRefresh.onclick = null;\r\n            this._buttonClose.onclick = null;\r\n\r\n            if (this._hasShow) {\r\n                this._tDom.removeChild(this._textArea);\r\n                this._tDom.removeChild(this._buttonRefresh);\r\n                this._tDom.removeChild(this._buttonClose);\r\n            }\r\n\r\n            this._textArea = null;\r\n            this._buttonRefresh = null;\r\n            this._buttonClose = null;\r\n\r\n            this.dom.firstChild.removeChild(this._tDom);\r\n            this._tDom = null;\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(DataView, Base);\r\n    \r\n    __webpack_require__(6).define('dataView', DataView);\r\n    \r\n    return DataView;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件：图表标题\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(8);\r\n    \r\n    // 图形依赖\r\n    var TextShape = __webpack_require__(16);\r\n    var RectangleShape = __webpack_require__(7);\r\n    \r\n    var ecConfig = __webpack_require__(4);\r\n    // 图表标题\r\n    ecConfig.title = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 6,                       // 二级层叠\r\n        show: true,\r\n        text: '',\r\n        // link: null,             // 超链接跳转\r\n        // target: null,           // 仅支持self | blank\r\n        subtext: '',\r\n        // sublink: null,          // 超链接跳转\r\n        // subtarget: null,        // 仅支持self | blank\r\n        x: 'left',                 // 水平安放位置，默认为左对齐，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        //textAlign: null          // 水平对齐方式，默认根据x设置自动调整\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: '#ccc',       // 标题边框颜色\r\n        borderWidth: 0,            // 标题边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 标题内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 5,                // 主副标题纵向间隔，单位px，默认为10，\r\n        textStyle: {\r\n            fontSize: 18,\r\n            fontWeight: 'bolder',\r\n            color: '#333'          // 主标题文字颜色\r\n        },\r\n        subtextStyle: {\r\n            color: '#aaa'          // 副标题文字颜色\r\n        }\r\n    };\r\n    \r\n    var zrUtil = __webpack_require__(0);\r\n    var zrArea = __webpack_require__(2);\r\n    var zrColor = __webpack_require__(3);\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     */\r\n    function Title(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        this.refresh(option);\r\n    }\r\n    \r\n    Title.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TITLE,\r\n        _buildShape: function () {\r\n            if (!this.titleOption.show) {\r\n                return;\r\n            }\r\n            // 标题元素组的位置参数，通过计算所得x, y, width, height\r\n            this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n            this._buildBackground();\r\n            this._buildItem();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有标题元素\r\n         */\r\n        _buildItem: function () {\r\n            var text = this.titleOption.text;\r\n            var link = this.titleOption.link;\r\n            var target = this.titleOption.target;\r\n            var subtext = this.titleOption.subtext;\r\n            var sublink = this.titleOption.sublink;\r\n            var subtarget = this.titleOption.subtarget;\r\n            var font = this.getFont(this.titleOption.textStyle);\r\n            var subfont = this.getFont(this.titleOption.subtextStyle);\r\n            \r\n            var x = this._itemGroupLocation.x;\r\n            var y = this._itemGroupLocation.y;\r\n            var width = this._itemGroupLocation.width;\r\n            var height = this._itemGroupLocation.height;\r\n            \r\n            var textShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    y: y,\r\n                    color: this.titleOption.textStyle.color,\r\n                    text: text,\r\n                    textFont: font,\r\n                    textBaseline: 'top'\r\n                },\r\n                highlightStyle: {\r\n                    color: zrColor.lift(this.titleOption.textStyle.color, 1),\r\n                    brushType: 'fill'\r\n                },\r\n                hoverable: false\r\n            };\r\n            if (link) {\r\n                textShape.hoverable = true;\r\n                textShape.clickable = true;\r\n                textShape.onclick = function (){\r\n                    if (!target || target != 'self') {\r\n                        window.open(link);\r\n                    }\r\n                    else {\r\n                        window.location = link;\r\n                    }\r\n                };\r\n            }\r\n            \r\n            var subtextShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    y: y + height,\r\n                    color: this.titleOption.subtextStyle.color,\r\n                    text: subtext,\r\n                    textFont: subfont,\r\n                    textBaseline: 'bottom'\r\n                },\r\n                highlightStyle: {\r\n                    color: zrColor.lift(this.titleOption.subtextStyle.color, 1),\r\n                    brushType: 'fill'\r\n                },\r\n                hoverable: false\r\n            };\r\n            if (sublink) {\r\n                subtextShape.hoverable = true;\r\n                subtextShape.clickable = true;\r\n                subtextShape.onclick = function (){\r\n                    if (!subtarget || subtarget != 'self') {\r\n                        window.open(sublink);\r\n                    }\r\n                    else {\r\n                        window.location = sublink;\r\n                    }\r\n                };\r\n            }\r\n\r\n            switch (this.titleOption.x) {\r\n                case 'center' :\r\n                    textShape.style.x = subtextShape.style.x = x + width / 2;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'center';\r\n                    break;\r\n                case 'left' :\r\n                    textShape.style.x = subtextShape.style.x = x;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'left';\r\n                    break;\r\n                case 'right' :\r\n                    textShape.style.x = subtextShape.style.x = x + width;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'right';\r\n                    break;\r\n                default :\r\n                    x = this.titleOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    textShape.style.x = subtextShape.style.x = x;\r\n                    break;\r\n            }\r\n            \r\n            if (this.titleOption.textAlign) {\r\n                textShape.style.textAlign = subtextShape.style.textAlign \r\n                                          = this.titleOption.textAlign;\r\n            }\r\n\r\n            this.shapeList.push(new TextShape(textShape));\r\n            subtext !== '' && this.shapeList.push(new TextShape(subtextShape));\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var padding = this.reformCssArray(this.titleOption.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: this.titleOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: this.titleOption.backgroundColor,\r\n                    strokeColor: this.titleOption.borderColor,\r\n                    lineWidth: this.titleOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算标题实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var padding = this.reformCssArray(this.titleOption.padding);\r\n            var text = this.titleOption.text;\r\n            var subtext = this.titleOption.subtext;\r\n            var font = this.getFont(this.titleOption.textStyle);\r\n            var subfont = this.getFont(this.titleOption.subtextStyle);\r\n            \r\n            var totalWidth = Math.max(\r\n                    zrArea.getTextWidth(text, font),\r\n                    zrArea.getTextWidth(subtext, subfont)\r\n                );\r\n            var totalHeight = zrArea.getTextHeight(text, font)\r\n                              + (subtext === ''\r\n                                 ? 0\r\n                                 : (this.titleOption.itemGap\r\n                                    + zrArea.getTextHeight(subtext, subfont))\r\n                                );\r\n\r\n            var x;\r\n            var zrWidth = this.zr.getWidth();\r\n            switch (this.titleOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + this.titleOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - this.titleOption.borderWidth;\r\n                    break;\r\n                default :\r\n                    x = this.titleOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    break;\r\n            }\r\n\r\n            var y;\r\n            var zrHeight = this.zr.getHeight();\r\n            switch (this.titleOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + this.titleOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[2]\r\n                        - this.titleOption.borderWidth;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = this.titleOption.y - 0;\r\n                    y = isNaN(y) ? 0 : y;\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight\r\n            };\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n\r\n                this.option.title = this.reformOption(this.option.title);\r\n                this.titleOption = this.option.title;\r\n                this.titleOption.textStyle = this.getTextStyle(\r\n                    this.titleOption.textStyle\r\n                );\r\n                this.titleOption.subtextStyle = this.getTextStyle(\r\n                    this.titleOption.subtextStyle\r\n                );\r\n            }\r\n            \r\n            this.clear();\r\n            this._buildShape();\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Title, Base);\r\n    \r\n    __webpack_require__(6).define('title', Title);\r\n    \r\n    return Title;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\r\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件：提示框\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(8);\r\n    \r\n    // 图形依赖\r\n    var CrossShape = __webpack_require__(77);\r\n    var LineShape = __webpack_require__(18);\r\n    var RectangleShape = __webpack_require__(7);\r\n    var rectangleInstance = new RectangleShape({});\r\n    \r\n    var ecConfig = __webpack_require__(4);\r\n    // 提示框\r\n    ecConfig.tooltip = {\r\n        zlevel: 1,                  // 一级层叠，频繁变化的tooltip指示器在pc上独立一层\r\n        z: 8,                       // 二级层叠\r\n        show: true,\r\n        showContent: true,         // tooltip主体内容\r\n        trigger: 'item',           // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\r\n        // position: null          // 位置 {Array} | {Function}\r\n        // formatter: null         // 内容格式器：{string}（Template） ¦ {Function}\r\n        islandFormatter: '{a} <br/>{b} : {c}',  // 数据孤岛内容格式器\r\n        showDelay: 20,             // 显示延迟，添加显示延迟可以避免频繁切换，单位ms\r\n        hideDelay: 100,            // 隐藏延迟，单位ms\r\n        transitionDuration: 0.4,   // 动画变换时间，单位s\r\n        enterable: false,\r\n        backgroundColor: 'rgba(0,0,0,0.7)',     // 提示背景颜色，默认为透明度为0.7的黑色\r\n        borderColor: '#333',       // 提示边框颜色\r\n        borderRadius: 4,           // 提示边框圆角，单位px，默认为4\r\n        borderWidth: 0,            // 提示边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 提示内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        axisPointer: {             // 坐标轴指示器，坐标轴触发有效\r\n            type: 'line',          // 默认为直线，可选为：'line' | 'shadow' | 'cross'\r\n            lineStyle: {           // 直线指示器样式设置\r\n                color: '#48b',\r\n                width: 2,\r\n                type: 'solid'\r\n            },\r\n            crossStyle: {\r\n                color: '#1e90ff',\r\n                width: 1,\r\n                type: 'dashed'\r\n            },\r\n            shadowStyle: {                      // 阴影指示器样式设置\r\n                color: 'rgba(150,150,150,0.3)', // 阴影颜色\r\n                width: 'auto',                  // 阴影大小\r\n                type: 'default'\r\n            }\r\n        },\r\n        textStyle: {\r\n            color: '#fff'\r\n        }\r\n    };\r\n\r\n    var ecData = __webpack_require__(14);\r\n    var zrConfig = __webpack_require__(10);\r\n    var zrEvent = __webpack_require__(9);\r\n    var zrArea = __webpack_require__(2);\r\n    var zrColor = __webpack_require__(3);\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrShapeBase = __webpack_require__(1);\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 提示框参数\r\n     * @param {HtmlElement} dom 目标对象\r\n     * @param {ECharts} myChart 当前图表实例\r\n     */\r\n    function Tooltip(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        this.dom = myChart.dom;\r\n        \r\n        var self = this;\r\n        self._onmousemove = function (param) {\r\n            return self.__onmousemove(param);\r\n        };\r\n        self._onglobalout = function (param) {\r\n            return self.__onglobalout(param);\r\n        };\r\n        \r\n        this.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n        this.zr.on(zrConfig.EVENT.GLOBALOUT, self._onglobalout);\r\n\r\n        self._hide = function (param) {\r\n            return self.__hide(param);\r\n        };\r\n        self._tryShow = function(param) {\r\n            return self.__tryShow(param);\r\n        };\r\n        self._refixed = function(param) {\r\n            return self.__refixed(param);\r\n        };\r\n        \r\n        self._setContent = function(ticket, res) {\r\n            return self.__setContent(ticket, res);\r\n        };\r\n        \r\n        this._tDom = this._tDom || document.createElement('div');\r\n        // 避免拖拽时页面选中的尴尬\r\n        this._tDom.onselectstart = function() {\r\n            return false;\r\n        };\r\n        this._tDom.onmouseover = function() {\r\n            self._mousein = true;\r\n        };\r\n        this._tDom.onmouseout = function() {\r\n            self._mousein = false;\r\n        };\r\n        this._tDom.className = 'echarts-tooltip';\r\n        this._tDom.style.position = 'absolute';  // 不是多余的，别删！\r\n        this.hasAppend = false;\r\n        \r\n        this._axisLineShape && this.zr.delShape(this._axisLineShape.id);\r\n        this._axisLineShape = new LineShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: this.getZBase(),\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisLineShape);\r\n        this.zr.addShape(this._axisLineShape);\r\n        \r\n        this._axisShadowShape && this.zr.delShape(this._axisShadowShape.id);\r\n        this._axisShadowShape = new LineShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: 1,                      // grid上，chart下\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisShadowShape);\r\n        this.zr.addShape(this._axisShadowShape);\r\n        \r\n        this._axisCrossShape && this.zr.delShape(this._axisCrossShape.id);\r\n        this._axisCrossShape = new CrossShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: this.getZBase(),\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisCrossShape);\r\n        this.zr.addShape(this._axisCrossShape);\r\n        \r\n        this.showing = false;\r\n        this.refresh(option);\r\n    }\r\n    \r\n    Tooltip.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TOOLTIP,\r\n        // 通用样式\r\n        _gCssText: 'position:absolute;display:block;border-style:solid;white-space:nowrap;',\r\n        /**\r\n         * 根据配置设置dom样式\r\n         */\r\n        _style: function (opt) {\r\n            if (!opt) {\r\n                return '';\r\n            }\r\n            var cssText = [];\r\n            if (opt.transitionDuration) {\r\n                var transitionText = 'left ' + opt.transitionDuration + 's,'\r\n                                    + 'top ' + opt.transitionDuration + 's';\r\n                cssText.push(\r\n                    'transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-moz-transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-webkit-transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-o-transition:' + transitionText\r\n                );\r\n            }\r\n\r\n            if (opt.backgroundColor) {\r\n                // for sb ie~\r\n                cssText.push(\r\n                    'background-Color:' + zrColor.toHex(\r\n                        opt.backgroundColor\r\n                    )\r\n                );\r\n                cssText.push('filter:alpha(opacity=70)');\r\n                cssText.push('background-Color:' + opt.backgroundColor);\r\n            }\r\n\r\n            if (opt.borderWidth != null) {\r\n                cssText.push('border-width:' + opt.borderWidth + 'px');\r\n            }\r\n\r\n            if (opt.borderColor != null) {\r\n                cssText.push('border-color:' + opt.borderColor);\r\n            }\r\n\r\n            if (opt.borderRadius != null) {\r\n                cssText.push(\r\n                    'border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-moz-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-webkit-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-o-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n            }\r\n\r\n            var textStyle = opt.textStyle;\r\n            if (textStyle) {\r\n                textStyle.color && cssText.push('color:' + textStyle.color);\r\n                textStyle.decoration && cssText.push(\r\n                    'text-decoration:' + textStyle.decoration\r\n                );\r\n                textStyle.align && cssText.push(\r\n                    'text-align:' + textStyle.align\r\n                );\r\n                textStyle.fontFamily && cssText.push(\r\n                    'font-family:' + textStyle.fontFamily\r\n                );\r\n                textStyle.fontSize && cssText.push(\r\n                    'font-size:' + textStyle.fontSize + 'px'\r\n                );\r\n                textStyle.fontSize && cssText.push(\r\n                    'line-height:' + Math.round(textStyle.fontSize*3/2) + 'px'\r\n                );\r\n                textStyle.fontStyle && cssText.push(\r\n                    'font-style:' + textStyle.fontStyle\r\n                );\r\n                textStyle.fontWeight && cssText.push(\r\n                    'font-weight:' + textStyle.fontWeight\r\n                );\r\n            }\r\n\r\n\r\n            var padding = opt.padding;\r\n            if (padding != null) {\r\n                padding = this.reformCssArray(padding);\r\n                cssText.push(\r\n                    'padding:' + padding[0] + 'px '\r\n                               + padding[1] + 'px '\r\n                               + padding[2] + 'px '\r\n                               + padding[3] + 'px'\r\n                );\r\n            }\r\n\r\n            cssText = cssText.join(';') + ';';\r\n\r\n            return cssText;\r\n        },\r\n        \r\n        __hide: function () {\r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n            this._lastItemTriggerId = -1;\r\n            if (this._tDom) {\r\n                this._tDom.style.display = 'none';\r\n            }\r\n            var needRefresh = false;\r\n            if (!this._axisLineShape.invisible) {\r\n                this._axisLineShape.invisible = true;\r\n                this.zr.modShape(this._axisLineShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (!this._axisShadowShape.invisible) {\r\n                this._axisShadowShape.invisible = true;\r\n                this.zr.modShape(this._axisShadowShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (!this._axisCrossShape.invisible) {\r\n                this._axisCrossShape.invisible = true;\r\n                this.zr.modShape(this._axisCrossShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n                this._lastTipShape = false;\r\n                this.shapeList.length = 2;\r\n            }\r\n            needRefresh && this.zr.refreshNextFrame();\r\n            this.showing = false;\r\n        },\r\n        \r\n        _show: function (position, x, y, specialCssText) {\r\n            var domHeight = this._tDom.offsetHeight;\r\n            var domWidth = this._tDom.offsetWidth;\r\n            if (position) {\r\n                if (typeof position === 'function') {\r\n                    position = position([x, y]);\r\n                }\r\n                if (position instanceof Array) {\r\n                    x = position[0];\r\n                    y = position[1];\r\n                }\r\n            }\r\n            if (x + domWidth > this._zrWidth) {\r\n                // 太靠右\r\n                //x = this._zrWidth - domWidth;\r\n                x -= (domWidth + 40);\r\n            }\r\n            if (y + domHeight > this._zrHeight) {\r\n                // 太靠下\r\n                //y = this._zrHeight - domHeight;\r\n                y -= (domHeight - 20);\r\n            }\r\n            if (y < 20) {\r\n                y = 0;\r\n            }\r\n            this._tDom.style.cssText = this._gCssText\r\n                                  + this._defaultCssText\r\n                                  + (specialCssText ? specialCssText : '')\r\n                                  + 'left:' + x + 'px;top:' + y + 'px;';\r\n            \r\n            if (domHeight < 10 || domWidth < 10) {\r\n                // this._zrWidth - x < 100 || this._zrHeight - y < 100\r\n                setTimeout(this._refixed, 20);\r\n            }\r\n            this.showing = true;\r\n        },\r\n        \r\n        __refixed: function () {\r\n            if (this._tDom) {\r\n                var cssText = '';\r\n                var domHeight = this._tDom.offsetHeight;\r\n                var domWidth = this._tDom.offsetWidth;\r\n                if (this._tDom.offsetLeft + domWidth > this._zrWidth) {\r\n                    cssText += 'left:' + (this._zrWidth - domWidth - 20) + 'px;';\r\n                }\r\n                if (this._tDom.offsetTop + domHeight > this._zrHeight) {\r\n                    cssText += 'top:' + (this._zrHeight - domHeight - 10) + 'px;';\r\n                }\r\n                if (cssText !== '') {\r\n                    this._tDom.style.cssText += cssText;\r\n                }\r\n            }\r\n        },\r\n        \r\n        __tryShow: function () {\r\n            var needShow;\r\n            var trigger;\r\n            if (!this._curTarget) {\r\n                // 坐标轴事件\r\n                this._findPolarTrigger() || this._findAxisTrigger();\r\n            }\r\n            else {\r\n                // 数据项事件\r\n                if (this._curTarget._type === 'island' && this.option.tooltip.show) {\r\n                    this._showItemTrigger();\r\n                    return;\r\n                }\r\n                var serie = ecData.get(this._curTarget, 'series');\r\n                var data = ecData.get(this._curTarget, 'data');\r\n                needShow = this.deepQuery(\r\n                    [data, serie, this.option],\r\n                    'tooltip.show'\r\n                );\r\n                if (serie == null || data == null || !needShow) {\r\n                    // 不响应tooltip的数据对象延时隐藏\r\n                    clearTimeout(this._hidingTicket);\r\n                    clearTimeout(this._showingTicket);\r\n                    this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                }\r\n                else {\r\n                    trigger = this.deepQuery(\r\n                        [data, serie, this.option],\r\n                        'tooltip.trigger'\r\n                    );\r\n                    \r\n                    trigger === 'axis'\r\n                                ? this._showAxisTrigger(\r\n                                      serie.xAxisIndex, serie.yAxisIndex,\r\n                                      ecData.get(this._curTarget, 'dataIndex')\r\n                                  )\r\n                                : this._showItemTrigger();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 直角系 \r\n         */\r\n        _findAxisTrigger: function () {\r\n            if (!this.component.xAxis || !this.component.yAxis) {\r\n                this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                return;\r\n            }\r\n            var series = this.option.series;\r\n            var xAxisIndex;\r\n            var yAxisIndex;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                // 找到第一个axis触发tooltip的系列\r\n                if (this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis') {\r\n                    xAxisIndex = series[i].xAxisIndex || 0;\r\n                    yAxisIndex = series[i].yAxisIndex || 0;\r\n                    if (this.component.xAxis.getAxis(xAxisIndex)\r\n                        && this.component.xAxis.getAxis(xAxisIndex).type\r\n                           === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                    ) {\r\n                        // 横轴为类目轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex,\r\n                            this._getNearestDataIndex(\r\n                                'x', this.component.xAxis.getAxis(xAxisIndex)\r\n                            )\r\n                        );\r\n                        return;\r\n                    } \r\n                    else if (this.component.yAxis.getAxis(yAxisIndex)\r\n                             && this.component.yAxis.getAxis(yAxisIndex).type\r\n                                === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                    ) {\r\n                        // 纵轴为类目轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex,\r\n                            this._getNearestDataIndex(\r\n                                'y', this.component.yAxis.getAxis(yAxisIndex)\r\n                            )\r\n                        );\r\n                        return;\r\n                    }\r\n                    else {\r\n                        // 双数值轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex, -1);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.option.tooltip.axisPointer.type === 'cross') {\r\n                this._showAxisTrigger(-1, -1, -1);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 极坐标 \r\n         */\r\n        _findPolarTrigger: function () {\r\n            if (!this.component.polar) {\r\n                return false;\r\n            }\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            var polarIndex = this.component.polar.getNearestIndex([x, y]);\r\n            var valueIndex;\r\n            if (polarIndex) {\r\n                valueIndex = polarIndex.valueIndex;\r\n                polarIndex = polarIndex.polarIndex;\r\n            }\r\n            else {\r\n                polarIndex = -1;\r\n            }\r\n            \r\n            if (polarIndex != -1) {\r\n                return this._showPolarTrigger(polarIndex, valueIndex);\r\n            }\r\n            \r\n            return false;\r\n        },\r\n        \r\n        /**\r\n         * 根据坐标轴事件带的属性获取最近的axisDataIndex\r\n         */\r\n        _getNearestDataIndex: function (direction, categoryAxis) {\r\n            var dataIndex = -1;\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            if (direction === 'x') {\r\n                // 横轴为类目轴\r\n                var left;\r\n                var right;\r\n                var xEnd = this.component.grid.getXend();\r\n                var curCoord = categoryAxis.getCoordByIndex(dataIndex);\r\n                while (curCoord < xEnd) {\r\n                    right = curCoord;\r\n                    if (curCoord <= x) {\r\n                        left = curCoord;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                    curCoord = categoryAxis.getCoordByIndex(++dataIndex);\r\n                }\r\n                if (dataIndex <= 0) {\r\n                    dataIndex = 0;\r\n                }\r\n                else if (x - left <= right - x) {\r\n                    dataIndex -= 1;\r\n                }\r\n                else {\r\n                    // 离右边近，看是否为最后一个\r\n                    if (categoryAxis.getNameByIndex(dataIndex) == null) {\r\n                        dataIndex -= 1;\r\n                    }\r\n                }\r\n                return dataIndex;\r\n            }\r\n            else {\r\n                // 纵轴为类目轴\r\n                var top;\r\n                var bottom;\r\n                var yStart = this.component.grid.getY();\r\n                var curCoord = categoryAxis.getCoordByIndex(dataIndex);\r\n                while (curCoord > yStart) {\r\n                    top = curCoord;\r\n                    if (curCoord >= y) {\r\n                        bottom = curCoord;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                    curCoord = categoryAxis.getCoordByIndex(++dataIndex);\r\n                }\r\n\r\n                if (dataIndex <= 0) {\r\n                    dataIndex = 0;\r\n                }\r\n                else if (y - top >= bottom - y) {\r\n                    dataIndex -= 1;\r\n                }\r\n                else {\r\n                    // 离上方边近，看是否为最后一个\r\n                    if (categoryAxis.getNameByIndex(dataIndex) == null) {\r\n                        dataIndex -= 1;\r\n                    }\r\n                }\r\n                return dataIndex;\r\n            }\r\n            return -1;\r\n        },\r\n\r\n        /**\r\n         * 直角系 \r\n         */\r\n        _showAxisTrigger: function (xAxisIndex, yAxisIndex, dataIndex) {\r\n            !this._event.connectTrigger && this.messageCenter.dispatch(\r\n                ecConfig.EVENT.TOOLTIP_IN_GRID,\r\n                this._event,\r\n                null,\r\n                this.myChart\r\n            );\r\n            if (this.component.xAxis == null\r\n                || this.component.yAxis == null\r\n                || xAxisIndex == null\r\n                || yAxisIndex == null\r\n                // || dataIndex < 0\r\n            ) {\r\n                // 不响应tooltip的数据对象延时隐藏\r\n                clearTimeout(this._hidingTicket);\r\n                clearTimeout(this._showingTicket);\r\n                this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                return;\r\n            }\r\n            var series = this.option.series;\r\n            var seriesArray = [];\r\n            var seriesIndex = [];\r\n            var categoryAxis;\r\n\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this.option.tooltip.trigger === 'axis') {\r\n                if (!this.option.tooltip.show) {\r\n                    return;\r\n                }\r\n                formatter = this.option.tooltip.formatter;\r\n                position = this.option.tooltip.position;\r\n            }\r\n\r\n            var axisLayout = xAxisIndex != -1\r\n                             && this.component.xAxis.getAxis(xAxisIndex).type\r\n                                === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                             ? 'xAxis'      // 横轴为类目轴，找到所有用这条横轴并且axis触发的系列数据\r\n                             : yAxisIndex != -1\r\n                               && this.component.yAxis.getAxis(yAxisIndex).type\r\n                                  === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                               ? 'yAxis'    // 纵轴为类目轴，找到所有用这条纵轴并且axis触发的系列数据\r\n                               : false;\r\n            var x;\r\n            var y;\r\n            if (axisLayout) {\r\n                var axisIndex = axisLayout == 'xAxis' ? xAxisIndex : yAxisIndex;\r\n                categoryAxis = this.component[axisLayout].getAxis(axisIndex);\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (!this._isSelected(series[i].name)) {\r\n                        continue;\r\n                    }\r\n                    if (series[i][axisLayout + 'Index'] === axisIndex\r\n                        && this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis'\r\n                    ) {\r\n                        showContent = this.query(series[i], 'tooltip.showContent') \r\n                                      || showContent;\r\n                        formatter = this.query(series[i], 'tooltip.formatter') \r\n                                    || formatter;\r\n                        position = this.query(series[i], 'tooltip.position') \r\n                                   || position;\r\n                        \r\n                        specialCssText += this._style(this.query(series[i], 'tooltip'));\r\n                        if (series[i].stack != null && axisLayout == 'xAxis') {\r\n                            seriesArray.unshift(series[i]);\r\n                            seriesIndex.unshift(i);\r\n                        }\r\n                        else {\r\n                            seriesArray.push(series[i]);\r\n                            seriesIndex.push(i);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                // 寻找高亮元素\r\n                this.messageCenter.dispatch(\r\n                    ecConfig.EVENT.TOOLTIP_HOVER,\r\n                    this._event,\r\n                    {\r\n                        seriesIndex: seriesIndex,\r\n                        dataIndex: dataIndex\r\n                    },\r\n                    this.myChart\r\n                );\r\n                \r\n                var rect;\r\n                if (axisLayout == 'xAxis') {\r\n                    x = this.subPixelOptimize(\r\n                        categoryAxis.getCoordByIndex(dataIndex),\r\n                        this._axisLineWidth\r\n                    );\r\n                    y = zrEvent.getY(this._event);\r\n                    rect = [\r\n                        x, this.component.grid.getY(), \r\n                        x, this.component.grid.getYend()\r\n                    ];\r\n                }\r\n                else {\r\n                    x = zrEvent.getX(this._event);\r\n                    y = this.subPixelOptimize(\r\n                        categoryAxis.getCoordByIndex(dataIndex),\r\n                        this._axisLineWidth\r\n                    );\r\n                    rect = [\r\n                        this.component.grid.getX(), y, \r\n                        this.component.grid.getXend(), y\r\n                    ];\r\n                }\r\n                this._styleAxisPointer(\r\n                    seriesArray,\r\n                    rect[0], rect[1], rect[2], rect[3],\r\n                    categoryAxis.getGap(), x, y\r\n                );\r\n            }\r\n            else {\r\n                // 双数值轴\r\n                x = zrEvent.getX(this._event);\r\n                y = zrEvent.getY(this._event);\r\n                this._styleAxisPointer(\r\n                    series,\r\n                    this.component.grid.getX(), y, \r\n                    this.component.grid.getXend(), y,\r\n                    0, x, y\r\n                );\r\n                if (dataIndex >= 0) {\r\n                    this._showItemTrigger(true);\r\n                }\r\n                else {\r\n                    clearTimeout(this._hidingTicket);\r\n                    clearTimeout(this._showingTicket);\r\n                    this._tDom.style.display = 'none';\r\n                }\r\n            }\r\n\r\n            if (seriesArray.length > 0) {\r\n                // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n                this._lastItemTriggerId = -1;\r\n                // 相同dataIndex seriesIndex时不再触发内容更新\r\n                if (this._lastDataIndex != dataIndex || this._lastSeriesIndex != seriesIndex[0]) {\r\n                    this._lastDataIndex = dataIndex;\r\n                    this._lastSeriesIndex = seriesIndex[0];\r\n                    var data;\r\n                    var value;\r\n                    if (typeof formatter === 'function') {\r\n                        var params = [];\r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            value = this.getDataFromOption(data, '-');\r\n                            \r\n                            params.push({\r\n                                seriesIndex: seriesIndex[i],\r\n                                seriesName: seriesArray[i].name || '',\r\n                                series: seriesArray[i],\r\n                                dataIndex: dataIndex,\r\n                                data: data,\r\n                                name: categoryAxis.getNameByIndex(dataIndex),\r\n                                value: value,\r\n                                // 向下兼容\r\n                                0: seriesArray[i].name || '',\r\n                                1: categoryAxis.getNameByIndex(dataIndex),\r\n                                2: value,\r\n                                3: data\r\n                            });\r\n                        }\r\n                        this._curTicket = 'axis:' + dataIndex;\r\n                        this._tDom.innerHTML = formatter.call(\r\n                            this.myChart, params, this._curTicket, this._setContent\r\n                        );\r\n                    }\r\n                    else if (typeof formatter === 'string') {\r\n                        this._curTicket = NaN;\r\n                        formatter = formatter.replace('{a}','{a0}')\r\n                                             .replace('{b}','{b0}')\r\n                                             .replace('{c}','{c0}');\r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            formatter = formatter.replace(\r\n                                '{a' + i + '}',\r\n                                this._encodeHTML(seriesArray[i].name || '')\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{b' + i + '}',\r\n                                this._encodeHTML(categoryAxis.getNameByIndex(dataIndex))\r\n                            );\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            data = this.getDataFromOption(data, '-');\r\n                            formatter = formatter.replace(\r\n                                '{c' + i + '}',\r\n                                data instanceof Array \r\n                                ? data : this.numAddCommas(data)\r\n                            );\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                    else {\r\n                        this._curTicket = NaN;\r\n                        formatter = this._encodeHTML(\r\n                            categoryAxis.getNameByIndex(dataIndex)\r\n                        );\r\n    \r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            formatter += '<br/>' \r\n                                         + this._encodeHTML(seriesArray[i].name || '')\r\n                                         + ' : ';\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            data = this.getDataFromOption(data, '-');\r\n                            formatter += data instanceof Array \r\n                                         ? data : this.numAddCommas(data);\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                }\r\n\r\n                // don't modify, just false, showContent == undefined == true\r\n                if (showContent === false || !this.option.tooltip.showContent) {\r\n                    // 只用tooltip的行为，不显示主体\r\n                    return;\r\n                }\r\n                \r\n                if (!this.hasAppend) {\r\n                    this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                    this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                    this.dom.firstChild.appendChild(this._tDom);\r\n                    this.hasAppend = true;\r\n                }\r\n                this._show(position, x + 10, y + 10, specialCssText);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 极坐标 \r\n         */\r\n        _showPolarTrigger: function (polarIndex, dataIndex) {\r\n            if (this.component.polar == null\r\n                || polarIndex == null\r\n                || dataIndex == null\r\n                || dataIndex < 0\r\n            ) {\r\n                return false;\r\n            }\r\n            var series = this.option.series;\r\n            var seriesArray = [];\r\n            var seriesIndex = [];\r\n\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this.option.tooltip.trigger === 'axis') {\r\n                if (!this.option.tooltip.show) {\r\n                    return false;\r\n                }\r\n                formatter = this.option.tooltip.formatter;\r\n                position = this.option.tooltip.position;\r\n            }\r\n            var indicatorName = this.option.polar[polarIndex].indicator[dataIndex].text;\r\n\r\n            // 找到所有用这个极坐标并且axis触发的系列数据\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (!this._isSelected(series[i].name)) {\r\n                    continue;\r\n                }\r\n                if (series[i].polarIndex === polarIndex\r\n                    && this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis'\r\n                ) {\r\n                    showContent = this.query(series[i], 'tooltip.showContent') \r\n                                  || showContent;\r\n                    formatter = this.query(series[i], 'tooltip.formatter') \r\n                                || formatter;\r\n                    position = this.query(series[i], 'tooltip.position') \r\n                               || position;\r\n                    specialCssText += this._style(this.query(series[i], 'tooltip'));\r\n                    seriesArray.push(series[i]);\r\n                    seriesIndex.push(i);\r\n                }\r\n            }\r\n            if (seriesArray.length > 0) {\r\n                var polarData;\r\n                var data;\r\n                var value;\r\n                var params = [];\r\n\r\n                for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                    polarData = seriesArray[i].data;\r\n                    for (var j = 0, k = polarData.length; j < k; j++) {\r\n                        data = polarData[j];\r\n                        if (!this._isSelected(data.name)) {\r\n                            continue;\r\n                        }\r\n                        data = data != null\r\n                               ? data\r\n                               : {name:'', value: {dataIndex:'-'}};\r\n                        value = this.getDataFromOption(data.value[dataIndex]);\r\n                        params.push({\r\n                            seriesIndex: seriesIndex[i],\r\n                            seriesName: seriesArray[i].name || '',\r\n                            series: seriesArray[i],\r\n                            dataIndex: dataIndex,\r\n                            data: data,\r\n                            name: data.name,\r\n                            indicator: indicatorName,\r\n                            value: value,\r\n                            // 向下兼容\r\n                            0: seriesArray[i].name || '',\r\n                            1: data.name,\r\n                            2: value,\r\n                            3: indicatorName\r\n                        });\r\n                    }\r\n                }\r\n                if (params.length <= 0) {\r\n                    return;\r\n                }\r\n                // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n                this._lastItemTriggerId = -1;\r\n\r\n                // 相同dataIndex seriesIndex时不再触发内容更新\r\n                if (this._lastDataIndex != dataIndex || this._lastSeriesIndex != seriesIndex[0]) {\r\n                    this._lastDataIndex = dataIndex;\r\n                    this._lastSeriesIndex = seriesIndex[0];\r\n                    if (typeof formatter === 'function') {\r\n                        this._curTicket = 'axis:' + dataIndex;\r\n                        this._tDom.innerHTML = formatter.call(\r\n                            this.myChart, params, this._curTicket, this._setContent\r\n                        );\r\n                    }\r\n                    else if (typeof formatter === 'string') {\r\n                        formatter = formatter.replace('{a}','{a0}')\r\n                                             .replace('{b}','{b0}')\r\n                                             .replace('{c}','{c0}')\r\n                                             .replace('{d}','{d0}');\r\n                        for (var i = 0, l = params.length; i < l; i++) {\r\n                            formatter = formatter.replace(\r\n                                '{a' + i + '}',\r\n                                this._encodeHTML(params[i].seriesName)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{b' + i + '}',\r\n                                this._encodeHTML(params[i].name)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{c' + i + '}',\r\n                                this.numAddCommas(params[i].value)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{d' + i + '}',\r\n                                this._encodeHTML(params[i].indicator)\r\n                            );\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                    else {\r\n                        formatter = this._encodeHTML(params[0].name) + '<br/>' \r\n                                    + this._encodeHTML(params[0].indicator) + ' : ' \r\n                                    + this.numAddCommas(params[0].value);\r\n                        for (var i = 1, l = params.length; i < l; i++) {\r\n                            formatter += '<br/>' + this._encodeHTML(params[i].name) \r\n                                         + '<br/>';\r\n                            formatter += this._encodeHTML(params[i].indicator) + ' : ' \r\n                                         + this.numAddCommas(params[i].value);\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                }\r\n\r\n                // don't modify, just false, showContent == undefined == true\r\n                if (showContent === false || !this.option.tooltip.showContent) {\r\n                    // 只用tooltip的行为，不显示主体\r\n                    return;\r\n                }\r\n                \r\n                if (!this.hasAppend) {\r\n                    this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                    this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                    this.dom.firstChild.appendChild(this._tDom);\r\n                    this.hasAppend = true;\r\n                }\r\n                this._show(\r\n                    position,\r\n                    zrEvent.getX(this._event), \r\n                    zrEvent.getY(this._event), \r\n                    specialCssText\r\n                );\r\n                return true;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * @parma {boolean} axisTrigger \r\n         */\r\n        _showItemTrigger: function (axisTrigger) {\r\n            if (!this._curTarget) {\r\n                return;\r\n            }\r\n            var serie = ecData.get(this._curTarget, 'series');\r\n            var seriesIndex = ecData.get(this._curTarget, 'seriesIndex');\r\n            var data = ecData.get(this._curTarget, 'data');\r\n            var dataIndex = ecData.get(this._curTarget, 'dataIndex');\r\n            var name = ecData.get(this._curTarget, 'name');\r\n            var value = ecData.get(this._curTarget, 'value');\r\n            var special = ecData.get(this._curTarget, 'special');\r\n            var special2 = ecData.get(this._curTarget, 'special2');\r\n            var queryTarget = [data, serie, this.option];\r\n            // 从低优先级往上找到trigger为item的formatter和样式\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this._curTarget._type != 'island') {\r\n                // 全局\r\n                var trigger = axisTrigger ? 'axis' : 'item';\r\n                if (this.option.tooltip.trigger === trigger) {\r\n                    formatter = this.option.tooltip.formatter;\r\n                    position = this.option.tooltip.position;\r\n                }\r\n                // 系列\r\n                if (this.query(serie, 'tooltip.trigger') === trigger) {\r\n                    showContent = this.query(serie, 'tooltip.showContent') || showContent;\r\n                    formatter = this.query(serie, 'tooltip.formatter') || formatter;\r\n                    position = this.query(serie, 'tooltip.position') || position;\r\n                    specialCssText += this._style(this.query(serie, 'tooltip'));\r\n                }\r\n                // 数据项\r\n                showContent = this.query(data, 'tooltip.showContent') || showContent;\r\n                formatter = this.query(data, 'tooltip.formatter') || formatter;\r\n                position = this.query(data, 'tooltip.position') || position;\r\n                specialCssText += this._style(this.query(data, 'tooltip'));\r\n            }\r\n            else {\r\n                this._lastItemTriggerId = NaN;\r\n                showContent = this.deepQuery(queryTarget, 'tooltip.showContent');\r\n                formatter = this.deepQuery(queryTarget, 'tooltip.islandFormatter');\r\n                position = this.deepQuery(queryTarget, 'tooltip.islandPosition');\r\n            }\r\n\r\n            // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n\r\n            // 相同dataIndex seriesIndex时不再触发内容更新\r\n            if (this._lastItemTriggerId !== this._curTarget.id) {\r\n                this._lastItemTriggerId = this._curTarget.id;\r\n                if (typeof formatter === 'function') {\r\n                    this._curTicket = (serie.name || '') + ':' + dataIndex;\r\n                    this._tDom.innerHTML = formatter.call(\r\n                        this.myChart,\r\n                        {\r\n                            seriesIndex: seriesIndex,\r\n                            seriesName: serie.name || '',\r\n                            series: serie,\r\n                            dataIndex: dataIndex,\r\n                            data: data,\r\n                            name: name,\r\n                            value: value,\r\n                            percent: special,   // 饼图\r\n                            indicator: special, // 雷达图\r\n                            value2: special2,\r\n                            indicator2: special2,\r\n                            // 向下兼容\r\n                            0: serie.name || '',\r\n                            1: name,\r\n                            2: value,\r\n                            3: special,\r\n                            4: special2,\r\n                            5: data,\r\n                            6: seriesIndex,\r\n                            7: dataIndex\r\n                        },\r\n                        this._curTicket,\r\n                        this._setContent\r\n                    );\r\n                }\r\n                else if (typeof formatter === 'string') {\r\n                    this._curTicket = NaN;\r\n                    formatter = formatter.replace('{a}', '{a0}')\r\n                                         .replace('{b}', '{b0}')\r\n                                         .replace('{c}', '{c0}');\r\n                    formatter = formatter.replace('{a0}', this._encodeHTML(serie.name || ''))\r\n                                         .replace('{b0}', this._encodeHTML(name))\r\n                                         .replace(\r\n                                             '{c0}',\r\n                                             value instanceof Array ? value : this.numAddCommas(value)\r\n                                         );\r\n    \r\n                    formatter = formatter.replace('{d}', '{d0}')\r\n                                         .replace('{d0}', special || '');\r\n                    formatter = formatter.replace('{e}', '{e0}')\r\n                                         .replace(\r\n                                             '{e0}',\r\n                                             ecData.get(this._curTarget, 'special2') || ''\r\n                                         );\r\n    \r\n                    this._tDom.innerHTML = formatter;\r\n                }\r\n                else {\r\n                    this._curTicket = NaN;\r\n                    if (serie.type === ecConfig.CHART_TYPE_RADAR && special) {\r\n                        this._tDom.innerHTML = this._itemFormatter.radar.call(\r\n                            this, serie, name, value, special\r\n                        );\r\n                    }\r\n                    // chord 处理暂时跟 force 一样\r\n                    // else if (serie.type === ecConfig.CHART_TYPE_CHORD) {\r\n                    //     this._tDom.innerHTML = this._itemFormatter.chord.call(\r\n                    //         this, serie, name, value, special, special2\r\n                    //     );\r\n                    // }\r\n                    else if (serie.type === ecConfig.CHART_TYPE_EVENTRIVER) {\r\n                        this._tDom.innerHTML = this._itemFormatter.eventRiver.call(\r\n                            this, serie, name, value, data\r\n                        );\r\n                    }\r\n                    else {\r\n                        this._tDom.innerHTML = ''\r\n                            + (serie.name != null ? (this._encodeHTML(serie.name) + '<br/>') : '')\r\n                            + (name === '' ? '' : (this._encodeHTML(name) + ' : '))\r\n                            + (value instanceof Array ? value : this.numAddCommas(value));\r\n                    }\r\n                }\r\n            }\r\n\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            if (this.deepQuery(queryTarget, 'tooltip.axisPointer.show') \r\n                && this.component.grid\r\n            ) {\r\n                this._styleAxisPointer(\r\n                    [serie],\r\n                    this.component.grid.getX(), y, \r\n                    this.component.grid.getXend(), y,\r\n                    0, x, y\r\n                );\r\n            }\r\n            else {\r\n                this._hide();\r\n            }\r\n            \r\n            // don't modify, just false, showContent == undefined == true\r\n            if (showContent === false || !this.option.tooltip.showContent) {\r\n                // 只用tooltip的行为，不显示主体\r\n                return;\r\n            }\r\n            \r\n            if (!this.hasAppend) {\r\n                this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                this.dom.firstChild.appendChild(this._tDom);\r\n                this.hasAppend = true;\r\n            }\r\n            \r\n            this._show(position, x + 20, y - 20, specialCssText);\r\n        },\r\n\r\n        _itemFormatter: {\r\n            radar: function(serie, name, value, indicator){\r\n                var html = '';\r\n                html += this._encodeHTML(name === '' ? (serie.name || '') : name);\r\n                html += html === '' ? '' : '<br />';\r\n                for (var i = 0 ; i < indicator.length; i ++) {\r\n                    html += this._encodeHTML(indicator[i].text) + ' : ' \r\n                            + this.numAddCommas(value[i]) + '<br />';\r\n                }\r\n                return html;\r\n            },\r\n            chord: function(serie, name, value, special, special2) {\r\n                if (special2 == null) {\r\n                    // 外环上\r\n                    return this._encodeHTML(name) + ' (' + this.numAddCommas(value) + ')';\r\n                }\r\n                else {\r\n                    var name1 = this._encodeHTML(name);\r\n                    var name2 = this._encodeHTML(special);\r\n                    // 内部弦上\r\n                    return ''\r\n                        + (serie.name != null ? (this._encodeHTML(serie.name) + '<br/>') : '')\r\n                        + name1 + ' -> ' + name2 \r\n                        + ' (' + this.numAddCommas(value) + ')'\r\n                        + '<br />'\r\n                        + name2 + ' -> ' + name1\r\n                        + ' (' + this.numAddCommas(special2) + ')';\r\n                }\r\n            },\r\n            eventRiver: function(serie, name, value, data) {\r\n                var html = '';\r\n                html += this._encodeHTML(serie.name === '' ? '' : (serie.name + ' : ') );\r\n                html += this._encodeHTML(name);\r\n                html += html === '' ? '' : '<br />';\r\n                data = data.evolution;\r\n                for (var i = 0, l = data.length; i < l; i++) {\r\n                    html += '<div style=\"padding-top:5px;\">';\r\n                    if (!data[i].detail) {\r\n                        continue;\r\n                    }\r\n                    if (data[i].detail.img) {\r\n                        html += '<img src=\"' + data[i].detail.img \r\n                                + '\" style=\"float:left;width:40px;height:40px;\">';\r\n                    }\r\n                    html += '<div style=\"margin-left:45px;\">' + data[i].time + '<br/>';\r\n                    html += '<a href=\"' + data[i].detail.link + '\" target=\"_blank\">';\r\n                    html += data[i].detail.text + '</a></div>';\r\n                    html += '</div>';\r\n                }\r\n                return html;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 设置坐标轴指示器样式 \r\n         */\r\n        _styleAxisPointer: function (seriesArray, xStart, yStart, xEnd, yEnd, gap, x, y) {\r\n            if (seriesArray.length > 0) {\r\n                var queryTarget;\r\n                var curType;\r\n                var axisPointer = this.option.tooltip.axisPointer;\r\n                var pointType = axisPointer.type;\r\n                var style = {\r\n                    line: {},\r\n                    cross: {},\r\n                    shadow: {}\r\n                };\r\n                for (var pType in style) {\r\n                    style[pType].color = axisPointer[pType + 'Style'].color;\r\n                    style[pType].width = axisPointer[pType + 'Style'].width;\r\n                    style[pType].type = axisPointer[pType + 'Style'].type;\r\n                }\r\n                for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                    //if (this.deepQuery([seriesArray[i], this.option], 'tooltip.trigger') === 'axis') {\r\n                        queryTarget = seriesArray[i];\r\n                        curType = this.query(queryTarget, 'tooltip.axisPointer.type');\r\n                        pointType = curType || pointType; \r\n                        if (curType) {\r\n                            style[curType].color = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.color'\r\n                            ) || style[curType].color;\r\n                            style[curType].width = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.width'\r\n                            ) || style[curType].width;\r\n                            style[curType].type = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.type'\r\n                            ) || style[curType].type;\r\n                        }\r\n                    //}\r\n                }\r\n                \r\n                if (pointType === 'line') {\r\n                    var lineWidth = style.line.width;\r\n                    var isVertical = xStart == xEnd;\r\n                    this._axisLineShape.style = {\r\n                        xStart: isVertical ? this.subPixelOptimize(xStart, lineWidth) : xStart,\r\n                        yStart: isVertical ? yStart : this.subPixelOptimize(yStart, lineWidth),\r\n                        xEnd: isVertical ? this.subPixelOptimize(xEnd, lineWidth) : xEnd,\r\n                        yEnd: isVertical ? yEnd : this.subPixelOptimize(yEnd, lineWidth),\r\n                        strokeColor: style.line.color,\r\n                        lineWidth: lineWidth,\r\n                        lineType: style.line.type\r\n                    };\r\n                    this._axisLineShape.invisible = false;\r\n                    this.zr.modShape(this._axisLineShape.id);\r\n                }\r\n                else if (pointType === 'cross') {\r\n                    var crossWidth = style.cross.width;\r\n                    this._axisCrossShape.style = {\r\n                        brushType: 'stroke',\r\n                        rect: this.component.grid.getArea(),\r\n                        x: this.subPixelOptimize(x, crossWidth),\r\n                        y: this.subPixelOptimize(y, crossWidth),\r\n                        text: ('( ' \r\n                               + this.component.xAxis.getAxis(0).getValueFromCoord(x)\r\n                               + ' , '\r\n                               + this.component.yAxis.getAxis(0).getValueFromCoord(y) \r\n                               + ' )'\r\n                              ).replace('  , ', ' ').replace(' ,  ', ' '),\r\n                        textPosition: 'specific',\r\n                        strokeColor: style.cross.color,\r\n                        lineWidth: crossWidth,\r\n                        lineType: style.cross.type\r\n                    };\r\n                    if (this.component.grid.getXend() - x > 100) {          // 右侧有空间\r\n                        this._axisCrossShape.style.textAlign = 'left';\r\n                        this._axisCrossShape.style.textX = x + 10;\r\n                    }\r\n                    else {\r\n                        this._axisCrossShape.style.textAlign = 'right';\r\n                        this._axisCrossShape.style.textX = x - 10;\r\n                    }\r\n                    if (y - this.component.grid.getY() > 50) {             // 上方有空间\r\n                        this._axisCrossShape.style.textBaseline = 'bottom';\r\n                        this._axisCrossShape.style.textY = y - 10;\r\n                    }\r\n                    else {\r\n                        this._axisCrossShape.style.textBaseline = 'top';\r\n                        this._axisCrossShape.style.textY = y + 10;\r\n                    }\r\n                    this._axisCrossShape.invisible = false;\r\n                    this.zr.modShape(this._axisCrossShape.id);\r\n                }\r\n                else if (pointType === 'shadow') {\r\n                    if (style.shadow.width == null \r\n                        || style.shadow.width === 'auto'\r\n                        || isNaN(style.shadow.width)\r\n                    ) {\r\n                        style.shadow.width = gap;\r\n                    }\r\n                    if (xStart === xEnd) {\r\n                        // 纵向\r\n                        if (Math.abs(this.component.grid.getX() - xStart) < 2) {\r\n                            // 最左边\r\n                            style.shadow.width /= 2;\r\n                            xStart = xEnd = xEnd + style.shadow.width / 2;\r\n                        }\r\n                        else if (Math.abs(this.component.grid.getXend() - xStart) < 2) {\r\n                            // 最右边\r\n                            style.shadow.width /= 2;\r\n                            xStart = xEnd = xEnd - style.shadow.width / 2;\r\n                        }\r\n                    }\r\n                    else if (yStart === yEnd) {\r\n                        // 横向\r\n                        if (Math.abs(this.component.grid.getY() - yStart) < 2) {\r\n                            // 最上边\r\n                            style.shadow.width /= 2;\r\n                            yStart = yEnd = yEnd + style.shadow.width / 2;\r\n                        }\r\n                        else if (Math.abs(this.component.grid.getYend() - yStart) < 2) {\r\n                            // 最右边\r\n                            style.shadow.width /= 2;\r\n                            yStart = yEnd = yEnd - style.shadow.width / 2;\r\n                        }\r\n                    }\r\n                    this._axisShadowShape.style = {\r\n                        xStart: xStart,\r\n                        yStart: yStart,\r\n                        xEnd: xEnd,\r\n                        yEnd: yEnd,\r\n                        strokeColor: style.shadow.color,\r\n                        lineWidth: style.shadow.width\r\n                    };\r\n                    this._axisShadowShape.invisible = false;\r\n                    this.zr.modShape(this._axisShadowShape.id);\r\n                }\r\n                this.zr.refreshNextFrame();\r\n            }\r\n        },\r\n\r\n        __onmousemove: function (param) {\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            if (this._mousein && this._enterable) {\r\n                return;\r\n            }\r\n            var target = param.target;\r\n            var mx = zrEvent.getX(param.event);\r\n            var my = zrEvent.getY(param.event);\r\n            if (!target) {\r\n                // 判断是否落到直角系里，axis触发的tooltip\r\n                this._curTarget = false;\r\n                this._event = param.event;\r\n                // this._event._target = this._event.target || this._event.toElement;\r\n                this._event.zrenderX = mx;\r\n                this._event.zrenderY = my;\r\n                if (this._needAxisTrigger \r\n                    && this.component.grid \r\n                    && zrArea.isInside(rectangleInstance, this.component.grid.getArea(), mx, my)\r\n                ) {\r\n                    this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n                }\r\n                else if (this._needAxisTrigger \r\n                        && this.component.polar \r\n                        && this.component.polar.isInside([mx, my]) != -1\r\n                ) {\r\n                    this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n                }\r\n                else {\r\n                    !this._event.connectTrigger && this.messageCenter.dispatch(\r\n                        ecConfig.EVENT.TOOLTIP_OUT_GRID,\r\n                        this._event,\r\n                        null,\r\n                        this.myChart\r\n                    );\r\n                    this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                }\r\n            }\r\n            else {\r\n                this._curTarget = target;\r\n                this._event = param.event;\r\n                // this._event._target = this._event.target || this._event.toElement;\r\n                this._event.zrenderX = mx;\r\n                this._event.zrenderY = my;\r\n                var polarIndex;\r\n                if (this._needAxisTrigger \r\n                    && this.component.polar \r\n                    && (polarIndex = this.component.polar.isInside([mx, my])) != -1\r\n                ) {\r\n                    // 看用这个polar的系列数据是否是axis触发，如果是设置_curTarget为nul\r\n                    var series = this.option.series;\r\n                    for (var i = 0, l = series.length; i < l; i++) {\r\n                        if (series[i].polarIndex === polarIndex\r\n                            && this.deepQuery(\r\n                                   [series[i], this.option], 'tooltip.trigger'\r\n                               ) === 'axis'\r\n                        ) {\r\n                            this._curTarget = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                   \r\n                }\r\n                this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * zrender事件响应：鼠标离开绘图区域\r\n         */\r\n        __onglobalout: function () {\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n        },\r\n        \r\n        /**\r\n         * 异步回调填充内容\r\n         */\r\n        __setContent: function (ticket, content) {\r\n            if (!this._tDom) {\r\n                return;\r\n            }\r\n            if (ticket === this._curTicket) {\r\n                this._tDom.innerHTML = content;\r\n            }\r\n            \r\n            setTimeout(this._refixed, 20);\r\n        },\r\n\r\n        ontooltipHover: function (param, tipShape) {\r\n            if (!this._lastTipShape // 不存在或者存在但dataIndex发生变化才需要重绘\r\n                || (this._lastTipShape && this._lastTipShape.dataIndex != param.dataIndex)\r\n            ) {\r\n                if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                    this.zr.delShape(this._lastTipShape.tipShape);\r\n                    this.shapeList.length = 2;\r\n                }\r\n                for (var i = 0, l = tipShape.length; i < l; i++) {\r\n                    tipShape[i].zlevel = this.getZlevelBase();\r\n                    tipShape[i].z = this.getZBase();\r\n                    \r\n                    tipShape[i].style = zrShapeBase.prototype.getHighlightStyle(\r\n                        tipShape[i].style,\r\n                        tipShape[i].highlightStyle\r\n                    );\r\n                    tipShape[i].draggable = false;\r\n                    tipShape[i].hoverable = false;\r\n                    tipShape[i].clickable = false;\r\n                    tipShape[i].ondragend = null;\r\n                    tipShape[i].ondragover = null;\r\n                    tipShape[i].ondrop = null;\r\n                    this.shapeList.push(tipShape[i]);\r\n                    this.zr.addShape(tipShape[i]);\r\n                }\r\n                this._lastTipShape = {\r\n                    dataIndex: param.dataIndex,\r\n                    tipShape: tipShape\r\n                };\r\n            }\r\n        },\r\n        \r\n        ondragend: function () {\r\n            this._hide();\r\n        },\r\n        \r\n        /**\r\n         * 图例选择\r\n         */\r\n        onlegendSelected: function (param) {\r\n            this._selectedMap = param.selected;\r\n        },\r\n        \r\n        _setSelectedMap: function () {\r\n            if (this.component.legend) {\r\n                this._selectedMap = zrUtil.clone(this.component.legend.getSelectedMap());\r\n            }\r\n            else {\r\n                this._selectedMap = {};\r\n            }\r\n        },\r\n        \r\n        _isSelected: function (itemName) {\r\n            if (this._selectedMap[itemName] != null) {\r\n                return this._selectedMap[itemName];\r\n            }\r\n            else {\r\n                return true; // 没在legend里定义的都为true啊~\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 模拟tooltip hover方法\r\n         * {object} params  参数\r\n         *          {seriesIndex: 0, seriesName:'', dataInex:0} line、bar、scatter、k、radar\r\n         *          {seriesIndex: 0, seriesName:'', name:''} map、pie、chord\r\n         */\r\n        showTip: function (params) {\r\n            if (!params) {\r\n                return;\r\n            }\r\n            \r\n            var seriesIndex;\r\n            var series = this.option.series;\r\n            if (params.seriesIndex != null) {\r\n                seriesIndex = params.seriesIndex;\r\n            }\r\n            else {\r\n                var seriesName = params.seriesName;\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (series[i].name === seriesName) {\r\n                        seriesIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            var serie = series[seriesIndex];\r\n            if (serie == null) {\r\n                return;\r\n            }\r\n            var chart = this.myChart.chart[serie.type];\r\n            var isAxisTrigger = this.deepQuery(\r\n                                    [serie, this.option], 'tooltip.trigger'\r\n                                ) === 'axis';\r\n            \r\n            if (!chart) {\r\n                return;\r\n            }\r\n            \r\n            if (isAxisTrigger) {\r\n                // axis trigger\r\n                var dataIndex = params.dataIndex;\r\n                switch (chart.type) {\r\n                    case ecConfig.CHART_TYPE_LINE :\r\n                    case ecConfig.CHART_TYPE_BAR :\r\n                    case ecConfig.CHART_TYPE_K :\r\n                    case ecConfig.CHART_TYPE_RADAR :\r\n                        if (this.component.polar == null \r\n                            || serie.data[0].value.length <= dataIndex\r\n                        ) {\r\n                            return;\r\n                        }\r\n                        var polarIndex = serie.polarIndex || 0;\r\n                        var vector = this.component.polar.getVector(\r\n                            polarIndex, dataIndex, 'max'\r\n                        );\r\n                        this._event = {\r\n                            zrenderX: vector[0],\r\n                            zrenderY: vector[1]\r\n                        };\r\n                        this._showPolarTrigger(\r\n                            polarIndex, \r\n                            dataIndex\r\n                        );\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                // item trigger\r\n                var shapeList = chart.shapeList;\r\n                var x;\r\n                var y;\r\n                switch (chart.type) {\r\n                    case ecConfig.CHART_TYPE_LINE :\r\n                    case ecConfig.CHART_TYPE_BAR :\r\n                    case ecConfig.CHART_TYPE_K :\r\n                    case ecConfig.CHART_TYPE_TREEMAP :\r\n                    case ecConfig.CHART_TYPE_SCATTER :\r\n                        var dataIndex = params.dataIndex;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i]._mark == null\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'dataIndex') == dataIndex\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = shapeList[i].style.x;\r\n                                y = chart.type != ecConfig.CHART_TYPE_K \r\n                                    ? shapeList[i].style.y : shapeList[i].style.y[0];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_RADAR :\r\n                        var dataIndex = params.dataIndex;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'polygon'\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'dataIndex') == dataIndex\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var vector = this.component.polar.getCenter(\r\n                                    serie.polarIndex || 0\r\n                                );\r\n                                x = vector[0];\r\n                                y = vector[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_PIE :\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'sector'\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var style = this._curTarget.style;\r\n                                var midAngle = (style.startAngle + style.endAngle) \r\n                                                / 2 * Math.PI / 180;\r\n                                x = this._curTarget.style.x + Math.cos(midAngle) * style.r / 1.5;\r\n                                y = this._curTarget.style.y - Math.sin(midAngle) * style.r / 1.5;\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_MAP :\r\n                        var name = params.name;\r\n                        var mapType = serie.mapType;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'text'\r\n                                && shapeList[i]._mapType === mapType\r\n                                && shapeList[i].style._name === name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = this._curTarget.style.x + this._curTarget.position[0];\r\n                                y = this._curTarget.style.y + this._curTarget.position[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_CHORD:\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'sector'\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var style = this._curTarget.style;\r\n                                var midAngle = (style.startAngle + style.endAngle) \r\n                                                / 2 * Math.PI / 180;\r\n                                x = this._curTarget.style.x + Math.cos(midAngle) * (style.r - 2);\r\n                                y = this._curTarget.style.y - Math.sin(midAngle) * (style.r - 2);\r\n                                this.zr.trigger(\r\n                                    zrConfig.EVENT.MOUSEMOVE,\r\n                                    {\r\n                                        zrenderX: x,\r\n                                        zrenderY: y\r\n                                    }\r\n                                );\r\n                                return;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_FORCE:\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'circle'\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = this._curTarget.position[0];\r\n                                y = this._curTarget.position[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                if (x != null && y != null) {\r\n                    this._event = {\r\n                        zrenderX: x,\r\n                        zrenderY: y\r\n                    };\r\n                    this.zr.addHoverShape(this._curTarget);\r\n                    this.zr.refreshHover();\r\n                    this._showItemTrigger();\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 关闭，公开接口 \r\n         */\r\n        hideTip: function () {\r\n            this._hide();\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            // this._selectedMap;\r\n            // this._defaultCssText;    // css样式缓存\r\n            // this._needAxisTrigger;   // 坐标轴触发\r\n            // this._curTarget;\r\n            // this._event;\r\n            // this._curTicket;         // 异步回调标识，用来区分多个请求\r\n            \r\n            // 缓存一些高宽数据\r\n            this._zrHeight = this.zr.getHeight();\r\n            this._zrWidth = this.zr.getWidth();\r\n            \r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n            }\r\n            this._lastTipShape = false;\r\n            this.shapeList.length = 2;\r\n            \r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n            this._lastItemTriggerId = -1;\r\n            \r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.option.tooltip = this.reformOption(this.option.tooltip);\r\n                \r\n                this.option.tooltip.textStyle = zrUtil.merge(\r\n                    this.option.tooltip.textStyle,\r\n                    this.ecTheme.textStyle\r\n                );\r\n                this._needAxisTrigger = false;\r\n                if (this.option.tooltip.trigger === 'axis') {\r\n                    this._needAxisTrigger = true;\r\n                }\r\n    \r\n                var series = this.option.series;\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (this.query(series[i], 'tooltip.trigger') === 'axis') {\r\n                        this._needAxisTrigger = true;\r\n                        break;\r\n                    }\r\n                }\r\n                // this._hidingTicket;\r\n                // this._showingTicket;\r\n                this._showDelay = this.option.tooltip.showDelay; // 显示延迟\r\n                this._hideDelay = this.option.tooltip.hideDelay; // 隐藏延迟\r\n                this._defaultCssText = this._style(this.option.tooltip);\r\n                \r\n                this._setSelectedMap();\r\n                this._axisLineWidth = this.option.tooltip.axisPointer.lineStyle.width;\r\n                this._enterable = this.option.tooltip.enterable;\r\n\r\n                if (! this._enterable && this._tDom.className.indexOf(zrConfig.elementClassName) < 0) {\r\n                    this._tDom.className += ' ' + zrConfig.elementClassName;\r\n                }\r\n            }\r\n            if (this.showing) {\r\n                var self = this;\r\n                setTimeout(function(){\r\n                    self.zr.trigger(zrConfig.EVENT.MOUSEMOVE, self.zr.handler._event);\r\n                },50);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用，重载基类方法\r\n         */\r\n        onbeforDispose: function () {\r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n            }\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            this.zr.un(zrConfig.EVENT.GLOBALOUT, this._onglobalout);\r\n            \r\n            if (this.hasAppend && !!this.dom.firstChild) {\r\n                this.dom.firstChild.removeChild(this._tDom);\r\n            }\r\n            this._tDom = null;\r\n        },\r\n        \r\n        /**\r\n         * html转码的方法\r\n         */\r\n        _encodeHTML: function (source) {\r\n            return String(source)\r\n                        .replace(/&/g, '&amp;')\r\n                        .replace(/</g, '&lt;')\r\n                        .replace(/>/g, '&gt;')\r\n                        .replace(/\"/g, '&quot;')\r\n                        .replace(/'/g, '&#39;');\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Tooltip, Base);\r\n    \r\n    __webpack_require__(6).define('tooltip', Tooltip);\r\n\r\n    return Tooltip;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：十字准星\r\n * 可配图形属性：\r\n   {\r\n       // 基础属性\r\n       shape  : 'cross',       // 必须，shape类标识，需要显式指定\r\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\r\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\r\n       invisible : {boolean},   // 默认为false，是否可见\r\n\r\n       // 样式属性，默认状态样式样式属性\r\n       style  : {\r\n           rect      : {Object},  // 必须，对角框\r\n           x         : {number},  // 必须，横坐标\r\n           y         : {number},  // 必须，纵坐标\r\n       },\r\n\r\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\r\n       highlightStyle : {\r\n           // 同style\r\n       }\r\n\r\n       // 交互属性，详见shape.Base\r\n\r\n       // 事件属性，详见shape.Base\r\n   }\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(1);\r\n    var LineShape = __webpack_require__(18);\r\n    var zrUtil = __webpack_require__(0);\r\n\r\n    function Cross(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Cross.prototype =  {\r\n        type : 'cross',\r\n\r\n        /**\r\n         * 创建矩形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            var rect = style.rect;\r\n            style.xStart = rect.x;\r\n            style.xEnd = rect.x + rect.width;\r\n            style.yStart = style.yEnd = style.y;\r\n            LineShape.prototype.buildPath(ctx, style);\r\n            style.xStart = style.xEnd = style.x;\r\n            style.yStart = rect.y;\r\n            style.yEnd = rect.y + rect.height;\r\n            LineShape.prototype.buildPath(ctx, style);\r\n        },\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            return style.rect;\r\n        },\r\n\r\n        isCover : __webpack_require__(28)\r\n    };\r\n\r\n    zrUtil.inherits(Cross, Base);\r\n\r\n    return Cross;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件：图例\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(8);\r\n    \r\n    // 图形依赖\r\n    var TextShape = __webpack_require__(16);\r\n    var RectangleShape = __webpack_require__(7);\r\n    var SectorShape = __webpack_require__(30);\r\n    //var BeziercurveShape = require('zrenderjs/shape/Beziercurve');\r\n    var IconShape = __webpack_require__(13);\r\n    var CandleShape = __webpack_require__(80);\r\n    \r\n    var ecConfig = __webpack_require__(4);\r\n     // 图例\r\n    ecConfig.legend = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 4,                       // 二级层叠\r\n        show: true,\r\n        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：\r\n                                   // 'horizontal' ¦ 'vertical'\r\n        x: 'center',               // 水平安放位置，默认为全图居中，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: '#ccc',       // 图例边框颜色\r\n        borderWidth: 0,            // 图例边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 图例内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，\r\n                                   // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n        itemWidth: 20,             // 图例图形宽度\r\n        itemHeight: 14,            // 图例图形高度\r\n        textStyle: {\r\n            color: '#333'          // 图例文字颜色\r\n        },\r\n        selectedMode: true         // 选择模式，默认开启图例开关\r\n        // selected: null,         // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\r\n        // data: [],               // 图例内容（详见legend.data，数组中每一项代表一个item\r\n    };\r\n\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrArea = __webpack_require__(2);\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     */\r\n    function Legend(ecTheme, messageCenter, zr, option, myChart) {\r\n        if (!this.query(option, 'legend.data')) {\r\n            console.error('option.legend.data has not been defined.');\r\n            return;\r\n        }\r\n        \r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        var self = this;\r\n        self._legendSelected = function (param) {\r\n            self.__legendSelected(param);\r\n        };\r\n        self._dispatchHoverLink = function(param) {\r\n            return self.__dispatchHoverLink(param);\r\n        };\r\n        \r\n        this._colorIndex = 0;\r\n        this._colorMap = {};\r\n        this._selectedMap = {};\r\n        this._hasDataMap = {};\r\n        \r\n        this.refresh(option);\r\n    }\r\n    \r\n    Legend.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_LEGEND,\r\n        _buildShape: function () {\r\n            if (!this.legendOption.show) {\r\n                return;\r\n            }\r\n            // 图例元素组的位置参数，通过计算所得x, y, width, height\r\n            this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n            this._buildBackground();\r\n            this._buildItem();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有图例元素\r\n         */\r\n        _buildItem: function () {\r\n            var data = this.legendOption.data;\r\n            var dataLength = data.length;\r\n            var itemName;\r\n            var itemType;\r\n            var itemShape;\r\n            var textShape;\r\n            var textStyle  = this.legendOption.textStyle;\r\n            var dataTextStyle;\r\n            var dataFont;\r\n            var formattedName;\r\n\r\n            var zrWidth = this.zr.getWidth();\r\n            var zrHeight = this.zr.getHeight();\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemWidth = this.legendOption.itemWidth;\r\n            var itemHeight = this.legendOption.itemHeight;\r\n            var itemGap = this.legendOption.itemGap;\r\n            var color;\r\n\r\n            if (this.legendOption.orient === 'vertical' && this.legendOption.x === 'right') {\r\n                lastX = this._itemGroupLocation.x\r\n                        + this._itemGroupLocation.width\r\n                        - itemWidth;\r\n            }\r\n\r\n            for (var i = 0; i < dataLength; i++) {\r\n                dataTextStyle = zrUtil.merge(\r\n                    data[i].textStyle || {},\r\n                    textStyle\r\n                );\r\n                dataFont = this.getFont(dataTextStyle);\r\n                \r\n                itemName = this._getName(data[i]);\r\n                formattedName = this._getFormatterName(itemName);\r\n                if (itemName === '') { // 别帮我代码优化\r\n                    if (this.legendOption.orient === 'horizontal') {\r\n                        lastX = this._itemGroupLocation.x;\r\n                        lastY += itemHeight + itemGap;\r\n                    }\r\n                    else {\r\n                        this.legendOption.x === 'right'\r\n                            ? lastX -= this._itemGroupLocation.maxWidth + itemGap\r\n                            : lastX += this._itemGroupLocation.maxWidth + itemGap;\r\n                        lastY = this._itemGroupLocation.y;\r\n                    }\r\n                    continue;\r\n                }\r\n                itemType = data[i].icon || this._getSomethingByName(itemName).type;\r\n                \r\n                color = this.getColor(itemName);\r\n\r\n                if (this.legendOption.orient === 'horizontal') {\r\n                    if (zrWidth - lastX < 200   // 最后200px做分行预判\r\n                        && (itemWidth + 5 + zrArea.getTextWidth(formattedName, dataFont)\r\n                            // 分行的最后一个不用算itemGap\r\n                            + (i === dataLength - 1 || data[i + 1] === '' ? 0 : itemGap)\r\n                           ) >= zrWidth - lastX\r\n                    ) {\r\n                        lastX = this._itemGroupLocation.x;\r\n                        lastY += itemHeight + itemGap;\r\n                    }\r\n                }\r\n                else {\r\n                    if (zrHeight - lastY < 200   // 最后200px做分行预判\r\n                        && (itemHeight\r\n                            // 分行的最后一个不用算itemGap\r\n                            + (i === dataLength - 1 || data[i + 1] === '' ? 0 : itemGap)\r\n                           ) \r\n                           >= zrHeight - lastY\r\n                    ) {\r\n                        this.legendOption.x === 'right'\r\n                        ? lastX -= this._itemGroupLocation.maxWidth + itemGap\r\n                        : lastX += this._itemGroupLocation.maxWidth + itemGap;\r\n                        lastY = this._itemGroupLocation.y;\r\n                    }\r\n                }\r\n\r\n                // 图形\r\n                itemShape = this._getItemShapeByType(\r\n                    lastX, lastY,\r\n                    itemWidth, itemHeight,\r\n                    (this._selectedMap[itemName] && this._hasDataMap[itemName] ? color : '#ccc'),\r\n                    itemType,\r\n                    color\r\n                );\r\n                itemShape._name = itemName;\r\n                itemShape = new IconShape(itemShape);\r\n\r\n                // 文字\r\n                textShape = {\r\n                    // shape: 'text',\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        x: lastX + itemWidth + 5,\r\n                        y: lastY + itemHeight / 2,\r\n                        color: this._selectedMap[itemName]\r\n                                ? (dataTextStyle.color === 'auto' ? color : dataTextStyle.color)\r\n                                : '#ccc',\r\n                        text: formattedName,\r\n                        textFont: dataFont,\r\n                        textBaseline: 'middle'\r\n                    },\r\n                    highlightStyle: {\r\n                        color: color,\r\n                        brushType: 'fill'\r\n                    },\r\n                    hoverable: !!this.legendOption.selectedMode,\r\n                    clickable: !!this.legendOption.selectedMode\r\n                };\r\n\r\n                if (this.legendOption.orient === 'vertical'\r\n                    && this.legendOption.x === 'right'\r\n                ) {\r\n                    textShape.style.x -= (itemWidth + 10);\r\n                    textShape.style.textAlign = 'right';\r\n                }\r\n\r\n                textShape._name = itemName;\r\n                textShape = new TextShape(textShape);\r\n                \r\n                if (this.legendOption.selectedMode) {\r\n                    itemShape.onclick = textShape.onclick = this._legendSelected;\r\n                    itemShape.onmouseover =  textShape.onmouseover = this._dispatchHoverLink;\r\n                    itemShape.hoverConnect = textShape.id;\r\n                    textShape.hoverConnect = itemShape.id;\r\n                }\r\n                this.shapeList.push(itemShape);\r\n                this.shapeList.push(textShape);\r\n\r\n                if (this.legendOption.orient === 'horizontal') {\r\n                    lastX += itemWidth + 5\r\n                             + zrArea.getTextWidth(formattedName, dataFont)\r\n                             + itemGap;\r\n                }\r\n                else {\r\n                    lastY += itemHeight + itemGap;\r\n                }\r\n            }\r\n        \r\n            if (this.legendOption.orient === 'horizontal'\r\n                && this.legendOption.x === 'center'\r\n                && lastY != this._itemGroupLocation.y\r\n            ) {\r\n                // 多行橫排居中优化\r\n                this._mLineOptimize();\r\n            }\r\n        },\r\n        \r\n        _getName: function(data) {\r\n            return typeof data.name != 'undefined' ? data.name : data;\r\n        },\r\n\r\n        _getFormatterName: function(itemName) {\r\n            var formatter = this.legendOption.formatter;\r\n            var formattedName;\r\n            if (typeof formatter === 'function') {\r\n                formattedName = formatter.call(this.myChart, itemName);\r\n            }\r\n            else if (typeof formatter === 'string') {\r\n                formattedName = formatter.replace('{name}', itemName);\r\n            }\r\n            else {\r\n                formattedName = itemName;\r\n            }\r\n            return formattedName;\r\n        },\r\n\r\n        _getFormatterNameFromData: function(data) {\r\n            var itemName = this._getName(data);\r\n            return this._getFormatterName(itemName);\r\n        },\r\n        \r\n        // 多行橫排居中优化\r\n        _mLineOptimize: function () {\r\n            var lineOffsetArray = []; // 每行宽度\r\n            var lastX = this._itemGroupLocation.x;\r\n            for (var i = 2, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].style.x === lastX) {\r\n                    lineOffsetArray.push(\r\n                        (\r\n                            this._itemGroupLocation.width \r\n                            - (\r\n                                this.shapeList[i - 1].style.x\r\n                                + zrArea.getTextWidth(\r\n                                      this.shapeList[i - 1].style.text,\r\n                                      this.shapeList[i - 1].style.textFont\r\n                                  )\r\n                                - lastX\r\n                            )\r\n                        ) / 2\r\n                    );\r\n                }\r\n                else if (i === l - 1) {\r\n                    lineOffsetArray.push(\r\n                        (\r\n                            this._itemGroupLocation.width \r\n                            - (\r\n                                this.shapeList[i].style.x\r\n                                + zrArea.getTextWidth(\r\n                                      this.shapeList[i].style.text,\r\n                                      this.shapeList[i].style.textFont\r\n                                  )\r\n                                - lastX\r\n                            )\r\n                        ) / 2\r\n                    );\r\n                }\r\n            }\r\n            var curLineIndex = -1;\r\n            for (var i = 1, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].style.x === lastX) {\r\n                    curLineIndex++;\r\n                }\r\n                if (lineOffsetArray[curLineIndex] === 0) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    this.shapeList[i].style.x += lineOffsetArray[curLineIndex];\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var padding = this.reformCssArray(this.legendOption.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: this.legendOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: this.legendOption.backgroundColor,\r\n                    strokeColor: this.legendOption.borderColor,\r\n                    lineWidth: this.legendOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算图例实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var data = this.legendOption.data;\r\n            var dataLength = data.length;\r\n            var itemGap = this.legendOption.itemGap;\r\n            var itemWidth = this.legendOption.itemWidth + 5; // 5px是图形和文字的间隔，不可配\r\n            var itemHeight = this.legendOption.itemHeight;\r\n            var textStyle  = this.legendOption.textStyle;\r\n            var font = this.getFont(textStyle);\r\n            var totalWidth = 0;\r\n            var totalHeight = 0;\r\n            var padding = this.reformCssArray(this.legendOption.padding);\r\n            var zrWidth = this.zr.getWidth() - padding[1] - padding[3];\r\n            var zrHeight = this.zr.getHeight() - padding[0] - padding[2];\r\n            \r\n            var temp = 0; // 宽高计算，用于多行判断\r\n            var maxWidth = 0; // 垂直布局有用\r\n            if (this.legendOption.orient === 'horizontal') {\r\n                // 水平布局，计算总宽度\r\n                totalHeight = itemHeight;\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    if (this._getName(data[i]) === '') {\r\n                        temp -= itemGap;\r\n                        totalWidth = Math.max(totalWidth, temp);\r\n                        totalHeight += itemHeight + itemGap;\r\n                        temp = 0;\r\n                        continue;\r\n                    }\r\n                    var tempTextWidth = zrArea.getTextWidth(\r\n                        this._getFormatterNameFromData(data[i]),\r\n                        data[i].textStyle \r\n                        ? this.getFont(zrUtil.merge(\r\n                            data[i].textStyle || {},\r\n                            textStyle\r\n                          ))\r\n                        : font\r\n                    );\r\n                    if (temp + itemWidth + tempTextWidth + itemGap > zrWidth) {\r\n                        // new line\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalWidth = Math.max(totalWidth, temp);\r\n                        totalHeight += itemHeight + itemGap;\r\n                        temp = 0;\r\n                    }\r\n                    else {\r\n                        temp += itemWidth + tempTextWidth + itemGap;\r\n                        totalWidth = Math.max(totalWidth, temp - itemGap);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // 垂直布局，计算总高度\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    maxWidth = Math.max(\r\n                        maxWidth,\r\n                        zrArea.getTextWidth(\r\n                            this._getFormatterNameFromData(data[i]),\r\n                            data[i].textStyle \r\n                            ? this.getFont(zrUtil.merge(\r\n                                  data[i].textStyle || {},\r\n                                  textStyle\r\n                              ))\r\n                            : font\r\n                        )\r\n                    );\r\n                }\r\n                maxWidth += itemWidth;\r\n                totalWidth = maxWidth;\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    if (this._getName(data[i]) === '') {\r\n                        totalWidth += maxWidth + itemGap;\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalHeight = Math.max(totalHeight, temp);\r\n                        temp = 0;\r\n                        continue;\r\n                    }\r\n                    if (temp + itemHeight + itemGap > zrHeight) {\r\n                        // new line\r\n                        totalWidth += maxWidth + itemGap;\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalHeight = Math.max(totalHeight, temp);\r\n                        temp = 0;\r\n                    }\r\n                    else {\r\n                        temp += itemHeight + itemGap;\r\n                        totalHeight = Math.max(totalHeight, temp - itemGap);\r\n                    }\r\n                }\r\n            }\r\n\r\n            zrWidth = this.zr.getWidth();\r\n            zrHeight = this.zr.getHeight();\r\n            var x;\r\n            switch (this.legendOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + this.legendOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - padding[3]\r\n                        - this.legendOption.borderWidth * 2;\r\n                    break;\r\n                default :\r\n                    x = this.parsePercent(this.legendOption.x, zrWidth);\r\n                    break;\r\n            }\r\n            \r\n            var y;\r\n            switch (this.legendOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + this.legendOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[0]\r\n                        - padding[2]\r\n                        - this.legendOption.borderWidth * 2;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = this.parsePercent(this.legendOption.y, zrHeight);\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight,\r\n                maxWidth: maxWidth\r\n            };\r\n        },\r\n\r\n        /**\r\n         * 根据名称返回series数据或data\r\n         */\r\n        _getSomethingByName: function (name) {\r\n            var series = this.option.series;\r\n            var data;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].name === name) {\r\n                    // 系列名称优先\r\n                    return {\r\n                        type: series[i].type,\r\n                        series: series[i],\r\n                        seriesIndex: i,\r\n                        data: null,\r\n                        dataIndex: -1\r\n                    };\r\n                }\r\n\r\n                if (\r\n                    series[i].type === ecConfig.CHART_TYPE_PIE \r\n                    || series[i].type === ecConfig.CHART_TYPE_RADAR\r\n                    || series[i].type === ecConfig.CHART_TYPE_CHORD\r\n                    || series[i].type === ecConfig.CHART_TYPE_FORCE\r\n                    || series[i].type === ecConfig.CHART_TYPE_FUNNEL\r\n                    || series[i].type === ecConfig.CHART_TYPE_TREEMAP\r\n                ) {\r\n                    data = series[i].categories || series[i].data || series[i].nodes;\r\n\r\n                    for (var j = 0, k = data.length; j < k; j++) {\r\n                        if (data[j].name === name) {\r\n                            return {\r\n                                type: series[i].type,\r\n                                series: series[i],\r\n                                seriesIndex: i,\r\n                                data: data[j],\r\n                                dataIndex: j\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                type: 'bar',\r\n                series: null,\r\n                seriesIndex: -1,\r\n                data: null,\r\n                dataIndex: -1\r\n            };\r\n        },\r\n        \r\n        _getItemShapeByType: function (x, y, width, height, color, itemType, defaultColor) {\r\n            var highlightColor = color === '#ccc' ? defaultColor : color;\r\n            var itemShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    iconType: 'legendicon' + itemType,\r\n                    x: x,\r\n                    y: y,\r\n                    width: width,\r\n                    height: height,\r\n                    color: color,\r\n                    strokeColor: color,\r\n                    lineWidth: 2\r\n                },\r\n                highlightStyle: {\r\n                    color: highlightColor,\r\n                    strokeColor: highlightColor,\r\n                    lineWidth: 1\r\n                },\r\n                hoverable: this.legendOption.selectedMode,\r\n                clickable: this.legendOption.selectedMode\r\n            };\r\n            \r\n            var imageLocation;\r\n            if (itemType.match('image')) {\r\n                var imageLocation = itemType.replace(\r\n                    new RegExp('^image:\\\\/\\\\/'), ''\r\n                );\r\n                itemType = 'image';\r\n            }\r\n            // 特殊设置\r\n            switch (itemType) {\r\n                case 'line':\r\n                    itemShape.style.brushType = 'stroke';\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    break;\r\n                case 'radar':\r\n                case 'venn':\r\n                case 'tree':\r\n                case 'treemap':\r\n                case 'scatter':\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    break;\r\n                case 'k':\r\n                    itemShape.style.brushType = 'both';\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    itemShape.highlightStyle.color =\r\n                    itemShape.style.color = this.deepQuery(\r\n                        [this.ecTheme, ecConfig], 'k.itemStyle.normal.color'\r\n                    ) || '#fff';\r\n                    itemShape.style.strokeColor = color != '#ccc' \r\n                        ? (\r\n                            this.deepQuery(\r\n                                [this.ecTheme, ecConfig], 'k.itemStyle.normal.lineStyle.color'\r\n                            ) || '#ff3200'\r\n                        )\r\n                        : color;\r\n                    break;\r\n                case 'image':\r\n                    itemShape.style.iconType = 'image';\r\n                    itemShape.style.image = imageLocation;\r\n                    if (color === '#ccc') {\r\n                        itemShape.style.opacity = 0.5;\r\n                    }\r\n                    break;\r\n            }\r\n            return itemShape;\r\n        },\r\n\r\n        __legendSelected: function (param) {\r\n            var itemName = param.target._name;\r\n            if (this.legendOption.selectedMode === 'single') {\r\n                for (var k in this._selectedMap) {\r\n                    this._selectedMap[k] = false;\r\n                }\r\n            }\r\n            this._selectedMap[itemName] = !this._selectedMap[itemName];\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_SELECTED,\r\n                param.event,\r\n                {\r\n                    selected: this._selectedMap,\r\n                    target: itemName\r\n                },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        /**\r\n         * 产生hover link事件 \r\n         */\r\n        __dispatchHoverLink : function(param) {\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_HOVERLINK,\r\n                param.event,\r\n                {\r\n                    target: param.target._name\r\n                },\r\n                this.myChart\r\n            );\r\n            return;\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption || this.option;\r\n                this.option.legend = this.reformOption(this.option.legend);\r\n                this.legendOption = this.option.legend;\r\n                \r\n                var data = this.legendOption.data || [];\r\n                var itemName;\r\n                var something;\r\n                var color;\r\n                var queryTarget;\r\n                if (this.legendOption.selected) {\r\n                    for (var k in this.legendOption.selected) {\r\n                        this._selectedMap[k] = typeof this._selectedMap[k] != 'undefined'\r\n                                               ? this._selectedMap[k]\r\n                                               : this.legendOption.selected[k];\r\n                    }\r\n                }\r\n                for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                    itemName = this._getName(data[i]);\r\n                    if (itemName === '') {\r\n                        continue;\r\n                    }\r\n                    something = this._getSomethingByName(itemName);\r\n                    if (!something.series) {\r\n                        this._hasDataMap[itemName] = false;\r\n                    } \r\n                    else {\r\n                        this._hasDataMap[itemName] = true;\r\n                        if (something.data\r\n                            && (something.type === ecConfig.CHART_TYPE_PIE\r\n                                || something.type === ecConfig.CHART_TYPE_FORCE\r\n                                || something.type === ecConfig.CHART_TYPE_FUNNEL)\r\n                        ) {\r\n                            queryTarget = [something.data, something.series];\r\n                        }\r\n                        else {\r\n                            queryTarget = [something.series];\r\n                        }\r\n                        \r\n                        color = this.getItemStyleColor(\r\n                            this.deepQuery(queryTarget, 'itemStyle.normal.color'),\r\n                            something.seriesIndex,\r\n                            something.dataIndex,\r\n                            something.data\r\n                        );\r\n                        if (color && something.type != ecConfig.CHART_TYPE_K) {\r\n                            this.setColor(itemName, color);\r\n                        }\r\n                        this._selectedMap[itemName] = \r\n                            this._selectedMap[itemName] != null\r\n                            ? this._selectedMap[itemName] : true; \r\n                    }\r\n                }\r\n            }\r\n            this.clear();\r\n            this._buildShape();\r\n        },\r\n        \r\n        getRelatedAmount: function(name) {\r\n            var amount = 0;\r\n            var series = this.option.series;\r\n            var data;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].name === name) {\r\n                    // 系列名称优先\r\n                    amount++;\r\n                }\r\n\r\n                if (\r\n                    series[i].type === ecConfig.CHART_TYPE_PIE \r\n                    || series[i].type === ecConfig.CHART_TYPE_RADAR\r\n                    || series[i].type === ecConfig.CHART_TYPE_CHORD\r\n                    || series[i].type === ecConfig.CHART_TYPE_FORCE\r\n                    || series[i].type === ecConfig.CHART_TYPE_FUNNEL\r\n                ) {\r\n                    data = series[i].type != ecConfig.CHART_TYPE_FORCE\r\n                           ? series[i].data         // 饼图、雷达图、和弦图得查找里面的数据名字\r\n                           : series[i].categories;  // 力导布局查找categories配置\r\n                    for (var j = 0, k = data.length; j < k; j++) {\r\n                        if (data[j].name === name && data[j].value != '-') {\r\n                            amount++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return amount;\r\n        },\r\n\r\n        setColor: function (legendName, color) {\r\n            this._colorMap[legendName] = color;\r\n        },\r\n\r\n        getColor: function (legendName) {\r\n            if (!this._colorMap[legendName]) {\r\n                this._colorMap[legendName] = this.zr.getColor(this._colorIndex++);\r\n            }\r\n            return this._colorMap[legendName];\r\n        },\r\n        \r\n        hasColor: function (legendName) {\r\n            return this._colorMap[legendName] ? this._colorMap[legendName] : false;\r\n        },\r\n\r\n        add: function (name, color){\r\n            var data = this.legendOption.data;\r\n            for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                if (this._getName(data[i]) === name) {\r\n                    // 已有就不重复加了\r\n                    return;\r\n                }\r\n            }\r\n            this.legendOption.data.push(name);\r\n            this.setColor(name,color);\r\n            this._selectedMap[name] = true;\r\n            this._hasDataMap[name] = true;\r\n        },\r\n\r\n        del: function (name){\r\n            var data = this.legendOption.data;\r\n            for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                if (this._getName(data[i]) === name) {\r\n                    return this.legendOption.data.splice(i, 1);\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 特殊图形元素回调设置\r\n         * @param {Object} name\r\n         * @param {Object} itemShape\r\n         */\r\n        getItemShape: function (name) {\r\n            if (name == null) {\r\n                return;\r\n            }\r\n            var shape;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                shape = this.shapeList[i];\r\n                if (shape._name === name && shape.type != 'text') {\r\n                    return shape;\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 特殊图形元素回调设置\r\n         * @param {Object} name\r\n         * @param {Object} itemShape\r\n         */\r\n        setItemShape: function (name, itemShape) {\r\n            var shape;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                shape = this.shapeList[i];\r\n                if (shape._name === name && shape.type != 'text') {\r\n                    if (!this._selectedMap[name]) {\r\n                        itemShape.style.color = '#ccc';\r\n                        itemShape.style.strokeColor = '#ccc';\r\n                    }\r\n                    this.zr.modShape(shape.id, itemShape);\r\n                }\r\n            }\r\n        },\r\n\r\n        isSelected: function (itemName) {\r\n            if (typeof this._selectedMap[itemName] != 'undefined') {\r\n                return this._selectedMap[itemName];\r\n            }\r\n            else {\r\n                // 没在legend里定义的都为true啊~\r\n                return true;\r\n            }\r\n        },\r\n        \r\n        getSelectedMap: function () {\r\n            return this._selectedMap;\r\n        },\r\n        \r\n        setSelected: function(itemName, selectStatus) {\r\n            if (this.legendOption.selectedMode === 'single') {\r\n                for (var k in this._selectedMap) {\r\n                    this._selectedMap[k] = false;\r\n                }\r\n            }\r\n            this._selectedMap[itemName] = selectStatus;\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_SELECTED,\r\n                null,\r\n                {\r\n                    selected: this._selectedMap,\r\n                    target: itemName\r\n                },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        /**\r\n         * 图例选择\r\n         */\r\n        onlegendSelected: function (param, status) {\r\n            var legendSelected = param.selected;\r\n            for (var itemName in legendSelected) {\r\n                if (this._selectedMap[itemName] != legendSelected[itemName]) {\r\n                    // 有一项不一致都需要重绘\r\n                    status.needRefresh = true;\r\n                }\r\n                this._selectedMap[itemName] = legendSelected[itemName];\r\n            }\r\n            return;\r\n        }\r\n    };\r\n    \r\n    var legendIcon = {\r\n        line: function (ctx, style) {\r\n            var dy = style.height / 2;\r\n            ctx.moveTo(style.x,     style.y + dy);\r\n            ctx.lineTo(style.x + style.width,style.y + dy);\r\n        },\r\n        \r\n        pie: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            SectorShape.prototype.buildPath(ctx, {\r\n                x: x + width / 2,\r\n                y: y + height + 2,\r\n                r: height,\r\n                r0: 6,\r\n                startAngle: 45,\r\n                endAngle: 135\r\n            });\r\n        },\r\n        \r\n        eventRiver: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            ctx.moveTo(x, y + height);\r\n            ctx.bezierCurveTo(\r\n                x + width, y + height, x, y + 4, x + width, y + 4\r\n            );\r\n            ctx.lineTo(x + width, y);\r\n            ctx.bezierCurveTo(\r\n                x, y, x + width, y + height - 4, x, y + height - 4\r\n            );\r\n            ctx.lineTo(x, y + height);\r\n        },\r\n        \r\n        k: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            CandleShape.prototype.buildPath(ctx, {\r\n                x: x + width / 2,\r\n                y: [y + 1, y + 1, y + height - 6, y + height],\r\n                width: width - 6\r\n            });\r\n        },\r\n        \r\n        bar: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y +1;\r\n            var width = style.width;\r\n            var height = style.height - 2;\r\n            var r = 3;\r\n            \r\n            ctx.moveTo(x + r, y);\r\n            ctx.lineTo(x + width - r, y);\r\n            ctx.quadraticCurveTo(\r\n                x + width, y, x + width, y + r\r\n            );\r\n            ctx.lineTo(x + width, y + height - r);\r\n            ctx.quadraticCurveTo(\r\n                x + width, y + height, x + width - r, y + height\r\n            );\r\n            ctx.lineTo(x + r, y + height);\r\n            ctx.quadraticCurveTo(\r\n                x, y + height, x, y + height - r\r\n            );\r\n            ctx.lineTo(x, y + r);\r\n            ctx.quadraticCurveTo(x, y, x + r, y);\r\n        },\r\n        \r\n        force: function (ctx, style) {\r\n            IconShape.prototype.iconLibrary.circle(ctx, style);\r\n        },\r\n        \r\n        radar: function (ctx, style) {\r\n            var n = 6;\r\n            var x = style.x + style.width / 2;\r\n            var y = style.y + style.height / 2;\r\n            var r = style.height / 2;\r\n\r\n            var dStep = 2 * Math.PI / n;\r\n            var deg = -Math.PI / 2;\r\n            var xStart = x + r * Math.cos(deg);\r\n            var yStart = y + r * Math.sin(deg);\r\n            \r\n            ctx.moveTo(xStart, yStart);\r\n            deg += dStep;\r\n            for (var i = 0, end = n - 1; i < end; i ++) {\r\n                ctx.lineTo(x + r * Math.cos(deg), y + r * Math.sin(deg));\r\n                deg += dStep;\r\n            }\r\n            ctx.lineTo(xStart, yStart);\r\n        }\r\n    };\r\n    legendIcon.chord = legendIcon.pie;\r\n    legendIcon.map = legendIcon.bar;\r\n    \r\n    for (var k in legendIcon) {\r\n        IconShape.prototype.iconLibrary['legendicon' + k] = legendIcon[k];\r\n    }\r\n    \r\n    zrUtil.inherits(Legend, Base);\r\n    \r\n    __webpack_require__(6).define('legend', Legend);\r\n    \r\n    return Legend;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\r\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang(https://github.com/pissang)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var vec2 = __webpack_require__(5);\r\n        var curve = __webpack_require__(17);\r\n\r\n        /**\r\n         * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\r\n         * @module zrender/tool/computeBoundingBox\r\n         * @param {Array<Object>} points 顶点数组\r\n         * @param {number} min\r\n         * @param {number} max\r\n         */\r\n        function computeBoundingBox(points, min, max) {\r\n            if (points.length === 0) {\r\n                return;\r\n            }\r\n            var left = points[0][0];\r\n            var right = points[0][0];\r\n            var top = points[0][1];\r\n            var bottom = points[0][1];\r\n            \r\n            for (var i = 1; i < points.length; i++) {\r\n                var p = points[i];\r\n                if (p[0] < left) {\r\n                    left = p[0];\r\n                }\r\n                if (p[0] > right) {\r\n                    right = p[0];\r\n                }\r\n                if (p[1] < top) {\r\n                    top = p[1];\r\n                }\r\n                if (p[1] > bottom) {\r\n                    bottom = p[1];\r\n                }\r\n            }\r\n\r\n            min[0] = left;\r\n            min[1] = top;\r\n            max[0] = right;\r\n            max[1] = bottom;\r\n        }\r\n\r\n        /**\r\n         * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\r\n         * @memberOf module:zrender/tool/computeBoundingBox\r\n         * @param {Array.<number>} p0\r\n         * @param {Array.<number>} p1\r\n         * @param {Array.<number>} p2\r\n         * @param {Array.<number>} p3\r\n         * @param {Array.<number>} min\r\n         * @param {Array.<number>} max\r\n         */\r\n        function computeCubeBezierBoundingBox(p0, p1, p2, p3, min, max) {\r\n            var xDim = [];\r\n            curve.cubicExtrema(p0[0], p1[0], p2[0], p3[0], xDim);\r\n            for (var i = 0; i < xDim.length; i++) {\r\n                xDim[i] = curve.cubicAt(p0[0], p1[0], p2[0], p3[0], xDim[i]);\r\n            }\r\n            var yDim = [];\r\n            curve.cubicExtrema(p0[1], p1[1], p2[1], p3[1], yDim);\r\n            for (var i = 0; i < yDim.length; i++) {\r\n                yDim[i] = curve.cubicAt(p0[1], p1[1], p2[1], p3[1], yDim[i]);\r\n            }\r\n\r\n            xDim.push(p0[0], p3[0]);\r\n            yDim.push(p0[1], p3[1]);\r\n\r\n            var left = Math.min.apply(null, xDim);\r\n            var right = Math.max.apply(null, xDim);\r\n            var top = Math.min.apply(null, yDim);\r\n            var bottom = Math.max.apply(null, yDim);\r\n\r\n            min[0] = left;\r\n            min[1] = top;\r\n            max[0] = right;\r\n            max[1] = bottom;\r\n        }\r\n\r\n        /**\r\n         * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\r\n         * @memberOf module:zrender/tool/computeBoundingBox\r\n         * @param {Array.<number>} p0\r\n         * @param {Array.<number>} p1\r\n         * @param {Array.<number>} p2\r\n         * @param {Array.<number>} min\r\n         * @param {Array.<number>} max\r\n         */\r\n        function computeQuadraticBezierBoundingBox(p0, p1, p2, min, max) {\r\n            // Find extremities, where derivative in x dim or y dim is zero\r\n            var t1 = curve.quadraticExtremum(p0[0], p1[0], p2[0]);\r\n            var t2 = curve.quadraticExtremum(p0[1], p1[1], p2[1]);\r\n\r\n            t1 = Math.max(Math.min(t1, 1), 0);\r\n            t2 = Math.max(Math.min(t2, 1), 0);\r\n\r\n            var ct1 = 1 - t1;\r\n            var ct2 = 1 - t2;\r\n\r\n            var x1 = ct1 * ct1 * p0[0] \r\n                     + 2 * ct1 * t1 * p1[0] \r\n                     + t1 * t1 * p2[0];\r\n            var y1 = ct1 * ct1 * p0[1] \r\n                     + 2 * ct1 * t1 * p1[1] \r\n                     + t1 * t1 * p2[1];\r\n\r\n            var x2 = ct2 * ct2 * p0[0] \r\n                     + 2 * ct2 * t2 * p1[0] \r\n                     + t2 * t2 * p2[0];\r\n            var y2 = ct2 * ct2 * p0[1] \r\n                     + 2 * ct2 * t2 * p1[1] \r\n                     + t2 * t2 * p2[1];\r\n            min[0] = Math.min(p0[0], p2[0], x1, x2);\r\n            min[1] = Math.min(p0[1], p2[1], y1, y2);\r\n            max[0] = Math.max(p0[0], p2[0], x1, x2);\r\n            max[1] = Math.max(p0[1], p2[1], y1, y2);\r\n        }\r\n\r\n        var start = vec2.create();\r\n        var end = vec2.create();\r\n        var extremity = vec2.create();\r\n        /**\r\n         * 从圆弧中计算出最小包围盒，写入`min`和`max`中\r\n         * @method\r\n         * @memberOf module:zrender/tool/computeBoundingBox\r\n         * @param {Array.<number>} center 圆弧中心点\r\n         * @param {number} radius 圆弧半径\r\n         * @param {number} startAngle 圆弧开始角度\r\n         * @param {number} endAngle 圆弧结束角度\r\n         * @param {number} anticlockwise 是否是顺时针\r\n         * @param {Array.<number>} min\r\n         * @param {Array.<number>} max\r\n         */\r\n        var computeArcBoundingBox = function (\r\n            x, y, r, startAngle, endAngle, anticlockwise, min, max\r\n        ) { \r\n            if (Math.abs(startAngle - endAngle) >= Math.PI * 2) {\r\n                // Is a circle\r\n                min[0] = x - r;\r\n                min[1] = y - r;\r\n                max[0] = x + r;\r\n                max[1] = y + r;\r\n                return;\r\n            }\r\n\r\n            start[0] = Math.cos(startAngle) * r + x;\r\n            start[1] = Math.sin(startAngle) * r + y;\r\n\r\n            end[0] = Math.cos(endAngle) * r + x;\r\n            end[1] = Math.sin(endAngle) * r + y;\r\n\r\n            vec2.min(min, start, end);\r\n            vec2.max(max, start, end);\r\n            \r\n            // Thresh to [0, Math.PI * 2]\r\n            startAngle = startAngle % (Math.PI * 2);\r\n            if (startAngle < 0) {\r\n                startAngle = startAngle + Math.PI * 2;\r\n            }\r\n            endAngle = endAngle % (Math.PI * 2);\r\n            if (endAngle < 0) {\r\n                endAngle = endAngle + Math.PI * 2;\r\n            }\r\n\r\n            if (startAngle > endAngle && !anticlockwise) {\r\n                endAngle += Math.PI * 2;\r\n            } else if (startAngle < endAngle && anticlockwise) {\r\n                startAngle += Math.PI * 2;\r\n            }\r\n            if (anticlockwise) {\r\n                var tmp = endAngle;\r\n                endAngle = startAngle;\r\n                startAngle = tmp;\r\n            }\r\n\r\n            // var number = 0;\r\n            // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\r\n            for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\r\n                if (angle > startAngle) {\r\n                    extremity[0] = Math.cos(angle) * r + x;\r\n                    extremity[1] = Math.sin(angle) * r + y;\r\n\r\n                    vec2.min(min, extremity, min);\r\n                    vec2.max(max, extremity, max);\r\n                }\r\n            }\r\n        };\r\n\r\n        computeBoundingBox.cubeBezier = computeCubeBezierBoundingBox;\r\n        computeBoundingBox.quadraticBezier = computeQuadraticBezierBoundingBox;\r\n        computeBoundingBox.arc = computeArcBoundingBox;\r\n\r\n        return computeBoundingBox;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：蜡烛\r\n * 可配图形属性：\r\n   {\r\n       // 基础属性\r\n       shape  : 'candle',       // 必须，shape类标识，需要显式指定\r\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\r\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\r\n       invisible : {boolean},   // 默认为false，是否可见\r\n\r\n       // 样式属性，默认状态样式样式属性\r\n       style  : {\r\n           x             : {number},  // 必须，横坐标\r\n           y             : {Array},   // 必须，纵坐标数组\r\n       },\r\n\r\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\r\n       highlightStyle : {\r\n           // 同style\r\n       }\r\n\r\n       // 交互属性，详见shape.Base\r\n\r\n       // 事件属性，详见shape.Base\r\n   }\r\n         例子：\r\n   {\r\n       shape  : 'candle',\r\n       id     : '123456',\r\n       zlevel : 1,\r\n       style  : {\r\n           x : 200,\r\n           y : [100,123,90,125],\r\n           width : 150,\r\n           color : '#eee',\r\n           text : 'Baidu'\r\n       },\r\n       myName : 'kener',  // 可自带任何有效自定义属性\r\n\r\n       clickable : true,\r\n       onClick : function (eventPacket) {\r\n           alert(eventPacket.target.myName);\r\n       }\r\n   }\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(1);\r\n    var zrUtil = __webpack_require__(0);\r\n\r\n    function Candle(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Candle.prototype =  {\r\n        type: 'candle',\r\n        _numberOrder : function (a, b) {\r\n            return b - a;\r\n        },\r\n\r\n        /**\r\n         * 创建矩形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            var yList = zrUtil.clone(style.y).sort(this._numberOrder);\r\n\r\n            ctx.moveTo(style.x, yList[3]);\r\n            ctx.lineTo(style.x, yList[2]);\r\n            ctx.moveTo(style.x - style.width / 2, yList[2]);\r\n            ctx.rect(\r\n                style.x - style.width / 2,\r\n                yList[2],\r\n                style.width,\r\n                yList[1] - yList[2]\r\n            );\r\n            ctx.moveTo(style.x, yList[1]);\r\n            ctx.lineTo(style.x, yList[0]);\r\n        },\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            if (!style.__rect) {\r\n                var lineWidth = 0;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n\r\n                var yList = zrUtil.clone(style.y).sort(this._numberOrder);\r\n                style.__rect = {\r\n                    x : Math.round(style.x - style.width / 2 - lineWidth / 2),\r\n                    y : Math.round(yList[3] - lineWidth / 2),\r\n                    width : style.width + lineWidth,\r\n                    height : yList[0] - yList[3] + lineWidth\r\n                };\r\n            }\r\n\r\n            return style.__rect;\r\n        },\r\n\r\n\r\n        isCover : __webpack_require__(28)\r\n    };\r\n\r\n    zrUtil.inherits(Candle, Base);\r\n\r\n    return Candle;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件：时间轴组件\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(8);\r\n    \r\n    // 图形依赖\r\n    var RectangleShape = __webpack_require__(7);\r\n    var IconShape = __webpack_require__(13);\r\n    var ChainShape = __webpack_require__(82);\r\n    \r\n    var ecConfig = __webpack_require__(4);\r\n    ecConfig.timeline = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 4,                       // 二级层叠\r\n        show: true,\r\n        type: 'time',  // 模式是时间类型，支持 number\r\n        notMerge: false,\r\n        realtime: true,\r\n        x: 80,\r\n        // y: {number},\r\n        x2: 80,\r\n        y2: 0,\r\n        // width: {totalWidth} - x - x2,\r\n        height: 50,\r\n        backgroundColor: 'rgba(0,0,0,0)',   // 时间轴背景颜色\r\n        borderColor: '#ccc',               // 时间轴边框颜色\r\n        borderWidth: 0,                    // 时间轴边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                        // 时间轴内边距，单位px，默认各方向内边距为5，\r\n        controlPosition: 'left',           // 'right' | 'none'\r\n        autoPlay: false,\r\n        loop: true,\r\n        playInterval: 2000,                // 播放时间间隔，单位ms\r\n        lineStyle: {\r\n            width: 1,\r\n            color: '#666',\r\n            type: 'dashed'\r\n        },\r\n        label: {                            // 文本标签\r\n            show: true,\r\n            interval: 'auto',\r\n            rotate: 0,\r\n            // formatter: null,\r\n            textStyle: {                    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                color: '#333'\r\n            }\r\n        },\r\n        checkpointStyle: {\r\n            symbol: 'auto',\r\n            symbolSize: 'auto',\r\n            color: 'auto',\r\n            borderColor: 'auto',\r\n            borderWidth: 'auto',\r\n            label: {                            // 文本标签\r\n                show: false,\r\n                textStyle: {                    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                    color: 'auto'\r\n                }\r\n            }\r\n        },\r\n        controlStyle: {\r\n            itemSize: 15,\r\n            itemGap: 5,\r\n            normal: { color: '#333'},\r\n            emphasis: { color: '#1e90ff'}\r\n        },\r\n        symbol: 'emptyDiamond',\r\n        symbolSize: 4,\r\n        currentIndex: 0\r\n        // data: []\r\n    };\r\n\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrArea = __webpack_require__(2);\r\n    var zrEvent = __webpack_require__(9);\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     */\r\n    function Timeline(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        var self = this;\r\n        self._onclick = function(param) {\r\n            return self.__onclick(param);\r\n        };\r\n        self._ondrift = function (dx, dy) {\r\n            return self.__ondrift(this, dx, dy);\r\n        };\r\n        self._ondragend = function () {\r\n            return self.__ondragend();\r\n        };\r\n        self._setCurrentOption = function() {\r\n            var timelineOption = self.timelineOption;\r\n            self.currentIndex %= timelineOption.data.length;\r\n            // console.log(self.currentIndex);\r\n            var curOption = self.options[self.currentIndex] || {};\r\n            self.myChart._setOption(curOption, timelineOption.notMerge, true);\r\n            \r\n            self.messageCenter.dispatch(\r\n                ecConfig.EVENT.TIMELINE_CHANGED,\r\n                null,\r\n                {\r\n                    currentIndex: self.currentIndex,\r\n                    data: timelineOption.data[self.currentIndex].name != null\r\n                          ? timelineOption.data[self.currentIndex].name\r\n                          : timelineOption.data[self.currentIndex]\r\n                },\r\n                self.myChart\r\n            );\r\n        };\r\n        self._onFrame = function() {\r\n            self._setCurrentOption();\r\n            self._syncHandleShape();\r\n            \r\n            if (self.timelineOption.autoPlay) {\r\n                self.playTicket = setTimeout(\r\n                    function() {\r\n                        self.currentIndex += 1;\r\n                        if (!self.timelineOption.loop\r\n                            && self.currentIndex >= self.timelineOption.data.length\r\n                        ) {\r\n                            self.currentIndex = self.timelineOption.data.length - 1;\r\n                            self.stop();\r\n                            return;\r\n                        }\r\n                        self._onFrame();\r\n                    },\r\n                    self.timelineOption.playInterval\r\n                );\r\n            }\r\n        };\r\n\r\n        this.setTheme(false);\r\n        this.options = this.option.options;\r\n        this.currentIndex = this.timelineOption.currentIndex % this.timelineOption.data.length;\r\n        \r\n        if (!this.timelineOption.notMerge && this.currentIndex !== 0) {\r\n            /*\r\n            for (var i = 1, l = this.timelineOption.data.length; i < l; i++) {\r\n                this.options[i] = zrUtil.merge(\r\n                    this.options[i], this.options[i - 1]\r\n                );\r\n            }\r\n            */\r\n           this.options[this.currentIndex] = zrUtil.merge(\r\n               this.options[this.currentIndex], this.options[0]\r\n           );\r\n        }\r\n        \r\n        if (this.timelineOption.show) {\r\n            this._buildShape();\r\n            this._syncHandleShape();\r\n        }\r\n        \r\n        this._setCurrentOption();\r\n        \r\n        if (this.timelineOption.autoPlay) {\r\n            var self = this;\r\n            this.playTicket = setTimeout(\r\n                function() {\r\n                    self.play();\r\n                },\r\n                this.ecTheme.animationDuration != null\r\n                ? this.ecTheme.animationDuration\r\n                : ecConfig.animationDuration\r\n            );\r\n        }\r\n    }\r\n    \r\n    Timeline.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TIMELINE,\r\n        _buildShape: function () {\r\n            // 位置参数，通过计算所得x, y, width, height\r\n            this._location = this._getLocation();\r\n            this._buildBackground();\r\n            this._buildControl();\r\n            this._chainPoint = this._getChainPoint();\r\n            if (this.timelineOption.label.show) {\r\n                // 标签显示的挑选间隔\r\n                var interval = this._getInterval();\r\n                for (var i = 0, len = this._chainPoint.length; i < len; i += interval) {\r\n                    this._chainPoint[i].showLabel = true;\r\n                }\r\n            }\r\n            this._buildChain();\r\n            this._buildHandle();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算实体的位置坐标\r\n         */\r\n        _getLocation: function () {\r\n            var timelineOption = this.timelineOption;\r\n            var padding = this.reformCssArray(this.timelineOption.padding);\r\n            \r\n            // 水平布局\r\n            var zrWidth = this.zr.getWidth();\r\n            var x = this.parsePercent(timelineOption.x, zrWidth);\r\n            var x2 = this.parsePercent(timelineOption.x2, zrWidth);\r\n            var width;\r\n            if (timelineOption.width == null) {\r\n                width = zrWidth - x - x2;\r\n                x2 = zrWidth - x2;\r\n            }\r\n            else {\r\n                width = this.parsePercent(timelineOption.width, zrWidth);\r\n                x2 = x + width;\r\n            }\r\n\r\n            var zrHeight = this.zr.getHeight();\r\n            var height = this.parsePercent(timelineOption.height, zrHeight);\r\n            var y;\r\n            var y2;\r\n            if (timelineOption.y != null) {\r\n                y = this.parsePercent(timelineOption.y, zrHeight);\r\n                y2 = y + height;\r\n            }\r\n            else {\r\n                y2 = zrHeight - this.parsePercent(timelineOption.y2, zrHeight);\r\n                y = y2 - height;\r\n            }\r\n\r\n            return {\r\n                x: x + padding[3],\r\n                y: y + padding[0],\r\n                x2: x2 - padding[1],\r\n                y2: y2 - padding[2],\r\n                width: width - padding[1] - padding[3],\r\n                height: height - padding[0] - padding[2]\r\n            };\r\n        },\r\n\r\n        _getReformedLabel: function (idx) {\r\n            var timelineOption = this.timelineOption;\r\n            var data = timelineOption.data[idx].name != null\r\n                       ? timelineOption.data[idx].name\r\n                       : timelineOption.data[idx];\r\n            var formatter = timelineOption.data[idx].formatter \r\n                            || timelineOption.label.formatter;\r\n            if (formatter) {\r\n                if (typeof formatter === 'function') {\r\n                    data = formatter.call(this.myChart, data);\r\n                }\r\n                else if (typeof formatter === 'string') {\r\n                    data = formatter.replace('{value}', data);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        \r\n        /**\r\n         * 计算标签显示挑选间隔\r\n         */\r\n        _getInterval: function () {\r\n            var chainPoint = this._chainPoint;\r\n            var timelineOption = this.timelineOption;\r\n            var interval   = timelineOption.label.interval;\r\n            if (interval === 'auto') {\r\n                // 麻烦的自适应计算\r\n                var fontSize = timelineOption.label.textStyle.fontSize;\r\n                var data = timelineOption.data;\r\n                var dataLength = timelineOption.data.length;\r\n\r\n                // 横向\r\n                if (dataLength > 3) {\r\n                    var isEnough = false;\r\n                    var labelSpace;\r\n                    var labelSize;\r\n                    interval = 0;\r\n                    while (!isEnough && interval < dataLength) {\r\n                        interval++;\r\n                        isEnough = true;\r\n                        for (var i = interval; i < dataLength; i += interval) {\r\n                            labelSpace = chainPoint[i].x - chainPoint[i - interval].x;\r\n                            if (timelineOption.label.rotate !== 0) {\r\n                                // 有旋转\r\n                                labelSize = fontSize;\r\n                            }\r\n                            else if (data[i].textStyle) {\r\n                                labelSize = zrArea.getTextWidth(\r\n                                    chainPoint[i].name,\r\n                                    chainPoint[i].textFont\r\n                                );\r\n                            }\r\n                            else {\r\n                                // 不定义data级特殊文本样式，用fontSize优化getTextWidth\r\n                                var label = chainPoint[i].name + '';\r\n                                var wLen = (label.match(/\\w/g) || '').length;\r\n                                var oLen = label.length - wLen;\r\n                                labelSize = wLen * fontSize * 2 / 3 + oLen * fontSize;\r\n                            }\r\n\r\n                            if (labelSpace < labelSize) {\r\n                                // 放不下，中断循环让interval++\r\n                                isEnough = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // 少于3个则全部显示\r\n                    interval = 1;\r\n                }\r\n            }\r\n            else {\r\n                // 用户自定义间隔\r\n                interval = interval - 0 + 1;\r\n            }\r\n\r\n            return interval;\r\n        },\r\n        \r\n        /**\r\n         * 根据选项计算时间链条上的坐标及symbolList\r\n         */\r\n        _getChainPoint: function() {\r\n            var timelineOption = this.timelineOption;\r\n            var symbol = timelineOption.symbol.toLowerCase();\r\n            var symbolSize = timelineOption.symbolSize;\r\n            var rotate = timelineOption.label.rotate;\r\n            var textStyle = timelineOption.label.textStyle;\r\n            var textFont = this.getFont(textStyle);\r\n            var dataTextStyle;\r\n            var data = timelineOption.data;\r\n            var x = this._location.x;\r\n            var y = this._location.y + this._location.height / 4 * 3;\r\n            var width = this._location.x2 - this._location.x;\r\n            var len = data.length;\r\n            \r\n            function _getName(i) {\r\n                return (data[i].name != null ? data[i].name : data[i] + '');\r\n            }\r\n            var xList = [];\r\n            if (len > 1) {\r\n                var boundaryGap = width / len;\r\n                boundaryGap = boundaryGap > 50 ? 50 : (boundaryGap < 20 ? 5 : boundaryGap);\r\n                width -= boundaryGap * 2;\r\n                if (timelineOption.type === 'number') {\r\n                    // 平均分布\r\n                    for (var i = 0; i < len; i++) {\r\n                        xList.push(x + boundaryGap + width / (len - 1) * i);\r\n                    }\r\n                }\r\n                else {\r\n                    // 时间比例\r\n                    xList[0] = new Date(_getName(0).replace(/-/g, '/'));\r\n                    xList[len - 1] = new Date(_getName(len - 1).replace(/-/g, '/')) - xList[0];\r\n                    for (var i = 1; i < len; i++) {\r\n                        xList[i] =  x + boundaryGap \r\n                                    + width \r\n                                      * (new Date(_getName(i).replace(/-/g, '/')) - xList[0]) \r\n                                      / xList[len - 1];\r\n                    }\r\n                    xList[0] = x + boundaryGap;\r\n                }\r\n            }\r\n            else {\r\n                xList.push(x + width / 2);\r\n            }\r\n            \r\n            var list = [];\r\n            var curSymbol;\r\n            var n;\r\n            var isEmpty;\r\n            var textAlign;\r\n            var rotation;\r\n            for (var i = 0; i < len; i++) {\r\n                x = xList[i];\r\n                curSymbol = (data[i].symbol && data[i].symbol.toLowerCase()) || symbol;\r\n                if (curSymbol.match('empty')) {\r\n                    curSymbol = curSymbol.replace('empty', '');\r\n                    isEmpty = true;\r\n                }\r\n                else {\r\n                    isEmpty = false;\r\n                }\r\n                if (curSymbol.match('star')) {\r\n                    n = (curSymbol.replace('star','') - 0) || 5;\r\n                    curSymbol = 'star';\r\n                }\r\n                \r\n                dataTextStyle = data[i].textStyle \r\n                                ? zrUtil.merge(data[i].textStyle || {}, textStyle)\r\n                                : textStyle;\r\n                \r\n                textAlign = dataTextStyle.align || 'center';\r\n                \r\n                if (rotate) {\r\n                    textAlign = rotate > 0 ? 'right' : 'left';\r\n                    rotation = [rotate * Math.PI / 180, x, y - 5];\r\n                }\r\n                else {\r\n                    rotation = false;\r\n                }\r\n                \r\n                list.push({\r\n                    x: x,\r\n                    n: n,\r\n                    isEmpty: isEmpty,\r\n                    symbol: curSymbol,\r\n                    symbolSize: data[i].symbolSize || symbolSize,\r\n                    color: data[i].color,\r\n                    borderColor: data[i].borderColor,\r\n                    borderWidth: data[i].borderWidth,\r\n                    name: this._getReformedLabel(i),\r\n                    textColor: dataTextStyle.color,\r\n                    textAlign: textAlign,\r\n                    textBaseline: dataTextStyle.baseline || 'middle',\r\n                    textX: x,\r\n                    textY: y - (rotate ? 5 : 0),\r\n                    textFont: data[i].textStyle ? this.getFont(dataTextStyle) : textFont,\r\n                    rotation: rotation,\r\n                    showLabel: false\r\n                });\r\n            }\r\n            \r\n            return list;\r\n        },\r\n        \r\n        _buildBackground: function () {\r\n            var timelineOption = this.timelineOption;\r\n            var padding = this.reformCssArray(this.timelineOption.padding);\r\n            var width = this._location.width;\r\n            var height = this._location.height;\r\n            \r\n            if (timelineOption.borderWidth !== 0 \r\n                || timelineOption.backgroundColor.replace(/\\s/g,'') != 'rgba(0,0,0,0)'\r\n            ) {\r\n                // 背景\r\n                this.shapeList.push(new RectangleShape({\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    hoverable :false,\r\n                    style: {\r\n                        x: this._location.x - padding[3],\r\n                        y: this._location.y - padding[0],\r\n                        width: width + padding[1] + padding[3],\r\n                        height: height + padding[0] + padding[2],\r\n                        brushType: timelineOption.borderWidth === 0 ? 'fill' : 'both',\r\n                        color: timelineOption.backgroundColor,\r\n                        strokeColor: timelineOption.borderColor,\r\n                        lineWidth: timelineOption.borderWidth\r\n                    }\r\n                }));\r\n            }\r\n        },\r\n\r\n        _buildControl: function() {\r\n            var self = this;\r\n            var timelineOption = this.timelineOption;\r\n            var lineStyle = timelineOption.lineStyle;\r\n            var controlStyle = timelineOption.controlStyle;\r\n            if (timelineOption.controlPosition === 'none') {\r\n                return;\r\n            }\r\n            var iconSize = controlStyle.itemSize;\r\n            var iconGap = controlStyle.itemGap;\r\n            var x;\r\n            if (timelineOption.controlPosition === 'left') {\r\n                x = this._location.x;\r\n                this._location.x += (iconSize + iconGap) * 3;\r\n            }\r\n            else {\r\n                x = this._location.x2 - ((iconSize + iconGap) * 3 - iconGap);\r\n                this._location.x2 -= (iconSize + iconGap) * 3;\r\n            }\r\n            \r\n            var y = this._location.y;\r\n            var iconStyle = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                style: {\r\n                    iconType: 'timelineControl',\r\n                    symbol: 'last',\r\n                    x: x,\r\n                    y: y,\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                    brushType: 'stroke',\r\n                    color: controlStyle.normal.color,\r\n                    strokeColor: controlStyle.normal.color,\r\n                    lineWidth: lineStyle.width\r\n                },\r\n                highlightStyle: {\r\n                    color: controlStyle.emphasis.color,\r\n                    strokeColor: controlStyle.emphasis.color,\r\n                    lineWidth: lineStyle.width + 1\r\n                },\r\n                clickable: true\r\n            };\r\n            \r\n            this._ctrLastShape = new IconShape(iconStyle);\r\n            this._ctrLastShape.onclick = function() {\r\n                self.last();\r\n            };\r\n            this.shapeList.push(this._ctrLastShape);\r\n            \r\n            x += iconSize + iconGap;\r\n            this._ctrPlayShape = new IconShape(zrUtil.clone(iconStyle));\r\n            this._ctrPlayShape.style.brushType = 'fill';\r\n            this._ctrPlayShape.style.symbol = 'play';\r\n            this._ctrPlayShape.style.status = this.timelineOption.autoPlay ? 'playing' : 'stop';\r\n            this._ctrPlayShape.style.x = x;\r\n            this._ctrPlayShape.onclick = function() {\r\n                if (self._ctrPlayShape.style.status === 'stop') {\r\n                    self.play();\r\n                }\r\n                else {\r\n                    self.stop();\r\n                }\r\n            };\r\n            this.shapeList.push(this._ctrPlayShape);\r\n            \r\n            x += iconSize + iconGap;\r\n            this._ctrNextShape = new IconShape(zrUtil.clone(iconStyle));\r\n            this._ctrNextShape.style.symbol = 'next';\r\n            this._ctrNextShape.style.x = x;\r\n            this._ctrNextShape.onclick = function() {\r\n                self.next();\r\n            };\r\n            this.shapeList.push(this._ctrNextShape);\r\n        },\r\n        \r\n        /**\r\n         * 构建时间轴\r\n         */\r\n        _buildChain: function () {\r\n            var timelineOption = this.timelineOption;\r\n            var lineStyle = timelineOption.lineStyle;\r\n            this._timelineShae = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    x: this._location.x,\r\n                    y: this.subPixelOptimize(this._location.y, lineStyle.width),\r\n                    width: this._location.x2 - this._location.x,\r\n                    height: this._location.height,\r\n                    chainPoint: this._chainPoint,\r\n                    brushType:'both',\r\n                    strokeColor: lineStyle.color,\r\n                    lineWidth: lineStyle.width,\r\n                    lineType: lineStyle.type\r\n                },\r\n                hoverable: false,\r\n                clickable: true,\r\n                onclick: this._onclick\r\n            };\r\n\r\n            this._timelineShae = new ChainShape(this._timelineShae);\r\n            this.shapeList.push(this._timelineShae);\r\n        },\r\n\r\n        /**\r\n         * 构建拖拽手柄\r\n         */\r\n        _buildHandle: function () {\r\n            var curPoint = this._chainPoint[this.currentIndex];\r\n            var symbolSize = curPoint.symbolSize + 1;\r\n            symbolSize = symbolSize < 5 ? 5 : symbolSize;\r\n            \r\n            this._handleShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                hoverable: false,\r\n                draggable: true,\r\n                style: {\r\n                    iconType: 'diamond',\r\n                    n: curPoint.n,\r\n                    x: curPoint.x - symbolSize,\r\n                    y: this._location.y + this._location.height / 4 - symbolSize,\r\n                    width: symbolSize * 2,\r\n                    height: symbolSize * 2,\r\n                    brushType:'both',\r\n                    textPosition: 'specific',\r\n                    textX: curPoint.x,\r\n                    textY: this._location.y - this._location.height / 4,\r\n                    textAlign: 'center',\r\n                    textBaseline: 'middle'\r\n                },\r\n                highlightStyle: {},\r\n                ondrift: this._ondrift,\r\n                ondragend: this._ondragend\r\n            };\r\n            \r\n            this._handleShape = new IconShape(this._handleShape);\r\n            this.shapeList.push(this._handleShape);\r\n        },\r\n        \r\n        /**\r\n         * 同步拖拽图形样式 \r\n         */\r\n        _syncHandleShape: function() {\r\n            if (!this.timelineOption.show) {\r\n                return;\r\n            }\r\n            \r\n            var timelineOption = this.timelineOption;\r\n            var cpStyle = timelineOption.checkpointStyle;\r\n            var curPoint = this._chainPoint[this.currentIndex];\r\n\r\n            this._handleShape.style.text = cpStyle.label.show ? curPoint.name : '';\r\n            this._handleShape.style.textFont = curPoint.textFont;\r\n            \r\n            this._handleShape.style.n = curPoint.n;\r\n            if (cpStyle.symbol === 'auto') {\r\n                this._handleShape.style.iconType = curPoint.symbol != 'none' \r\n                                                   ? curPoint.symbol : 'diamond';\r\n            }\r\n            else {\r\n                this._handleShape.style.iconType = cpStyle.symbol;\r\n                if (cpStyle.symbol.match('star')) {\r\n                    this._handleShape.style.n = (cpStyle.symbol.replace('star','') - 0) || 5;\r\n                    this._handleShape.style.iconType = 'star';\r\n                }\r\n            }\r\n            \r\n            var symbolSize;\r\n            if (cpStyle.symbolSize === 'auto') {\r\n                symbolSize = curPoint.symbolSize + 2;\r\n                symbolSize = symbolSize < 5 ? 5 : symbolSize;\r\n            }\r\n            else {\r\n                symbolSize = cpStyle.symbolSize - 0;\r\n            }\r\n            \r\n            this._handleShape.style.color = cpStyle.color === 'auto'\r\n                                            ? (curPoint.color \r\n                                               ? curPoint.color \r\n                                               : timelineOption.controlStyle.emphasis.color\r\n                                              )\r\n                                            : cpStyle.color;\r\n            this._handleShape.style.textColor = cpStyle.label.textStyle.color === 'auto'\r\n                                                ? this._handleShape.style.color\r\n                                                : cpStyle.label.textStyle.color;\r\n            this._handleShape.highlightStyle.strokeColor = \r\n            this._handleShape.style.strokeColor = cpStyle.borderColor === 'auto'\r\n                                ? (curPoint.borderColor ? curPoint.borderColor : '#fff')\r\n                                : cpStyle.borderColor;\r\n            this._handleShape.style.lineWidth = cpStyle.borderWidth === 'auto'\r\n                                ? (curPoint.borderWidth ? curPoint.borderWidth : 0)\r\n                                : (cpStyle.borderWidth - 0);\r\n            this._handleShape.highlightStyle.lineWidth = this._handleShape.style.lineWidth + 1;\r\n            \r\n            this.zr.animate(this._handleShape.id, 'style')\r\n                .when(\r\n                    500,\r\n                    {\r\n                        x: curPoint.x - symbolSize,\r\n                        textX: curPoint.x,\r\n                        y: this._location.y + this._location.height / 4 - symbolSize,\r\n                        width: symbolSize * 2,\r\n                        height: symbolSize * 2\r\n                    }\r\n                )\r\n                .start('ExponentialOut');\r\n        },\r\n\r\n        _findChainIndex: function(x) {\r\n            var chainPoint = this._chainPoint;\r\n            var len = chainPoint.length;\r\n            if (x <= chainPoint[0].x) {\r\n                return 0;\r\n            }\r\n            else if (x >= chainPoint[len - 1].x) {\r\n                return len - 1;\r\n            }\r\n            for (var i = 0; i < len - 1; i++) {\r\n                if (x >= chainPoint[i].x && x <= chainPoint[i + 1].x) {\r\n                    // catch you！\r\n                    return (Math.abs(x - chainPoint[i].x) < Math.abs(x - chainPoint[i + 1].x))\r\n                           ? i : (i + 1);\r\n                }\r\n            }\r\n        },\r\n        \r\n        __onclick: function(param) {\r\n            var x = zrEvent.getX(param.event);\r\n            var newIndex =  this._findChainIndex(x);\r\n            if (newIndex === this.currentIndex) {\r\n                return true; // 啥事都没发生\r\n            }\r\n            \r\n            this.currentIndex = newIndex;\r\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\r\n            clearTimeout(this.playTicket);\r\n            this._onFrame();\r\n        },\r\n        \r\n        /**\r\n         * 拖拽范围控制\r\n         */\r\n        __ondrift: function (shape, dx) {\r\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\r\n            \r\n            var chainPoint = this._chainPoint;\r\n            var len = chainPoint.length;\r\n            var newIndex;\r\n            if (shape.style.x + dx <= chainPoint[0].x - chainPoint[0].symbolSize) {\r\n                shape.style.x = chainPoint[0].x - chainPoint[0].symbolSize;\r\n                newIndex = 0;\r\n            }\r\n            else if (shape.style.x + dx >= chainPoint[len - 1].x - chainPoint[len - 1].symbolSize) {\r\n                shape.style.x = chainPoint[len - 1].x - chainPoint[len - 1].symbolSize;\r\n                newIndex = len - 1;\r\n            }\r\n            else {\r\n                shape.style.x += dx;\r\n                newIndex = this._findChainIndex(shape.style.x);\r\n            }\r\n            var curPoint = chainPoint[newIndex];\r\n            var symbolSize = curPoint.symbolSize + 2;\r\n            shape.style.iconType = curPoint.symbol;\r\n            shape.style.n = curPoint.n;\r\n            shape.style.textX = shape.style.x + symbolSize / 2;\r\n            shape.style.y = this._location.y + this._location.height / 4 - symbolSize;\r\n            shape.style.width = symbolSize * 2;\r\n            shape.style.height = symbolSize * 2;\r\n            shape.style.text = curPoint.name;\r\n            \r\n            //console.log(newIndex)\r\n            if (newIndex === this.currentIndex) {\r\n                return true; // 啥事都没发生\r\n            }\r\n            \r\n            this.currentIndex = newIndex;\r\n            if (this.timelineOption.realtime) {\r\n                clearTimeout(this.playTicket);\r\n                var self = this;\r\n                this.playTicket = setTimeout(function() {\r\n                    self._setCurrentOption();\r\n                },200);\r\n            }\r\n\r\n            return true;\r\n        },\r\n        \r\n        __ondragend: function () {\r\n            this.isDragend = true;\r\n        },\r\n        \r\n        /**\r\n         * 数据项被拖拽出去\r\n         */\r\n        ondragend: function (param, status) {\r\n            if (!this.isDragend || !param.target) {\r\n                // 没有在当前实例上发生拖拽行为则直接返回\r\n                return;\r\n            }\r\n            !this.timelineOption.realtime && this._setCurrentOption();\r\n            \r\n            // 别status = {}赋值啊！！\r\n            status.dragOut = true;\r\n            status.dragIn = true;\r\n            status.needRefresh = false; // 会有消息触发fresh，不用再刷一遍\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n            this._syncHandleShape();\r\n            return;\r\n        },\r\n        \r\n        last: function () {\r\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\r\n            \r\n            this.currentIndex -= 1;\r\n            if (this.currentIndex < 0) {\r\n                this.currentIndex = this.timelineOption.data.length - 1;\r\n            }\r\n            this._onFrame();\r\n            \r\n            return this.currentIndex;\r\n        },\r\n        \r\n        next: function () {\r\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\r\n            \r\n            this.currentIndex += 1;\r\n            if (this.currentIndex >= this.timelineOption.data.length) {\r\n                this.currentIndex = 0;\r\n            }\r\n            this._onFrame();\r\n            \r\n            return this.currentIndex;\r\n        },\r\n        \r\n        play: function (targetIndex, autoPlay) {\r\n            if (this._ctrPlayShape && this._ctrPlayShape.style.status != 'playing') {\r\n                this._ctrPlayShape.style.status = 'playing';\r\n                this.zr.modShape(this._ctrPlayShape.id);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            \r\n            \r\n            this.timelineOption.autoPlay = autoPlay != null ? autoPlay : true;\r\n            \r\n            if (!this.timelineOption.autoPlay) {\r\n                clearTimeout(this.playTicket);\r\n            }\r\n            \r\n            this.currentIndex = targetIndex != null ? targetIndex : (this.currentIndex + 1);\r\n            if (this.currentIndex >= this.timelineOption.data.length) {\r\n                this.currentIndex = 0;\r\n            }\r\n            this._onFrame();\r\n            \r\n            return this.currentIndex;\r\n        },\r\n        \r\n        stop: function () {\r\n            if (this._ctrPlayShape && this._ctrPlayShape.style.status != 'stop') {\r\n                this._ctrPlayShape.style.status = 'stop';\r\n                this.zr.modShape(this._ctrPlayShape.id);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            \r\n            this.timelineOption.autoPlay = false;\r\n            \r\n            clearTimeout(this.playTicket);\r\n            \r\n            return this.currentIndex;\r\n        },\r\n        \r\n        /**\r\n         * 避免dataZoom带来两次refresh，不设refresh接口，resize重复一下buildshape逻辑 \r\n         */\r\n        resize: function () {\r\n            if (this.timelineOption.show) {\r\n                this.clear();\r\n                this._buildShape();\r\n                this._syncHandleShape();\r\n            }\r\n        },\r\n        \r\n        setTheme: function(needRefresh) {\r\n            this.timelineOption = this.reformOption(zrUtil.clone(this.option.timeline));\r\n            // 通用字体设置\r\n            this.timelineOption.label.textStyle = this.getTextStyle(\r\n                this.timelineOption.label.textStyle\r\n            );\r\n            this.timelineOption.checkpointStyle.label.textStyle = this.getTextStyle(\r\n                this.timelineOption.checkpointStyle.label.textStyle\r\n            );\r\n            if (!this.myChart.canvasSupported) {\r\n                // 不支持Canvas的强制关闭实时动画\r\n                this.timelineOption.realtime = false;\r\n            }\r\n            \r\n            if (this.timelineOption.show && needRefresh) {\r\n                this.clear();\r\n                this._buildShape();\r\n                this._syncHandleShape();\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 释放后实例不可用，重载基类方法\r\n         */\r\n        onbeforDispose: function () {\r\n            clearTimeout(this.playTicket);\r\n        }\r\n    };\r\n    \r\n    function timelineControl(ctx, style) {\r\n        var lineWidth = 2;//style.lineWidth;\r\n        var x = style.x + lineWidth;\r\n        var y = style.y + lineWidth + 2;\r\n        var width = style.width - lineWidth;\r\n        var height = style.height - lineWidth;\r\n        \r\n        \r\n        var symbol = style.symbol;\r\n        if (symbol === 'last') {\r\n            ctx.moveTo(x + width - 2, y + height / 3);\r\n            ctx.lineTo(x + width - 2, y);\r\n            ctx.lineTo(x + 2, y + height / 2);\r\n            ctx.lineTo(x + width - 2, y + height);\r\n            ctx.lineTo(x + width - 2, y + height / 3 * 2);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x, y);\r\n        } \r\n        else if (symbol === 'next') {\r\n            ctx.moveTo(x + 2, y + height / 3);\r\n            ctx.lineTo(x + 2, y);\r\n            ctx.lineTo(x + width - 2, y + height / 2);\r\n            ctx.lineTo(x + 2, y + height);\r\n            ctx.lineTo(x + 2, y + height / 3 * 2);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x, y);\r\n        }\r\n        else if (symbol === 'play') {\r\n            if (style.status === 'stop') {\r\n                ctx.moveTo(x + 2, y);\r\n                ctx.lineTo(x + width - 2, y + height / 2);\r\n                ctx.lineTo(x + 2, y + height);\r\n                ctx.lineTo(x + 2, y);\r\n            }\r\n            else {\r\n                var delta = style.brushType === 'both' ? 2 : 3;\r\n                ctx.rect(x + 2, y, delta, height);\r\n                ctx.rect(x + width - delta - 2, y, delta, height);\r\n            }\r\n        }\r\n        else if (symbol.match('image')) {\r\n            var imageLocation = '';\r\n            imageLocation = symbol.replace(\r\n                    new RegExp('^image:\\\\/\\\\/'), ''\r\n                );\r\n            symbol = IconShape.prototype.iconLibrary.image;\r\n            symbol(ctx, {\r\n                x: x,\r\n                y: y,\r\n                width: width,\r\n                height: height,\r\n                image: imageLocation\r\n            });\r\n        }\r\n    }\r\n    IconShape.prototype.iconLibrary['timelineControl'] = timelineControl;\r\n    \r\n    zrUtil.inherits(Timeline, Base);\r\n    \r\n    __webpack_require__(6).define('timeline', Timeline);\r\n    \r\n    return Timeline;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：时间轴线\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(1);\r\n    var IconShape = __webpack_require__(13);\r\n\r\n    var dashedLineTo = __webpack_require__(19);\r\n    var zrUtil = __webpack_require__(0);\r\n    var matrix = __webpack_require__(21);\r\n\r\n    function Chain(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Chain.prototype =  {\r\n        type : 'chain',\r\n\r\n        /**\r\n         * 画刷\r\n         * @param ctx       画布句柄\r\n         * @param e         形状实体\r\n         * @param isHighlight   是否为高亮状态\r\n         * @param updateCallback 需要异步加载资源的shape可以通过这个callback(e)\r\n         *                       让painter更新视图，base.brush没用，需要的话重载brush\r\n         */\r\n        brush : function (ctx, isHighlight) {\r\n            var style = this.style;\r\n\r\n            if (isHighlight) {\r\n                // 根据style扩展默认高亮样式\r\n                style = this.getHighlightStyle(\r\n                    style,\r\n                    this.highlightStyle || {}\r\n                );\r\n            }\r\n\r\n            ctx.save();\r\n            this.setContext(ctx, style);\r\n\r\n            // 设置transform\r\n            this.setTransform(ctx);\r\n\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            this.buildLinePath(ctx, style);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n            \r\n            this.brushSymbol(ctx, style);\r\n\r\n            ctx.restore();\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 创建线条路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildLinePath : function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y + 5;\r\n            var width = style.width;\r\n            var height = style.height / 2 - 10;\r\n\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x, y + height);\r\n            ctx.moveTo(x + width, y);\r\n            ctx.lineTo(x + width, y + height);\r\n\r\n            ctx.moveTo(x, y + height / 2);\r\n            if (!style.lineType || style.lineType == 'solid') {\r\n                ctx.lineTo(x + width, y + height / 2);\r\n            }\r\n            else if (style.lineType == 'dashed' || style.lineType == 'dotted') {\r\n                var dashLength = (style.lineWidth || 1)\r\n                             * (style.lineType == 'dashed' ? 5 : 1);\r\n                dashedLineTo(ctx, x, y + height / 2, x + width, y + height / 2, dashLength);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 标线始末标注\r\n         */\r\n        brushSymbol : function (ctx, style) {\r\n            var y = style.y + style.height / 4;\r\n            ctx.save();\r\n\r\n            var chainPoint = style.chainPoint;\r\n            var curPoint;\r\n            for (var idx = 0, l = chainPoint.length; idx < l; idx++) {\r\n                curPoint = chainPoint[idx];\r\n                if (curPoint.symbol != 'none') {\r\n                    ctx.beginPath();\r\n                    var symbolSize = curPoint.symbolSize;\r\n                    IconShape.prototype.buildPath(\r\n                        ctx,\r\n                        {\r\n                            iconType : curPoint.symbol,\r\n                            x : curPoint.x - symbolSize,\r\n                            y : y - symbolSize,\r\n                            width : symbolSize * 2,\r\n                            height : symbolSize * 2,\r\n                            n : curPoint.n\r\n                        }\r\n                    );\r\n                    ctx.fillStyle = curPoint.isEmpty ? '#fff' : style.strokeColor;\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n                    ctx.stroke();\r\n                }\r\n\r\n                if (curPoint.showLabel) {\r\n                    ctx.font = curPoint.textFont;\r\n                    ctx.fillStyle = curPoint.textColor;\r\n                    ctx.textAlign = curPoint.textAlign;\r\n                    ctx.textBaseline = curPoint.textBaseline;\r\n                    if (curPoint.rotation) {\r\n                        ctx.save();\r\n                        this._updateTextTransform(ctx, curPoint.rotation);\r\n                        ctx.fillText(curPoint.name, curPoint.textX, curPoint.textY);\r\n                        ctx.restore();\r\n                    }\r\n                    else {\r\n                        ctx.fillText(curPoint.name, curPoint.textX, curPoint.textY);\r\n                    }\r\n                }\r\n            }\r\n\r\n            ctx.restore();\r\n        },\r\n\r\n        _updateTextTransform : function (ctx, rotation) {\r\n            var _transform = matrix.create();\r\n            matrix.identity(_transform);\r\n\r\n            if (rotation[0] !== 0) {\r\n                var originX = rotation[1] || 0;\r\n                var originY = rotation[2] || 0;\r\n                if (originX || originY) {\r\n                    matrix.translate(\r\n                        _transform, _transform, [-originX, -originY]\r\n                    );\r\n                }\r\n                matrix.rotate(_transform, _transform, rotation[0]);\r\n                if (originX || originY) {\r\n                    matrix.translate(\r\n                        _transform, _transform, [originX, originY]\r\n                    );\r\n                }\r\n            }\r\n\r\n            // 保存这个变换矩阵\r\n            ctx.transform.apply(ctx, _transform);\r\n        },\r\n\r\n        isCover : function (x, y) {\r\n            var rect = this.style;\r\n            if (x >= rect.x\r\n                && x <= (rect.x + rect.width)\r\n                && y >= rect.y\r\n                && y <= (rect.y + rect.height)\r\n            ) {\r\n                // 矩形内\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Chain, Base);\r\n\r\n    return Chain;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(11);\r\n        var util = __webpack_require__(0);\r\n        var zrColor = __webpack_require__(3);\r\n        var RectangleShape = __webpack_require__(7);\r\n\r\n        function Bar(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Bar, Base);\r\n\r\n        \r\n        /**\r\n         * 进度条\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Bar.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            // 特效默认配置\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#888'\r\n                    },\r\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\r\n                    effectOption : {\r\n                        x : 0,\r\n                        y : this.canvasHeight / 2 - 30,\r\n                        width : this.canvasWidth,\r\n                        height : 5,\r\n                        brushType : 'fill',\r\n                        timeInterval : 100\r\n                    }\r\n                }\r\n            );\r\n\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n\r\n            var effectOption = options.effectOption;\r\n\r\n            // 初始化动画元素\r\n            var barShape = new RectangleShape({\r\n                highlightStyle : util.clone(effectOption)\r\n            });\r\n\r\n            barShape.highlightStyle.color =\r\n                effectOption.color\r\n                || zrColor.getLinearGradient(\r\n                    effectOption.x,\r\n                    effectOption.y,\r\n                    effectOption.x + effectOption.width,\r\n                    effectOption.y + effectOption.height,\r\n                    [ [ 0, '#ff6400' ], [ 0.5, '#ffe100' ], [ 1, '#b1ff00' ] ]\r\n                );\r\n\r\n            if (options.progress != null) {\r\n                // 指定进度\r\n                addShapeHandle(background);\r\n\r\n                barShape.highlightStyle.width =\r\n                    this.adjust(options.progress, [ 0, 1 ])\r\n                    * options.effectOption.width;\r\n                    \r\n                addShapeHandle(barShape);\r\n                addShapeHandle(textShape);\r\n\r\n                refreshHandle();\r\n                return;\r\n            }\r\n            else {\r\n                // 循环显示\r\n                barShape.highlightStyle.width = 0;\r\n                return setInterval(\r\n                    function () {\r\n                        addShapeHandle(background);\r\n\r\n                        if (barShape.highlightStyle.width < effectOption.width) {\r\n                            barShape.highlightStyle.width += 8;\r\n                        }\r\n                        else {\r\n                            barShape.highlightStyle.width = 0;\r\n                        }\r\n                        addShapeHandle(barShape);\r\n                        addShapeHandle(textShape);\r\n                        refreshHandle();\r\n                    },\r\n                    effectOption.timeInterval\r\n                );\r\n            }\r\n        };\r\n\r\n        return Bar;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(11);\r\n        var util = __webpack_require__(0);\r\n        var zrColor = __webpack_require__(3);\r\n        var CircleShape = __webpack_require__(23);\r\n\r\n        function Bubble(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Bubble, Base);\r\n\r\n        /**\r\n         * 泡泡\r\n         *\r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Bubble.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            \r\n            // 特效默认配置\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#888'\r\n                    },\r\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\r\n                    effect : {\r\n                        n : 50,\r\n                        lineWidth : 2,\r\n                        brushType : 'stroke',\r\n                        color : 'random',\r\n                        timeInterval : 100\r\n                    }\r\n                }\r\n            );\r\n\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n\r\n            var effectOption = options.effect;\r\n            var n = effectOption.n;\r\n            var brushType = effectOption.brushType;\r\n            var lineWidth = effectOption.lineWidth;\r\n\r\n            var shapeList = [];\r\n            var canvasWidth = this.canvasWidth;\r\n            var canvasHeight = this.canvasHeight;\r\n            \r\n            // 初始化动画元素\r\n            for (var i = 0; i < n; i++) {\r\n                var color = effectOption.color == 'random'\r\n                    ? zrColor.alpha(zrColor.random(), 0.3)\r\n                    : effectOption.color;\r\n\r\n                shapeList[i] = new CircleShape({\r\n                    highlightStyle : {\r\n                        x : Math.ceil(Math.random() * canvasWidth),\r\n                        y : Math.ceil(Math.random() * canvasHeight),\r\n                        r : Math.ceil(Math.random() * 40),\r\n                        brushType : brushType,\r\n                        color : color,\r\n                        strokeColor : color,\r\n                        lineWidth : lineWidth\r\n                    },\r\n                    animationY : Math.ceil(Math.random() * 20)\r\n                });\r\n            }\r\n            \r\n            return setInterval(\r\n                function () {\r\n                    addShapeHandle(background);\r\n                    \r\n                    for (var i = 0; i < n; i++) {\r\n                        var style = shapeList[i].highlightStyle;\r\n\r\n                        if (style.y - shapeList[i].animationY + style.r <= 0) {\r\n                            shapeList[i].highlightStyle.y = canvasHeight + style.r;\r\n                            shapeList[i].highlightStyle.x = Math.ceil(\r\n                                Math.random() * canvasWidth\r\n                            );\r\n                        }\r\n                        shapeList[i].highlightStyle.y -=\r\n                            shapeList[i].animationY;\r\n\r\n                        addShapeHandle(shapeList[i]);\r\n                    }\r\n\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return Bubble;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(11);\r\n        var util = __webpack_require__(0);\r\n        var zrColor = __webpack_require__(3);\r\n        var LineShape = __webpack_require__(18);\r\n\r\n        function DynamicLine(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(DynamicLine, Base);\r\n\r\n\r\n        /**\r\n         * 动态线\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        DynamicLine.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            // 特效默认配置\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#fff'\r\n                    },\r\n                    backgroundColor : 'rgba(0, 0, 0, 0.8)',\r\n                    effectOption : {\r\n                        n : 30,\r\n                        lineWidth : 1,\r\n                        color : 'random',\r\n                        timeInterval : 100\r\n                    }\r\n                }\r\n            );\r\n\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n\r\n            var effectOption = options.effectOption;\r\n            var n = effectOption.n;\r\n            var lineWidth = effectOption.lineWidth;\r\n\r\n            var shapeList = [];\r\n            var canvasWidth = this.canvasWidth;\r\n            var canvasHeight = this.canvasHeight;\r\n            \r\n            // 初始化动画元素\r\n            for (var i = 0; i < n; i++) {\r\n                var xStart = -Math.ceil(Math.random() * 1000);\r\n                var len = Math.ceil(Math.random() * 400);\r\n                var pos = Math.ceil(Math.random() * canvasHeight);\r\n\r\n                var color = effectOption.color == 'random'\r\n                    ? zrColor.random()\r\n                    : effectOption.color;\r\n                \r\n                shapeList[i] = new LineShape({\r\n                    highlightStyle : {\r\n                        xStart : xStart,\r\n                        yStart : pos,\r\n                        xEnd : xStart + len,\r\n                        yEnd : pos,\r\n                        strokeColor : color,\r\n                        lineWidth : lineWidth\r\n                    },\r\n                    animationX : Math.ceil(Math.random() * 100),\r\n                    len : len\r\n                });\r\n            }\r\n            \r\n            return setInterval(\r\n                function() {\r\n                    addShapeHandle(background);\r\n                    \r\n                    for (var i = 0; i < n; i++) {\r\n                        var style = shapeList[i].highlightStyle;\r\n\r\n                        if (style.xStart >= canvasWidth) {\r\n                            \r\n                            shapeList[i].len = Math.ceil(Math.random() * 400);\r\n                            style.xStart = -400;\r\n                            style.xEnd = -400 + shapeList[i].len;\r\n                            style.yStart = Math.ceil(Math.random() * canvasHeight);\r\n                            style.yEnd = style.yStart;\r\n                        }\r\n\r\n                        style.xStart += shapeList[i].animationX;\r\n                        style.xEnd += shapeList[i].animationX;\r\n\r\n                        addShapeHandle(shapeList[i]);\r\n                    }\r\n\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return DynamicLine;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(11);\r\n        var util = __webpack_require__(0);\r\n        var zrColor = __webpack_require__(3);\r\n        var RingShape = __webpack_require__(43);\r\n        var SectorShape = __webpack_require__(30);\r\n\r\n        function Ring(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Ring, Base);\r\n\r\n\r\n        /**\r\n         * 圆环\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Ring.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            \r\n            // 特效默认配置\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#07a'\r\n                    },\r\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\r\n                    effect : {\r\n                        x : this.canvasWidth / 2,\r\n                        y : this.canvasHeight / 2,\r\n                        r0 : 60,\r\n                        r : 100,\r\n                        color : '#bbdcff',\r\n                        brushType: 'fill',\r\n                        textPosition : 'inside',\r\n                        textFont : 'normal 30px verdana',\r\n                        textColor : 'rgba(30, 144, 255, 0.6)',\r\n                        timeInterval : 100\r\n                    }\r\n                }\r\n            );\r\n\r\n            var effectOption = options.effect;\r\n\r\n            var textStyle = options.textStyle;\r\n            if (textStyle.x == null) {\r\n                textStyle.x = effectOption.x;\r\n            }\r\n            if (textStyle.y == null) {\r\n                textStyle.y = (effectOption.y + (effectOption.r0 + effectOption.r) / 2 - 5);\r\n            }\r\n            \r\n            var textShape = this.createTextShape(options.textStyle);\r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n\r\n            var x = effectOption.x;\r\n            var y = effectOption.y;\r\n            var r0 = effectOption.r0 + 6;\r\n            var r = effectOption.r - 6;\r\n            var color = effectOption.color;\r\n            var darkColor = zrColor.lift(color, 0.1);\r\n\r\n            var shapeRing = new RingShape({\r\n                highlightStyle : util.clone(effectOption)\r\n            });\r\n\r\n            // 初始化动画元素\r\n            var shapeList = [];\r\n            var clolrList = zrColor.getGradientColors(\r\n                [ '#ff6400', '#ffe100', '#97ff00' ], 25\r\n            );\r\n            var preAngle = 15;\r\n            var endAngle = 240;\r\n\r\n            for (var i = 0; i < 16; i++) {\r\n                shapeList.push(new SectorShape({\r\n                    highlightStyle  : {\r\n                        x : x,\r\n                        y : y,\r\n                        r0 : r0,\r\n                        r : r,\r\n                        startAngle : endAngle - preAngle,\r\n                        endAngle : endAngle,\r\n                        brushType: 'fill',\r\n                        color : darkColor\r\n                    },\r\n                    _color : zrColor.getLinearGradient(\r\n                        x + r0 * Math.cos(endAngle, true),\r\n                        y - r0 * Math.sin(endAngle, true),\r\n                        x + r0 * Math.cos(endAngle - preAngle, true),\r\n                        y - r0 * Math.sin(endAngle - preAngle, true),\r\n                        [\r\n                            [ 0, clolrList[i * 2] ],\r\n                            [ 1, clolrList[i * 2 + 1] ]\r\n                        ]\r\n                    )\r\n                }));\r\n                endAngle -= preAngle;\r\n            }\r\n            endAngle = 360;\r\n            for (var i = 0; i < 4; i++) {\r\n                shapeList.push(new SectorShape({\r\n                    highlightStyle  : {\r\n                        x : x,\r\n                        y : y,\r\n                        r0 : r0,\r\n                        r : r,\r\n                        startAngle : endAngle - preAngle,\r\n                        endAngle : endAngle,\r\n                        brushType: 'fill',\r\n                        color : darkColor\r\n                    },\r\n                    _color : zrColor.getLinearGradient(\r\n                        x + r0 * Math.cos(endAngle, true),\r\n                        y - r0 * Math.sin(endAngle, true),\r\n                        x + r0 * Math.cos(endAngle - preAngle, true),\r\n                        y - r0 * Math.sin(endAngle - preAngle, true),\r\n                        [\r\n                            [ 0, clolrList[i * 2 + 32] ],\r\n                            [ 1, clolrList[i * 2 + 33] ]\r\n                        ]\r\n                    )\r\n                }));\r\n                endAngle -= preAngle;\r\n            }\r\n\r\n            var n = 0;\r\n            if (options.progress != null) {\r\n                // 指定进度\r\n                addShapeHandle(background);\r\n\r\n                n = this.adjust(options.progress, [ 0, 1 ]).toFixed(2) * 100 / 5;\r\n                shapeRing.highlightStyle.text = n * 5 + '%';\r\n                addShapeHandle(shapeRing);\r\n\r\n                for (var i = 0; i < 20; i++) {\r\n                    shapeList[i].highlightStyle.color = i < n\r\n                        ? shapeList[i]._color : darkColor;\r\n                    addShapeHandle(shapeList[i]);\r\n                }\r\n\r\n                addShapeHandle(textShape);\r\n                refreshHandle();\r\n                return;\r\n            }\r\n\r\n            // 循环显示\r\n            return setInterval(\r\n                function() {\r\n                    addShapeHandle(background);\r\n\r\n                    n += n >= 20 ? -20 : 1;\r\n\r\n                    // shapeRing.highlightStyle.text = n * 5 + '%';\r\n                    addShapeHandle(shapeRing);\r\n\r\n                    for (var i = 0; i < 20; i++) {\r\n                        shapeList[i].highlightStyle.color = i < n\r\n                            ? shapeList[i]._color : darkColor;\r\n                        addShapeHandle(shapeList[i]);\r\n                    }\r\n\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return Ring;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(11);\r\n        var util = __webpack_require__(0);\r\n        var zrColor = __webpack_require__(3);\r\n        var zrArea = __webpack_require__(2);\r\n        var SectorShape = __webpack_require__(30);\r\n\r\n        function Spin(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Spin, Base);\r\n\r\n        /**\r\n         * 旋转\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Spin.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#fff',\r\n                        textAlign : 'start'\r\n                    },\r\n                    backgroundColor : 'rgba(0, 0, 0, 0.8)'\r\n                }\r\n            );\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            \r\n            var textGap = 10;\r\n            var textWidth = zrArea.getTextWidth(\r\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\r\n            );\r\n            var textHeight = zrArea.getTextHeight(\r\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\r\n            );\r\n            \r\n            // 特效默认配置\r\n            var effectOption =  util.merge(\r\n                this.options.effect || {},\r\n                {\r\n                    r0 : 9,\r\n                    r : 15,\r\n                    n : 18,\r\n                    color : '#fff',\r\n                    timeInterval : 100\r\n                }\r\n            );\r\n            \r\n            var location = this.getLocation(\r\n                this.options.textStyle,\r\n                textWidth + textGap + effectOption.r * 2,\r\n                Math.max(effectOption.r * 2, textHeight)\r\n            );\r\n            effectOption.x = location.x + effectOption.r;\r\n            effectOption.y = textShape.highlightStyle.y = location.y + location.height / 2;\r\n            textShape.highlightStyle.x = effectOption.x + effectOption.r + textGap;\r\n            \r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n            var n = effectOption.n;\r\n            var x = effectOption.x;\r\n            var y = effectOption.y;\r\n            var r0 = effectOption.r0;\r\n            var r = effectOption.r;\r\n            var color = effectOption.color;\r\n\r\n            // 初始化动画元素\r\n            var shapeList = [];\r\n            var preAngle = Math.round(180 / n);\r\n            for (var i = 0; i < n; i++) {\r\n                shapeList[i] = new SectorShape({\r\n                    highlightStyle  : {\r\n                        x : x,\r\n                        y : y,\r\n                        r0 : r0,\r\n                        r : r,\r\n                        startAngle : preAngle * i * 2,\r\n                        endAngle : preAngle * i * 2 + preAngle,\r\n                        color : zrColor.alpha(color, (i + 1) / n),\r\n                        brushType: 'fill'\r\n                    }\r\n                });\r\n            }\r\n\r\n            var pos = [ 0, x, y ];\r\n\r\n            return setInterval(\r\n                function() {\r\n                    addShapeHandle(background);\r\n                    pos[0] -= 0.3;\r\n                    for (var i = 0; i < n; i++) {\r\n                        shapeList[i].rotation = pos;\r\n                        addShapeHandle(shapeList[i]);\r\n                    }\r\n\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return Spin;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n        var Base = __webpack_require__(11);\r\n        var util = __webpack_require__(0);\r\n        var zrArea = __webpack_require__(2);\r\n        var RingShape = __webpack_require__(43);\r\n        var DropletShape = __webpack_require__(36);\r\n        var CircleShape = __webpack_require__(23);\r\n\r\n        function Whirling(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Whirling, Base);\r\n\r\n        /**\r\n         * 旋转水滴\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Whirling.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#888',\r\n                        textAlign : 'start'\r\n                    },\r\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)'\r\n                }\r\n            );\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            \r\n            var textGap = 10;\r\n            var textWidth = zrArea.getTextWidth(\r\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\r\n            );\r\n            var textHeight = zrArea.getTextHeight(\r\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\r\n            );\r\n            \r\n            // 特效默认配置\r\n            var effectOption = util.merge(\r\n                this.options.effect || {},\r\n                {\r\n                    r : 18,\r\n                    colorIn : '#fff',\r\n                    colorOut : '#555',\r\n                    colorWhirl : '#6cf',\r\n                    timeInterval : 50\r\n                }\r\n            );\r\n            \r\n            var location = this.getLocation(\r\n                this.options.textStyle,\r\n                textWidth + textGap + effectOption.r * 2,\r\n                Math.max(effectOption.r * 2, textHeight)\r\n            );\r\n            effectOption.x = location.x + effectOption.r;\r\n            effectOption.y = textShape.highlightStyle.y = location.y + location.height / 2;\r\n            textShape.highlightStyle.x = effectOption.x + effectOption.r + textGap;\r\n            \r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n            // 初始化动画元素\r\n            var droplet = new DropletShape({\r\n                highlightStyle : {\r\n                    a : Math.round(effectOption.r / 2),\r\n                    b : Math.round(effectOption.r - effectOption.r / 6),\r\n                    brushType : 'fill',\r\n                    color : effectOption.colorWhirl\r\n                }\r\n            });\r\n            var circleIn = new CircleShape({\r\n                highlightStyle : {\r\n                    r : Math.round(effectOption.r / 6),\r\n                    brushType : 'fill',\r\n                    color : effectOption.colorIn\r\n                }\r\n            });\r\n            var circleOut = new RingShape({\r\n                highlightStyle : {\r\n                    r0 : Math.round(effectOption.r - effectOption.r / 3),\r\n                    r : effectOption.r,\r\n                    brushType : 'fill',\r\n                    color : effectOption.colorOut\r\n                }\r\n            });\r\n\r\n            var pos = [ 0, effectOption.x, effectOption.y ];\r\n\r\n            droplet.highlightStyle.x\r\n                = circleIn.highlightStyle.x\r\n                = circleOut.highlightStyle.x\r\n                = pos[1];\r\n            droplet.highlightStyle.y\r\n                = circleIn.highlightStyle.y\r\n                = circleOut.highlightStyle.y\r\n                = pos[2];\r\n\r\n            return setInterval(\r\n                function() {\r\n                    addShapeHandle(background);\r\n                    addShapeHandle(circleOut);\r\n                    pos[0] -= 0.3;\r\n                    droplet.rotation = pos;\r\n                    addShapeHandle(droplet);\r\n                    addShapeHandle(circleIn);\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return Whirling;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n\r\nvar theme = {\r\n    // 默认色板\r\n    color: [\r\n        '#2ec7c9','#b6a2de','#5ab1ef','#ffb980','#d87a80',\r\n        '#8d98b3','#e5cf0d','#97b552','#95706d','#dc69aa',\r\n        '#07a2a4','#9a7fd1','#588dd5','#f5994e','#c05050',\r\n        '#59678c','#c9ab00','#7eb00a','#6f5553','#c14089'\r\n    ],\r\n\r\n    // 图表标题\r\n    title: {\r\n        textStyle: {\r\n            fontWeight: 'normal',\r\n            color: '#008acd'          // 主标题文字颜色\r\n        }\r\n    },\r\n    \r\n    // 值域\r\n    dataRange: {\r\n        itemWidth: 15,\r\n        color: ['#5ab1ef','#e0ffff']\r\n    },\r\n\r\n    // 工具箱\r\n    toolbox: {\r\n        color : ['#1e90ff', '#1e90ff', '#1e90ff', '#1e90ff'],\r\n        effectiveColor : '#ff4500'\r\n    },\r\n\r\n    // 提示框\r\n    tooltip: {\r\n        backgroundColor: 'rgba(50,50,50,0.5)',     // 提示背景颜色，默认为透明度为0.7的黑色\r\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n            type : 'line',         // 默认为直线，可选为：'line' | 'shadow'\r\n            lineStyle : {          // 直线指示器样式设置\r\n                color: '#008acd'\r\n            },\r\n            crossStyle: {\r\n                color: '#008acd'\r\n            },\r\n            shadowStyle : {                     // 阴影指示器样式设置\r\n                color: 'rgba(200,200,200,0.2)'\r\n            }\r\n        }\r\n    },\r\n\r\n    // 区域缩放控制器\r\n    dataZoom: {\r\n        dataBackgroundColor: '#efefff',            // 数据背景颜色\r\n        fillerColor: 'rgba(182,162,222,0.2)',   // 填充颜色\r\n        handleColor: '#008acd'    // 手柄颜色\r\n    },\r\n\r\n    // 网格\r\n    grid: {\r\n        borderColor: '#eee'\r\n    },\r\n\r\n    // 类目轴\r\n    categoryAxis: {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#008acd'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: ['#eee']\r\n            }\r\n        }\r\n    },\r\n\r\n    // 数值型坐标轴默认参数\r\n    valueAxis: {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#008acd'\r\n            }\r\n        },\r\n        splitArea : {\r\n            show : true,\r\n            areaStyle : {\r\n                color: ['rgba(250,250,250,0.1)','rgba(200,200,200,0.1)']\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: ['#eee']\r\n            }\r\n        }\r\n    },\r\n\r\n    polar : {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#ddd'\r\n            }\r\n        },\r\n        splitArea : {\r\n            show : true,\r\n            areaStyle : {\r\n                color: ['rgba(250,250,250,0.2)','rgba(200,200,200,0.2)']\r\n            }\r\n        },\r\n        splitLine : {\r\n            lineStyle : {\r\n                color : '#ddd'\r\n            }\r\n        }\r\n    },\r\n\r\n    timeline : {\r\n        lineStyle : {\r\n            color : '#008acd'\r\n        },\r\n        controlStyle : {\r\n            normal : { color : '#008acd'},\r\n            emphasis : { color : '#008acd'}\r\n        },\r\n        symbol : 'emptyCircle',\r\n        symbolSize : 3\r\n    },\r\n\r\n    // 柱形图默认参数\r\n    bar: {\r\n        itemStyle: {\r\n            normal: {\r\n                barBorderRadius: 5\r\n            },\r\n            emphasis: {\r\n                barBorderRadius: 5\r\n            }\r\n        }\r\n    },\r\n\r\n    // 折线图默认参数\r\n    line: {\r\n        smooth : true,\r\n        symbol: 'emptyCircle',  // 拐点图形类型\r\n        symbolSize: 3           // 拐点图形大小\r\n    },\r\n    \r\n    // K线图默认参数\r\n    k: {\r\n        itemStyle: {\r\n            normal: {\r\n                color: '#d87a80',       // 阳线填充颜色\r\n                color0: '#2ec7c9',      // 阴线填充颜色\r\n                lineStyle: {\r\n                    color: '#d87a80',   // 阳线边框颜色\r\n                    color0: '#2ec7c9'   // 阴线边框颜色\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    // 散点图默认参数\r\n    scatter: {\r\n        symbol: 'circle',    // 图形类型\r\n        symbolSize: 4        // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n    },\r\n\r\n    // 雷达图默认参数\r\n    radar : {\r\n        symbol: 'emptyCircle',    // 图形类型\r\n        symbolSize:3\r\n        //symbol: null,         // 拐点图形类型\r\n        //symbolRotate : null,  // 图形旋转控制\r\n    },\r\n\r\n    map: {\r\n        itemStyle: {\r\n            normal: {\r\n                areaStyle: {\r\n                    color: '#ddd'\r\n                },\r\n                label: {\r\n                    textStyle: {\r\n                        color: '#d87a80'\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {                 // 也是选中样式\r\n                areaStyle: {\r\n                    color: '#fe994e'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    force : {\r\n        itemStyle: {\r\n            normal: {\r\n                linkStyle : {\r\n                    color : '#1e90ff'\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    chord : {\r\n        itemStyle : {\r\n            normal : {\r\n                borderWidth: 1,\r\n                borderColor: 'rgba(128, 128, 128, 0.5)',\r\n                chordStyle : {\r\n                    lineStyle : {\r\n                        color : 'rgba(128, 128, 128, 0.5)'\r\n                    }\r\n                }\r\n            },\r\n            emphasis : {\r\n                borderWidth: 1,\r\n                borderColor: 'rgba(128, 128, 128, 0.5)',\r\n                chordStyle : {\r\n                    lineStyle : {\r\n                        color : 'rgba(128, 128, 128, 0.5)'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    gauge : {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: [[0.2, '#2ec7c9'],[0.8, '#5ab1ef'],[1, '#d87a80']], \r\n                width: 10\r\n            }\r\n        },\r\n        axisTick: {            // 坐标轴小标记\r\n            splitNumber: 10,   // 每份split细分多少段\r\n            length :15,        // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: 'auto'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            length :22,         // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: 'auto'\r\n            }\r\n        },\r\n        pointer : {\r\n            width : 5\r\n        }\r\n    },\r\n    \r\n    textStyle: {\r\n        fontFamily: '微软雅黑, Arial, Verdana, sans-serif'\r\n    }\r\n};\r\n\r\n    return theme;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n\r\nvar theme = {\r\n    // 默认色板\r\n    color: [\r\n        '#C1232B','#B5C334','#FCCE10','#E87C25','#27727B',\r\n        '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD',\r\n        '#D7504B','#C6E579','#F4E001','#F0805A','#26C0C0'\r\n    ],\r\n\r\n    // 图表标题\r\n    title: {\r\n        textStyle: {\r\n            fontWeight: 'normal',\r\n            color: '#27727B'          // 主标题文字颜色\r\n        }\r\n    },\r\n\r\n    // 值域\r\n    dataRange: {\r\n        x:'right',\r\n        y:'center',\r\n        itemWidth: 5,\r\n        itemHeight:25,\r\n        color:['#C1232B','#FCCE10']\r\n    },\r\n\r\n    toolbox: {\r\n        color : [\r\n            '#C1232B','#B5C334','#FCCE10','#E87C25','#27727B',\r\n            '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD'\r\n        ],\r\n        effectiveColor : '#ff4500'\r\n    },\r\n\r\n    // 提示框\r\n    tooltip: {\r\n        backgroundColor: 'rgba(50,50,50,0.5)',     // 提示背景颜色，默认为透明度为0.7的黑色\r\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n            type : 'line',         // 默认为直线，可选为：'line' | 'shadow'\r\n            lineStyle : {          // 直线指示器样式设置\r\n                color: '#27727B',\r\n                type: 'dashed'\r\n            },\r\n            crossStyle: {\r\n                color: '#27727B'\r\n            },\r\n            shadowStyle : {                     // 阴影指示器样式设置\r\n                color: 'rgba(200,200,200,0.3)'\r\n            }\r\n        }\r\n    },\r\n\r\n    // 区域缩放控制器\r\n    dataZoom: {\r\n        dataBackgroundColor: 'rgba(181,195,52,0.3)',            // 数据背景颜色\r\n        fillerColor: 'rgba(181,195,52,0.2)',   // 填充颜色\r\n        handleColor: '#27727B'    // 手柄颜色\r\n    },\r\n\r\n    // 网格\r\n    grid: {\r\n        borderWidth:0\r\n    },\r\n\r\n    // 类目轴\r\n    categoryAxis: {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#27727B'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            show: false\r\n        }\r\n    },\r\n\r\n    // 数值型坐标轴默认参数\r\n    valueAxis: {\r\n        axisLine: {            // 坐标轴线\r\n            show: false\r\n        },\r\n        splitArea : {\r\n            show: false\r\n        },\r\n        splitLine: {           // 分隔线\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: ['#ccc'],\r\n                type: 'dashed'\r\n            }\r\n        }\r\n    },\r\n\r\n    polar : {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#ddd'\r\n            }\r\n        },\r\n        splitArea : {\r\n            show : true,\r\n            areaStyle : {\r\n                color: ['rgba(250,250,250,0.2)','rgba(200,200,200,0.2)']\r\n            }\r\n        },\r\n        splitLine : {\r\n            lineStyle : {\r\n                color : '#ddd'\r\n            }\r\n        }\r\n    },\r\n\r\n    timeline : {\r\n        lineStyle : {\r\n            color : '#27727B'\r\n        },\r\n        controlStyle : {\r\n            normal : { color : '#27727B'},\r\n            emphasis : { color : '#27727B'}\r\n        },\r\n        symbol : 'emptyCircle',\r\n        symbolSize : 3\r\n    },\r\n\r\n    // 折线图默认参数\r\n    line: {\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth:2,\r\n                borderColor:'#fff',\r\n                lineStyle: {\r\n                    width: 3\r\n                }\r\n            },\r\n            emphasis: {\r\n                borderWidth:0\r\n            }\r\n        },\r\n        symbol: 'circle',  // 拐点图形类型\r\n        symbolSize: 3.5           // 拐点图形大小\r\n    },\r\n\r\n    // K线图默认参数\r\n    k: {\r\n        itemStyle: {\r\n            normal: {\r\n                color: '#C1232B',       // 阳线填充颜色\r\n                color0: '#B5C334',      // 阴线填充颜色\r\n                lineStyle: {\r\n                    width: 1,\r\n                    color: '#C1232B',   // 阳线边框颜色\r\n                    color0: '#B5C334'   // 阴线边框颜色\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    // 散点图默认参数\r\n    scatter: {\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth:1,\r\n                borderColor:'rgba(200,200,200,0.5)'\r\n            },\r\n            emphasis: {\r\n                borderWidth:0\r\n            }\r\n        },\r\n        symbol: 'star4',    // 图形类型\r\n        symbolSize: 4        // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n    },\r\n\r\n    // 雷达图默认参数\r\n    radar : {\r\n        symbol: 'emptyCircle',    // 图形类型\r\n        symbolSize:3\r\n        //symbol: null,         // 拐点图形类型\r\n        //symbolRotate : null,  // 图形旋转控制\r\n    },\r\n\r\n    map: {\r\n        itemStyle: {\r\n            normal: {\r\n                areaStyle: {\r\n                    color: '#ddd'\r\n                },\r\n                label: {\r\n                    textStyle: {\r\n                        color: '#C1232B'\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {                 // 也是选中样式\r\n                areaStyle: {\r\n                    color: '#fe994e'\r\n                },\r\n                label: {\r\n                    textStyle: {\r\n                        color: 'rgb(100,0,0)'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    force : {\r\n        itemStyle: {\r\n            normal: {\r\n                linkStyle : {\r\n                    color : '#27727B'\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    chord : {\r\n        itemStyle : {\r\n            normal : {\r\n                borderWidth: 1,\r\n                borderColor: 'rgba(128, 128, 128, 0.5)',\r\n                chordStyle : {\r\n                    lineStyle : {\r\n                        color : 'rgba(128, 128, 128, 0.5)'\r\n                    }\r\n                }\r\n            },\r\n            emphasis : {\r\n                borderWidth: 1,\r\n                borderColor: 'rgba(128, 128, 128, 0.5)',\r\n                chordStyle : {\r\n                    lineStyle : {\r\n                        color : 'rgba(128, 128, 128, 0.5)'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    gauge : {\r\n        center:['50%','80%'],\r\n        radius:'100%',\r\n        startAngle: 180,\r\n        endAngle : 0,\r\n        axisLine: {            // 坐标轴线\r\n            show: true,        // 默认显示，属性show控制显示与否\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: [[0.2, '#B5C334'],[0.8, '#27727B'],[1, '#C1232B']],\r\n                width: '40%'\r\n            }\r\n        },\r\n        axisTick: {            // 坐标轴小标记\r\n            splitNumber: 2,   // 每份split细分多少段\r\n            length: 5,        // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#fff'\r\n            }\r\n        },\r\n        axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel\r\n            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                color: '#fff',\r\n                fontWeight:'bolder'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            length: '5%',         // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: '#fff'\r\n            }\r\n        },\r\n        pointer : {\r\n            width : '40%',\r\n            length: '80%',\r\n            color: '#fff'\r\n        },\r\n        title : {\r\n          offsetCenter: [0, -20],       // x, y，单位px\r\n          textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n            color: 'auto',\r\n            fontSize: 20\r\n          }\r\n        },\r\n        detail : {\r\n            offsetCenter: [0, 0],       // x, y，单位px\r\n            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                color: 'auto',\r\n                fontSize: 40\r\n            }\r\n        }\r\n    },\r\n\r\n    textStyle: {\r\n        fontFamily: '微软雅黑, Arial, Verdana, sans-serif'\r\n    }\r\n};\r\n\r\n    return theme;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts图表类：字符云\r\n * @desc\r\n * @author  clmtulip(车丽美, clmtulip@gmail.com) liyong(liyong1239@163.com)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var ChartBase = __webpack_require__(33);\r\n\r\n    var TextShape = __webpack_require__(16);\r\n    var CloudLayout = __webpack_require__(92);\r\n\r\n    __webpack_require__(94);\r\n    __webpack_require__(95);\r\n    var ecConfig = __webpack_require__(4);\r\n    var ecData = __webpack_require__(14);\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrColor = __webpack_require__(3);\r\n\r\n    ecConfig.wordCloud = {\r\n        zlevel: 0,\r\n        z: 2,\r\n        clickable: true,\r\n\r\n        center: ['50%', '50%'],\r\n\r\n        size: ['40%', '40%'],\r\n\r\n        // 字体旋转角度, 随机从指定数组中取\r\n        textRotation: [0, 90],\r\n\r\n        // 字体之间的间隙  单位px 默认为0\r\n        textPadding: 0,\r\n\r\n        // 字体大小 是否自动缩放，使得尽可能的 字体能够显示\r\n        autoSize: {\r\n            enable: true,\r\n            // 字体缩放后的最小大小\r\n            minSize: 12\r\n        },\r\n\r\n        itemStyle: {\r\n            normal: {\r\n                textStyle: {\r\n                    // 默认字体大小跟 data.value 一样\r\n                    fontSize: function (data) {\r\n                        return data.value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function Cloud(ecTheme, messageCenter, zr, option, myChart) {\r\n        ChartBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.refresh(option);\r\n    }\r\n\r\n    Cloud.prototype = {\r\n        type: ecConfig.CHART_TYPE_WORDCLOUD,\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.series = newOption.series;\r\n            }\r\n\r\n            //init data\r\n            this._init();\r\n        },\r\n        /**\r\n         *   初始化数据\r\n         *   @private\r\n         */\r\n        _init: function () {\r\n            var series = this.series;\r\n            this.backupShapeList();\r\n\r\n            var legend = this.component.legend;\r\n            for (var i = 0; i < series.length; i++) {\r\n                if (series[i].type === ecConfig.CHART_TYPE_WORDCLOUD) {\r\n                    series[i] = this.reformOption(series[i]);\r\n                    var serieName = series[i].name || '';\r\n\r\n                    this.selectedMap[serieName] = legend ? legend.isSelected(serieName) : true;\r\n\r\n                    if (! this.selectedMap[serieName]) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.buildMark(i);\r\n\r\n                    this._initSerie(series[i]);\r\n                }\r\n            }\r\n        },\r\n\r\n        _initSerie: function (serie) {\r\n\r\n            var textStyle = serie.itemStyle.normal.textStyle;\r\n\r\n            var size = [\r\n                this.parsePercent(serie.size[0], this.zr.getWidth()) || 200,\r\n                this.parsePercent(serie.size[1], this.zr.getHeight()) || 200\r\n            ]\r\n            var center = this.parseCenter(this.zr, serie.center);\r\n\r\n            var layoutConfig = {\r\n                size: size,\r\n\r\n                wordletype: {\r\n                    autoSizeCal: serie.autoSize,\r\n                },\r\n\r\n                center: center,\r\n\r\n                rotate: serie.textRotation,\r\n                padding: serie.textPadding,\r\n\r\n                font: textStyle.fontFamily,\r\n                fontSize: textStyle.fontSize,\r\n                fontWeight: textStyle.fontWeight,\r\n                fontStyle: textStyle.fontStyle,\r\n\r\n                text: function (d) {\r\n                    return d.name;\r\n                },\r\n\r\n                data: serie.data\r\n            };\r\n\r\n            // 字符云的布局方法\r\n            var clouds = new CloudLayout(layoutConfig);\r\n            var self = this;\r\n\r\n            // 字符位置确定后 执行 以下函数\r\n            clouds.end(function (d) {\r\n                self._buildShapes(d);\r\n            });\r\n\r\n            // 布局算法 开始执行\r\n            clouds.start();\r\n        },\r\n\r\n        /**\r\n         * 通过 data 绘制图形\r\n         * @param data\r\n         * @private\r\n         */\r\n        _buildShapes: function (data) {\r\n            //数据的 再度初始化，使得最终 text 是以自己的坐标为中心。。。\r\n            var len = data.length;\r\n            for (var i = 0; i < len; i++) {\r\n                this._buildTextShape(data[i], 0, i);\r\n            }\r\n\r\n            this.addShapeList();\r\n        },\r\n\r\n        /**\r\n         * 绘制 每个 text\r\n         * @param oneText {Object}\r\n         * @param seriesIndex {int}\r\n         * @param dataIndex {int}\r\n         * @private\r\n         */\r\n        _buildTextShape: function (data, seriesIndex) {\r\n            var series = this.series;\r\n            var serie = series[seriesIndex];\r\n            var serieName = serie.name || '';\r\n            var data = data;\r\n            var dataIndex = data.dataIndex;\r\n            var queryTarget = [\r\n                data,\r\n                serie\r\n            ];\r\n\r\n            // dataRange 选择结束\r\n            var legend = this.component.legend;\r\n            var defaultColor = legend ? legend.getColor(serieName) : this.zr.getColor(seriesIndex);\r\n            // 多级控制\r\n            var normal = this.deepMerge(queryTarget, 'itemStyle.normal') || {};\r\n            var emphasis = this.deepMerge(queryTarget, 'itemStyle.emphasis') || {};\r\n            var normalColor = this.getItemStyleColor(normal.color, seriesIndex, dataIndex, data)\r\n                || defaultColor;\r\n\r\n            var emphasisColor = this.getItemStyleColor(\r\n                emphasis.color, seriesIndex, dataIndex, data\r\n            )\r\n                || (typeof normalColor === 'string'\r\n                    ? zrColor.lift(normalColor, -0.2)\r\n                    : normalColor\r\n                    );\r\n\r\n            var textShape = new TextShape({\r\n                zlevel: serie.zlevel,\r\n                z: serie.z,\r\n                hoverable: true,\r\n                clickable: this.deepQuery(queryTarget, 'clickable'),\r\n                style: {\r\n                    x: 0,\r\n                    y: 0,\r\n                    text: data.text,\r\n                    color: normalColor,\r\n                    textFont: [data.style,\r\n                                data.weight,\r\n                                data.size + 'px',\r\n                                data.font].join(' '),\r\n                    textBaseline: 'alphabetic',\r\n                    textAlign: 'center'\r\n                },\r\n                highlightStyle: {\r\n                    brushType: emphasis.borderWidth ? 'both' : 'fill',\r\n                    color: emphasisColor,\r\n                    lineWidth: emphasis.borderWidth || 0,\r\n                    strokeColor: emphasis.borderColor\r\n                },\r\n                position: [\r\n                    data.x,\r\n                    data.y\r\n                ],\r\n                rotation: [\r\n                    -data.rotate / 180 * Math.PI,\r\n                    0,\r\n                    0\r\n                ]\r\n            });\r\n\r\n            ecData.pack(\r\n                textShape,\r\n                serie, seriesIndex,\r\n                data, dataIndex,\r\n                data.name\r\n            );\r\n\r\n            this.shapeList.push(textShape);\r\n        }\r\n    };\r\n\r\n\r\n    zrUtil.inherits(Cloud, ChartBase);\r\n\r\n    // 图表注册\r\n    __webpack_require__(29).define('wordCloud', Cloud);\r\n\r\n    return Cloud;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * @author clmtulip(车丽美, clmtulip@gmail.com) liyong(liyong1239@163.com)\r\n */\r\n\r\n// Modified from d3-cloud\r\n/*\r\nCopyright (c) 2013, Jason Davies.\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n  * Redistributions of source code must retain the above copyright notice, this\r\n    list of conditions and the following disclaimer.\r\n\r\n  * Redistributions in binary form must reproduce the above copyright notice,\r\n    this list of conditions and the following disclaimer in the documentation\r\n    and/or other materials provided with the distribution.\r\n\r\n  * The name Jason Davies may not be used to endorse or promote products\r\n    derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,\r\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\r\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\r\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var ZeroArray = __webpack_require__(93);\r\n    var zrUtil = __webpack_require__(0);\r\n\r\n    function CloudLayout(option) {\r\n        this._init(option);\r\n    }\r\n\r\n    CloudLayout.prototype = {\r\n        /**\r\n         * 启动计算过程\r\n         */\r\n        start: function () {\r\n            var board = null;\r\n            var maxWit = 0;\r\n            var maxHit = 0;\r\n            var maxArea = 0;\r\n            var i = -1;\r\n            var tags = [];\r\n            var maxBounds = null; /*图片的最大可用边框*/\r\n            // 根据配置 初始化 字符云数组\r\n            var data = this.wordsdata;\r\n            var dfop = this.defaultOption;\r\n            var wordletype = dfop.wordletype;\r\n            var size = dfop.size;\r\n            var that = this;\r\n\r\n            //得到 ZeroArray 传递过来的 初始值 和面积 最大宽度等值\r\n            var zeroArrayObj = new ZeroArray({\r\n                type: wordletype.type,\r\n                width: size[0],\r\n                height: size[1]\r\n            });\r\n\r\n            zeroArrayObj.calculate(function (options) {\r\n                board = options.initarr;\r\n                maxWit = options.maxWit;\r\n                maxHit = options.maxHit;\r\n                maxArea = options.area;\r\n                maxBounds = options.imgboard;\r\n                startStep();\r\n            }, this);\r\n\r\n            return this;\r\n\r\n            function startStep() {\r\n                that.totalArea = maxArea;\r\n                //字体大小的确定，可配置，根据开关 确定是否要根据面积来定。。\r\n                if (wordletype.autoSizeCal.enable) {\r\n                    that._autoCalTextSize(data, maxArea, maxWit, maxHit, wordletype.autoSizeCal.minSize);\r\n                }\r\n\r\n                if (dfop.timer) {\r\n                    clearInterval(dfop.timer);\r\n                }\r\n                dfop.timer = setInterval(step, 0);\r\n                step();\r\n            }\r\n\r\n            function step() {\r\n                var start = +new Date;\r\n                var n = data.length;\r\n                var d;\r\n                while (+new Date - start < dfop.timeInterval && ++i < n && dfop.timer) {\r\n                    d = data[i];\r\n                    // x y 的初始值\r\n                    d.x = size[0] >> 1;\r\n                    d.y = size[1] >> 1;\r\n                    //得到每个 标签所占用的具体的像素点 用 0 1 标记， 每32位作为一个数字\r\n                    that._cloudSprite(d, data, i);\r\n                    //place 放置每个字符， 成功后 以 event 事件通知\r\n                    if (d.hasText && that._place(board, d, maxBounds)) {\r\n\r\n                        tags.push(d);\r\n                        //                        event.word(d);\r\n                        // Temporary hack\r\n                        d.x -= size[0] >> 1;\r\n                        d.y -= size[1] >> 1;\r\n                    }\r\n\r\n                }\r\n                //全部放置完成 停止cloud，并触发 'end'事件\r\n                if (i >= n) {\r\n                    that.stop();\r\n                    that._fixTagPosition(tags);\r\n                    dfop.endcallback(tags);\r\n                }\r\n            }\r\n        },\r\n\r\n        _fixTagPosition: function (tags) {\r\n            var center = this.defaultOption.center;\r\n\r\n            for (var i = 0, len = tags.length; i < len; i++) {\r\n                tags[i].x += center[0];\r\n                tags[i].y += center[1];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 停止计算过程\r\n         */\r\n        stop: function () {\r\n            if (this.defaultOption.timer) {\r\n                clearInterval(this.defaultOption.timer);\r\n                this.defaultOption.timer = null;\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 计算结束后 执行V\r\n         * @param v\r\n         */\r\n        end: function (v) {\r\n            if (v) {\r\n                this.defaultOption.endcallback = v;\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 初始化\r\n         * @param option\r\n         * @private\r\n         */\r\n        _init: function (option) {\r\n            this.defaultOption = {};\r\n\r\n            /*初始化属性*/\r\n            this._initProperty(option);\r\n            /*初始化方法*/\r\n            this._initMethod(option);\r\n            /*初始化 canvas 画板*/\r\n            this._initCanvas();\r\n            /*初始化数据*/\r\n            this._initData(option.data);\r\n        },\r\n\r\n        _initData: function (datas) {\r\n            var that = this;\r\n            var thatop = that.defaultOption;\r\n            this.wordsdata = datas.map(function (d, i) {\r\n                d.dataIndex = i;\r\n\r\n                d.text = thatop.text.call(that, d, i);\r\n\r\n                d.font = thatop.font.call(that, d, i);\r\n                d.style = thatop.fontStyle.call(that, d, i);\r\n                d.weight = thatop.fontWeight.call(that, d, i);\r\n\r\n                // 字体的旋转角度\r\n                d.rotate = thatop.rotate.call(that, d, i);\r\n                // 字体的大小 单位px\r\n                d.size = ~~thatop.fontSize.call(that, d, i);\r\n                // 字体间的间距\r\n                d.padding = thatop.padding.call(that, d, i);\r\n\r\n                return d;\r\n            }).sort(function (a, b) {\r\n                return b.value - a.value;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 默认函数的定义 及初始化过程\r\n         * @private\r\n         */\r\n        _initMethod: function (option) {\r\n            /*数据初始化中要用到的函数*/\r\n            var dfop = this.defaultOption;\r\n            dfop.text = (option.text) ? functor(option.text) : cloudText;\r\n            dfop.font = (option.font) ? functor(option.font) : cloudFont;\r\n            dfop.fontSize = (option.fontSize) ? functor(option.fontSize) : cloudFontSize;\r\n            dfop.fontStyle = (option.fontStyle) ? functor(option.fontStyle) : cloudFontNormal;\r\n            dfop.fontWeight = (option.fontWeight) ? functor(option.fontWeight) : cloudFontNormal;\r\n\r\n            dfop.rotate = (option.rotate) ? newCloudRotate(option.rotate) : cloudRotate;\r\n\r\n            dfop.padding = (option.padding) ? functor(option.padding) : cloudPadding;\r\n\r\n            dfop.center = option.center;\r\n\r\n            /*其它函数*/\r\n            dfop.spiral = archimedeanSpiral;\r\n            dfop.endcallback = function () {\r\n            };\r\n            dfop.rectangularSpiral = rectangularSpiral;\r\n            dfop.archimedeanSpiral = archimedeanSpiral;\r\n\r\n            function cloudText(d) {\r\n                return d.name;\r\n            }\r\n\r\n            function cloudFont() {\r\n                return \"sans-serif\";\r\n            }\r\n\r\n            function cloudFontNormal() {\r\n                return \"normal\";\r\n            }\r\n\r\n            function cloudFontSize(d) {\r\n                return d.value;\r\n            }\r\n\r\n            function cloudRotate() {\r\n                return 0;\r\n            }\r\n\r\n            function newCloudRotate(rotate) {\r\n                return function () {\r\n                    return rotate[Math.round(Math.random() * (rotate.length - 1))]\r\n                }\r\n            }\r\n\r\n            function cloudPadding() {\r\n                return 0;\r\n            }\r\n\r\n            function archimedeanSpiral(size) {\r\n                var e = size[0] / size[1];\r\n                return function (t) {\r\n                    return [\r\n                            e * (t *= .1) * Math.cos(t),\r\n                            t * Math.sin(t)\r\n                    ];\r\n                };\r\n            }\r\n\r\n            function rectangularSpiral(size) {\r\n                var dy = 4;\r\n                var dx = dy * size[0] / size[1];\r\n                var x = 0;\r\n                var y = 0;\r\n                return function (t) {\r\n                    var sign = t < 0 ? -1 : 1;\r\n                    // See triangular numbers: T_n = n * (n + 1) / 2.\r\n                    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\r\n                        case 0:\r\n                            x += dx;\r\n                            break;\r\n                        case 1:\r\n                            y += dy;\r\n                            break;\r\n                        case 2:\r\n                            x -= dx;\r\n                            break;\r\n                        default:\r\n                            y -= dy;\r\n                            break;\r\n                    }\r\n                    return [\r\n                        x,\r\n                        y\r\n                    ];\r\n                };\r\n            }\r\n\r\n            function functor(v) {\r\n                return typeof v === \"function\" ? v : function () {\r\n                    return v;\r\n                };\r\n            }\r\n\r\n        },\r\n\r\n        _initProperty: function (option) {\r\n            var dfop = this.defaultOption;\r\n            //默认值\r\n            dfop.size = option.size || [\r\n                256,\r\n                256\r\n            ];\r\n            dfop.wordletype = option.wordletype;\r\n            dfop.words = option.words || [];\r\n            dfop.timeInterval = Infinity;\r\n            dfop.timer = null;\r\n            dfop.spirals = {\r\n                archimedean: dfop.archimedeanSpiral,\r\n                rectangular: dfop.rectangularSpiral\r\n            };\r\n\r\n            zrUtil.merge(dfop, {\r\n                size: [\r\n                    256,\r\n                    256\r\n                ],\r\n                wordletype: {\r\n                    type: 'RECT',\r\n                    areaPresent: .058,\r\n                    autoSizeCal: {\r\n                        enable: true,\r\n                        minSize: 12\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _initCanvas: function () {\r\n            var cloudRadians = Math.PI / 180;\r\n            var cw = 1 << 11 >> 5;\r\n            var ch = 1 << 11;\r\n            var canvas;\r\n            var ratio = 1;\r\n\r\n            if (typeof document !== \"undefined\") {\r\n                canvas = document.createElement(\"canvas\");\r\n                canvas.width = 1;\r\n                canvas.height = 1;\r\n                ratio = Math.sqrt(\r\n                    canvas.getContext(\"2d\")\r\n                        .getImageData(0, 0, 1, 1)\r\n                        .data.length >> 2\r\n                );\r\n                canvas.width = (cw << 5) / ratio;\r\n                canvas.height = ch / ratio;\r\n            }\r\n            else {\r\n                // Attempt to use node-canvas.\r\n                canvas = new Canvas(cw << 5, ch);\r\n            }\r\n\r\n            var c = canvas.getContext(\"2d\");\r\n            c.fillStyle = c.strokeStyle = \"red\";\r\n            c.textAlign = \"center\";\r\n\r\n            this.defaultOption.c = c;\r\n            this.defaultOption.cw = cw;\r\n            this.defaultOption.ch = ch;\r\n            this.defaultOption.ratio = ratio;\r\n            this.defaultOption.cloudRadians = cloudRadians;\r\n        },\r\n\r\n\r\n        _cloudSprite: function (d, data, di) {\r\n            if (d.sprite) {\r\n                return;\r\n            }\r\n\r\n            var cw = this.defaultOption.cw;\r\n            var ch = this.defaultOption.ch;\r\n            var c = this.defaultOption.c;\r\n            var ratio = this.defaultOption.ratio;\r\n            var cloudRadians = this.defaultOption.cloudRadians;\r\n\r\n            c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\r\n            var x = 0;\r\n            var y = 0;\r\n            var maxh = 0;\r\n            var n = data.length;\r\n            --di;\r\n            while (++di < n) {\r\n                d = data[di];\r\n                c.save();\r\n                c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\r\n                //得到 字体 实际的 宽和高\r\n                var w = c.measureText(d.text + \"m\").width * ratio;\r\n                var h = d.size << 1;\r\n                //得到 d 所占用的具体的宽度 和高度  并取整\r\n                if (d.rotate) {\r\n                    var sr = Math.sin(d.rotate * cloudRadians);\r\n                    var cr = Math.cos(d.rotate * cloudRadians);\r\n                    var wcr = w * cr;\r\n                    var wsr = w * sr;\r\n                    var hcr = h * cr;\r\n                    var hsr = h * sr;\r\n                    w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\r\n                    h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\r\n                }\r\n                else {\r\n                    w = (w + 0x1f) >> 5 << 5;\r\n                }\r\n                if (h > maxh) {\r\n                    maxh = h;\r\n                }\r\n                //如果 字体 超出了 宽度 换更远的一行。。。\r\n                if (x + w >= (cw << 5)) {\r\n                    x = 0;\r\n                    y += maxh;\r\n                    maxh = 0;\r\n                }\r\n                if (y + h >= ch) {\r\n                    break;\r\n                }\r\n                c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\r\n                if (d.rotate) {\r\n                    c.rotate(d.rotate * cloudRadians);\r\n                }\r\n                c.fillText(d.text, 0, 0);\r\n                if (d.padding) {\r\n                    c.lineWidth = 2 * d.padding;\r\n                    c.strokeText(d.text, 0, 0);\r\n                }\r\n                c.restore();\r\n                d.width = w;\r\n                d.height = h;\r\n                // xoff  yoff 为 d在画板中的坐标位置\r\n                d.xoff = x;\r\n                d.yoff = y;\r\n                d.x1 = w >> 1;\r\n                d.y1 = h >> 1;\r\n                d.x0 = -d.x1;\r\n                d.y0 = -d.y1;\r\n                d.hasText = true;\r\n                x += w;\r\n            }\r\n            //得到 所在 区域的 像素值。。进而 确定 其 y的位置。。。\r\n            var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data;\r\n            var sprite = [];\r\n            while (--di >= 0) {\r\n                d = data[di];\r\n                if (!d.hasText) {\r\n                    continue;\r\n                }\r\n                var w = d.width;\r\n                var w32 = w >> 5;\r\n                var h = d.y1 - d.y0;\r\n                // Zero the buffer\r\n                for (var i = 0; i < h * w32; i++) {\r\n                    sprite[i] = 0;\r\n                }\r\n                x = d.xoff;\r\n                if (x == null) {\r\n                    return;\r\n                }\r\n                y = d.yoff;\r\n                var seen = 0;\r\n                var seenRow = -1;\r\n                for (var j = 0; j < h; j++) {\r\n                    for (var i = 0; i < w; i++) {\r\n                        var k = w32 * j + (i >> 5);\r\n                        var m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\r\n                        sprite[k] |= m;\r\n                        seen |= m;\r\n                    }\r\n                    if (seen) {\r\n                        seenRow = j;\r\n                    }\r\n                    else {\r\n                        d.y0++;\r\n                        h--;\r\n                        j--;\r\n                        y++;\r\n                    }\r\n                }\r\n                d.y1 = d.y0 + seenRow;\r\n                d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\r\n            }\r\n        },\r\n\r\n        _place: function (board, tag, maxBounds) {\r\n\r\n            /*判断目前面积总值 是否超过了阈值*/\r\n            /*判断目前该值是否能够放的下*/\r\n            var size = this.defaultOption.size;\r\n            var perimeter = [\r\n                    {x: 0, y: 0},\r\n                    {x: size[0], y: size[1]}\r\n                ];\r\n            var startX = tag.x;\r\n            var startY = tag.y;\r\n            var maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]);\r\n            var s = this.defaultOption.spiral(size);\r\n            var dt = Math.random() < .5 ? 1 : -1;\r\n            var t = -dt;\r\n            var dxdy;\r\n            var dx;\r\n            var dy;\r\n\r\n            while (dxdy = s(t += dt)) {\r\n                dx = ~~dxdy[0];\r\n                dy = ~~dxdy[1];\r\n\r\n                //当dx dy 都大于 maxDelta 即超出了 画板范围， 停止 放置。。 该值舍弃\r\n                if (Math.min(dx, dy) > maxDelta) {\r\n                    break;\r\n                }\r\n\r\n                tag.x = startX + dx;\r\n                tag.y = startY + dy;\r\n\r\n                if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\r\n                    tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) {\r\n                    continue;\r\n                }\r\n                // TODO only check for collisions within current bounds.\r\n                if (!cloudCollide(tag, board, size[0])) {\r\n                    if (collideRects(tag, maxBounds)) {\r\n                        var sprite = tag.sprite;\r\n                        var w = tag.width >> 5;\r\n                        var sw = size[0] >> 5;\r\n                        var lx = tag.x - (w << 4);\r\n                        var sx = lx & 0x7f;\r\n                        var msx = 32 - sx;\r\n                        var h = tag.y1 - tag.y0;\r\n                        var x = (tag.y + tag.y0) * sw + (lx >> 5);// 计算其在画板的 横坐标的位置\r\n                        var last;\r\n\r\n                        //当 该 字能够被正确放置时， 根据该字体的范围 更改标志位范围\r\n                        for (var j = 0; j < h; j++) {\r\n                            last = 0;\r\n                            for (var i = 0; i <= w; i++) {\r\n                                board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\r\n                            }\r\n                            x += sw;\r\n                        }\r\n                        delete tag.sprite;\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n\r\n            function cloudCollide(tag, board, sw) {\r\n                sw >>= 5;\r\n                var sprite = tag.sprite;\r\n                var w = tag.width >> 5;\r\n                var lx = tag.x - (w << 4);\r\n                var sx = lx & 0x7f;\r\n                var msx = 32 - sx;\r\n                var h = tag.y1 - tag.y0;\r\n                var x = (tag.y + tag.y0) * sw + (lx >> 5);\r\n                var last;\r\n                for (var j = 0; j < h; j++) {\r\n                    last = 0;\r\n                    for (var i = 0; i <= w; i++) {\r\n                        if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\r\n                            & board[x + i]) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    x += sw;\r\n                }\r\n                return false;\r\n            }\r\n\r\n            function collideRects(a, maxBounds) {\r\n                return maxBounds.row[a.y] && maxBounds.cloumn[a.x]\r\n                    && a.x >= maxBounds.row[a.y].start\r\n                    && a.x <= maxBounds.row[a.y].end\r\n                    && a.y >= maxBounds.cloumn[a.x].start\r\n                    && a.y <= maxBounds.cloumn[a.x].end;\r\n            }\r\n        },\r\n\r\n        _autoCalTextSize: function (data, shapeArea, maxwidth, maxheight, minSize) {\r\n            //循环\r\n            //面积 归一化\r\n            //计算 每个字体的面积\r\n            var sizesum = sum(data, function (k) {\r\n                    return k.size;\r\n                });\r\n            var i = data.length;\r\n            var maxareapre = .25; /*面积归一化后， 字体占总面积的最大百分比*/\r\n            var minTextSize = minSize; /*字体所能缩放的最小大小。。如果字体面积 依旧无法满足上述约束， 字体将不会再缩小*/\r\n            var cw = this.defaultOption.cw;\r\n            var ch = this.defaultOption.ch;\r\n            var c = this.defaultOption.c;\r\n            var ratio = this.defaultOption.ratio;\r\n            var cloudRadians = this.defaultOption.cloudRadians;\r\n            var d;\r\n            var dpre;\r\n\r\n            while (i--) {\r\n                d = data[i];\r\n                dpre = d.size / sizesum;\r\n                if (maxareapre) {\r\n                    d.areapre = (dpre < maxareapre) ? dpre : maxareapre;\r\n                }\r\n                else {\r\n                    d.areapre = dpre;\r\n                }\r\n\r\n                d.area = shapeArea * d.areapre;\r\n                d.totalarea = shapeArea;\r\n                measureTextWitHitByarea(d);\r\n            }\r\n\r\n            //根据面积 计算字体的 size\r\n            //根据 最大宽度 和最大高度 重新检测 字体的size， 不符合条件 重新计算，若字体大小已经是 最小size，则 取消计算。。。\r\n            function measureTextWitHitByarea(d) {\r\n                c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\r\n                c.save();\r\n                c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\r\n\r\n                //得到 字体 实际的 宽和高\r\n                var w = c.measureText(d.text + \"m\").width * ratio,\r\n                    h = d.size << 1;\r\n\r\n                //得到 d 所占用的具体的宽度 和高度  并取整\r\n                w = (w + 0x1f) >> 5 << 5; //给定了一个最小值 1 即不会存在 宽度为0的情况\r\n\r\n                c.restore();\r\n                d.aw = w;\r\n                d.ah = h;\r\n\r\n\r\n                var k, rw, rh;\r\n\r\n                //如果 有旋转  测试 旋转后的 宽和高 是否 超过了 最大的大小\r\n                if (d.rotate) {\r\n                    var sr = Math.sin(d.rotate * cloudRadians);\r\n                    var cr = Math.cos(d.rotate * cloudRadians);\r\n                    var wcr = w * cr;\r\n                    var wsr = w * sr;\r\n                    var hcr = h * cr;\r\n                    var hsr = h * sr;\r\n\r\n                    rw = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\r\n                    rh = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\r\n                }\r\n\r\n\r\n                //满足条件 不用继续调整的\r\n                // size 为 最小， 或者面积在允许范围内 且 宽和高也在允许范围内\r\n                if (d.size < minTextSize) {\r\n                    d.size = minTextSize;\r\n                    return;\r\n                }\r\n\r\n                if ((d.rotate && w * h <= d.area && rw <= maxwidth && rh <= maxheight)\r\n                    || (w * h <= d.area && w <= maxwidth && h <= maxheight)) {\r\n                    d.area = w * h;\r\n                    return;\r\n                }\r\n\r\n                //如果 超过了 最大宽度 或最大高度。。 继续计算\r\n                if (d.rotate && rw > maxwidth && rh > maxheight) {// 有旋转时，超过了 最大宽度和最大高度\r\n                    k = Math.min(maxwidth / rw, maxheight / rh);\r\n                }\r\n                else if (w > maxwidth || h > maxheight) {// 无旋转时，超过了 最大宽度和最大高度\r\n                    k = Math.min(maxwidth / w, maxheight / h);\r\n                }\r\n                else {                                // 当前 面积 大于 规定的面积时\r\n                    k = Math.sqrt(d.area / (d.aw * d.ah));\r\n                }\r\n\r\n                d.size = ~~(k * d.size);\r\n\r\n                if (d.size < minSize) {\r\n                    d.size = minSize;\r\n                    return;\r\n                }\r\n\r\n                return measureTextWitHitByarea(d);\r\n            }\r\n\r\n            function sum(dts, callback) {\r\n                var j = dts.length;\r\n                var ressum = 0;\r\n                while (j--) {\r\n                    ressum += callback(dts[j]);\r\n                }\r\n\r\n                return ressum;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return CloudLayout;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * @file    主要功能\r\n * @author  clmtulip(车丽美, clmtulip@gmail.com) liyong(liyong1239@163.com)\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    function ZeroArray(option) {\r\n        this.defaultOption = {type: 'RECT'};\r\n        this._init(option);\r\n    }\r\n\r\n    ZeroArray.prototype = {\r\n        RECT: '_calculateRect',\r\n\r\n        _init: function (option) {\r\n            this._initOption(option);\r\n            this._initCanvas();\r\n        },\r\n\r\n        _initOption: function (option) {\r\n            for (k in option) {\r\n                this.defaultOption[k] = option[k];\r\n            }\r\n        },\r\n\r\n        _initCanvas: function () {\r\n            var canvas = document.createElement(\"canvas\");\r\n            canvas.width = 1;\r\n            canvas.height = 1;\r\n\r\n            var ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\r\n\r\n            canvas.width = this.defaultOption.width;\r\n            canvas.height = this.defaultOption.height;\r\n\r\n            if (canvas.getContext) {\r\n                var ctx = canvas.getContext('2d');\r\n            }\r\n\r\n            this.canvas = canvas;\r\n            this.ctx = ctx;\r\n            this.ratio = ratio;\r\n        },\r\n\r\n        /**执行计算， 并返回\r\n         *\r\n         * @param callback\r\n         * 返回 {initarr, area, maxHit, maxWit} 给callback\r\n         */\r\n        calculate: function (callback, callbackObj) {\r\n            var calType = this.defaultOption.type,\r\n                calmethod = this[calType];\r\n\r\n            this[calmethod].call(this, callback, callbackObj);\r\n        },\r\n\r\n        /**\r\n         * callback 函数的 正确执行\r\n         * @param result 计算后的结果，{initarr, area, maxHit, maxWit}\r\n         * @param callback  计算成功之后的回调函数\r\n         * @param callbackObj 回调函数的执行作用域\r\n         * @private\r\n         */\r\n        _calculateReturn: function (result, callback, callbackObj) {\r\n            callback.call(callbackObj, result);\r\n        },\r\n\r\n        _calculateRect: function (callback, callbackObj) {\r\n            var result = {},\r\n                width = this.defaultOption.width >> 5 << 5,\r\n                height = this.defaultOption.height;\r\n\r\n            // 初始化数组\r\n            result.initarr = this._rectZeroArray(width * height);\r\n\r\n            // 总面积\r\n            result.area = width * height;\r\n\r\n            // 最大高度\r\n            result.maxHit = height;\r\n\r\n            // 最大宽度\r\n            result.maxWit = width;\r\n\r\n            // 边界\r\n            result.imgboard = this._rectBoard(width, height);\r\n\r\n            this._calculateReturn(result, callback, callbackObj);\r\n        },\r\n\r\n        _rectBoard: function (width, height) {\r\n\r\n            var row = [];\r\n            for (var i = 0; i < height; i++) {\r\n                row.push({\r\n                    y: i,\r\n                    start: 0,\r\n                    end: width\r\n                })\r\n            }\r\n\r\n            var cloumn = [];\r\n            for (var i = 0; i < width; i++) {\r\n                cloumn.push({\r\n                    x: i,\r\n                    start: 0,\r\n                    end: height\r\n                })\r\n            }\r\n\r\n            return {row: row, cloumn: cloumn};\r\n        },\r\n\r\n        _rectZeroArray: function (num) {\r\n            var a = [],\r\n                n = num,\r\n                i = -1;\r\n            while (++i < n) a[i] = 0;\r\n            return a;\r\n        }\r\n    };\r\n\r\n    return ZeroArray;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件： 网格\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(8);\r\n    \r\n    // 图形依赖\r\n    var RectangleShape = __webpack_require__(7);\r\n    \r\n    var ecConfig = __webpack_require__(4);\r\n    // 网格\r\n    ecConfig.grid = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 0,                       // 二级层叠\r\n        x: 80,\r\n        y: 60,\r\n        x2: 80,\r\n        y2: 60,\r\n        // width: {totalWidth} - x - x2,\r\n        // height: {totalHeight} - y - y2,\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 1,\r\n        borderColor: '#ccc'\r\n    };\r\n\r\n    var zrUtil = __webpack_require__(0);\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表选项\r\n     *      @param {number=} option.grid.x 直角坐标系内绘图网格起始横坐标，数值单位px\r\n     *      @param {number=} option.grid.y 直角坐标系内绘图网格起始纵坐标，数值单位px\r\n     *      @param {number=} option.grid.width 直角坐标系内绘图网格宽度，数值单位px\r\n     *      @param {number=} option.grid.height 直角坐标系内绘图网格高度，数值单位px\r\n     */\r\n    function Grid(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.refresh(option);\r\n    }\r\n    \r\n    Grid.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_GRID,\r\n\r\n        getX: function () {\r\n            return this._x;\r\n        },\r\n\r\n        getY: function () {\r\n            return this._y;\r\n        },\r\n\r\n        getWidth: function () {\r\n            return this._width;\r\n        },\r\n\r\n        getHeight: function () {\r\n            return this._height;\r\n        },\r\n\r\n        getXend: function () {\r\n            return this._x + this._width;\r\n        },\r\n\r\n        getYend: function () {\r\n            return this._y + this._height;\r\n        },\r\n\r\n        getArea: function () {\r\n            return {\r\n                x: this._x,\r\n                y: this._y,\r\n                width: this._width,\r\n                height: this._height\r\n            };\r\n        },\r\n        \r\n        getBbox: function() {\r\n            return [\r\n                [ this._x, this._y ],\r\n                [ this.getXend(), this.getYend() ]\r\n            ];\r\n        },\r\n        \r\n        /**\r\n         * 实在找不到合适的地方做了，各种粗暴的写法~ -_-\r\n         */\r\n        refixAxisShape: function(component) {\r\n            var zeroX;\r\n            var zeroY;\r\n            var axisList = component.xAxis._axisList.concat(\r\n                component.yAxis ? component.yAxis._axisList : []\r\n            );\r\n            var len = axisList.length;\r\n            var axis;\r\n            while (len--) {\r\n                axis = axisList[len];\r\n                if (axis.type == ecConfig.COMPONENT_TYPE_AXIS_VALUE \r\n                    && axis._min < 0  \r\n                    && axis._max >= 0\r\n                ) {\r\n                    axis.isHorizontal()\r\n                    ? (zeroX = axis.getCoord(0))\r\n                    : (zeroY = axis.getCoord(0));\r\n                }\r\n            }\r\n            if (typeof zeroX != 'undefined' || typeof zeroY != 'undefined') {\r\n                len = axisList.length;\r\n                while (len--) {\r\n                    axisList[len].refixAxisShape(zeroX, zeroY);\r\n                }\r\n            }\r\n        },\r\n        \r\n        refresh: function (newOption) {\r\n            if (newOption\r\n                || this._zrWidth != this.zr.getWidth() \r\n                || this._zrHeight != this.zr.getHeight()\r\n            ) {\r\n                this.clear();\r\n                this.option = newOption || this.option;\r\n                this.option.grid = this.reformOption(this.option.grid);\r\n    \r\n                var gridOption = this.option.grid;\r\n                this._zrWidth = this.zr.getWidth();\r\n                this._zrHeight = this.zr.getHeight();\r\n                this._x = this.parsePercent(gridOption.x, this._zrWidth);\r\n                this._y = this.parsePercent(gridOption.y, this._zrHeight);\r\n                var x2 = this.parsePercent(gridOption.x2, this._zrWidth);\r\n                var y2 = this.parsePercent(gridOption.y2, this._zrHeight);\r\n                \r\n    \r\n                if (typeof gridOption.width == 'undefined') {\r\n                    this._width = this._zrWidth - this._x - x2;\r\n                }\r\n                else {\r\n                    this._width = this.parsePercent(gridOption.width, this._zrWidth);\r\n                }\r\n                this._width = this._width <= 0 ? 10 : this._width;\r\n    \r\n                if (typeof gridOption.height == 'undefined') {\r\n                    this._height = this._zrHeight - this._y - y2;\r\n                }\r\n                else {\r\n                    this._height = this.parsePercent(gridOption.height, this._zrHeight);\r\n                }\r\n                this._height = this._height <= 0 ? 10 : this._height;\r\n                \r\n                this._x = this.subPixelOptimize(this._x, gridOption.borderWidth);\r\n                this._y = this.subPixelOptimize(this._y, gridOption.borderWidth);\r\n    \r\n                this.shapeList.push(new RectangleShape({\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    hoverable: false,\r\n                    style: {\r\n                        x: this._x,\r\n                        y: this._y,\r\n                        width: this._width,\r\n                        height: this._height,\r\n                        brushType: gridOption.borderWidth > 0 ? 'both' : 'fill',\r\n                        color: gridOption.backgroundColor,\r\n                        strokeColor: gridOption.borderColor,\r\n                        lineWidth: gridOption.borderWidth\r\n                        // type: this.option.splitArea.areaStyle.type,\r\n                    }\r\n                }));\r\n                this.zr.addShape(this.shapeList[0]);\r\n            }\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Grid, Base);\r\n    \r\n    __webpack_require__(6).define('grid', Grid);\r\n    \r\n    return Grid;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * echarts组件：值域\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(8);\r\n\r\n    // 图形依赖\r\n    var TextShape = __webpack_require__(16);\r\n    var RectangleShape = __webpack_require__(7);\r\n    var HandlePolygonShape = __webpack_require__(96);\r\n\r\n    var ecConfig = __webpack_require__(4);\r\n    // 值域\r\n    ecConfig.dataRange = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 4,                       // 二级层叠\r\n        show: true,\r\n        orient: 'vertical',        // 布局方式，默认为垂直布局，可选为：\r\n                                   // 'horizontal' ¦ 'vertical'\r\n        x: 'left',                 // 水平安放位置，默认为全图左对齐，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'bottom',               // 垂直安放位置，默认为全图底部，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: '#ccc',       // 值域边框颜色\r\n        borderWidth: 0,            // 值域边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 值域内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，\r\n                                   // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n        itemWidth: 20,             // 值域图形宽度，线性渐变水平布局宽度为该值 * 10\r\n        itemHeight: 14,            // 值域图形高度，线性渐变垂直布局高度为该值 * 10\r\n        // min: null,              // 最小值，如果没有指定splitList，则必须指定min和max\r\n        // max: null,              // 最大值，如果没有指定splitList，则必须指定min和max\r\n        precision: 0,              // 小数精度，默认为0，无小数点\r\n        splitNumber: 5,            // 分割段数，默认为5，为0时为线性渐变\r\n        splitList: null,           // 用于用户自定义不等距分割。如果定义了splitList，则splitNumber无效。\r\n                                   // splitList为Array.<Object>，其中每个Object形如：\r\n                                   // {\r\n                                   //   start: 10,          本项的数据范围起点（>=），如果不设置表示负无穷。\r\n                                   //                       如果想本项只对应一个值，那么start和end设同样的数就可以了。\r\n                                   //   end: 90             本项的数据范围终点（<=），如果不设置表示正无穷。\r\n                                   //   label: '10 to 30',  本项的显示标签，缺省则自动生成label。\r\n                                   //   color: '#333'       本项的显示颜色，缺省则自动计算color。\r\n                                   // }\r\n        calculable: false,         // 是否值域漫游，启用后无视splitNumber和splitList，线性渐变\r\n        selectedMode: true,        // 选择模式，默认开启值域开关\r\n        hoverLink: true,\r\n        realtime: true,\r\n        color:['#006edd','#e0ffff'],//颜色\r\n        // formatter: null,\r\n        // text:['高','低'],         // 文本，默认为数值文本\r\n        textStyle: {\r\n            color: '#333'          // 值域文字颜色\r\n        }\r\n    };\r\n\r\n    var zrUtil = __webpack_require__(0);\r\n    var zrEvent = __webpack_require__(9);\r\n    var zrArea = __webpack_require__(2);\r\n    var zrColor = __webpack_require__(3);\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     * @param {Object=} selected 用于状态保持\r\n     */\r\n    function DataRange(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        var self = this;\r\n        self._ondrift = function(dx, dy) {\r\n            return self.__ondrift(this, dx, dy);\r\n        };\r\n        self._ondragend = function() {\r\n            return self.__ondragend();\r\n        };\r\n        self._dataRangeSelected = function(param) {\r\n            return self.__dataRangeSelected(param);\r\n        };\r\n        self._dispatchHoverLink = function(param) {\r\n            return self.__dispatchHoverLink(param);\r\n        };\r\n        self._onhoverlink = function(params) {\r\n            return self.__onhoverlink(params);\r\n        };\r\n        this._selectedMap = {};\r\n        this._range = {};\r\n\r\n        this.refresh(option);\r\n\r\n        messageCenter.bind(ecConfig.EVENT.HOVER, this._onhoverlink);\r\n    }\r\n\r\n    DataRange.prototype = {\r\n        type : ecConfig.COMPONENT_TYPE_DATARANGE,\r\n        _textGap : 10, // 非值文字间隔\r\n        _buildShape : function () {\r\n            // 值域元素组的位置参数，通过计算所得x, y, width, height\r\n            this._itemGroupLocation = this._getItemGroupLocation();\r\n            this._buildBackground();\r\n            if (this._isContinuity()) {\r\n                this._buildGradient();\r\n            }\r\n            else {\r\n                this._buildItem();\r\n            }\r\n\r\n            if (this.dataRangeOption.show) {\r\n                for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(this.shapeList[i]);\r\n                }\r\n            }\r\n\r\n            this._syncShapeFromRange();\r\n        },\r\n\r\n        /**\r\n         * 构建图例型的值域元素\r\n         */\r\n        _buildItem : function () {\r\n            var data = this._valueTextList;\r\n            var dataLength = data.length;\r\n            var itemName;\r\n            var itemShape;\r\n            var textShape;\r\n            var font = this.getFont(this.dataRangeOption.textStyle);\r\n\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemWidth = this.dataRangeOption.itemWidth;\r\n            var itemHeight = this.dataRangeOption.itemHeight;\r\n            var itemGap = this.dataRangeOption.itemGap;\r\n            var textHeight = zrArea.getTextHeight('国', font);\r\n            var color;\r\n\r\n            if (this.dataRangeOption.orient == 'vertical'\r\n                && this.dataRangeOption.x == 'right'\r\n            ) {\r\n                lastX = this._itemGroupLocation.x\r\n                        + this._itemGroupLocation.width\r\n                        - itemWidth;\r\n            }\r\n            var needValueText = true;\r\n            if (this.dataRangeOption.text) {\r\n                needValueText = false;\r\n                // 第一个文字\r\n                if (this.dataRangeOption.text[0]) {\r\n                    textShape = this._getTextShape(\r\n                        lastX, lastY, this.dataRangeOption.text[0]\r\n                    );\r\n                    if (this.dataRangeOption.orient == 'horizontal') {\r\n                        lastX += zrArea.getTextWidth(\r\n                                     this.dataRangeOption.text[0],\r\n                                     font\r\n                                 )\r\n                                 + this._textGap;\r\n                    }\r\n                    else {\r\n                        lastY += textHeight + this._textGap;\r\n                        textShape.style.y += textHeight / 2 + this._textGap;\r\n                        textShape.style.textBaseline = 'bottom';\r\n                    }\r\n                    this.shapeList.push(new TextShape(textShape));\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < dataLength; i++) {\r\n                itemName = data[i];\r\n                color = this.getColorByIndex(i);\r\n                // 图形\r\n                itemShape = this._getItemShape(\r\n                    lastX, lastY,\r\n                    itemWidth, itemHeight,\r\n                    (this._selectedMap[i] ? color : '#ccc')\r\n                );\r\n                itemShape._idx = i;\r\n                itemShape.onmousemove = this._dispatchHoverLink;\r\n                if (this.dataRangeOption.selectedMode) {\r\n                    itemShape.clickable = true;\r\n                    itemShape.onclick = this._dataRangeSelected;\r\n                }\r\n                this.shapeList.push(new RectangleShape(itemShape));\r\n\r\n                if (needValueText) {\r\n                    // 文字\r\n                    textShape = {\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        style : {\r\n                            x : lastX + itemWidth + 5,\r\n                            y : lastY,\r\n                            color : this._selectedMap[i]\r\n                                    ? this.dataRangeOption.textStyle.color\r\n                                    : '#ccc',\r\n                            text: data[i],\r\n                            textFont: font,\r\n                            textBaseline: 'top'\r\n                        },\r\n                        highlightStyle:{\r\n                            brushType: 'fill'\r\n                        }\r\n                    };\r\n                    if (this.dataRangeOption.orient == 'vertical'\r\n                        && this.dataRangeOption.x == 'right'\r\n                    ) {\r\n                        textShape.style.x -= (itemWidth + 10);\r\n                        textShape.style.textAlign = 'right';\r\n                    }\r\n                    textShape._idx = i;\r\n                    textShape.onmousemove = this._dispatchHoverLink;\r\n                    if (this.dataRangeOption.selectedMode) {\r\n                        textShape.clickable = true;\r\n                        textShape.onclick = this._dataRangeSelected;\r\n                    }\r\n                    this.shapeList.push(new TextShape(textShape));\r\n                }\r\n\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    lastX += itemWidth\r\n                             + (needValueText ? 5 : 0)\r\n                             + (needValueText\r\n                               ? zrArea.getTextWidth(itemName, font)\r\n                               : 0)\r\n                             + itemGap;\r\n                }\r\n                else {\r\n                    lastY += itemHeight + itemGap;\r\n                }\r\n            }\r\n\r\n            if (!needValueText && this.dataRangeOption.text[1]) {\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    lastX = lastX - itemGap + this._textGap;\r\n                }\r\n                else {\r\n                    lastY = lastY - itemGap + this._textGap;\r\n                }\r\n                // 最后一个文字\r\n                textShape = this._getTextShape(\r\n                    lastX, lastY, this.dataRangeOption.text[1]\r\n                );\r\n\r\n                if (this.dataRangeOption.orient != 'horizontal') {\r\n                    textShape.style.y -= 5;\r\n                    textShape.style.textBaseline = 'top';\r\n                }\r\n\r\n                this.shapeList.push(new TextShape(textShape));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建渐变型的值域元素\r\n         */\r\n        _buildGradient : function () {\r\n            var itemShape;\r\n            var textShape;\r\n            var font = this.getFont(this.dataRangeOption.textStyle);\r\n\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemWidth = this.dataRangeOption.itemWidth;\r\n            var itemHeight = this.dataRangeOption.itemHeight;\r\n            var textHeight = zrArea.getTextHeight('国', font);\r\n            var mSize = 10;\r\n\r\n\r\n            var needValueText = true;\r\n            if (this.dataRangeOption.text) {\r\n                needValueText = false;\r\n                // 第一个文字\r\n                if (this.dataRangeOption.text[0]) {\r\n                    textShape = this._getTextShape(\r\n                        lastX, lastY, this.dataRangeOption.text[0]\r\n                    );\r\n                    if (this.dataRangeOption.orient == 'horizontal') {\r\n                        lastX += zrArea.getTextWidth(\r\n                                     this.dataRangeOption.text[0],\r\n                                     font\r\n                                 )\r\n                                 + this._textGap;\r\n                    }\r\n                    else {\r\n                        lastY += textHeight + this._textGap;\r\n                        textShape.style.y += textHeight / 2 + this._textGap;\r\n                        textShape.style.textBaseline = 'bottom';\r\n                    }\r\n                    this.shapeList.push(new TextShape(textShape));\r\n                }\r\n            }\r\n\r\n            var zrColor = __webpack_require__(3);\r\n            var per = 1 / (this.dataRangeOption.color.length - 1);\r\n            var colorList = [];\r\n            for (var i = 0, l = this.dataRangeOption.color.length; i < l; i++) {\r\n                colorList.push([i * per, this.dataRangeOption.color[i]]);\r\n            }\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                itemShape = {\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style : {\r\n                        x : lastX,\r\n                        y : lastY,\r\n                        width : itemWidth * mSize,\r\n                        height : itemHeight,\r\n                        color : zrColor.getLinearGradient(\r\n                            lastX, lastY, lastX + itemWidth * mSize, lastY,\r\n                            colorList\r\n                        )\r\n                    },\r\n                    hoverable : false\r\n                };\r\n                lastX += itemWidth * mSize + this._textGap;\r\n            }\r\n            else {\r\n                itemShape = {\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style : {\r\n                        x : lastX,\r\n                        y : lastY,\r\n                        width : itemWidth,\r\n                        height : itemHeight * mSize,\r\n                        color : zrColor.getLinearGradient(\r\n                            lastX, lastY, lastX, lastY + itemHeight * mSize,\r\n                            colorList\r\n                        )\r\n                    },\r\n                    hoverable : false\r\n                };\r\n                lastY += itemHeight * mSize + this._textGap;\r\n            }\r\n            this.shapeList.push(new RectangleShape(itemShape));\r\n            // 可计算元素的位置缓存\r\n            this._calculableLocation = itemShape.style;\r\n            if (this.dataRangeOption.calculable) {\r\n                this._buildFiller();\r\n                this._bulidMask();\r\n                this._bulidHandle();\r\n            }\r\n            this._buildIndicator();\r\n\r\n            if (!needValueText && this.dataRangeOption.text[1]) {\r\n                // 最后一个文字\r\n                textShape = this._getTextShape(\r\n                    lastX, lastY, this.dataRangeOption.text[1]\r\n                );\r\n\r\n                this.shapeList.push(new TextShape(textShape));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建指示器\r\n         */\r\n        _buildIndicator : function() {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            var size = 5;\r\n            var pointList;\r\n            var textPosition;\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                // 水平\r\n                if (this.dataRangeOption.y != 'bottom') {\r\n                    // 手柄统统在下方\r\n                    pointList = [\r\n                        [x, y + height],\r\n                        [x - size, y + height + size],\r\n                        [x + size, y + height + size]\r\n                    ];\r\n                    textPosition = 'bottom';\r\n                }\r\n                else {\r\n                    // 手柄在上方\r\n                    pointList = [\r\n                        [x, y],\r\n                        [x - size, y - size],\r\n                        [x + size, y - size]\r\n                    ];\r\n                    textPosition = 'top';\r\n                }\r\n            }\r\n            else {\r\n                // 垂直\r\n                if (this.dataRangeOption.x != 'right') {\r\n                    // 手柄统统在右侧\r\n                    pointList = [\r\n                        [x + width, y],\r\n                        [x + width + size, y - size],\r\n                        [x + width + size, y + size]\r\n                    ];\r\n                    textPosition = 'right';\r\n                }\r\n                else {\r\n                    // 手柄在左侧\r\n                    pointList = [\r\n                        [x, y],\r\n                        [x - size, y - size],\r\n                        [x - size, y + size]\r\n                    ];\r\n                    textPosition = 'left';\r\n                }\r\n            }\r\n            this._indicatorShape = {\r\n                style : {\r\n                    pointList : pointList,\r\n                    color : '#fff',\r\n                    __rect : {\r\n                        x : Math.min(pointList[0][0], pointList[1][0]),\r\n                        y : Math.min(pointList[0][1], pointList[1][1]),\r\n                        width : size * (this.dataRangeOption.orient == 'horizontal' ? 2 : 1),\r\n                        height : size * (this.dataRangeOption.orient == 'horizontal' ? 1 : 2)\r\n                    }\r\n                },\r\n                highlightStyle : {\r\n                    brushType : 'fill',\r\n                    textPosition : textPosition,\r\n                    textColor : this.dataRangeOption.textStyle.color\r\n                },\r\n                hoverable: false\r\n            };\r\n            this._indicatorShape = new HandlePolygonShape(this._indicatorShape);\r\n        },\r\n\r\n        /**\r\n         * 构建填充物\r\n         */\r\n        _buildFiller : function () {\r\n            this._fillerShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                style : {\r\n                    x : this._calculableLocation.x,\r\n                    y : this._calculableLocation.y,\r\n                    width : this._calculableLocation.width,\r\n                    height : this._calculableLocation.height,\r\n                    color : 'rgba(255,255,255,0)'\r\n                },\r\n                highlightStyle : {\r\n                    strokeColor : 'rgba(255,255,255,0.5)',\r\n                    lineWidth : 1\r\n                },\r\n                draggable : true,\r\n                ondrift : this._ondrift,\r\n                ondragend : this._ondragend,\r\n                onmousemove : this._dispatchHoverLink,\r\n                _type : 'filler'\r\n            };\r\n            this._fillerShape = new RectangleShape(this._fillerShape);\r\n            this.shapeList.push(this._fillerShape);\r\n        },\r\n\r\n        /**\r\n         * 构建拖拽手柄\r\n         */\r\n        _bulidHandle : function () {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            var font = this.getFont(this.dataRangeOption.textStyle);\r\n            var textHeight = zrArea.getTextHeight('国', font);\r\n            var textWidth = Math.max(\r\n                    zrArea.getTextWidth(this._textFormat(this.dataRangeOption.max), font),\r\n                    zrArea.getTextWidth(this._textFormat(this.dataRangeOption.min), font)\r\n                ) + 2;\r\n\r\n            var pointListStart;\r\n            var textXStart;\r\n            var textYStart;\r\n            var coverRectStart;\r\n            var pointListEnd;\r\n            var textXEnd;\r\n            var textYEnd;\r\n            var coverRectEnd;\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                // 水平\r\n                if (this.dataRangeOption.y != 'bottom') {\r\n                    // 手柄统统在下方\r\n                    pointListStart = [\r\n                        [x, y],\r\n                        [x, y + height + textHeight],\r\n                        [x - textHeight, y + height + textHeight],\r\n                        [x - 1, y + height],\r\n                        [x - 1, y]\r\n\r\n                    ];\r\n                    textXStart = x - textWidth / 2 - textHeight;\r\n                    textYStart = y + height + textHeight / 2 + 2;\r\n                    coverRectStart = {\r\n                        x : x - textWidth - textHeight,\r\n                        y : y + height,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n\r\n                    pointListEnd = [\r\n                        [x + width, y],\r\n                        [x + width, y + height + textHeight],\r\n                        [x + width + textHeight, y + height + textHeight],\r\n                        [x + width + 1, y + height],\r\n                        [x + width + 1, y]\r\n                    ];\r\n                    textXEnd = x + width + textWidth / 2 + textHeight;\r\n                    textYEnd = textYStart;\r\n                    coverRectEnd = {\r\n                        x : x + width,\r\n                        y : y + height,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n                }\r\n                else {\r\n                    // 手柄在上方\r\n                    pointListStart = [\r\n                        [x, y + height],\r\n                        [x, y - textHeight],\r\n                        [x - textHeight, y - textHeight],\r\n                        [x - 1, y],\r\n                        [x - 1, y + height]\r\n\r\n                    ];\r\n                    textXStart = x - textWidth / 2 - textHeight;\r\n                    textYStart = y - textHeight / 2 - 2;\r\n                    coverRectStart = {\r\n                        x : x - textWidth - textHeight,\r\n                        y : y - textHeight,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n\r\n                    pointListEnd = [\r\n                        [x + width, y + height],\r\n                        [x + width, y - textHeight],\r\n                        [x + width + textHeight, y - textHeight],\r\n                        [x + width + 1, y],\r\n                        [x + width + 1, y + height]\r\n                    ];\r\n                    textXEnd = x + width + textWidth / 2 + textHeight;\r\n                    textYEnd = textYStart;\r\n                    coverRectEnd = {\r\n                        x : x + width,\r\n                        y : y - textHeight,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n                }\r\n            }\r\n            else {\r\n                textWidth += textHeight;\r\n                // 垂直\r\n                if (this.dataRangeOption.x != 'right') {\r\n                    // 手柄统统在右侧\r\n                    pointListStart = [\r\n                        [x, y],\r\n                        [x + width + textHeight, y],\r\n                        [x + width + textHeight, y - textHeight],\r\n                        [x + width, y - 1],\r\n                        [x, y - 1]\r\n                    ];\r\n                    textXStart = x + width + textWidth / 2 + textHeight / 2;\r\n                    textYStart = y - textHeight / 2;\r\n                    coverRectStart = {\r\n                        x : x + width,\r\n                        y : y - textHeight,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n\r\n                    pointListEnd = [\r\n                        [x, y + height],\r\n                        [x + width + textHeight, y + height],\r\n                        [x + width + textHeight, y + textHeight + height],\r\n                        [x + width, y + 1 + height],\r\n                        [x, y + height + 1]\r\n                    ];\r\n                    textXEnd = textXStart;\r\n                    textYEnd = y  + height + textHeight / 2;\r\n                    coverRectEnd = {\r\n                        x : x + width,\r\n                        y : y + height,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n                }\r\n                else {\r\n                    // 手柄在左侧\r\n                    pointListStart = [\r\n                        [x + width, y],\r\n                        [x - textHeight, y],\r\n                        [x - textHeight, y - textHeight],\r\n                        [x, y - 1],\r\n                        [x + width, y - 1]\r\n                    ];\r\n                    textXStart = x - textWidth / 2 - textHeight / 2;\r\n                    textYStart = y - textHeight / 2;\r\n                    coverRectStart = {\r\n                        x : x - textWidth - textHeight,\r\n                        y : y - textHeight,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n\r\n                    pointListEnd = [\r\n                        [x + width, y + height],\r\n                        [x - textHeight, y + height],\r\n                        [x - textHeight, y + textHeight + height],\r\n                        [x, y + 1 + height],\r\n                        [x + width, y + height + 1]\r\n                    ];\r\n                    textXEnd = textXStart;\r\n                    textYEnd = y  + height + textHeight / 2;\r\n                    coverRectEnd = {\r\n                        x : x - textWidth - textHeight,\r\n                        y : y + height,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n                }\r\n            }\r\n\r\n            this._startShape = {\r\n                style : {\r\n                    pointList : pointListStart,\r\n                    text : this._textFormat(this.dataRangeOption.max),\r\n                    textX : textXStart,\r\n                    textY : textYStart,\r\n                    textFont: font,\r\n                    color : this.getColor(this.dataRangeOption.max),\r\n                    rect : coverRectStart,\r\n                    x : pointListStart[0][0],\r\n                    y : pointListStart[0][1],\r\n                    _x : pointListStart[0][0],   // 拖拽区域控制缓存\r\n                    _y : pointListStart[0][1]\r\n                }\r\n            };\r\n            this._startShape.highlightStyle = {\r\n                strokeColor : this._startShape.style.color,\r\n                lineWidth : 1\r\n            };\r\n\r\n            this._endShape = {\r\n                style : {\r\n                    pointList : pointListEnd,\r\n                    text : this._textFormat(this.dataRangeOption.min),\r\n                    textX : textXEnd,\r\n                    textY : textYEnd,\r\n                    textFont: font,\r\n                    color : this.getColor(this.dataRangeOption.min),\r\n                    rect : coverRectEnd,\r\n                    x : pointListEnd[0][0],\r\n                    y : pointListEnd[0][1],\r\n                    _x : pointListEnd[0][0],   // 拖拽区域控制缓存\r\n                    _y : pointListEnd[0][1]\r\n                }\r\n            };\r\n            this._endShape.highlightStyle = {\r\n                strokeColor : this._endShape.style.color,\r\n                lineWidth : 1\r\n            };\r\n\r\n            // 统一参数\r\n            this._startShape.zlevel              = this._endShape.zlevel    = this.getZlevelBase();\r\n            this._startShape.z                   = this._endShape.z         = this.getZBase() + 1;\r\n            this._startShape.draggable           = this._endShape.draggable = true;\r\n            this._startShape.ondrift             = this._endShape.ondrift   = this._ondrift;\r\n            this._startShape.ondragend           = this._endShape.ondragend = this._ondragend;\r\n\r\n            this._startShape.style.textColor     = this._endShape.style.textColor\r\n                                                            = this.dataRangeOption.textStyle.color;\r\n            this._startShape.style.textAlign     = this._endShape.style.textAlign     = 'center';\r\n            this._startShape.style.textPosition  = this._endShape.style.textPosition  = 'specific';\r\n            this._startShape.style.textBaseline  = this._endShape.style.textBaseline  = 'middle';\r\n            // for ondrif计算统一\r\n            this._startShape.style.width         = this._endShape.style.width         = 0;\r\n            this._startShape.style.height        = this._endShape.style.height        = 0;\r\n            this._startShape.style.textPosition  = this._endShape.style.textPosition  = 'specific';\r\n\r\n            this._startShape = new HandlePolygonShape(this._startShape);\r\n            this._endShape = new HandlePolygonShape(this._endShape);\r\n            this.shapeList.push(this._startShape);\r\n            this.shapeList.push(this._endShape);\r\n        },\r\n\r\n        _bulidMask : function () {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n            this._startMask = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                style : {\r\n                    x : x,\r\n                    y : y,\r\n                    width : this.dataRangeOption.orient == 'horizontal'\r\n                            ? 0 : width,\r\n                    height : this.dataRangeOption.orient == 'horizontal'\r\n                             ? height : 0,\r\n                    color : '#ccc'\r\n                },\r\n                hoverable:false\r\n            };\r\n            this._endMask = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                style : {\r\n                    x : this.dataRangeOption.orient == 'horizontal'\r\n                        ? x + width : x,\r\n                    y : this.dataRangeOption.orient == 'horizontal'\r\n                        ? y : y + height,\r\n                    width : this.dataRangeOption.orient == 'horizontal'\r\n                            ? 0 : width,\r\n                    height : this.dataRangeOption.orient == 'horizontal'\r\n                             ? height : 0,\r\n                    color : '#ccc'\r\n                },\r\n                hoverable:false\r\n            };\r\n            this._startMask = new RectangleShape(this._startMask);\r\n            this._endMask = new RectangleShape(this._endMask);\r\n            this.shapeList.push(this._startMask);\r\n            this.shapeList.push(this._endMask);\r\n        },\r\n\r\n        _buildBackground : function () {\r\n            var padding = this.reformCssArray(this.dataRangeOption.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style : {\r\n                    x : this._itemGroupLocation.x - padding[3],\r\n                    y : this._itemGroupLocation.y - padding[0],\r\n                    width : this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height : this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType : this.dataRangeOption.borderWidth === 0\r\n                                ? 'fill' : 'both',\r\n                    color : this.dataRangeOption.backgroundColor,\r\n                    strokeColor : this.dataRangeOption.borderColor,\r\n                    lineWidth : this.dataRangeOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算值域实体的位置坐标\r\n         */\r\n        _getItemGroupLocation : function () {\r\n            var data = this._valueTextList;\r\n            var dataLength = data.length;\r\n            var itemGap = this.dataRangeOption.itemGap;\r\n            var itemWidth = this.dataRangeOption.itemWidth;\r\n            var itemHeight = this.dataRangeOption.itemHeight;\r\n            var totalWidth = 0;\r\n            var totalHeight = 0;\r\n            var font = this.getFont(this.dataRangeOption.textStyle);\r\n            var textHeight = zrArea.getTextHeight('国', font);\r\n            var mSize = 10;\r\n\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                // 水平布局，计算总宽度\r\n                if (this.dataRangeOption.text || this._isContinuity()) {\r\n                    // 指定文字或线性渐变\r\n                    totalWidth =\r\n                        (this._isContinuity()\r\n                          ? (itemWidth * mSize + itemGap)\r\n                          : dataLength * (itemWidth + itemGap))\r\n                        + (this.dataRangeOption.text\r\n                           && typeof this.dataRangeOption.text[0] != 'undefined'\r\n                           ? (zrArea.getTextWidth(\r\n                                  this.dataRangeOption.text[0],\r\n                                  font\r\n                              ) + this._textGap)\r\n                           : 0)\r\n                        + (this.dataRangeOption.text\r\n                           && typeof this.dataRangeOption.text[1] != 'undefined'\r\n                           ? (zrArea.getTextWidth(\r\n                                  this.dataRangeOption.text[1],\r\n                                  font\r\n                              ) + this._textGap)\r\n                           : 0);\r\n                }\r\n                else {\r\n                    // 值标签\r\n                    itemWidth += 5;\r\n                    for (var i = 0; i < dataLength; i++) {\r\n                        totalWidth += itemWidth\r\n                                      + zrArea.getTextWidth(\r\n                                            data[i],\r\n                                            font\r\n                                        )\r\n                                      + itemGap;\r\n                    }\r\n                }\r\n                totalWidth -= itemGap;      // 减去最后一个的itemGap\r\n                totalHeight = Math.max(textHeight, itemHeight);\r\n            }\r\n            else {\r\n                // 垂直布局，计算总高度\r\n                var maxWidth;\r\n                if (this.dataRangeOption.text || this._isContinuity()) {\r\n                    // 指定文字或线性渐变\r\n                    totalHeight =\r\n                        (this._isContinuity()\r\n                          ? (itemHeight * mSize + itemGap)\r\n                          : dataLength * (itemHeight + itemGap))\r\n                        + (this.dataRangeOption.text\r\n                           && typeof this.dataRangeOption.text[0] != 'undefined'\r\n                            ? (this._textGap + textHeight)\r\n                            : 0)\r\n                        + (this.dataRangeOption.text\r\n                           && typeof this.dataRangeOption.text[1] != 'undefined'\r\n                            ? (this._textGap + textHeight)\r\n                            : 0);\r\n\r\n                    maxWidth = Math.max(\r\n                        zrArea.getTextWidth(\r\n                            (this.dataRangeOption.text && this.dataRangeOption.text[0])\r\n                            || '',\r\n                            font\r\n                        ),\r\n                        zrArea.getTextWidth(\r\n                            (this.dataRangeOption.text && this.dataRangeOption.text[1])\r\n                            || '',\r\n                            font\r\n                        )\r\n                    );\r\n                    totalWidth = Math.max(itemWidth, maxWidth);\r\n                }\r\n                else {\r\n                    totalHeight = (itemHeight + itemGap) * dataLength;\r\n                    // 值标签\r\n                    itemWidth += 5;\r\n                    maxWidth = 0;\r\n                    for (var i = 0; i < dataLength; i++) {\r\n                        maxWidth = Math.max(\r\n                            maxWidth,\r\n                            zrArea.getTextWidth(\r\n                                data[i],\r\n                                font\r\n                            )\r\n                        );\r\n                    }\r\n                    totalWidth = itemWidth + maxWidth;\r\n                }\r\n                totalHeight -= itemGap;     // 减去最后一个的itemGap;\r\n            }\r\n\r\n            var padding = this.reformCssArray(this.dataRangeOption.padding);\r\n            var x;\r\n            var zrWidth = this.zr.getWidth();\r\n            switch (this.dataRangeOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + this.dataRangeOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - this.dataRangeOption.borderWidth;\r\n                    break;\r\n                default :\r\n                    x = this.parsePercent(this.dataRangeOption.x, zrWidth);\r\n                    x = isNaN(x) ? 0 : x;\r\n                    break;\r\n            }\r\n\r\n            var y;\r\n            var zrHeight = this.zr.getHeight();\r\n            switch (this.dataRangeOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + this.dataRangeOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[2]\r\n                        - this.dataRangeOption.borderWidth;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = this.parsePercent(this.dataRangeOption.y, zrHeight);\r\n                    y = isNaN(y) ? 0 : y;\r\n                    break;\r\n            }\r\n\r\n            if (this.dataRangeOption.calculable) {\r\n                // 留出手柄控件\r\n                var handlerWidth = Math.max(\r\n                    zrArea.getTextWidth(this.dataRangeOption.max, font),\r\n                    zrArea.getTextWidth(this.dataRangeOption.min, font)\r\n                ) + textHeight;\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    if (x < handlerWidth) {\r\n                        x = handlerWidth;\r\n                    }\r\n                    if (x + totalWidth + handlerWidth > zrWidth) {\r\n                        x -= handlerWidth;\r\n                    }\r\n                }\r\n                else {\r\n                    if (y < textHeight) {\r\n                        y = textHeight;\r\n                    }\r\n                    if (y + totalHeight + textHeight > zrHeight) {\r\n                        y -= textHeight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                x : x,\r\n                y : y,\r\n                width : totalWidth,\r\n                height : totalHeight\r\n            };\r\n        },\r\n\r\n        // 指定文本\r\n        _getTextShape : function (x, y, text) {\r\n            return {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style : {\r\n                    x : (this.dataRangeOption.orient == 'horizontal'\r\n                        ? x\r\n                        : this._itemGroupLocation.x\r\n                          + this._itemGroupLocation.width / 2\r\n                        ),\r\n                    y : (this.dataRangeOption.orient == 'horizontal'\r\n                        ? this._itemGroupLocation.y\r\n                          + this._itemGroupLocation.height / 2\r\n                        : y\r\n                        ),\r\n                    color : this.dataRangeOption.textStyle.color,\r\n                    text: text,\r\n                    textFont: this.getFont(this.dataRangeOption.textStyle),\r\n                    textBaseline: (this.dataRangeOption.orient == 'horizontal'\r\n                                   ? 'middle' : 'top'),\r\n                    textAlign: (this.dataRangeOption.orient == 'horizontal'\r\n                               ? 'left' : 'center')\r\n                },\r\n                hoverable : false\r\n            };\r\n        },\r\n\r\n        // 色尺legend item shape\r\n        _getItemShape : function (x, y, width, height, color) {\r\n            return {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style : {\r\n                    x : x,\r\n                    y : y + 1,\r\n                    width : width,\r\n                    height : height - 2,\r\n                    color : color\r\n                },\r\n                highlightStyle: {\r\n                    strokeColor: color,\r\n                    lineWidth : 1\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * 拖拽范围控制\r\n         */\r\n        __ondrift : function (shape, dx, dy) {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                if (shape.style.x + dx <= x) {\r\n                    shape.style.x = x;\r\n                }\r\n                else if (shape.style.x + dx + shape.style.width >= x + width) {\r\n                    shape.style.x = x + width - shape.style.width;\r\n                }\r\n                else {\r\n                    shape.style.x += dx;\r\n                }\r\n            }\r\n            else {\r\n                if (shape.style.y + dy <= y) {\r\n                    shape.style.y = y;\r\n                }\r\n                else if (shape.style.y + dy + shape.style.height >= y + height) {\r\n                    shape.style.y = y + height - shape.style.height;\r\n                }\r\n                else {\r\n                    shape.style.y += dy;\r\n                }\r\n            }\r\n\r\n            if (shape._type == 'filler') {\r\n                this._syncHandleShape();\r\n            }\r\n            else {\r\n                this._syncFillerShape(shape);\r\n            }\r\n\r\n            if (this.dataRangeOption.realtime) {\r\n                this._dispatchDataRange();\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        __ondragend : function () {\r\n            this.isDragend = true;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽出去\r\n         */\r\n        ondragend : function (param, status) {\r\n            if (!this.isDragend || !param.target) {\r\n                // 没有在当前实例上发生拖拽行为则直接返回\r\n                return;\r\n            }\r\n\r\n            // 别status = {}赋值啊！！\r\n            status.dragOut = true;\r\n            status.dragIn = true;\r\n\r\n            if (!this.dataRangeOption.realtime) {\r\n                this._dispatchDataRange();\r\n            }\r\n\r\n            status.needRefresh = false; // 会有消息触发fresh，不用再刷一遍\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n\r\n            return;\r\n        },\r\n\r\n        // 外部传入range （calculable为true时有意义）\r\n        _syncShapeFromRange : function () {\r\n            var range = this.dataRangeOption.range || {};\r\n            var optRangeStart = range.start;\r\n            var optRangeEnd = range.end;\r\n            if (optRangeEnd < optRangeStart) {\r\n                optRangeStart = [optRangeEnd, optRangeEnd = optRangeStart][0]; // 反转\r\n            }\r\n\r\n            // 内部使用的_range和option的range的start、end的定义是相反的。\r\n            // 为了支持myChart.setOption(option, true); option中的设置优先。\r\n            this._range.end = optRangeStart != null\r\n                ? optRangeStart\r\n                : (this._range.end != null ? this._range.end : 0);\r\n            this._range.start = optRangeEnd != null\r\n                ? optRangeEnd\r\n                : (this._range.start != null ? this._range.start : 100);\r\n\r\n            if (this._range.start != 100 || this._range.end !== 0) {\r\n                // 非默认满值同步一下图形\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    // 横向\r\n                    var width = this._fillerShape.style.width;\r\n                    this._fillerShape.style.x +=\r\n                        width * (100 - this._range.start) / 100;\r\n                    this._fillerShape.style.width =\r\n                        width * (this._range.start - this._range.end) / 100;\r\n                }\r\n                else {\r\n                    // 纵向\r\n                    var height = this._fillerShape.style.height;\r\n                    this._fillerShape.style.y +=\r\n                        height * (100 - this._range.start) / 100;\r\n                    this._fillerShape.style.height =\r\n                        height * (this._range.start - this._range.end) / 100;\r\n                }\r\n                this.zr.modShape(this._fillerShape.id);\r\n                this._syncHandleShape();\r\n            }\r\n        },\r\n\r\n        _syncHandleShape : function () {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                this._startShape.style.x = this._fillerShape.style.x;\r\n                this._startMask.style.width = this._startShape.style.x - x;\r\n\r\n                this._endShape.style.x = this._fillerShape.style.x\r\n                                    + this._fillerShape.style.width;\r\n                this._endMask.style.x = this._endShape.style.x;\r\n                this._endMask.style.width = x + width - this._endShape.style.x;\r\n\r\n                this._range.start = Math.ceil(\r\n                    100 - (this._startShape.style.x - x) / width * 100\r\n                );\r\n                this._range.end = Math.floor(\r\n                    100 - (this._endShape.style.x - x) / width * 100\r\n                );\r\n            }\r\n            else {\r\n                this._startShape.style.y = this._fillerShape.style.y;\r\n                this._startMask.style.height = this._startShape.style.y - y;\r\n\r\n                this._endShape.style.y = this._fillerShape.style.y\r\n                                    + this._fillerShape.style.height;\r\n                this._endMask.style.y = this._endShape.style.y;\r\n                this._endMask.style.height = y + height - this._endShape.style.y;\r\n\r\n                this._range.start = Math.ceil(\r\n                    100 - (this._startShape.style.y - y) / height * 100\r\n                );\r\n                this._range.end = Math.floor(\r\n                    100 - (this._endShape.style.y - y) / height * 100\r\n                );\r\n            }\r\n\r\n            this._syncShape();\r\n        },\r\n\r\n        _syncFillerShape : function (e) {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            var a;\r\n            var b;\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                a = this._startShape.style.x;\r\n                b = this._endShape.style.x;\r\n                if (e.id == this._startShape.id && a >= b) {\r\n                    // _startShape触发\r\n                    b = a;\r\n                    this._endShape.style.x = a;\r\n                }\r\n                else if (e.id == this._endShape.id && a >= b) {\r\n                    // _endShape触发\r\n                    a = b;\r\n                    this._startShape.style.x = a;\r\n                }\r\n                this._fillerShape.style.x = a;\r\n                this._fillerShape.style.width = b - a;\r\n                this._startMask.style.width = a - x;\r\n                this._endMask.style.x = b;\r\n                this._endMask.style.width = x + width - b;\r\n\r\n                this._range.start = Math.ceil(100 - (a - x) / width * 100);\r\n                this._range.end = Math.floor(100 - (b - x) / width * 100);\r\n            }\r\n            else {\r\n                a = this._startShape.style.y;\r\n                b = this._endShape.style.y;\r\n                if (e.id == this._startShape.id && a >= b) {\r\n                    // _startShape触发\r\n                    b = a;\r\n                    this._endShape.style.y = a;\r\n                }\r\n                else if (e.id == this._endShape.id && a >= b) {\r\n                    // _endShape触发\r\n                    a = b;\r\n                    this._startShape.style.y = a;\r\n                }\r\n                this._fillerShape.style.y = a;\r\n                this._fillerShape.style.height = b - a;\r\n                this._startMask.style.height = a - y;\r\n                this._endMask.style.y = b;\r\n                this._endMask.style.height = y + height - b;\r\n\r\n                this._range.start = Math.ceil(100 - (a - y) / height * 100);\r\n                this._range.end = Math.floor(100 - (b - y) / height * 100);\r\n            }\r\n\r\n            this._syncShape();\r\n        },\r\n\r\n        _syncShape : function () {\r\n            this._startShape.position = [\r\n                this._startShape.style.x - this._startShape.style._x,\r\n                this._startShape.style.y - this._startShape.style._y\r\n            ];\r\n\r\n            this._startShape.style.text = this._textFormat(\r\n                this._gap * this._range.start + this.dataRangeOption.min\r\n            );\r\n\r\n            this._startShape.style.color\r\n                = this._startShape.highlightStyle.strokeColor\r\n                = this.getColor(\r\n                    this._gap * this._range.start + this.dataRangeOption.min\r\n                );\r\n\r\n            this._endShape.position = [\r\n                this._endShape.style.x - this._endShape.style._x,\r\n                this._endShape.style.y - this._endShape.style._y\r\n            ];\r\n\r\n            this._endShape.style.text = this._textFormat(\r\n                this._gap * this._range.end + this.dataRangeOption.min\r\n            );\r\n\r\n            this._endShape.style.color\r\n                = this._endShape.highlightStyle.strokeColor\r\n                = this.getColor(\r\n                    this._gap * this._range.end + this.dataRangeOption.min\r\n                );\r\n\r\n            this.zr.modShape(this._startShape.id);\r\n            this.zr.modShape(this._endShape.id);\r\n            this.zr.modShape(this._startMask.id);\r\n            this.zr.modShape(this._endMask.id);\r\n            this.zr.modShape(this._fillerShape.id);\r\n            this.zr.refreshNextFrame();\r\n        },\r\n\r\n        _dispatchDataRange : function () {\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_RANGE,\r\n                null,\r\n                {\r\n                    range : {\r\n                        start : this._range.end,\r\n                        end : this._range.start\r\n                    }\r\n                },\r\n                this.myChart\r\n            );\r\n        },\r\n\r\n\r\n        __dataRangeSelected : function (param) {\r\n            if (this.dataRangeOption.selectedMode === 'single') {\r\n                for (var k in this._selectedMap) {\r\n                    this._selectedMap[k] = false;\r\n                }\r\n            }\r\n            var idx = param.target._idx;\r\n            this._selectedMap[idx] = !this._selectedMap[idx];\r\n\r\n            var valueMax;\r\n            var valueMin;\r\n            if (this._useCustomizedSplit()) {\r\n                valueMax = this._splitList[idx].max;\r\n                valueMin = this._splitList[idx].min;\r\n            }\r\n            else {\r\n                valueMax = (this._colorList.length - idx) * this._gap + this.dataRangeOption.min;\r\n                valueMin = valueMax - this._gap;\r\n            }\r\n\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_RANGE_SELECTED,\r\n                param.event,\r\n                {\r\n                    selected: this._selectedMap,\r\n                    target: idx,\r\n                    valueMax: valueMax,\r\n                    valueMin: valueMin\r\n                },\r\n                this.myChart\r\n            );\r\n\r\n            this.messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this.myChart);\r\n        },\r\n\r\n        /**\r\n         * 产生hover link事件\r\n         */\r\n        __dispatchHoverLink : function(param) {\r\n            var valueMin;\r\n            var valueMax;\r\n            if (this.dataRangeOption.calculable) {\r\n                var totalValue = this.dataRangeOption.max - this.dataRangeOption.min;\r\n                var curValue;\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    curValue = (1 - (zrEvent.getX(param.event) - this._calculableLocation.x)\r\n                               / this._calculableLocation.width)\r\n                               * totalValue;\r\n                }\r\n                else {\r\n                    curValue = (1 - (zrEvent.getY(param.event) - this._calculableLocation.y)\r\n                               / this._calculableLocation.height)\r\n                               * totalValue;\r\n                }\r\n                valueMin = curValue - totalValue * 0.05;\r\n                valueMax = curValue + totalValue * 0.05;\r\n            }\r\n            else if (this._useCustomizedSplit()) {\r\n                var idx = param.target._idx;\r\n                valueMax = this._splitList[idx].max;\r\n                valueMin = this._splitList[idx].min;\r\n            }\r\n            else {\r\n                var idx = param.target._idx;\r\n                valueMax = (this._colorList.length - idx) * this._gap + this.dataRangeOption.min;\r\n                valueMin = valueMax - this._gap;\r\n            }\r\n\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_RANGE_HOVERLINK,\r\n                param.event,\r\n                {\r\n                    valueMin : valueMin,\r\n                    valueMax : valueMax\r\n                },\r\n                this.myChart\r\n            );\r\n\r\n            // console.log(param,curValue);\r\n        },\r\n\r\n        __onhoverlink: function(param) {\r\n            if (this.dataRangeOption.show\r\n                && this.dataRangeOption.hoverLink\r\n                && this._indicatorShape\r\n                && param\r\n                && param.seriesIndex != null && param.dataIndex != null\r\n            ) {\r\n                var curValue = param.value;\r\n                if (curValue === '' || isNaN(curValue)) {\r\n                    return;\r\n                }\r\n                if (curValue < this.dataRangeOption.min) {\r\n                    curValue = this.dataRangeOption.min;\r\n                }\r\n                else if (curValue > this.dataRangeOption.max) {\r\n                    curValue = this.dataRangeOption.max;\r\n                }\r\n\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    this._indicatorShape.position = [\r\n                        (this.dataRangeOption.max - curValue)\r\n                        / (this.dataRangeOption.max - this.dataRangeOption.min)\r\n                        * this._calculableLocation.width,\r\n                        0\r\n                    ];\r\n                }\r\n                else {\r\n                    this._indicatorShape.position = [\r\n                        0,\r\n                        (this.dataRangeOption.max - curValue)\r\n                        / (this.dataRangeOption.max - this.dataRangeOption.min)\r\n                        * this._calculableLocation.height\r\n                    ];\r\n                }\r\n                this._indicatorShape.style.text = this._textFormat(param.value);\r\n                this._indicatorShape.style.color = this.getColor(curValue);\r\n                this.zr.addHoverShape(this._indicatorShape);\r\n            }\r\n        },\r\n\r\n        _textFormat : function(valueStart, valueEnd) {\r\n            var dataRangeOption = this.dataRangeOption;\r\n            if (valueStart !== -Number.MAX_VALUE) {\r\n                valueStart = (+valueStart).toFixed(dataRangeOption.precision);\r\n            }\r\n            if (valueEnd != null && valueEnd !== Number.MAX_VALUE) {\r\n                valueEnd = (+valueEnd).toFixed(dataRangeOption.precision);\r\n            }\r\n            if (dataRangeOption.formatter) {\r\n                if (typeof dataRangeOption.formatter == 'string') {\r\n                    return dataRangeOption.formatter\r\n                        .replace('{value}', valueStart === -Number.MAX_VALUE ? 'min' : valueStart)\r\n                        .replace('{value2}', valueEnd === Number.MAX_VALUE ? 'max' : valueEnd);\r\n                }\r\n                else if (typeof dataRangeOption.formatter == 'function') {\r\n                    return dataRangeOption.formatter.call(\r\n                        this.myChart, valueStart, valueEnd\r\n                    );\r\n                }\r\n            }\r\n\r\n            if (valueEnd == null) {\r\n                return valueStart;\r\n            }\r\n            else {\r\n                if (valueStart === -Number.MAX_VALUE) {\r\n                    return '< ' + valueEnd;\r\n                }\r\n                else if (valueEnd === Number.MAX_VALUE) {\r\n                    return '> ' + valueStart;\r\n                }\r\n                else {\r\n                    return valueStart + ' - ' + valueEnd;\r\n                }\r\n            }\r\n        },\r\n\r\n        _isContinuity: function () {\r\n            var dataRangeOption = this.dataRangeOption;\r\n            return !(\r\n                    dataRangeOption.splitList\r\n                        ? dataRangeOption.splitList.length > 0\r\n                        : dataRangeOption.splitNumber > 0\r\n                )\r\n                || dataRangeOption.calculable;\r\n        },\r\n\r\n        _useCustomizedSplit: function () {\r\n            var dataRangeOption = this.dataRangeOption;\r\n            return dataRangeOption.splitList && dataRangeOption.splitList.length > 0;\r\n        },\r\n\r\n        _buildColorList: function (splitNumber) {\r\n            this._colorList = zrColor.getGradientColors(\r\n                this.dataRangeOption.color,\r\n                Math.max(\r\n                    (splitNumber - this.dataRangeOption.color.length)\r\n                    / (this.dataRangeOption.color.length - 1),\r\n                    0\r\n                ) + 1\r\n            );\r\n\r\n            if (this._colorList.length > splitNumber) {\r\n                var len = this._colorList.length;\r\n                var newColorList = [this._colorList[0]];\r\n                var step = len / (splitNumber - 1);\r\n                for (var i = 1; i < splitNumber - 1; i++) {\r\n                    newColorList.push(this._colorList[Math.floor(i * step)]);\r\n                }\r\n                newColorList.push(this._colorList[len - 1]);\r\n                this._colorList = newColorList;\r\n            }\r\n\r\n            if (this._useCustomizedSplit()) {\r\n                var splitList = this._splitList;\r\n                for (var i = 0, len = splitList.length; i < len; i++) {\r\n                    if (splitList[i].color) {\r\n                        this._colorList[i] = splitList[i].color;\r\n                    }\r\n                }\r\n            }\r\n            // console.log(this._colorList.length)\r\n        },\r\n\r\n        _buildGap: function (splitNumber) {\r\n            if (!this._useCustomizedSplit()) {\r\n                var precision = this.dataRangeOption.precision;\r\n                this._gap = (this.dataRangeOption.max - this.dataRangeOption.min) / splitNumber;\r\n                while (this._gap.toFixed(precision) - 0 != this._gap && precision < 5) {\r\n                    // 精度自适应\r\n                    precision++;\r\n                }\r\n                this.dataRangeOption.precision = precision;\r\n\r\n                this._gap = (\r\n                    (this.dataRangeOption.max - this.dataRangeOption.min) / splitNumber\r\n                ).toFixed(precision) - 0;\r\n            }\r\n        },\r\n\r\n        _buildDataList: function (splitNumber) {\r\n            var valueTextList = this._valueTextList = [];\r\n            var dataRangeOption = this.dataRangeOption;\r\n            var useCustomizedSplit = this._useCustomizedSplit();\r\n\r\n            for (var i = 0; i < splitNumber; i++) {\r\n                this._selectedMap[i] = true;\r\n                var text = '';\r\n\r\n                if (useCustomizedSplit) {\r\n                    var splitListItem = this._splitList[splitNumber - 1 - i];\r\n\r\n                    if (splitListItem.label != null) {\r\n                        text = splitListItem.label;\r\n                    }\r\n                    else if (splitListItem.single != null) {\r\n                        text = this._textFormat(splitListItem.single);\r\n                    }\r\n                    else {\r\n                        text = this._textFormat(splitListItem.min, splitListItem.max);\r\n                    }\r\n                }\r\n                else {\r\n                    text = this._textFormat(\r\n                        i * this._gap + dataRangeOption.min,\r\n                        (i + 1) * this._gap + dataRangeOption.min\r\n                    );\r\n                }\r\n                valueTextList.unshift(text);\r\n            }\r\n        },\r\n\r\n        _buildSplitList: function () {\r\n            if (!this._useCustomizedSplit()) {\r\n                return;\r\n            }\r\n            var splitList = this.dataRangeOption.splitList;\r\n            var splitRangeList = this._splitList = [];\r\n\r\n            for (var i = 0, len = splitList.length; i < len; i++) {\r\n                var splitListItem = splitList[i];\r\n                if (!splitListItem || (splitListItem.start == null && splitListItem.end == null)) {\r\n                    throw new Error('Empty item exists in splitList!');\r\n                }\r\n\r\n                var reformedItem = {\r\n                    label: splitListItem.label,\r\n                    color: splitListItem.color\r\n                };\r\n                reformedItem.min = splitListItem.start;\r\n                reformedItem.max = splitListItem.end;\r\n\r\n                if (reformedItem.min > reformedItem.max) { // Need to be exchanged\r\n                    reformedItem.min = [reformedItem.max, reformedItem.max = reformedItem.min][0];\r\n                }\r\n                if (reformedItem.min === reformedItem.max) {\r\n                    reformedItem.single = reformedItem.max; // Coresponding to single value\r\n                }\r\n                if (reformedItem.min == null) {\r\n                    reformedItem.min = -Number.MAX_VALUE;\r\n                }\r\n                if (reformedItem.max == null) {\r\n                    reformedItem.max = Number.MAX_VALUE;\r\n                }\r\n\r\n                splitRangeList.push(reformedItem);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh : function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.option.dataRange = this.reformOption(this.option.dataRange);\r\n                var dataRangeOption = this.dataRangeOption = this.option.dataRange;\r\n\r\n                if (!this._useCustomizedSplit()\r\n                    && (dataRangeOption.min == null || dataRangeOption.max == null)\r\n                ) {\r\n                    throw new Error('option.dataRange.min or option.dataRange.max has not been defined.');\r\n                }\r\n\r\n                if (!this.myChart.canvasSupported) {\r\n                    // 不支持Canvas的强制关闭实时动画\r\n                    dataRangeOption.realtime = false;\r\n                }\r\n\r\n                var splitNumber = this._isContinuity()\r\n                    ? 100\r\n                    : (this._useCustomizedSplit()\r\n                        ? dataRangeOption.splitList.length\r\n                        : dataRangeOption.splitNumber\r\n                    );\r\n\r\n                this._buildSplitList();\r\n                this._buildColorList(splitNumber);\r\n                this._buildGap(splitNumber);\r\n                this._buildDataList(splitNumber);\r\n            }\r\n\r\n            this.clear();\r\n            this._buildShape();\r\n        },\r\n\r\n        getColor : function (value) {\r\n            if (isNaN(value)) {\r\n                return null;\r\n            }\r\n            var idx;\r\n\r\n            if (!this._useCustomizedSplit()) {\r\n                if (this.dataRangeOption.min == this.dataRangeOption.max) {\r\n                    return this._colorList[0];\r\n                }\r\n\r\n                if (value < this.dataRangeOption.min) {\r\n                    value = this.dataRangeOption.min;\r\n                }\r\n                else if (value > this.dataRangeOption.max) {\r\n                    value = this.dataRangeOption.max;\r\n                }\r\n\r\n                if (this.dataRangeOption.calculable) {\r\n                    if (value - (this._gap * this._range.start + this.dataRangeOption.min) > 0.00005\r\n                        || value - (this._gap * this._range.end + this.dataRangeOption.min) < -0.00005) {\r\n                         return null;\r\n                    }\r\n                }\r\n\r\n                idx = this._colorList.length - Math.ceil(\r\n                    (value - this.dataRangeOption.min)\r\n                    / (this.dataRangeOption.max - this.dataRangeOption.min)\r\n                    * this._colorList.length\r\n                );\r\n                if (idx == this._colorList.length) {\r\n                    idx--;\r\n                }\r\n            }\r\n            else {\r\n                var splitRangeList = this._splitList;\r\n                for (var i = 0, len = splitRangeList.length; i < len; i++) {\r\n                    if (splitRangeList[i].min <= value && splitRangeList[i].max >= value) {\r\n                        idx = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //console.log(value, idx,this._colorList[idx])\r\n            if (this._selectedMap[idx]) {\r\n                return this._colorList[idx];\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        getColorByIndex : function (idx) {\r\n            if (idx >= this._colorList.length) {\r\n                idx = this._colorList.length - 1;\r\n            }\r\n            else if (idx < 0) {\r\n                idx = 0;\r\n            }\r\n            return this._colorList[idx];\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用\r\n         */\r\n        onbeforDispose : function () {\r\n            this.messageCenter.unbind(ecConfig.EVENT.HOVER, this._onhoverlink);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(DataRange, Base);\r\n\r\n    __webpack_require__(6).define('dataRange', DataRange);\r\n\r\n    return DataRange;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n\r\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：handlePolygon，dataRange手柄\r\n */\r\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require) {\r\n    var Base = __webpack_require__(1);\r\n    var PolygonShape = __webpack_require__(22);\r\n    var zrUtil = __webpack_require__(0);\r\n\r\n    function HandlePolygon(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    HandlePolygon.prototype = {\r\n        type : 'handle-polygon',\r\n        /**\r\n         * 创建多边形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            PolygonShape.prototype.buildPath(\r\n                ctx, style\r\n            );\r\n        },\r\n        isCover : function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n\r\n            // 不能缓存rect！\r\n            var rect = this.style.rect;\r\n            if (x >= rect.x\r\n                && x <= (rect.x + rect.width)\r\n                && y >= rect.y\r\n                && y <= (rect.y + rect.height)\r\n            ) {\r\n                // 矩形内\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    zrUtil.inherits(HandlePolygon, Base);\r\n\r\n    return HandlePolygon;\r\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('div',{staticClass:\"chart\",style:(_vm.setChartContainer)})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue-echart-wordcloud.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8a3f9f3f20fd2a8c1465","/**\r\n * @module zrender/tool/util\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         Yi Shen(https://github.com/pissang)\r\n */\r\ndefine(\r\n    function(require) {\r\n\r\n        var ArrayProto = Array.prototype;\r\n        var nativeForEach = ArrayProto.forEach;\r\n        var nativeMap = ArrayProto.map;\r\n        var nativeFilter = ArrayProto.filter;\r\n\r\n        // 用于处理merge时无法遍历Date等对象的问题\r\n        var BUILTIN_OBJECT = {\r\n            '[object Function]': 1,\r\n            '[object RegExp]': 1,\r\n            '[object Date]': 1,\r\n            '[object Error]': 1,\r\n            '[object CanvasGradient]': 1\r\n        };\r\n\r\n        var objToString = Object.prototype.toString;\r\n\r\n        function isDom(obj) {\r\n            return obj && obj.nodeType === 1\r\n                   && typeof(obj.nodeName) == 'string';\r\n        }\r\n\r\n        /**\r\n         * 对一个object进行深度拷贝\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {*} source 需要进行拷贝的对象\r\n         * @return {*} 拷贝后的新对象\r\n         */\r\n        function clone(source) {\r\n            if (typeof source == 'object' && source !== null) {\r\n                var result = source;\r\n                if (source instanceof Array) {\r\n                    result = [];\r\n                    for (var i = 0, len = source.length; i < len; i++) {\r\n                        result[i] = clone(source[i]);\r\n                    }\r\n                }\r\n                else if (\r\n                    !BUILTIN_OBJECT[objToString.call(source)]\r\n                    // 是否为 dom 对象\r\n                    && !isDom(source)\r\n                ) {\r\n                    result = {};\r\n                    for (var key in source) {\r\n                        if (source.hasOwnProperty(key)) {\r\n                            result[key] = clone(source[key]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            return source;\r\n        }\r\n\r\n        function mergeItem(target, source, key, overwrite) {\r\n            if (source.hasOwnProperty(key)) {\r\n                var targetProp = target[key];\r\n                if (typeof targetProp == 'object'\r\n                    && !BUILTIN_OBJECT[objToString.call(targetProp)]\r\n                    // 是否为 dom 对象\r\n                    && !isDom(targetProp)\r\n                ) {\r\n                    // 如果需要递归覆盖，就递归调用merge\r\n                    merge(\r\n                        target[key],\r\n                        source[key],\r\n                        overwrite\r\n                    );\r\n                }\r\n                else if (overwrite || !(key in target)) {\r\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\r\n                    target[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 合并源对象的属性到目标对象\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {*} target 目标对象\r\n         * @param {*} source 源对象\r\n         * @param {boolean} overwrite 是否覆盖\r\n         */\r\n        function merge(target, source, overwrite) {\r\n            for (var i in source) {\r\n                mergeItem(target, source, i, overwrite);\r\n            }\r\n            \r\n            return target;\r\n        }\r\n\r\n        var _ctx;\r\n\r\n        function getContext() {\r\n            if (!_ctx) {\r\n                require('../dep/excanvas');\r\n                /* jshint ignore:start */\r\n                if (window['G_vmlCanvasManager']) {\r\n                    var _div = document.createElement('div');\r\n                    _div.style.position = 'absolute';\r\n                    _div.style.top = '-1000px';\r\n                    document.body.appendChild(_div);\r\n\r\n                    _ctx = G_vmlCanvasManager.initElement(_div)\r\n                               .getContext('2d');\r\n                }\r\n                else {\r\n                    _ctx = document.createElement('canvas').getContext('2d');\r\n                }\r\n                /* jshint ignore:end */\r\n            }\r\n            return _ctx;\r\n        }\r\n\r\n        /**\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Array} array\r\n         * @param {*} value\r\n         */\r\n        function indexOf(array, value) {\r\n            if (array.indexOf) {\r\n                return array.indexOf(value);\r\n            }\r\n            for (var i = 0, len = array.length; i < len; i++) {\r\n                if (array[i] === value) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        /**\r\n         * 构造类继承关系\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Function} clazz 源类\r\n         * @param {Function} baseClazz 基类\r\n         */\r\n        function inherits(clazz, baseClazz) {\r\n            var clazzPrototype = clazz.prototype;\r\n            function F() {}\r\n            F.prototype = baseClazz.prototype;\r\n            clazz.prototype = new F();\r\n\r\n            for (var prop in clazzPrototype) {\r\n                clazz.prototype[prop] = clazzPrototype[prop];\r\n            }\r\n            clazz.constructor = clazz;\r\n        }\r\n\r\n        /**\r\n         * 数组或对象遍历\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Object|Array} obj\r\n         * @param {Function} cb\r\n         * @param {*} [context]\r\n         */\r\n        function each(obj, cb, context) {\r\n            if (!(obj && cb)) {\r\n                return;\r\n            }\r\n            if (obj.forEach && obj.forEach === nativeForEach) {\r\n                obj.forEach(cb, context);\r\n            }\r\n            else if (obj.length === +obj.length) {\r\n                for (var i = 0, len = obj.length; i < len; i++) {\r\n                    cb.call(context, obj[i], i, obj);\r\n                }\r\n            }\r\n            else {\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        cb.call(context, obj[key], key, obj);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 数组映射\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Array} obj\r\n         * @param {Function} cb\r\n         * @param {*} [context]\r\n         * @return {Array}\r\n         */\r\n        function map(obj, cb, context) {\r\n            if (!(obj && cb)) {\r\n                return;\r\n            }\r\n            if (obj.map && obj.map === nativeMap) {\r\n                return obj.map(cb, context);\r\n            }\r\n            else {\r\n                var result = [];\r\n                for (var i = 0, len = obj.length; i < len; i++) {\r\n                    result.push(cb.call(context, obj[i], i, obj));\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 数组过滤\r\n         * @memberOf module:zrender/tool/util\r\n         * @param {Array} obj\r\n         * @param {Function} cb\r\n         * @param {*} [context]\r\n         * @return {Array}\r\n         */\r\n        function filter(obj, cb, context) {\r\n            if (!(obj && cb)) {\r\n                return;\r\n            }\r\n            if (obj.filter && obj.filter === nativeFilter) {\r\n                return obj.filter(cb, context);\r\n            }\r\n            else {\r\n                var result = [];\r\n                for (var i = 0, len = obj.length; i < len; i++) {\r\n                    if (cb.call(context, obj[i], i, obj)) {\r\n                        result.push(obj[i]);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n\r\n        function bind(func, context) {\r\n            \r\n            return function () {\r\n                func.apply(context, arguments);\r\n            }\r\n        }\r\n\r\n        return {\r\n            inherits: inherits,\r\n            clone: clone,\r\n            merge: merge,\r\n            getContext: getContext,\r\n            indexOf: indexOf,\r\n            each: each,\r\n            map: map,\r\n            filter: filter,\r\n            bind: bind\r\n        };\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/util.js\n// module id = 0\n// module chunks = 0","/**\r\n * shape基类\r\n * @module zrender/shape/Base\r\n * @author  Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *          errorrik (errorrik@gmail.com)\r\n */\r\n\r\n/**\r\n * @typedef {Object} IBaseShapeStyle\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n\r\n/**\r\n * @typedef {Object} module:zrender/shape/Base~IBoundingRect\r\n * @property {number} x 左上角顶点x轴坐标 \r\n * @property {number} y 左上角顶点y轴坐标\r\n * @property {number} width 包围盒矩形宽度\r\n * @property {number} height 包围盒矩形高度\r\n */\r\n\r\ndefine(\r\n    function(require) {\r\n        var vmlCanvasManager = window['G_vmlCanvasManager'];\r\n\r\n        var matrix = require('../tool/matrix');\r\n        var guid = require('../tool/guid');\r\n        var util = require('../tool/util');\r\n        var log = require('../tool/log');\r\n\r\n        var Transformable = require('../mixin/Transformable');\r\n        var Eventful = require('../mixin/Eventful');\r\n\r\n        function _fillText(ctx, text, x, y, textFont, textAlign, textBaseline) {\r\n            if (textFont) {\r\n                ctx.font = textFont;\r\n            }\r\n            ctx.textAlign = textAlign;\r\n            ctx.textBaseline = textBaseline;\r\n            var rect = _getTextRect(\r\n                text, x, y, textFont, textAlign, textBaseline\r\n            );\r\n            \r\n            text = (text + '').split('\\n');\r\n            var lineHeight = require('../tool/area').getTextHeight('国', textFont);\r\n            \r\n            switch (textBaseline) {\r\n                case 'top':\r\n                    y = rect.y;\r\n                    break;\r\n                case 'bottom':\r\n                    y = rect.y + lineHeight;\r\n                    break;\r\n                default:\r\n                    y = rect.y + lineHeight / 2;\r\n            }\r\n            \r\n            for (var i = 0, l = text.length; i < l; i++) {\r\n                ctx.fillText(text[i], x, y);\r\n                y += lineHeight;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @inner\r\n         * @param {string} text\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @param {string} textFont\r\n         * @param {string} textAlign\r\n         * @param {string} textBaseline\r\n         */\r\n        function _getTextRect(text, x, y, textFont, textAlign, textBaseline) {\r\n            var area = require('../tool/area');\r\n            var width = area.getTextWidth(text, textFont);\r\n            var lineHeight = area.getTextHeight('国', textFont);\r\n            \r\n            text = (text + '').split('\\n');\r\n            \r\n            switch (textAlign) {\r\n                case 'end':\r\n                case 'right':\r\n                    x -= width;\r\n                    break;\r\n                case 'center':\r\n                    x -= (width / 2);\r\n                    break;\r\n            }\r\n\r\n            switch (textBaseline) {\r\n                case 'top':\r\n                    break;\r\n                case 'bottom':\r\n                    y -= lineHeight * text.length;\r\n                    break;\r\n                default:\r\n                    y -= lineHeight * text.length / 2;\r\n            }\r\n\r\n            return {\r\n                x : x,\r\n                y : y,\r\n                width : width,\r\n                height : lineHeight * text.length\r\n            };\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Base\r\n         * @constructor\r\n         * @extends module:zrender/mixin/Transformable\r\n         * @extends module:zrender/mixin/Eventful\r\n         * @param {Object} options 关于shape的配置项，可以是shape的自有属性，也可以是自定义的属性。\r\n         */\r\n        var Base = function(options) {\r\n            \r\n            options = options || {};\r\n            \r\n            /**\r\n             * Shape id, 全局唯一\r\n             * @type {string}\r\n             */\r\n            this.id = options.id || guid();\r\n\r\n            for (var key in options) {\r\n                this[key] = options[key];\r\n            }\r\n\r\n            /**\r\n             * 基础绘制样式\r\n             * @type {module:zrender/shape/Base~IBaseShapeStyle}\r\n             */\r\n            this.style = this.style || {};\r\n\r\n            /**\r\n             * 高亮样式\r\n             * @type {module:zrender/shape/Base~IBaseShapeStyle}\r\n             */\r\n            this.highlightStyle = this.highlightStyle || null;\r\n\r\n            /**\r\n             * 父节点\r\n             * @readonly\r\n             * @type {module:zrender/Group}\r\n             * @default null\r\n             */\r\n            this.parent = null;\r\n\r\n            this.__dirty = true;\r\n\r\n            this.__clipShapes = [];\r\n\r\n            Transformable.call(this);\r\n            Eventful.call(this);\r\n        };\r\n        /**\r\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\r\n         * @name module:zrender/shape/Base#invisible\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        Base.prototype.invisible = false;\r\n\r\n        /**\r\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\r\n         * @name module:zrender/shape/Base#ignore\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        Base.prototype.ignore = false;\r\n\r\n        /**\r\n         * z层level，决定绘画在哪层canvas中\r\n         * @name module:zrender/shape/Base#zlevel\r\n         * @type {number}\r\n         * @default 0\r\n         */\r\n        Base.prototype.zlevel = 0;\r\n\r\n        /**\r\n         * 是否可拖拽\r\n         * @name module:zrender/shape/Base#draggable\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        Base.prototype.draggable = false;\r\n\r\n        /**\r\n         * 是否可点击\r\n         * @name module:zrender/shape/Base#clickable\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        Base.prototype.clickable = false;\r\n\r\n        /**\r\n         * 是否可以hover\r\n         * @name module:zrender/shape/Base#hoverable\r\n         * @type {boolean}\r\n         * @default true\r\n         */\r\n        Base.prototype.hoverable = true;\r\n        \r\n        /**\r\n         * z值，跟zlevel一样影响shape绘制的前后顺序，z值大的shape会覆盖在z值小的上面，\r\n         * 但是并不会创建新的canvas，所以优先级低于zlevel，而且频繁改动的开销比zlevel小很多。\r\n         * \r\n         * @name module:zrender/shape/Base#z\r\n         * @type {number}\r\n         * @default 0\r\n         */\r\n        Base.prototype.z = 0;\r\n\r\n        /**\r\n         * 绘制图形\r\n         * \r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {boolean} [isHighlight=false] 是否使用高亮属性\r\n         * @param {Function} [updateCallback]\r\n         *        需要异步加载资源的shape可以通过这个callback(e), \r\n         *        让painter更新视图，base.brush没用，需要的话重载brush\r\n         */\r\n        Base.prototype.brush = function (ctx, isHighlight) {\r\n\r\n            var style = this.beforeBrush(ctx, isHighlight);\r\n\r\n            ctx.beginPath();\r\n            this.buildPath(ctx, style);\r\n\r\n            switch (style.brushType) {\r\n                /* jshint ignore:start */\r\n                case 'both':\r\n                    ctx.fill();\r\n                case 'stroke':\r\n                    style.lineWidth > 0 && ctx.stroke();\r\n                    break;\r\n                /* jshint ignore:end */\r\n                default:\r\n                    ctx.fill();\r\n            }\r\n            \r\n            this.drawText(ctx, style, this.style);\r\n\r\n            this.afterBrush(ctx);\r\n        };\r\n\r\n        /**\r\n         * 具体绘制操作前的一些公共操作\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {boolean} [isHighlight=false] 是否使用高亮属性\r\n         * @return {Object} 处理后的样式\r\n         */\r\n        Base.prototype.beforeBrush = function (ctx, isHighlight) {\r\n            var style = this.style;\r\n            \r\n            if (this.brushTypeOnly) {\r\n                style.brushType = this.brushTypeOnly;\r\n            }\r\n\r\n            if (isHighlight) {\r\n                // 根据style扩展默认高亮样式\r\n                style = this.getHighlightStyle(\r\n                    style,\r\n                    this.highlightStyle || {},\r\n                    this.brushTypeOnly\r\n                );\r\n            }\r\n\r\n            if (this.brushTypeOnly == 'stroke') {\r\n                style.strokeColor = style.strokeColor || style.color;\r\n            }\r\n\r\n            ctx.save();\r\n\r\n            this.doClip(ctx);\r\n\r\n            this.setContext(ctx, style);\r\n\r\n            // 设置transform\r\n            this.setTransform(ctx);\r\n\r\n            return style;\r\n        };\r\n\r\n        /**\r\n         * 绘制后的处理\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         */\r\n        Base.prototype.afterBrush = function (ctx) {\r\n            ctx.restore();\r\n        };\r\n\r\n        var STYLE_CTX_MAP = [\r\n            [ 'color', 'fillStyle' ],\r\n            [ 'strokeColor', 'strokeStyle' ],\r\n            [ 'opacity', 'globalAlpha' ],\r\n            [ 'lineCap', 'lineCap' ],\r\n            [ 'lineJoin', 'lineJoin' ],\r\n            [ 'miterLimit', 'miterLimit' ],\r\n            [ 'lineWidth', 'lineWidth' ],\r\n            [ 'shadowBlur', 'shadowBlur' ],\r\n            [ 'shadowColor', 'shadowColor' ],\r\n            [ 'shadowOffsetX', 'shadowOffsetX' ],\r\n            [ 'shadowOffsetY', 'shadowOffsetY' ]\r\n        ];\r\n\r\n        /**\r\n         * 设置 fillStyle, strokeStyle, shadow 等通用绘制样式\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\r\n         */\r\n        Base.prototype.setContext = function (ctx, style) {\r\n            for (var i = 0, len = STYLE_CTX_MAP.length; i < len; i++) {\r\n                var styleProp = STYLE_CTX_MAP[i][0];\r\n                var styleValue = style[styleProp];\r\n                var ctxProp = STYLE_CTX_MAP[i][1];\r\n\r\n                if (typeof styleValue != 'undefined') {\r\n                    ctx[ctxProp] = styleValue;\r\n                }\r\n            }\r\n        };\r\n\r\n        var clipShapeInvTransform = matrix.create();\r\n        Base.prototype.doClip = function (ctx) {\r\n            if (this.__clipShapes && !vmlCanvasManager) {\r\n                for (var i = 0; i < this.__clipShapes.length; i++) {\r\n                    var clipShape = this.__clipShapes[i];\r\n                    if (clipShape.needTransform) {\r\n                        var m = clipShape.transform;\r\n                        matrix.invert(clipShapeInvTransform, m);\r\n                        ctx.transform(\r\n                            m[0], m[1],\r\n                            m[2], m[3],\r\n                            m[4], m[5]\r\n                        );\r\n                    }\r\n                    ctx.beginPath();\r\n                    clipShape.buildPath(ctx, clipShape.style);\r\n                    ctx.clip();\r\n                    // Transform back\r\n                    if (clipShape.needTransform) {\r\n                        var m = clipShapeInvTransform;\r\n                        ctx.transform(\r\n                            m[0], m[1],\r\n                            m[2], m[3],\r\n                            m[4], m[5]\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    \r\n        /**\r\n         * 根据默认样式扩展高亮样式\r\n         * \r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style 默认样式\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} highlightStyle 高亮样式\r\n         * @param {string} brushTypeOnly\r\n         */\r\n        Base.prototype.getHighlightStyle = function (style, highlightStyle, brushTypeOnly) {\r\n            var newStyle = {};\r\n            for (var k in style) {\r\n                newStyle[k] = style[k];\r\n            }\r\n\r\n            var color = require('../tool/color');\r\n            var highlightColor = color.getHighlightColor();\r\n            // 根据highlightStyle扩展\r\n            if (style.brushType != 'stroke') {\r\n                // 带填充则用高亮色加粗边线\r\n                newStyle.strokeColor = highlightColor;\r\n                newStyle.lineWidth = (style.lineWidth || 1)\r\n                                      + this.getHighlightZoom();\r\n                newStyle.brushType = 'both';\r\n            }\r\n            else {\r\n                if (brushTypeOnly != 'stroke') {\r\n                    // 描边型的则用原色加工高亮\r\n                    newStyle.strokeColor = highlightColor;\r\n                    newStyle.lineWidth = (style.lineWidth || 1)\r\n                                          + this.getHighlightZoom();\r\n                } \r\n                else {\r\n                    // 线型的则用原色加工高亮\r\n                    newStyle.strokeColor = highlightStyle.strokeColor\r\n                                           || color.mix(\r\n                                                 style.strokeColor,\r\n                                                 color.toRGB(highlightColor)\r\n                                              );\r\n                }\r\n            }\r\n\r\n            // 可自定义覆盖默认值\r\n            for (var k in highlightStyle) {\r\n                if (typeof highlightStyle[k] != 'undefined') {\r\n                    newStyle[k] = highlightStyle[k];\r\n                }\r\n            }\r\n\r\n            return newStyle;\r\n        };\r\n\r\n        // 高亮放大效果参数\r\n        // 当前统一设置为6，如有需要差异设置，通过this.type判断实例类型\r\n        Base.prototype.getHighlightZoom = function () {\r\n            return this.type != 'text' ? 6 : 2;\r\n        };\r\n\r\n        /**\r\n         * 移动位置\r\n         * @param {number} dx 横坐标变化\r\n         * @param {number} dy 纵坐标变化\r\n         */\r\n        Base.prototype.drift = function (dx, dy) {\r\n            this.position[0] += dx;\r\n            this.position[1] += dy;\r\n        };\r\n\r\n        /**\r\n         * 构建绘制的Path\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\r\n         */\r\n        Base.prototype.buildPath = function (ctx, style) {\r\n            log('buildPath not implemented in ' + this.type);\r\n        };\r\n\r\n        /**\r\n         * 计算返回包围盒矩形\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style\r\n         * @return {module:zrender/shape/Base~IBoundingRect}\r\n         */\r\n        Base.prototype.getRect = function (style) {\r\n            log('getRect not implemented in ' + this.type);   \r\n        };\r\n        \r\n        /**\r\n         * 判断鼠标位置是否在图形内\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @return {boolean}\r\n         */\r\n        Base.prototype.isCover = function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n\r\n            // 快速预判并保留判断矩形\r\n            if (this.isCoverRect(x, y)) {\r\n                // 矩形内\r\n                return require('../tool/area').isInside(this, this.style, x, y);\r\n            }\r\n            \r\n            return false;\r\n        };\r\n\r\n        Base.prototype.isCoverRect = function (x, y) {\r\n            // 快速预判并保留判断矩形\r\n            var rect = this.style.__rect;\r\n            if (!rect) {\r\n                rect = this.style.__rect = this.getRect(this.style);\r\n            }\r\n            return x >= rect.x\r\n                && x <= (rect.x + rect.width)\r\n                && y >= rect.y\r\n                && y <= (rect.y + rect.height);\r\n        };\r\n\r\n        /**\r\n         * 绘制附加文本\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} style 样式\r\n         * @param {module:zrender/shape/Base~IBaseShapeStyle} normalStyle 默认样式，用于定位文字显示\r\n         */\r\n        Base.prototype.drawText = function (ctx, style, normalStyle) {\r\n            if (typeof(style.text) == 'undefined' || style.text === false) {\r\n                return;\r\n            }\r\n            // 字体颜色策略\r\n            var textColor = style.textColor || style.color || style.strokeColor;\r\n            ctx.fillStyle = textColor;\r\n\r\n            // 文本与图形间空白间隙\r\n            var dd = 10;\r\n            var al;         // 文本水平对齐\r\n            var bl;         // 文本垂直对齐\r\n            var tx;         // 文本横坐标\r\n            var ty;         // 文本纵坐标\r\n\r\n            var textPosition = style.textPosition       // 用户定义\r\n                               || this.textPosition     // shape默认\r\n                               || 'top';                // 全局默认\r\n\r\n            switch (textPosition) {\r\n                case 'inside': \r\n                case 'top': \r\n                case 'bottom': \r\n                case 'left': \r\n                case 'right': \r\n                    if (this.getRect) {\r\n                        var rect = (normalStyle || style).__rect\r\n                                   || this.getRect(normalStyle || style);\r\n\r\n                        switch (textPosition) {\r\n                            case 'inside':\r\n                                tx = rect.x + rect.width / 2;\r\n                                ty = rect.y + rect.height / 2;\r\n                                al = 'center';\r\n                                bl = 'middle';\r\n                                if (style.brushType != 'stroke'\r\n                                    && textColor == style.color\r\n                                ) {\r\n                                    ctx.fillStyle = '#fff';\r\n                                }\r\n                                break;\r\n                            case 'left':\r\n                                tx = rect.x - dd;\r\n                                ty = rect.y + rect.height / 2;\r\n                                al = 'end';\r\n                                bl = 'middle';\r\n                                break;\r\n                            case 'right':\r\n                                tx = rect.x + rect.width + dd;\r\n                                ty = rect.y + rect.height / 2;\r\n                                al = 'start';\r\n                                bl = 'middle';\r\n                                break;\r\n                            case 'top':\r\n                                tx = rect.x + rect.width / 2;\r\n                                ty = rect.y - dd;\r\n                                al = 'center';\r\n                                bl = 'bottom';\r\n                                break;\r\n                            case 'bottom':\r\n                                tx = rect.x + rect.width / 2;\r\n                                ty = rect.y + rect.height + dd;\r\n                                al = 'center';\r\n                                bl = 'top';\r\n                                break;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'start':\r\n                case 'end':\r\n                    var pointList = style.pointList\r\n                                    || [\r\n                                        [style.xStart || 0, style.yStart || 0],\r\n                                        [style.xEnd || 0, style.yEnd || 0]\r\n                                    ];\r\n                    var length = pointList.length;\r\n                    if (length < 2) {\r\n                        // 少于2个点就不画了~\r\n                        return;\r\n                    }\r\n                    var xStart;\r\n                    var xEnd;\r\n                    var yStart;\r\n                    var yEnd;\r\n                    switch (textPosition) {\r\n                        case 'start':\r\n                            xStart = pointList[1][0];\r\n                            xEnd = pointList[0][0];\r\n                            yStart = pointList[1][1];\r\n                            yEnd = pointList[0][1];\r\n                            break;\r\n                        case 'end':\r\n                            xStart = pointList[length - 2][0];\r\n                            xEnd = pointList[length - 1][0];\r\n                            yStart = pointList[length - 2][1];\r\n                            yEnd = pointList[length - 1][1];\r\n                            break;\r\n                    }\r\n                    tx = xEnd;\r\n                    ty = yEnd;\r\n                    \r\n                    var angle = Math.atan((yStart - yEnd) / (xEnd - xStart)) / Math.PI * 180;\r\n                    if ((xEnd - xStart) < 0) {\r\n                        angle += 180;\r\n                    }\r\n                    else if ((yStart - yEnd) < 0) {\r\n                        angle += 360;\r\n                    }\r\n                    \r\n                    dd = 5;\r\n                    if (angle >= 30 && angle <= 150) {\r\n                        al = 'center';\r\n                        bl = 'bottom';\r\n                        ty -= dd;\r\n                    }\r\n                    else if (angle > 150 && angle < 210) {\r\n                        al = 'right';\r\n                        bl = 'middle';\r\n                        tx -= dd;\r\n                    }\r\n                    else if (angle >= 210 && angle <= 330) {\r\n                        al = 'center';\r\n                        bl = 'top';\r\n                        ty += dd;\r\n                    }\r\n                    else {\r\n                        al = 'left';\r\n                        bl = 'middle';\r\n                        tx += dd;\r\n                    }\r\n                    break;\r\n                case 'specific':\r\n                    tx = style.textX || 0;\r\n                    ty = style.textY || 0;\r\n                    al = 'start';\r\n                    bl = 'middle';\r\n                    break;\r\n            }\r\n\r\n            if (tx != null && ty != null) {\r\n                _fillText(\r\n                    ctx,\r\n                    style.text, \r\n                    tx, ty, \r\n                    style.textFont,\r\n                    style.textAlign || al,\r\n                    style.textBaseline || bl\r\n                );\r\n            }\r\n        };\r\n\r\n        Base.prototype.modSelf = function() {\r\n            this.__dirty = true;\r\n            if (this.style) {\r\n                this.style.__rect = null;\r\n            }\r\n            if (this.highlightStyle) {\r\n                this.highlightStyle.__rect = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 图形是否会触发事件\r\n         * @return {boolean}\r\n         */\r\n        // TODO, 通过 bind 绑定的事件\r\n        Base.prototype.isSilent = function () {\r\n            return !(\r\n                this.hoverable || this.draggable || this.clickable\r\n                || this.onmousemove || this.onmouseover || this.onmouseout\r\n                || this.onmousedown || this.onmouseup || this.onclick\r\n                || this.ondragenter || this.ondragover || this.ondragleave\r\n                || this.ondrop\r\n            );\r\n        };\r\n\r\n        util.merge(Base.prototype, Transformable.prototype, true);\r\n        util.merge(Base.prototype, Eventful.prototype, true);\r\n\r\n        return Base;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Base.js\n// module id = 1\n// module chunks = 0","/**\r\n * zrender: 图形空间辅助类\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n *\r\n * isInside：是否在区域内部\r\n * isOutside：是否在区域外部\r\n * getTextWidth：测算单行文本宽度\r\n */\r\ndefine(\r\n    function (require) {\r\n\r\n        'use strict';\r\n\r\n        var util = require('./util');\r\n        var curve = require('./curve');\r\n\r\n        var _ctx;\r\n        \r\n        var _textWidthCache = {};\r\n        var _textHeightCache = {};\r\n        var _textWidthCacheCounter = 0;\r\n        var _textHeightCacheCounter = 0;\r\n        var TEXT_CACHE_MAX = 5000;\r\n            \r\n        var PI2 = Math.PI * 2;\r\n\r\n        function normalizeRadian(angle) {\r\n            angle %= PI2;\r\n            if (angle < 0) {\r\n                angle += PI2;\r\n            }\r\n            return angle;\r\n        }\r\n        /**\r\n         * 包含判断\r\n         *\r\n         * @param {Object} shape : 图形\r\n         * @param {Object} area ： 目标区域\r\n         * @param {number} x ： 横坐标\r\n         * @param {number} y ： 纵坐标\r\n         */\r\n        function isInside(shape, area, x, y) {\r\n            if (!area || !shape) {\r\n                // 无参数或不支持类型\r\n                return false;\r\n            }\r\n            var zoneType = shape.type;\r\n\r\n            _ctx = _ctx || util.getContext();\r\n\r\n            // 未实现或不可用时(excanvas不支持)则数学运算，主要是line，polyline，ring\r\n            var _mathReturn = _mathMethod(shape, area, x, y);\r\n            if (typeof _mathReturn != 'undefined') {\r\n                return _mathReturn;\r\n            }\r\n\r\n            if (shape.buildPath && _ctx.isPointInPath) {\r\n                return _buildPathMethod(shape, _ctx, area, x, y);\r\n            }\r\n\r\n            // 上面的方法都行不通时\r\n            switch (zoneType) {\r\n                case 'ellipse': // Todo，不精确\r\n                    return true;\r\n                // 旋轮曲线  不准确\r\n                case 'trochoid':\r\n                    var _r = area.location == 'out'\r\n                            ? area.r1 + area.r2 + area.d\r\n                            : area.r1 - area.r2 + area.d;\r\n                    return isInsideCircle(area, x, y, _r);\r\n                // 玫瑰线 不准确\r\n                case 'rose' :\r\n                    return isInsideCircle(area, x, y, area.maxr);\r\n                // 路径，椭圆，曲线等-----------------13\r\n                default:\r\n                    return false;   // Todo，暂不支持\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @param {Object} shape : 图形\r\n         * @param {Object} area ：目标区域\r\n         * @param {number} x ： 横坐标\r\n         * @param {number} y ： 纵坐标\r\n         * @return {boolean=} true表示坐标处在图形中\r\n         */\r\n        function _mathMethod(shape, area, x, y) {\r\n            var zoneType = shape.type;\r\n            // 在矩形内则部分图形需要进一步判断\r\n            switch (zoneType) {\r\n                // 贝塞尔曲线\r\n                case 'bezier-curve':\r\n                    if (typeof(area.cpX2) === 'undefined') {\r\n                        return isInsideQuadraticStroke(\r\n                            area.xStart, area.yStart,\r\n                            area.cpX1, area.cpY1, \r\n                            area.xEnd, area.yEnd,\r\n                            area.lineWidth, x, y\r\n                        );\r\n                    }\r\n                    return isInsideCubicStroke(\r\n                        area.xStart, area.yStart,\r\n                        area.cpX1, area.cpY1, \r\n                        area.cpX2, area.cpY2, \r\n                        area.xEnd, area.yEnd,\r\n                        area.lineWidth, x, y\r\n                    );\r\n                // 线\r\n                case 'line':\r\n                    return isInsideLine(\r\n                        area.xStart, area.yStart,\r\n                        area.xEnd, area.yEnd,\r\n                        area.lineWidth, x, y\r\n                    );\r\n                // 折线\r\n                case 'polyline':\r\n                    return isInsidePolyline(\r\n                        area.pointList, area.lineWidth, x, y\r\n                    );\r\n                // 圆环\r\n                case 'ring':\r\n                    return isInsideRing(\r\n                        area.x, area.y, area.r0, area.r, x, y\r\n                    );\r\n                // 圆形\r\n                case 'circle':\r\n                    return isInsideCircle(\r\n                        area.x, area.y, area.r, x, y\r\n                    );\r\n                // 扇形\r\n                case 'sector':\r\n                    var startAngle = area.startAngle * Math.PI / 180;\r\n                    var endAngle = area.endAngle * Math.PI / 180;\r\n                    if (!area.clockWise) {\r\n                        startAngle = -startAngle;\r\n                        endAngle = -endAngle;\r\n                    }\r\n                    return isInsideSector(\r\n                        area.x, area.y, area.r0, area.r,\r\n                        startAngle, endAngle,\r\n                        !area.clockWise,\r\n                        x, y\r\n                    );\r\n                // 多边形\r\n                case 'path':\r\n                    return area.pathArray && isInsidePath(\r\n                        area.pathArray, Math.max(area.lineWidth, 5),\r\n                        area.brushType, x, y\r\n                    );\r\n                case 'polygon':\r\n                case 'star':\r\n                case 'isogon':\r\n                    return isInsidePolygon(area.pointList, x, y);\r\n                // 文本\r\n                case 'text':\r\n                    var rect =  area.__rect || shape.getRect(area);\r\n                    return isInsideRect(\r\n                        rect.x, rect.y, rect.width, rect.height, x, y\r\n                    );\r\n                // 矩形\r\n                case 'rectangle':\r\n                // 图片\r\n                case 'image':\r\n                    return isInsideRect(\r\n                        area.x, area.y, area.width, area.height, x, y\r\n                    );\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 通过buildPath方法来判断，三个方法中较快，但是不支持线条类型的shape，\r\n         * 而且excanvas不支持isPointInPath方法\r\n         *\r\n         * @param {Object} shape ： shape\r\n         * @param {Object} context : 上下文\r\n         * @param {Object} area ：目标区域\r\n         * @param {number} x ： 横坐标\r\n         * @param {number} y ： 纵坐标\r\n         * @return {boolean} true表示坐标处在图形中\r\n         */\r\n        function _buildPathMethod(shape, context, area, x, y) {\r\n            // 图形类实现路径创建了则用类的path\r\n            context.beginPath();\r\n            shape.buildPath(context, area);\r\n            context.closePath();\r\n            return context.isPointInPath(x, y);\r\n        }\r\n\r\n        /**\r\n         * !isInside\r\n         */\r\n        function isOutside(shape, area, x, y) {\r\n            return !isInside(shape, area, x, y);\r\n        }\r\n\r\n        /**\r\n         * 线段包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        function isInsideLine(x0, y0, x1, y1, lineWidth, x, y) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = Math.max(lineWidth, 5);\r\n            var _a = 0;\r\n            var _b = x0;\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l)\r\n                || (y < y0 - _l && y < y1 - _l)\r\n                || (x > x0 + _l && x > x1 + _l)\r\n                || (x < x0 - _l && x < x1 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            if (x0 !== x1) {\r\n                _a = (y0 - y1) / (x0 - x1);\r\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\r\n            }\r\n            else {\r\n                return Math.abs(x - x0) <= _l / 2;\r\n            }\r\n            var tmp = _a * x - y + _b;\r\n            var _s = tmp * tmp / (_a * _a + 1);\r\n            return _s <= _l / 2 * _l / 2;\r\n        }\r\n\r\n        /**\r\n         * 三次贝塞尔曲线描边包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  x2\r\n         * @param  {number}  y2\r\n         * @param  {number}  x3\r\n         * @param  {number}  y3\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        function isInsideCubicStroke(\r\n            x0, y0, x1, y1, x2, y2, x3, y3,\r\n            lineWidth, x, y\r\n        ) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = Math.max(lineWidth, 5);\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\r\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\r\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\r\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n            var d =  curve.cubicProjectPoint(\r\n                x0, y0, x1, y1, x2, y2, x3, y3,\r\n                x, y, null\r\n            );\r\n            return d <= _l / 2;\r\n        }\r\n\r\n        /**\r\n         * 二次贝塞尔曲线描边包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  x2\r\n         * @param  {number}  y2\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        function isInsideQuadraticStroke(\r\n            x0, y0, x1, y1, x2, y2,\r\n            lineWidth, x, y\r\n        ) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = Math.max(lineWidth, 5);\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\r\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\r\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\r\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n            var d =  curve.quadraticProjectPoint(\r\n                x0, y0, x1, y1, x2, y2,\r\n                x, y, null\r\n            );\r\n            return d <= _l / 2;\r\n        }\r\n\r\n        /**\r\n         * 圆弧描边包含判断\r\n         * @param  {number}  cx\r\n         * @param  {number}  cy\r\n         * @param  {number}  r\r\n         * @param  {number}  startAngle\r\n         * @param  {number}  endAngle\r\n         * @param  {boolean}  anticlockwise\r\n         * @param  {number} lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {Boolean}\r\n         */\r\n        function isInsideArcStroke(\r\n            cx, cy, r, startAngle, endAngle, anticlockwise,\r\n            lineWidth, x, y\r\n        ) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = Math.max(lineWidth, 5);\r\n\r\n            x -= cx;\r\n            y -= cy;\r\n            var d = Math.sqrt(x * x + y * y);\r\n            if ((d - _l > r) || (d + _l < r)) {\r\n                return false;\r\n            }\r\n            if (Math.abs(startAngle - endAngle) >= PI2) {\r\n                // Is a circle\r\n                return true;\r\n            }\r\n            if (anticlockwise) {\r\n                var tmp = startAngle;\r\n                startAngle = normalizeRadian(endAngle);\r\n                endAngle = normalizeRadian(tmp);\r\n            } else {\r\n                startAngle = normalizeRadian(startAngle);\r\n                endAngle = normalizeRadian(endAngle);\r\n            }\r\n            if (startAngle > endAngle) {\r\n                endAngle += PI2;\r\n            }\r\n            \r\n            var angle = Math.atan2(y, x);\r\n            if (angle < 0) {\r\n                angle += PI2;\r\n            }\r\n            return (angle >= startAngle && angle <= endAngle)\r\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\r\n        }\r\n\r\n        function isInsidePolyline(points, lineWidth, x, y) {\r\n            var lineWidth = Math.max(lineWidth, 10);\r\n            for (var i = 0, l = points.length - 1; i < l; i++) {\r\n                var x0 = points[i][0];\r\n                var y0 = points[i][1];\r\n                var x1 = points[i + 1][0];\r\n                var y1 = points[i + 1][1];\r\n\r\n                if (isInsideLine(x0, y0, x1, y1, lineWidth, x, y)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        function isInsideRing(cx, cy, r0, r, x, y) {\r\n            var d = (x - cx) * (x - cx) + (y - cy) * (y - cy);\r\n            return (d < r * r) && (d > r0 * r0);\r\n        }\r\n\r\n        /**\r\n         * 矩形包含判断\r\n         */\r\n        function isInsideRect(x0, y0, width, height, x, y) {\r\n            return x >= x0 && x <= (x0 + width)\r\n                && y >= y0 && y <= (y0 + height);\r\n        }\r\n\r\n        /**\r\n         * 圆形包含判断\r\n         */\r\n        function isInsideCircle(x0, y0, r, x, y) {\r\n            return (x - x0) * (x - x0) + (y - y0) * (y - y0)\r\n                   < r * r;\r\n        }\r\n\r\n        /**\r\n         * 扇形包含判断\r\n         */\r\n        function isInsideSector(\r\n            cx, cy, r0, r, startAngle, endAngle, anticlockwise, x, y\r\n        ) {\r\n            return isInsideArcStroke(\r\n                cx, cy, (r0 + r) / 2, startAngle, endAngle, anticlockwise,\r\n                r - r0, x, y\r\n            );\r\n        }\r\n\r\n        /**\r\n         * 多边形包含判断\r\n         * 与 canvas 一样采用 non-zero winding rule\r\n         */\r\n        function isInsidePolygon(points, x, y) {\r\n            var N = points.length;\r\n            var w = 0;\r\n\r\n            for (var i = 0, j = N - 1; i < N; i++) {\r\n                var x0 = points[j][0];\r\n                var y0 = points[j][1];\r\n                var x1 = points[i][0];\r\n                var y1 = points[i][1];\r\n                w += windingLine(x0, y0, x1, y1, x, y);\r\n                j = i;\r\n            }\r\n            return w !== 0;\r\n        }\r\n\r\n        function windingLine(x0, y0, x1, y1, x, y) {\r\n            if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\r\n                return 0;\r\n            }\r\n            if (y1 == y0) {\r\n                return 0;\r\n            }\r\n            var dir = y1 < y0 ? 1 : -1;\r\n            var t = (y - y0) / (y1 - y0);\r\n            var x_ = t * (x1 - x0) + x0;\r\n\r\n            return x_ > x ? dir : 0;\r\n        }\r\n\r\n        // 临时数组\r\n        var roots = [-1, -1, -1];\r\n        var extrema = [-1, -1];\r\n\r\n        function swapExtrema() {\r\n            var tmp = extrema[0];\r\n            extrema[0] = extrema[1];\r\n            extrema[1] = tmp;\r\n        }\r\n        function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\r\n            // Quick reject\r\n            if (\r\n                (y > y0 && y > y1 && y > y2 && y > y3)\r\n                || (y < y0 && y < y1 && y < y2 && y < y3)\r\n            ) {\r\n                return 0;\r\n            }\r\n            var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\r\n            if (nRoots === 0) {\r\n                return 0;\r\n            }\r\n            else {\r\n                var w = 0;\r\n                var nExtrema = -1;\r\n                var y0_, y1_;\r\n                for (var i = 0; i < nRoots; i++) {\r\n                    var t = roots[i];\r\n                    var x_ = curve.cubicAt(x0, x1, x2, x3, t);\r\n                    if (x_ < x) { // Quick reject\r\n                        continue;\r\n                    }\r\n                    if (nExtrema < 0) {\r\n                        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\r\n                        if (extrema[1] < extrema[0] && nExtrema > 1) {\r\n                            swapExtrema();\r\n                        }\r\n                        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\r\n                        if (nExtrema > 1) {\r\n                            y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\r\n                        }\r\n                    }\r\n                    if (nExtrema == 2) {\r\n                        // 分成三段单调函数\r\n                        if (t < extrema[0]) {\r\n                            w += y0_ < y0 ? 1 : -1;\r\n                        } \r\n                        else if (t < extrema[1]) {\r\n                            w += y1_ < y0_ ? 1 : -1;\r\n                        } \r\n                        else {\r\n                            w += y3 < y1_ ? 1 : -1;\r\n                        }\r\n                    } \r\n                    else {\r\n                        // 分成两段单调函数\r\n                        if (t < extrema[0]) {\r\n                            w += y0_ < y0 ? 1 : -1;\r\n                        } \r\n                        else {\r\n                            w += y3 < y0_ ? 1 : -1;\r\n                        }\r\n                    }\r\n                }\r\n                return w;\r\n            }\r\n        }\r\n\r\n        function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\r\n            // Quick reject\r\n            if (\r\n                (y > y0 && y > y1 && y > y2)\r\n                || (y < y0 && y < y1 && y < y2)\r\n            ) {\r\n                return 0;\r\n            }\r\n            var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\r\n            if (nRoots === 0) {\r\n                return 0;\r\n            } \r\n            else {\r\n                var t = curve.quadraticExtremum(y0, y1, y2);\r\n                if (t >=0 && t <= 1) {\r\n                    var w = 0;\r\n                    var y_ = curve.quadraticAt(y0, y1, y2, t);\r\n                    for (var i = 0; i < nRoots; i++) {\r\n                        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\r\n                        if (x_ < x) {\r\n                            continue;\r\n                        }\r\n                        if (roots[i] < t) {\r\n                            w += y_ < y0 ? 1 : -1;\r\n                        } \r\n                        else {\r\n                            w += y2 < y_ ? 1 : -1;\r\n                        }\r\n                    }\r\n                    return w;\r\n                } \r\n                else {\r\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\r\n                    if (x_ < x) {\r\n                        return 0;\r\n                    }\r\n                    return y2 < y0 ? 1 : -1;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // TODO\r\n        // Arc 旋转\r\n        function windingArc(\r\n            cx, cy, r, startAngle, endAngle, anticlockwise, x, y\r\n        ) {\r\n            y -= cy;\r\n            if (y > r || y < -r) {\r\n                return 0;\r\n            }\r\n            var tmp = Math.sqrt(r * r - y * y);\r\n            roots[0] = -tmp;\r\n            roots[1] = tmp;\r\n\r\n            if (Math.abs(startAngle - endAngle) >= PI2) {\r\n                // Is a circle\r\n                startAngle = 0;\r\n                endAngle = PI2;\r\n                var dir = anticlockwise ? 1 : -1;\r\n                if (x >= roots[0] + cx && x <= roots[1] + cx) {\r\n                    return dir;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n\r\n            if (anticlockwise) {\r\n                var tmp = startAngle;\r\n                startAngle = normalizeRadian(endAngle);\r\n                endAngle = normalizeRadian(tmp);   \r\n            } else {\r\n                startAngle = normalizeRadian(startAngle);\r\n                endAngle = normalizeRadian(endAngle);   \r\n            }\r\n            if (startAngle > endAngle) {\r\n                endAngle += PI2;\r\n            }\r\n\r\n            var w = 0;\r\n            for (var i = 0; i < 2; i++) {\r\n                var x_ = roots[i];\r\n                if (x_ + cx > x) {\r\n                    var angle = Math.atan2(y, x_);\r\n                    var dir = anticlockwise ? 1 : -1;\r\n                    if (angle < 0) {\r\n                        angle = PI2 + angle;\r\n                    }\r\n                    if (\r\n                        (angle >= startAngle && angle <= endAngle)\r\n                        || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\r\n                    ) {\r\n                        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\r\n                            dir = -dir;\r\n                        }\r\n                        w += dir;\r\n                    }\r\n                }\r\n            }\r\n            return w;\r\n        }\r\n\r\n        /**\r\n         * 路径包含判断\r\n         * 与 canvas 一样采用 non-zero winding rule\r\n         */\r\n        function isInsidePath(pathArray, lineWidth, brushType, x, y) {\r\n            var w = 0;\r\n            var xi = 0;\r\n            var yi = 0;\r\n            var x0 = 0;\r\n            var y0 = 0;\r\n            var beginSubpath = true;\r\n            var firstCmd = true;\r\n\r\n            brushType = brushType || 'fill';\r\n\r\n            var hasStroke = brushType === 'stroke' || brushType === 'both';\r\n            var hasFill = brushType === 'fill' || brushType === 'both';\r\n\r\n            // var roots = [-1, -1, -1];\r\n            for (var i = 0; i < pathArray.length; i++) {\r\n                var seg = pathArray[i];\r\n                var p = seg.points;\r\n                // Begin a new subpath\r\n                if (beginSubpath || seg.command === 'M') {\r\n                    if (i > 0) {\r\n                        // Close previous subpath\r\n                        if (hasFill) {\r\n                            w += windingLine(xi, yi, x0, y0, x, y);\r\n                        }\r\n                        if (w !== 0) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    x0 = p[p.length - 2];\r\n                    y0 = p[p.length - 1];\r\n                    beginSubpath = false;\r\n                    if (firstCmd && seg.command !== 'A') {\r\n                        // 如果第一个命令不是M, 是lineTo, bezierCurveTo\r\n                        // 等绘制命令的话，是会从该绘制的起点开始算的\r\n                        // Arc 会在之后做单独处理所以这里忽略\r\n                        firstCmd = false;\r\n                        xi = x0;\r\n                        yi = y0;\r\n                    }\r\n                }\r\n                switch (seg.command) {\r\n                    case 'M':\r\n                        xi = p[0];\r\n                        yi = p[1];\r\n                        break;\r\n                    case 'L':\r\n                        if (hasStroke) {\r\n                            if (isInsideLine(\r\n                                xi, yi, p[0], p[1], lineWidth, x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        if (hasFill) {\r\n                            w += windingLine(xi, yi, p[0], p[1], x, y);\r\n                        }\r\n                        xi = p[0];\r\n                        yi = p[1];\r\n                        break;\r\n                    case 'C':\r\n                        if (hasStroke) {\r\n                            if (isInsideCubicStroke(\r\n                                xi, yi, p[0], p[1], p[2], p[3], p[4], p[5],\r\n                                lineWidth, x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        if (hasFill) {\r\n                            w += windingCubic(\r\n                                xi, yi, p[0], p[1], p[2], p[3], p[4], p[5], x, y\r\n                            );\r\n                        }\r\n                        xi = p[4];\r\n                        yi = p[5];\r\n                        break;\r\n                    case 'Q':\r\n                        if (hasStroke) {\r\n                            if (isInsideQuadraticStroke(\r\n                                xi, yi, p[0], p[1], p[2], p[3],\r\n                                lineWidth, x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        if (hasFill) {\r\n                            w += windingQuadratic(\r\n                                xi, yi, p[0], p[1], p[2], p[3], x, y\r\n                            );\r\n                        }\r\n                        xi = p[2];\r\n                        yi = p[3];\r\n                        break;\r\n                    case 'A':\r\n                        // TODO Arc 旋转\r\n                        // TODO Arc 判断的开销比较大\r\n                        var cx = p[0];\r\n                        var cy = p[1];\r\n                        var rx = p[2];\r\n                        var ry = p[3];\r\n                        var theta = p[4];\r\n                        var dTheta = p[5];\r\n                        var x1 = Math.cos(theta) * rx + cx;\r\n                        var y1 = Math.sin(theta) * ry + cy;\r\n                        // 不是直接使用 arc 命令\r\n                        if (!firstCmd) {\r\n                            w += windingLine(xi, yi, x1, y1);\r\n                        } else {\r\n                            firstCmd = false;\r\n                            // 第一个命令起点还未定义\r\n                            x0 = x1;\r\n                            y0 = y1;\r\n                        }\r\n                        // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\r\n                        var _x = (x - cx) * ry / rx + cx;\r\n                        if (hasStroke) {\r\n                            if (isInsideArcStroke(\r\n                                cx, cy, ry, theta, theta + dTheta, 1 - p[7],\r\n                                lineWidth, _x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        if (hasFill) {\r\n                            w += windingArc(\r\n                                cx, cy, ry, theta, theta + dTheta, 1 - p[7],\r\n                                _x, y\r\n                            );\r\n                        }\r\n                        xi = Math.cos(theta + dTheta) * rx + cx;\r\n                        yi = Math.sin(theta + dTheta) * ry + cy;\r\n                        break;\r\n                    case 'z':\r\n                        if (hasStroke) {\r\n                            if (isInsideLine(\r\n                                xi, yi, x0, y0, lineWidth, x, y\r\n                            )) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        beginSubpath = true;\r\n                        break;\r\n                }\r\n            }\r\n            if (hasFill) {\r\n                w += windingLine(xi, yi, x0, y0, x, y);\r\n            }\r\n            return w !== 0;\r\n        }\r\n\r\n        /**\r\n         * 测算多行文本宽度\r\n         * @param {Object} text\r\n         * @param {Object} textFont\r\n         */\r\n        function getTextWidth(text, textFont) {\r\n            var key = text + ':' + textFont;\r\n            if (_textWidthCache[key]) {\r\n                return _textWidthCache[key];\r\n            }\r\n            _ctx = _ctx || util.getContext();\r\n            _ctx.save();\r\n\r\n            if (textFont) {\r\n                _ctx.font = textFont;\r\n            }\r\n            \r\n            text = (text + '').split('\\n');\r\n            var width = 0;\r\n            for (var i = 0, l = text.length; i < l; i++) {\r\n                width =  Math.max(\r\n                    _ctx.measureText(text[i]).width,\r\n                    width\r\n                );\r\n            }\r\n            _ctx.restore();\r\n\r\n            _textWidthCache[key] = width;\r\n            if (++_textWidthCacheCounter > TEXT_CACHE_MAX) {\r\n                // 内存释放\r\n                _textWidthCacheCounter = 0;\r\n                _textWidthCache = {};\r\n            }\r\n            \r\n            return width;\r\n        }\r\n        \r\n        /**\r\n         * 测算多行文本高度\r\n         * @param {Object} text\r\n         * @param {Object} textFont\r\n         */\r\n        function getTextHeight(text, textFont) {\r\n            var key = text + ':' + textFont;\r\n            if (_textHeightCache[key]) {\r\n                return _textHeightCache[key];\r\n            }\r\n            \r\n            _ctx = _ctx || util.getContext();\r\n\r\n            _ctx.save();\r\n            if (textFont) {\r\n                _ctx.font = textFont;\r\n            }\r\n            \r\n            text = (text + '').split('\\n');\r\n            // 比较粗暴\r\n            var height = (_ctx.measureText('国').width + 2) * text.length;\r\n\r\n            _ctx.restore();\r\n\r\n            _textHeightCache[key] = height;\r\n            if (++_textHeightCacheCounter > TEXT_CACHE_MAX) {\r\n                // 内存释放\r\n                _textHeightCacheCounter = 0;\r\n                _textHeightCache = {};\r\n            }\r\n            return height;\r\n        }\r\n\r\n        return {\r\n            isInside : isInside,\r\n            isOutside : isOutside,\r\n            getTextWidth : getTextWidth,\r\n            getTextHeight : getTextHeight,\r\n\r\n            isInsidePath: isInsidePath,\r\n            isInsidePolygon: isInsidePolygon,\r\n            isInsideSector: isInsideSector,\r\n            isInsideCircle: isInsideCircle,\r\n            isInsideLine: isInsideLine,\r\n            isInsideRect: isInsideRect,\r\n            isInsidePolyline: isInsidePolyline,\r\n\r\n            isInsideCubicStroke: isInsideCubicStroke,\r\n            isInsideQuadraticStroke: isInsideQuadraticStroke\r\n        };\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/area.js\n// module id = 2\n// module chunks = 0","/**\r\n * 颜色辅助模块\r\n * @module zrender/tool/color\r\n */\r\ndefine(function(require) {\r\n    var util = require('../tool/util');\r\n\r\n    var _ctx;\r\n\r\n    // Color palette is an array containing the default colors for the chart's\r\n    // series.\r\n    // When all colors are used, new colors are selected from the start again.\r\n    // Defaults to:\r\n    // 默认色板\r\n    var palette = [\r\n        '#ff9277', ' #dddd00', ' #ffc877', ' #bbe3ff', ' #d5ffbb',\r\n        '#bbbbff', ' #ddb000', ' #b0dd00', ' #e2bbff', ' #ffbbe3',\r\n        '#ff7777', ' #ff9900', ' #83dd00', ' #77e3ff', ' #778fff',\r\n        '#c877ff', ' #ff77ab', ' #ff6600', ' #aa8800', ' #77c7ff',\r\n        '#ad77ff', ' #ff77ff', ' #dd0083', ' #777700', ' #00aa00',\r\n        '#0088aa', ' #8400dd', ' #aa0088', ' #dd0000', ' #772e00'\r\n    ];\r\n    var _palette = palette;\r\n\r\n    var highlightColor = 'rgba(255,255,0,0.5)';\r\n    var _highlightColor = highlightColor;\r\n\r\n    // 颜色格式\r\n    /*jshint maxlen: 330 */\r\n    var colorRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i;\r\n\r\n    var _nameColors = {\r\n        aliceblue : '#f0f8ff',\r\n        antiquewhite : '#faebd7',\r\n        aqua : '#0ff',\r\n        aquamarine : '#7fffd4',\r\n        azure : '#f0ffff',\r\n        beige : '#f5f5dc',\r\n        bisque : '#ffe4c4',\r\n        black : '#000',\r\n        blanchedalmond : '#ffebcd',\r\n        blue : '#00f',\r\n        blueviolet : '#8a2be2',\r\n        brown : '#a52a2a',\r\n        burlywood : '#deb887',\r\n        cadetblue : '#5f9ea0',\r\n        chartreuse : '#7fff00',\r\n        chocolate : '#d2691e',\r\n        coral : '#ff7f50',\r\n        cornflowerblue : '#6495ed',\r\n        cornsilk : '#fff8dc',\r\n        crimson : '#dc143c',\r\n        cyan : '#0ff',\r\n        darkblue : '#00008b',\r\n        darkcyan : '#008b8b',\r\n        darkgoldenrod : '#b8860b',\r\n        darkgray : '#a9a9a9',\r\n        darkgrey : '#a9a9a9',\r\n        darkgreen : '#006400',\r\n        darkkhaki : '#bdb76b',\r\n        darkmagenta : '#8b008b',\r\n        darkolivegreen : '#556b2f',\r\n        darkorange : '#ff8c00',\r\n        darkorchid : '#9932cc',\r\n        darkred : '#8b0000',\r\n        darksalmon : '#e9967a',\r\n        darkseagreen : '#8fbc8f',\r\n        darkslateblue : '#483d8b',\r\n        darkslategray : '#2f4f4f',\r\n        darkslategrey : '#2f4f4f',\r\n        darkturquoise : '#00ced1',\r\n        darkviolet : '#9400d3',\r\n        deeppink : '#ff1493',\r\n        deepskyblue : '#00bfff',\r\n        dimgray : '#696969',\r\n        dimgrey : '#696969',\r\n        dodgerblue : '#1e90ff',\r\n        firebrick : '#b22222',\r\n        floralwhite : '#fffaf0',\r\n        forestgreen : '#228b22',\r\n        fuchsia : '#f0f',\r\n        gainsboro : '#dcdcdc',\r\n        ghostwhite : '#f8f8ff',\r\n        gold : '#ffd700',\r\n        goldenrod : '#daa520',\r\n        gray : '#808080',\r\n        grey : '#808080',\r\n        green : '#008000',\r\n        greenyellow : '#adff2f',\r\n        honeydew : '#f0fff0',\r\n        hotpink : '#ff69b4',\r\n        indianred : '#cd5c5c',\r\n        indigo : '#4b0082',\r\n        ivory : '#fffff0',\r\n        khaki : '#f0e68c',\r\n        lavender : '#e6e6fa',\r\n        lavenderblush : '#fff0f5',\r\n        lawngreen : '#7cfc00',\r\n        lemonchiffon : '#fffacd',\r\n        lightblue : '#add8e6',\r\n        lightcoral : '#f08080',\r\n        lightcyan : '#e0ffff',\r\n        lightgoldenrodyellow : '#fafad2',\r\n        lightgray : '#d3d3d3',\r\n        lightgrey : '#d3d3d3',\r\n        lightgreen : '#90ee90',\r\n        lightpink : '#ffb6c1',\r\n        lightsalmon : '#ffa07a',\r\n        lightseagreen : '#20b2aa',\r\n        lightskyblue : '#87cefa',\r\n        lightslategray : '#789',\r\n        lightslategrey : '#789',\r\n        lightsteelblue : '#b0c4de',\r\n        lightyellow : '#ffffe0',\r\n        lime : '#0f0',\r\n        limegreen : '#32cd32',\r\n        linen : '#faf0e6',\r\n        magenta : '#f0f',\r\n        maroon : '#800000',\r\n        mediumaquamarine : '#66cdaa',\r\n        mediumblue : '#0000cd',\r\n        mediumorchid : '#ba55d3',\r\n        mediumpurple : '#9370d8',\r\n        mediumseagreen : '#3cb371',\r\n        mediumslateblue : '#7b68ee',\r\n        mediumspringgreen : '#00fa9a',\r\n        mediumturquoise : '#48d1cc',\r\n        mediumvioletred : '#c71585',\r\n        midnightblue : '#191970',\r\n        mintcream : '#f5fffa',\r\n        mistyrose : '#ffe4e1',\r\n        moccasin : '#ffe4b5',\r\n        navajowhite : '#ffdead',\r\n        navy : '#000080',\r\n        oldlace : '#fdf5e6',\r\n        olive : '#808000',\r\n        olivedrab : '#6b8e23',\r\n        orange : '#ffa500',\r\n        orangered : '#ff4500',\r\n        orchid : '#da70d6',\r\n        palegoldenrod : '#eee8aa',\r\n        palegreen : '#98fb98',\r\n        paleturquoise : '#afeeee',\r\n        palevioletred : '#d87093',\r\n        papayawhip : '#ffefd5',\r\n        peachpuff : '#ffdab9',\r\n        peru : '#cd853f',\r\n        pink : '#ffc0cb',\r\n        plum : '#dda0dd',\r\n        powderblue : '#b0e0e6',\r\n        purple : '#800080',\r\n        red : '#f00',\r\n        rosybrown : '#bc8f8f',\r\n        royalblue : '#4169e1',\r\n        saddlebrown : '#8b4513',\r\n        salmon : '#fa8072',\r\n        sandybrown : '#f4a460',\r\n        seagreen : '#2e8b57',\r\n        seashell : '#fff5ee',\r\n        sienna : '#a0522d',\r\n        silver : '#c0c0c0',\r\n        skyblue : '#87ceeb',\r\n        slateblue : '#6a5acd',\r\n        slategray : '#708090',\r\n        slategrey : '#708090',\r\n        snow : '#fffafa',\r\n        springgreen : '#00ff7f',\r\n        steelblue : '#4682b4',\r\n        tan : '#d2b48c',\r\n        teal : '#008080',\r\n        thistle : '#d8bfd8',\r\n        tomato : '#ff6347',\r\n        turquoise : '#40e0d0',\r\n        violet : '#ee82ee',\r\n        wheat : '#f5deb3',\r\n        white : '#fff',\r\n        whitesmoke : '#f5f5f5',\r\n        yellow : '#ff0',\r\n        yellowgreen : '#9acd32'\r\n    };\r\n\r\n    /**\r\n     * 自定义调色板\r\n     */\r\n    function customPalette(userPalete) {\r\n        palette = userPalete;\r\n    }\r\n\r\n    /**\r\n     * 复位默认色板\r\n     */\r\n    function resetPalette() {\r\n        palette = _palette;\r\n    }\r\n\r\n    /**\r\n     * 获取色板颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {number} idx 色板位置\r\n     * @param {Array.<string>} [userPalete] 自定义色板\r\n     * @return {string} 颜色\r\n     */\r\n    function getColor(idx, userPalete) {\r\n        idx = idx | 0;\r\n        userPalete = userPalete || palette;\r\n        return userPalete[idx % userPalete.length];\r\n    }\r\n\r\n    /**\r\n     * 自定义默认高亮颜色\r\n     */\r\n    function customHighlight(userHighlightColor) {\r\n        highlightColor = userHighlightColor;\r\n    }\r\n\r\n    /**\r\n     * 重置默认高亮颜色\r\n     */\r\n    function resetHighlight() {\r\n        _highlightColor = highlightColor;\r\n    }\r\n\r\n    /**\r\n     * 获取默认高亮颜色\r\n     */\r\n    function getHighlightColor() {\r\n        return highlightColor;\r\n    }\r\n\r\n    /**\r\n     * 径向渐变\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {number} x0 渐变起点\r\n     * @param {number} y0\r\n     * @param {number} r0\r\n     * @param {number} x1 渐变终点\r\n     * @param {number} y1\r\n     * @param {number} r1\r\n     * @param {Array} colorList 颜色列表\r\n     * @return {CanvasGradient}\r\n     */\r\n    function getRadialGradient(x0, y0, r0, x1, y1, r1, colorList) {\r\n        if (!_ctx) {\r\n            _ctx = util.getContext();\r\n        }\r\n        var gradient = _ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\r\n        for (var i = 0, l = colorList.length; i < l; i++) {\r\n            gradient.addColorStop(colorList[i][0], colorList[i][1]);\r\n        }\r\n        gradient.__nonRecursion = true;\r\n        return gradient;\r\n    }\r\n\r\n    /**\r\n     * 线性渐变\r\n     * @param {Object} x0 渐变起点\r\n     * @param {Object} y0\r\n     * @param {Object} x1 渐变终点\r\n     * @param {Object} y1\r\n     * @param {Array} colorList 颜色列表\r\n     */\r\n    function getLinearGradient(x0, y0, x1, y1, colorList) {\r\n        if (!_ctx) {\r\n            _ctx = util.getContext();\r\n        }\r\n        var gradient = _ctx.createLinearGradient(x0, y0, x1, y1);\r\n        for (var i = 0, l = colorList.length; i < l; i++) {\r\n            gradient.addColorStop(colorList[i][0], colorList[i][1]);\r\n        }\r\n        gradient.__nonRecursion = true;\r\n        return gradient;\r\n    }\r\n\r\n    /**\r\n     * 获取两种颜色之间渐变颜色数组\r\n     * @param {color} start 起始颜色\r\n     * @param {color} end 结束颜色\r\n     * @param {number} step 渐变级数\r\n     * @return {Array}  颜色数组\r\n     */\r\n    function getStepColors(start, end, step) {\r\n        start = toRGBA(start);\r\n        end = toRGBA(end);\r\n        start = getData(start);\r\n        end = getData(end);\r\n\r\n        var colors = [];\r\n        var stepR = (end[0] - start[0]) / step;\r\n        var stepG = (end[1] - start[1]) / step;\r\n        var stepB = (end[2] - start[2]) / step;\r\n        var stepA = (end[3] - start[3]) / step;\r\n        // 生成颜色集合\r\n        // fix by linfeng 颜色堆积\r\n        for (var i = 0, r = start[0], g = start[1], b = start[2], a = start[3]; i < step; i++) {\r\n            colors[i] = toColor([\r\n                adjust(Math.floor(r), [ 0, 255 ]),\r\n                adjust(Math.floor(g), [ 0, 255 ]), \r\n                adjust(Math.floor(b), [ 0, 255 ]),\r\n                a.toFixed(4) - 0\r\n            ],'rgba');\r\n            r += stepR;\r\n            g += stepG;\r\n            b += stepB;\r\n            a += stepA;\r\n        }\r\n        r = end[0];\r\n        g = end[1];\r\n        b = end[2];\r\n        a = end[3];\r\n        colors[i] = toColor([r, g, b, a], 'rgba');\r\n        return colors;\r\n    }\r\n\r\n    /**\r\n     * 获取指定级数的渐变颜色数组\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {Array.<string>} colors 颜色组\r\n     * @param {number} [step=20] 渐变级数\r\n     * @return {Array.<string>}  颜色数组\r\n     */\r\n    function getGradientColors(colors, step) {\r\n        var ret = [];\r\n        var len = colors.length;\r\n        if (step === undefined) {\r\n            step = 20;\r\n        }\r\n        if (len === 1) {\r\n            ret = getStepColors(colors[0], colors[0], step);\r\n        }\r\n        else if (len > 1) {\r\n            for (var i = 0, n = len - 1; i < n; i++) {\r\n                var steps = getStepColors(colors[i], colors[i + 1], step);\r\n                if (i < n - 1) {\r\n                    steps.pop();\r\n                }\r\n                ret = ret.concat(steps);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 颜色值数组转为指定格式颜色,例如:<br/>\r\n     * data = [60,20,20,0.1] format = 'rgba'\r\n     * 返回：rgba(60,20,20,0.1)\r\n     * @param {Array} data 颜色值数组\r\n     * @param {string} format 格式,默认rgb\r\n     * @return {string} 颜色\r\n     */\r\n    function toColor(data, format) {\r\n        format = format || 'rgb';\r\n        if (data && (data.length === 3 || data.length === 4)) {\r\n            data = map(data,\r\n                function(c) {\r\n                    return c > 1 ? Math.ceil(c) : c;\r\n                }\r\n            );\r\n\r\n            if (format.indexOf('hex') > -1) {\r\n                return '#' + ((1 << 24) + (data[0] << 16) + (data[1] << 8) + (+data[2])).toString(16).slice(1);\r\n            }\r\n            else if (format.indexOf('hs') > -1) {\r\n                var sx = map(data.slice(1, 3),\r\n                    function(c) {\r\n                        return c + '%';\r\n                    }\r\n                );\r\n                data[1] = sx[0];\r\n                data[2] = sx[1];\r\n            }\r\n\r\n            if (format.indexOf('a') > -1) {\r\n                if (data.length === 3) {\r\n                    data.push(1);\r\n                }\r\n                data[3] = adjust(data[3], [ 0, 1 ]);\r\n                return format + '(' + data.slice(0, 4).join(',') + ')';\r\n            }\r\n\r\n            return format + '(' + data.slice(0, 3).join(',') + ')';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 颜色字符串转换为rgba数组\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {Array.<number>} 颜色值数组\r\n     */\r\n    function toArray(color) {\r\n        color = trim(color);\r\n        if (color.indexOf('rgba') < 0) {\r\n            color = toRGBA(color);\r\n        }\r\n\r\n        var data = [];\r\n        var i = 0;\r\n        color.replace(/[\\d.]+/g, function (n) {\r\n            if (i < 3) {\r\n                n = n | 0;\r\n            }\r\n            else {\r\n                // Alpha\r\n                n = +n;\r\n            }\r\n            data[i++] = n;\r\n        });\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 颜色格式转化\r\n     *\r\n     * @param {string} color 颜色值数组\r\n     * @param {string} format 格式,默认rgb\r\n     * @return {string} 颜色\r\n     */\r\n    function convert(color, format) {\r\n        if (!isCalculableColor(color)) {\r\n            return color;\r\n        }\r\n        var data = getData(color);\r\n        var alpha = data[3];\r\n        if (typeof alpha === 'undefined') {\r\n            alpha = 1;\r\n        }\r\n\r\n        if (color.indexOf('hsb') > -1) {\r\n            data = _HSV_2_RGB(data);\r\n        }\r\n        else if (color.indexOf('hsl') > -1) {\r\n            data = _HSL_2_RGB(data);\r\n        }\r\n\r\n        if (format.indexOf('hsb') > -1 || format.indexOf('hsv') > -1) {\r\n            data = _RGB_2_HSB(data);\r\n        }\r\n        else if (format.indexOf('hsl') > -1) {\r\n            data = _RGB_2_HSL(data);\r\n        }\r\n\r\n        data[3] = alpha;\r\n\r\n        return toColor(data, format);\r\n    }\r\n\r\n    /**\r\n     * 转换为rgba格式的颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} rgba颜色，rgba(r,g,b,a)\r\n     */\r\n    function toRGBA(color) {\r\n        return convert(color, 'rgba');\r\n    }\r\n\r\n    /**\r\n     * 转换为rgb数字格式的颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} rgb颜色，rgb(0,0,0)格式\r\n     */\r\n    function toRGB(color) {\r\n        return convert(color, 'rgb');\r\n    }\r\n\r\n    /**\r\n     * 转换为16进制颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} 16进制颜色，#rrggbb格式\r\n     */\r\n    function toHex(color) {\r\n        return convert(color, 'hex');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSV颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSVA颜色，hsva(h,s,v,a)\r\n     */\r\n    function toHSVA(color) {\r\n        return convert(color, 'hsva');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSV颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSV颜色，hsv(h,s,v)\r\n     */\r\n    function toHSV(color) {\r\n        return convert(color, 'hsv');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSBA颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSBA颜色，hsba(h,s,b,a)\r\n     */\r\n    function toHSBA(color) {\r\n        return convert(color, 'hsba');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSB颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSB颜色，hsb(h,s,b)\r\n     */\r\n    function toHSB(color) {\r\n        return convert(color, 'hsb');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSLA颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSLA颜色，hsla(h,s,l,a)\r\n     */\r\n    function toHSLA(color) {\r\n        return convert(color, 'hsla');\r\n    }\r\n\r\n    /**\r\n     * 转换为HSL颜色\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} HSL颜色，hsl(h,s,l)\r\n     */\r\n    function toHSL(color) {\r\n        return convert(color, 'hsl');\r\n    }\r\n\r\n    /**\r\n     * 转换颜色名\r\n     * \r\n     * @param {string} color 颜色\r\n     * @return {string} 颜色名\r\n     */\r\n    function toName(color) {\r\n        for (var key in _nameColors) {\r\n            if (toHex(_nameColors[key]) === toHex(color)) {\r\n                return key;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 移除颜色中多余空格\r\n     * \r\n     * @param {string} color 颜色\r\n     * @return {string} 无空格颜色\r\n     */\r\n    function trim(color) {\r\n        return String(color).replace(/\\s+/g, '');\r\n    }\r\n\r\n    /**\r\n     * 颜色规范化\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} 规范化后的颜色\r\n     */\r\n    function normalize(color) {\r\n        // 颜色名\r\n        if (_nameColors[color]) {\r\n            color = _nameColors[color];\r\n        }\r\n        // 去掉空格\r\n        color = trim(color);\r\n        // hsv与hsb等价\r\n        color = color.replace(/hsv/i, 'hsb');\r\n        // rgb转为rrggbb\r\n        if (/^#[\\da-f]{3}$/i.test(color)) {\r\n            color = parseInt(color.slice(1), 16);\r\n            var r = (color & 0xf00) << 8;\r\n            var g = (color & 0xf0) << 4;\r\n            var b = color & 0xf;\r\n\r\n            color = '#' + ((1 << 24) + (r << 4) + r + (g << 4) + g + (b << 4) + b).toString(16).slice(1);\r\n        }\r\n        // 或者使用以下正则替换，不过 chrome 下性能相对差点\r\n        // color = color.replace(/^#([\\da-f])([\\da-f])([\\da-f])$/i, '#$1$1$2$2$3$3');\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * 颜色加深或减淡，当level>0加深，当level<0减淡\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @param {number} level 升降程度,取值区间[-1,1]\r\n     * @return {string} 加深或减淡后颜色值\r\n     */\r\n    function lift(color, level) {\r\n        if (!isCalculableColor(color)) {\r\n            return color;\r\n        }\r\n        var direct = level > 0 ? 1 : -1;\r\n        if (typeof level === 'undefined') {\r\n            level = 0;\r\n        }\r\n        level = Math.abs(level) > 1 ? 1 : Math.abs(level);\r\n        color = toRGB(color);\r\n        var data = getData(color);\r\n        for (var i = 0; i < 3; i++) {\r\n            if (direct === 1) {\r\n                data[i] = data[i] * (1 - level) | 0;\r\n            }\r\n            else {\r\n                data[i] = ((255 - data[i]) * level + data[i]) | 0;\r\n            }\r\n        }\r\n        return 'rgb(' + data.join(',') + ')';\r\n    }\r\n\r\n    /**\r\n     * 颜色翻转,[255-r,255-g,255-b,1-a]\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @return {string} 翻转颜色\r\n     */\r\n    function reverse(color) {\r\n        if (!isCalculableColor(color)) {\r\n            return color;\r\n        }\r\n        var data = getData(toRGBA(color));\r\n        data = map(data,\r\n            function(c) {\r\n                return 255 - c;\r\n            }\r\n        );\r\n        return toColor(data, 'rgb');\r\n    }\r\n\r\n    /**\r\n     * 简单两种颜色混合\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color1 第一种颜色\r\n     * @param {string} color2 第二种颜色\r\n     * @param {number} weight 混合权重[0-1]\r\n     * @return {string} 结果色,rgb(r,g,b)或rgba(r,g,b,a)\r\n     */\r\n    function mix(color1, color2, weight) {\r\n        if (!isCalculableColor(color1) || !isCalculableColor(color2)) {\r\n            return color1;\r\n        }\r\n        \r\n        if (typeof weight === 'undefined') {\r\n            weight = 0.5;\r\n        }\r\n        weight = 1 - adjust(weight, [ 0, 1 ]);\r\n\r\n        var w = weight * 2 - 1;\r\n        var data1 = getData(toRGBA(color1));\r\n        var data2 = getData(toRGBA(color2));\r\n\r\n        var d = data1[3] - data2[3];\r\n\r\n        var weight1 = (((w * d === -1) ? w : (w + d) / (1 + w * d)) + 1) / 2;\r\n        var weight2 = 1 - weight1;\r\n\r\n        var data = [];\r\n\r\n        for (var i = 0; i < 3; i++) {\r\n            data[i] = data1[i] * weight1 + data2[i] * weight2;\r\n        }\r\n\r\n        var alpha = data1[3] * weight + data2[3] * (1 - weight);\r\n        alpha = Math.max(0, Math.min(1, alpha));\r\n\r\n        if (data1[3] === 1 && data2[3] === 1) {// 不考虑透明度\r\n            return toColor(data, 'rgb');\r\n        }\r\n        data[3] = alpha;\r\n        return toColor(data, 'rgba');\r\n    }\r\n\r\n    /**\r\n     * 随机颜色\r\n     * \r\n     * @return {string} 颜色值，#rrggbb格式\r\n     */\r\n    function random() {\r\n        return '#' + (Math.random().toString(16) + '0000').slice(2, 8);\r\n    }\r\n\r\n    /**\r\n     * 获取颜色值数组,返回值范围： <br/>\r\n     * RGB 范围[0-255] <br/>\r\n     * HSL/HSV/HSB 范围[0-1]<br/>\r\n     * A透明度范围[0-1]\r\n     * 支持格式：\r\n     * #rgb\r\n     * #rrggbb\r\n     * rgb(r,g,b)\r\n     * rgb(r%,g%,b%)\r\n     * rgba(r,g,b,a)\r\n     * hsb(h,s,b) // hsv与hsb等价\r\n     * hsb(h%,s%,b%)\r\n     * hsba(h,s,b,a)\r\n     * hsl(h,s,l)\r\n     * hsl(h%,s%,l%)\r\n     * hsla(h,s,l,a)\r\n     *\r\n     * @param {string} color 颜色\r\n     * @return {Array.<number>} 颜色值数组或null\r\n     */\r\n    function getData(color) {\r\n        color = normalize(color);\r\n        var r = color.match(colorRegExp);\r\n        if (r === null) {\r\n            throw new Error('The color format error'); // 颜色格式错误\r\n        }\r\n        var d;\r\n        var a;\r\n        var data = [];\r\n        var rgb;\r\n\r\n        if (r[2]) {\r\n            // #rrggbb\r\n            d = r[2].replace('#', '').split('');\r\n            rgb = [ d[0] + d[1], d[2] + d[3], d[4] + d[5] ];\r\n            data = map(rgb,\r\n                function(c) {\r\n                    return adjust(parseInt(c, 16), [ 0, 255 ]);\r\n                }\r\n            );\r\n\r\n        }\r\n        else if (r[4]) {\r\n            // rgb rgba\r\n            var rgba = (r[4]).split(',');\r\n            a = rgba[3];\r\n            rgb = rgba.slice(0, 3);\r\n            data = map(\r\n                rgb,\r\n                function(c) {\r\n                    c = Math.floor(\r\n                        c.indexOf('%') > 0 ? parseInt(c, 0) * 2.55 : c\r\n                    );\r\n                    return adjust(c, [ 0, 255 ]);\r\n                }\r\n            );\r\n\r\n            if (typeof a !== 'undefined') {\r\n                data.push(adjust(parseFloat(a), [ 0, 1 ]));\r\n            }\r\n        }\r\n        else if (r[5] || r[6]) {\r\n            // hsb hsba hsl hsla\r\n            var hsxa = (r[5] || r[6]).split(',');\r\n            var h = parseInt(hsxa[0], 0) / 360;\r\n            var s = hsxa[1];\r\n            var x = hsxa[2];\r\n            a = hsxa[3];\r\n            data = map([ s, x ],\r\n                function(c) {\r\n                    return adjust(parseFloat(c) / 100, [ 0, 1 ]);\r\n                }\r\n            );\r\n            data.unshift(h);\r\n            if (typeof a !== 'undefined') {\r\n                data.push(adjust(parseFloat(a), [ 0, 1 ]));\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 设置颜色透明度\r\n     * @memberOf module:zrender/tool/color\r\n     * @param {string} color 颜色\r\n     * @param {number} a 透明度,区间[0,1]\r\n     * @return {string} rgba颜色值\r\n     */\r\n    function alpha(color, a) {\r\n        if (!isCalculableColor(color)) {\r\n            return color;\r\n        }\r\n        if (a === null) {\r\n            a = 1;\r\n        }\r\n        var data = getData(toRGBA(color));\r\n        data[3] = adjust(Number(a).toFixed(4), [ 0, 1 ]);\r\n\r\n        return toColor(data, 'rgba');\r\n    }\r\n\r\n    // 数组映射\r\n    function map(array, fun) {\r\n        if (typeof fun !== 'function') {\r\n            throw new TypeError();\r\n        }\r\n        var len = array ? array.length : 0;\r\n        for (var i = 0; i < len; i++) {\r\n            array[i] = fun(array[i]);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    // 调整值区间\r\n    function adjust(value, region) {\r\n        // < to <= & > to >=\r\n        // modify by linzhifeng 2014-05-25 because -0 == 0\r\n        if (value <= region[0]) {\r\n            value = region[0];\r\n        }\r\n        else if (value >= region[1]) {\r\n            value = region[1];\r\n        }\r\n        return value;\r\n    }\r\n    \r\n    function isCalculableColor(color) {\r\n        return color instanceof Array || typeof color === 'string';\r\n    }\r\n\r\n    // 参见 http:// www.easyrgb.com/index.php?X=MATH\r\n    function _HSV_2_RGB(data) {\r\n        var H = data[0];\r\n        var S = data[1];\r\n        var V = data[2];\r\n        // HSV from 0 to 1\r\n        var R; \r\n        var G;\r\n        var B;\r\n        if (S === 0) {\r\n            R = V * 255;\r\n            G = V * 255;\r\n            B = V * 255;\r\n        }\r\n        else {\r\n            var h = H * 6;\r\n            if (h === 6) {\r\n                h = 0;\r\n            }\r\n            var i = h | 0;\r\n            var v1 = V * (1 - S);\r\n            var v2 = V * (1 - S * (h - i));\r\n            var v3 = V * (1 - S * (1 - (h - i)));\r\n            var r = 0;\r\n            var g = 0;\r\n            var b = 0;\r\n\r\n            if (i === 0) {\r\n                r = V;\r\n                g = v3;\r\n                b = v1;\r\n            }\r\n            else if (i === 1) {\r\n                r = v2;\r\n                g = V;\r\n                b = v1;\r\n            }\r\n            else if (i === 2) {\r\n                r = v1;\r\n                g = V;\r\n                b = v3;\r\n            }\r\n            else if (i === 3) {\r\n                r = v1;\r\n                g = v2;\r\n                b = V;\r\n            }\r\n            else if (i === 4) {\r\n                r = v3;\r\n                g = v1;\r\n                b = V;\r\n            }\r\n            else {\r\n                r = V;\r\n                g = v1;\r\n                b = v2;\r\n            }\r\n\r\n            // RGB results from 0 to 255\r\n            R = r * 255;\r\n            G = g * 255;\r\n            B = b * 255;\r\n        }\r\n        return [ R, G, B ];\r\n    }\r\n\r\n    function _HSL_2_RGB(data) {\r\n        var H = data[0];\r\n        var S = data[1];\r\n        var L = data[2];\r\n        // HSL from 0 to 1\r\n        var R;\r\n        var G;\r\n        var B;\r\n        if (S === 0) {\r\n            R = L * 255;\r\n            G = L * 255;\r\n            B = L * 255;\r\n        }\r\n        else {\r\n            var v2;\r\n            if (L < 0.5) {\r\n                v2 = L * (1 + S);\r\n            }\r\n            else {\r\n                v2 = (L + S) - (S * L);\r\n            }\r\n\r\n            var v1 = 2 * L - v2;\r\n\r\n            R = 255 * _HUE_2_RGB(v1, v2, H + (1 / 3));\r\n            G = 255 * _HUE_2_RGB(v1, v2, H);\r\n            B = 255 * _HUE_2_RGB(v1, v2, H - (1 / 3));\r\n        }\r\n        return [ R, G, B ];\r\n    }\r\n\r\n    function _HUE_2_RGB(v1, v2, vH) {\r\n        if (vH < 0) {\r\n            vH += 1;\r\n        }\r\n        if (vH > 1) {\r\n            vH -= 1;\r\n        }\r\n        if ((6 * vH) < 1) {\r\n            return (v1 + (v2 - v1) * 6 * vH);\r\n        }\r\n        if ((2 * vH) < 1) {\r\n            return (v2);\r\n        }\r\n        if ((3 * vH) < 2) {\r\n            return (v1 + (v2 - v1) * ((2 / 3) - vH) * 6);\r\n        }\r\n        return v1;\r\n    }\r\n\r\n    function _RGB_2_HSB(data) {\r\n        // RGB from 0 to 255\r\n        var R = (data[0] / 255);\r\n        var G = (data[1] / 255);\r\n        var B = (data[2] / 255);\r\n\r\n        var vMin = Math.min(R, G, B); // Min. value of RGB\r\n        var vMax = Math.max(R, G, B); // Max. value of RGB\r\n        var delta = vMax - vMin; // Delta RGB value\r\n        var V = vMax;\r\n        var H;\r\n        var S;\r\n\r\n        // HSV results from 0 to 1\r\n        if (delta === 0) {\r\n            H = 0;\r\n            S = 0;\r\n        }\r\n        else {\r\n            S = delta / vMax;\r\n\r\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\r\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\r\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\r\n\r\n            if (R === vMax) {\r\n                H = deltaB - deltaG;\r\n            }\r\n            else if (G === vMax) {\r\n                H = (1 / 3) + deltaR - deltaB;\r\n            }\r\n            else if (B === vMax) {\r\n                H = (2 / 3) + deltaG - deltaR;\r\n            }\r\n\r\n            if (H < 0) {\r\n                H += 1;\r\n            }\r\n            if (H > 1) {\r\n                H -= 1;\r\n            }\r\n        }\r\n        H = H * 360;\r\n        S = S * 100;\r\n        V = V * 100;\r\n        return [ H, S, V ];\r\n    }\r\n\r\n    function _RGB_2_HSL(data) {\r\n        // RGB from 0 to 255\r\n        var R = (data[0] / 255);\r\n        var G = (data[1] / 255);\r\n        var B = (data[2] / 255);\r\n\r\n        var vMin = Math.min(R, G, B); // Min. value of RGB\r\n        var vMax = Math.max(R, G, B); // Max. value of RGB\r\n        var delta = vMax - vMin; // Delta RGB value\r\n\r\n        var L = (vMax + vMin) / 2;\r\n        var H;\r\n        var S;\r\n        // HSL results from 0 to 1\r\n        if (delta === 0) {\r\n            H = 0;\r\n            S = 0;\r\n        }\r\n        else {\r\n            if (L < 0.5) {\r\n                S = delta / (vMax + vMin);\r\n            }\r\n            else {\r\n                S = delta / (2 - vMax - vMin);\r\n            }\r\n\r\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\r\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\r\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\r\n\r\n            if (R === vMax) {\r\n                H = deltaB - deltaG;\r\n            }\r\n            else if (G === vMax) {\r\n                H = (1 / 3) + deltaR - deltaB;\r\n            }\r\n            else if (B === vMax) {\r\n                H = (2 / 3) + deltaG - deltaR;\r\n            }\r\n\r\n            if (H < 0) {\r\n                H += 1;\r\n            }\r\n\r\n            if (H > 1) {\r\n                H -= 1;\r\n            }\r\n        }\r\n\r\n        H = H * 360;\r\n        S = S * 100;\r\n        L = L * 100;\r\n\r\n        return [ H, S, L ];\r\n    }\r\n\r\n    return {\r\n        customPalette : customPalette,\r\n        resetPalette : resetPalette,\r\n        getColor : getColor,\r\n        getHighlightColor : getHighlightColor,\r\n        customHighlight : customHighlight,\r\n        resetHighlight : resetHighlight,\r\n        getRadialGradient : getRadialGradient,\r\n        getLinearGradient : getLinearGradient,\r\n        getGradientColors : getGradientColors,\r\n        getStepColors : getStepColors,\r\n        reverse : reverse,\r\n        mix : mix,\r\n        lift : lift,\r\n        trim : trim,\r\n        random : random,\r\n        toRGB : toRGB,\r\n        toRGBA : toRGBA,\r\n        toHex : toHex,\r\n        toHSL : toHSL,\r\n        toHSLA : toHSLA,\r\n        toHSB : toHSB,\r\n        toHSBA : toHSBA,\r\n        toHSV : toHSV,\r\n        toHSVA : toHSVA,\r\n        toName : toName,\r\n        toColor : toColor,\r\n        toArray : toArray,\r\n        alpha : alpha,\r\n        getData : getData\r\n    };\r\n});\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/color.js\n// module id = 3\n// module chunks = 0","/**\r\n * echarts默认配置项\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function() {\r\n    // 请原谅我这样写，这显然可以直接返回个对象，但那样的话outline就显示不出来了~~\r\n    var config = {\r\n        // 图表类型\r\n        CHART_TYPE_LINE: 'line',\r\n        CHART_TYPE_BAR: 'bar',\r\n        CHART_TYPE_SCATTER: 'scatter',\r\n        CHART_TYPE_PIE: 'pie',\r\n        CHART_TYPE_RADAR: 'radar',\r\n        CHART_TYPE_VENN: 'venn',\r\n        CHART_TYPE_TREEMAP: 'treemap',\r\n        CHART_TYPE_TREE: 'tree',\r\n        CHART_TYPE_MAP: 'map',\r\n        CHART_TYPE_K: 'k',\r\n        CHART_TYPE_ISLAND: 'island',\r\n        CHART_TYPE_FORCE: 'force',\r\n        CHART_TYPE_CHORD: 'chord',\r\n        CHART_TYPE_GAUGE: 'gauge',\r\n        CHART_TYPE_FUNNEL: 'funnel',\r\n        CHART_TYPE_EVENTRIVER: 'eventRiver',\r\n        CHART_TYPE_WORDCLOUD: 'wordCloud',\r\n        CHART_TYPE_HEATMAP: 'heatmap',\r\n\r\n        // 组件类型\r\n        COMPONENT_TYPE_TITLE: 'title',\r\n        COMPONENT_TYPE_LEGEND: 'legend',\r\n        COMPONENT_TYPE_DATARANGE: 'dataRange',\r\n        COMPONENT_TYPE_DATAVIEW: 'dataView',\r\n        COMPONENT_TYPE_DATAZOOM: 'dataZoom',\r\n        COMPONENT_TYPE_TOOLBOX: 'toolbox',\r\n        COMPONENT_TYPE_TOOLTIP: 'tooltip',\r\n        COMPONENT_TYPE_GRID: 'grid',\r\n        COMPONENT_TYPE_AXIS: 'axis',\r\n        COMPONENT_TYPE_POLAR: 'polar',\r\n        COMPONENT_TYPE_X_AXIS: 'xAxis',\r\n        COMPONENT_TYPE_Y_AXIS: 'yAxis',\r\n        COMPONENT_TYPE_AXIS_CATEGORY: 'categoryAxis',\r\n        COMPONENT_TYPE_AXIS_VALUE: 'valueAxis',\r\n        COMPONENT_TYPE_TIMELINE: 'timeline',\r\n        COMPONENT_TYPE_ROAMCONTROLLER: 'roamController',\r\n\r\n        // 全图默认背景\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        \r\n        // 默认色板\r\n        color: ['#ff7f50','#87cefa','#da70d6','#32cd32','#6495ed',\r\n                '#ff69b4','#ba55d3','#cd5c5c','#ffa500','#40e0d0',\r\n                '#1e90ff','#ff6347','#7b68ee','#00fa9a','#ffd700',\r\n                '#6699FF','#ff6666','#3cb371','#b8860b','#30e0e0'],\r\n\r\n        markPoint: {\r\n            clickable: true,\r\n            symbol: 'pin',         // 标注类型\r\n            symbolSize: 10,        // 标注大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n            // symbolRotate: null, // 标注旋转控制\r\n            large: false,\r\n            effect: {\r\n                show: false,\r\n                loop: true,\r\n                period: 15,             // 运动周期，无单位，值越大越慢\r\n                type: 'scale',          // 可用为 scale | bounce\r\n                scaleSize: 2,           // 放大倍数，以markPoint点size为基准\r\n                bounceDistance: 10     // 跳动距离，单位px\r\n                // color: 'gold',\r\n                // shadowColor: 'rgba(255,215,0,0.8)',\r\n                // shadowBlur: 0          // 炫光模糊\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    // color: 各异，\r\n                    // borderColor: 各异,        // 标注边线颜色，优先于color \r\n                    borderWidth: 2,             // 标注边线线宽，单位px，默认为1\r\n                    label: {\r\n                        show: true,\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        position: 'inside'      // 可选为'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    }\r\n                },\r\n                emphasis: {\r\n                    // color: 各异\r\n                    label: {\r\n                        show: true\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // position: 'inside'  // 'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null     // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        markLine: {\r\n            clickable: true,\r\n            // 标线起始和结束的symbol介绍类型，如果都一样，可以直接传string\r\n            symbol: ['circle', 'arrow'],\r\n            // 标线起始和结束的symbol大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n            symbolSize: [2, 4],\r\n            // 标线起始和结束的symbol旋转控制\r\n            //symbolRotate: null,\r\n            //smooth: false,\r\n            smoothness: 0.2,    // 平滑度\r\n            precision: 2,\r\n            effect: {\r\n                show: false,\r\n                loop: true,\r\n                period: 15,                     // 运动周期，无单位，值越大越慢\r\n                scaleSize: 2                    // 放大倍数，以markLine线lineWidth为基准\r\n                // color: 'gold',\r\n                // shadowColor: 'rgba(255,215,0,0.8)',\r\n                // shadowBlur: lineWidth * 2    // 炫光模糊，默认等于scaleSize计算所得\r\n            },\r\n            // 边捆绑\r\n            bundling: {\r\n                enable: false,\r\n                // [0, 90]\r\n                maxTurningAngle: 45\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    // color: 各异,               // 标线主色，线色，symbol主色\r\n                    // borderColor: 随color,     // 标线symbol边框颜色，优先于color \r\n                    borderWidth: 1.5,           // 标线symbol边框线宽，单位px，默认为2\r\n                    label: {\r\n                        show: true,\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // 可选为 'start'|'end'|'left'|'right'|'top'|'bottom'\r\n                        position: 'end'\r\n                        // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    },\r\n                    lineStyle: {\r\n                        // color: 随borderColor, // 主色，线色，优先级高于borderColor和color\r\n                        // width: 随borderWidth, // 优先于borderWidth\r\n                        type: 'dashed'\r\n                        // shadowColor: 'rgba(0,0,0,0)', //默认透明\r\n                        // shadowBlur: 0,\r\n                        // shadowOffsetX: 0,\r\n                        // shadowOffsetY: 0\r\n                    }\r\n                },\r\n                emphasis: {\r\n                    // color: 各异\r\n                    label: {\r\n                        show: false\r\n                        // 标签文本格式器，同Tooltip.formatter，不支持回调\r\n                        // formatter: null,\r\n                        // position: 'inside' // 'left'|'right'|'top'|'bottom'\r\n                        // textStyle: null    // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    },\r\n                    lineStyle: {}\r\n                }\r\n            }\r\n        },\r\n\r\n        // 主题，主题\r\n        textStyle: {\r\n            decoration: 'none',\r\n            fontFamily: 'Arial, Verdana, sans-serif',\r\n            fontFamily2: '微软雅黑',    // IE8- 字体模糊并且，不支持不同字体混排，额外指定一份\r\n            fontSize: 12,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal'\r\n        },\r\n\r\n        EVENT: {\r\n            // -------全局通用\r\n            REFRESH: 'refresh',\r\n            RESTORE: 'restore',\r\n            RESIZE: 'resize',\r\n            CLICK: 'click',\r\n            DBLCLICK: 'dblclick',\r\n            HOVER: 'hover',\r\n            MOUSEOUT: 'mouseout',\r\n            //MOUSEWHEEL: 'mousewheel',\r\n            // -------业务交互逻辑\r\n            DATA_CHANGED: 'dataChanged',\r\n            DATA_ZOOM: 'dataZoom',\r\n            DATA_RANGE: 'dataRange',\r\n            DATA_RANGE_SELECTED: 'dataRangeSelected',\r\n            DATA_RANGE_HOVERLINK: 'dataRangeHoverLink',\r\n            LEGEND_SELECTED: 'legendSelected',\r\n            LEGEND_HOVERLINK: 'legendHoverLink',\r\n            MAP_SELECTED: 'mapSelected',\r\n            PIE_SELECTED: 'pieSelected',\r\n            MAGIC_TYPE_CHANGED: 'magicTypeChanged',\r\n            DATA_VIEW_CHANGED: 'dataViewChanged',\r\n            TIMELINE_CHANGED: 'timelineChanged',\r\n            MAP_ROAM: 'mapRoam',\r\n            FORCE_LAYOUT_END: 'forceLayoutEnd',\r\n            // -------内部通信\r\n            TOOLTIP_HOVER: 'tooltipHover',\r\n            TOOLTIP_IN_GRID: 'tooltipInGrid',\r\n            TOOLTIP_OUT_GRID: 'tooltipOutGrid',\r\n            ROAMCONTROLLER: 'roamController'\r\n        },\r\n        DRAG_ENABLE_TIME: 120,   // 降低图表内元素拖拽敏感度，单位ms，不建议外部干预\r\n        EFFECT_ZLEVEL : 10,       // 特效动画zlevel\r\n        effectBlendAlpha: 0.95,\r\n        // 主题，默认标志图形类型列表\r\n        symbolList: [\r\n          'circle', 'rectangle', 'triangle', 'diamond',\r\n          'emptyCircle', 'emptyRectangle', 'emptyTriangle', 'emptyDiamond'\r\n        ],\r\n        loadingEffect: 'spin',\r\n        loadingText: '数据读取中...',\r\n        noDataEffect: 'bubble',\r\n        noDataText: '暂无数据',\r\n        // noDataLoadingOption: null,\r\n        // 可计算特性配置，孤岛，提示颜色\r\n        calculable: false,                      // 默认关闭可计算特性\r\n        calculableColor: 'rgba(255,165,0,0.6)', // 拖拽提示边框颜色\r\n        calculableHolderColor: '#ccc',          // 可计算占位提示颜色\r\n        nameConnector: ' & ',\r\n        valueConnector: ': ',\r\n        animation: true,                // 过渡动画是否开启\r\n        addDataAnimation: true,         // 动态数据接口是否开启动画效果\r\n        animationThreshold: 2000,       // 动画元素阀值，产生的图形原素超过2000不出动画\r\n        animationDuration: 2000,        // 过渡动画参数：进入\r\n        animationDurationUpdate: 500,   // 过渡动画参数：更新\r\n        animationEasing: 'ExponentialOut'    //BounceOut\r\n    };\r\n\r\n    return config;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/config.js\n// module id = 4\n// module chunks = 0","define(\r\n    function () {\r\n        var ArrayCtor = typeof Float32Array === 'undefined'\r\n            ? Array\r\n            : Float32Array;\r\n\r\n        /**\r\n         * @typedef {Float32Array|Array.<number>} Vector2\r\n         */\r\n        /**\r\n         * 二维向量类\r\n         * @exports zrender/tool/vector\r\n         */\r\n        var vector = {\r\n            /**\r\n             * 创建一个向量\r\n             * @param {number} [x=0]\r\n             * @param {number} [y=0]\r\n             * @return {Vector2}\r\n             */\r\n            create: function (x, y) {\r\n                var out = new ArrayCtor(2);\r\n                out[0] = x || 0;\r\n                out[1] = y || 0;\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 复制向量数据\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             * @return {Vector2}\r\n             */\r\n            copy: function (out, v) {\r\n                out[0] = v[0];\r\n                out[1] = v[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 克隆一个向量\r\n             * @param {Vector2} v\r\n             * @return {Vector2}\r\n             */\r\n            clone: function (v) {\r\n                var out = new ArrayCtor(2);\r\n                out[0] = v[0];\r\n                out[1] = v[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 设置向量的两个项\r\n             * @param {Vector2} out\r\n             * @param {number} a\r\n             * @param {number} b\r\n             * @return {Vector2} 结果\r\n             */\r\n            set: function (out, a, b) {\r\n                out[0] = a;\r\n                out[1] = b;\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量相加\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             */\r\n            add: function (out, v1, v2) {\r\n                out[0] = v1[0] + v2[0];\r\n                out[1] = v1[1] + v2[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量缩放后相加\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @param {number} a\r\n             */\r\n            scaleAndAdd: function (out, v1, v2, a) {\r\n                out[0] = v1[0] + v2[0] * a;\r\n                out[1] = v1[1] + v2[1] * a;\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量相减\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             */\r\n            sub: function (out, v1, v2) {\r\n                out[0] = v1[0] - v2[0];\r\n                out[1] = v1[1] - v2[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量长度\r\n             * @param {Vector2} v\r\n             * @return {number}\r\n             */\r\n            len: function (v) {\r\n                return Math.sqrt(this.lenSquare(v));\r\n            },\r\n\r\n            /**\r\n             * 向量长度平方\r\n             * @param {Vector2} v\r\n             * @return {number}\r\n             */\r\n            lenSquare: function (v) {\r\n                return v[0] * v[0] + v[1] * v[1];\r\n            },\r\n\r\n            /**\r\n             * 向量乘法\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             */\r\n            mul: function (out, v1, v2) {\r\n                out[0] = v1[0] * v2[0];\r\n                out[1] = v1[1] * v2[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量除法\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             */\r\n            div: function (out, v1, v2) {\r\n                out[0] = v1[0] / v2[0];\r\n                out[1] = v1[1] / v2[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量点乘\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @return {number}\r\n             */\r\n            dot: function (v1, v2) {\r\n                return v1[0] * v2[0] + v1[1] * v2[1];\r\n            },\r\n\r\n            /**\r\n             * 向量缩放\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             * @param {number} s\r\n             */\r\n            scale: function (out, v, s) {\r\n                out[0] = v[0] * s;\r\n                out[1] = v[1] * s;\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 向量归一化\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             */\r\n            normalize: function (out, v) {\r\n                var d = vector.len(v);\r\n                if (d === 0) {\r\n                    out[0] = 0;\r\n                    out[1] = 0;\r\n                }\r\n                else {\r\n                    out[0] = v[0] / d;\r\n                    out[1] = v[1] / d;\r\n                }\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 计算向量间距离\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @return {number}\r\n             */\r\n            distance: function (v1, v2) {\r\n                return Math.sqrt(\r\n                    (v1[0] - v2[0]) * (v1[0] - v2[0])\r\n                    + (v1[1] - v2[1]) * (v1[1] - v2[1])\r\n                );\r\n            },\r\n\r\n            /**\r\n             * 向量距离平方\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @return {number}\r\n             */\r\n            distanceSquare: function (v1, v2) {\r\n                return (v1[0] - v2[0]) * (v1[0] - v2[0])\r\n                    + (v1[1] - v2[1]) * (v1[1] - v2[1]);\r\n            },\r\n\r\n            /**\r\n             * 求负向量\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             */\r\n            negate: function (out, v) {\r\n                out[0] = -v[0];\r\n                out[1] = -v[1];\r\n                return out;\r\n            },\r\n\r\n            /**\r\n             * 插值两个点\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v1\r\n             * @param {Vector2} v2\r\n             * @param {number} t\r\n             */\r\n            lerp: function (out, v1, v2, t) {\r\n                // var ax = v1[0];\r\n                // var ay = v1[1];\r\n                out[0] = v1[0] + t * (v2[0] - v1[0]);\r\n                out[1] = v1[1] + t * (v2[1] - v1[1]);\r\n                return out;\r\n            },\r\n            \r\n            /**\r\n             * 矩阵左乘向量\r\n             * @param {Vector2} out\r\n             * @param {Vector2} v\r\n             * @param {Vector2} m\r\n             */\r\n            applyTransform: function (out, v, m) {\r\n                var x = v[0];\r\n                var y = v[1];\r\n                out[0] = m[0] * x + m[2] * y + m[4];\r\n                out[1] = m[1] * x + m[3] * y + m[5];\r\n                return out;\r\n            },\r\n            /**\r\n             * 求两个向量最小值\r\n             * @param  {Vector2} out\r\n             * @param  {Vector2} v1\r\n             * @param  {Vector2} v2\r\n             */\r\n            min: function (out, v1, v2) {\r\n                out[0] = Math.min(v1[0], v2[0]);\r\n                out[1] = Math.min(v1[1], v2[1]);\r\n                return out;\r\n            },\r\n            /**\r\n             * 求两个向量最大值\r\n             * @param  {Vector2} out\r\n             * @param  {Vector2} v1\r\n             * @param  {Vector2} v2\r\n             */\r\n            max: function (out, v1, v2) {\r\n                out[0] = Math.max(v1[0], v2[0]);\r\n                out[1] = Math.max(v1[1], v2[1]);\r\n                return out;\r\n            }\r\n        };\r\n\r\n        vector.length = vector.len;\r\n        vector.lengthSquare = vector.lenSquare;\r\n        vector.dist = vector.distance;\r\n        vector.distSquare = vector.distanceSquare;\r\n        \r\n        return vector;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/vector.js\n// module id = 5\n// module chunks = 0","/**\r\n * echart组件库\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (/*require*/) {     // component\r\n    var self = {};\r\n\r\n    var _componentLibrary = {};     // echart组件库\r\n\r\n    /**\r\n     * 定义图形实现\r\n     * @param {Object} name\r\n     * @param {Object} clazz 图形实现\r\n     */\r\n    self.define = function (name, clazz) {\r\n        _componentLibrary[name] = clazz;\r\n        return self;\r\n    };\r\n\r\n    /**\r\n     * 获取图形实现\r\n     * @param {Object} name\r\n     */\r\n    self.get = function (name) {\r\n        return _componentLibrary[name];\r\n    };\r\n    \r\n    return self;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component.js\n// module id = 6\n// module chunks = 0","/**\r\n * 矩形\r\n * @module zrender/shape/Rectangle\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com) , \r\n *         strwind (@劲风FEI)\r\n * @example\r\n *     var Rectangle = require('zrender/shape/Rectangle');\r\n *     var shape = new Rectangle({\r\n *         style: {\r\n *             x: 0,\r\n *             y: 0,\r\n *             width: 100,\r\n *             height: 100,\r\n *             radius: 20\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IRectangleStyle\r\n * @property {number} x 左上角x坐标\r\n * @property {number} y 左上角y坐标\r\n * @property {number} width 宽度\r\n * @property {number} height 高度\r\n * @property {number|Array.<number>} radius 矩形圆角，可以用数组分别指定四个角的圆角\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Rectangle\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Rectangle = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 矩形绘制样式\r\n             * @name module:zrender/shape/Rectangle#style\r\n             * @type {module:zrender/shape/Rectangle~IRectangleStyle}\r\n             */\r\n            /**\r\n             * 矩形高亮绘制样式\r\n             * @name module:zrender/shape/Rectangle#highlightStyle\r\n             * @type {module:zrender/shape/Rectangle~IRectangleStyle}\r\n             */\r\n        };\r\n\r\n        Rectangle.prototype =  {\r\n            type: 'rectangle',\r\n\r\n            _buildRadiusPath: function (ctx, style) {\r\n                // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\r\n                // r缩写为1         相当于 [1, 1, 1, 1]\r\n                // r缩写为[1]       相当于 [1, 1, 1, 1]\r\n                // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\r\n                // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\r\n                var x = style.x;\r\n                var y = style.y;\r\n                var width = style.width;\r\n                var height = style.height;\r\n                var r = style.radius;\r\n                var r1; \r\n                var r2; \r\n                var r3; \r\n                var r4;\r\n                  \r\n                if (typeof r === 'number') {\r\n                    r1 = r2 = r3 = r4 = r;\r\n                }\r\n                else if (r instanceof Array) {\r\n                    if (r.length === 1) {\r\n                        r1 = r2 = r3 = r4 = r[0];\r\n                    }\r\n                    else if (r.length === 2) {\r\n                        r1 = r3 = r[0];\r\n                        r2 = r4 = r[1];\r\n                    }\r\n                    else if (r.length === 3) {\r\n                        r1 = r[0];\r\n                        r2 = r4 = r[1];\r\n                        r3 = r[2];\r\n                    }\r\n                    else {\r\n                        r1 = r[0];\r\n                        r2 = r[1];\r\n                        r3 = r[2];\r\n                        r4 = r[3];\r\n                    }\r\n                }\r\n                else {\r\n                    r1 = r2 = r3 = r4 = 0;\r\n                }\r\n                \r\n                var total;\r\n                if (r1 + r2 > width) {\r\n                    total = r1 + r2;\r\n                    r1 *= width / total;\r\n                    r2 *= width / total;\r\n                }\r\n                if (r3 + r4 > width) {\r\n                    total = r3 + r4;\r\n                    r3 *= width / total;\r\n                    r4 *= width / total;\r\n                }\r\n                if (r2 + r3 > height) {\r\n                    total = r2 + r3;\r\n                    r2 *= height / total;\r\n                    r3 *= height / total;\r\n                }\r\n                if (r1 + r4 > height) {\r\n                    total = r1 + r4;\r\n                    r1 *= height / total;\r\n                    r4 *= height / total;\r\n                }\r\n                ctx.moveTo(x + r1, y);\r\n                ctx.lineTo(x + width - r2, y);\r\n                r2 !== 0 && ctx.quadraticCurveTo(\r\n                    x + width, y, x + width, y + r2\r\n                );\r\n                ctx.lineTo(x + width, y + height - r3);\r\n                r3 !== 0 && ctx.quadraticCurveTo(\r\n                    x + width, y + height, x + width - r3, y + height\r\n                );\r\n                ctx.lineTo(x + r4, y + height);\r\n                r4 !== 0 && ctx.quadraticCurveTo(\r\n                    x, y + height, x, y + height - r4\r\n                );\r\n                ctx.lineTo(x, y + r1);\r\n                r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\r\n            },\r\n            \r\n            /**\r\n             * 创建矩形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {Object} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                if (!style.radius) {\r\n                    ctx.moveTo(style.x, style.y);\r\n                    ctx.lineTo(style.x + style.width, style.y);\r\n                    ctx.lineTo(style.x + style.width, style.y + style.height);\r\n                    ctx.lineTo(style.x, style.y + style.height);\r\n                    ctx.lineTo(style.x, style.y);\r\n                    // ctx.rect(style.x, style.y, style.width, style.height);\r\n                }\r\n                else {\r\n                    this._buildRadiusPath(ctx, style);\r\n                }\r\n                ctx.closePath();\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回矩形包围盒矩阵\r\n             * @param {module:zrender/shape/Rectangle~IRectangleStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function(style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                style.__rect = {\r\n                    x : Math.round(style.x - lineWidth / 2),\r\n                    y : Math.round(style.y - lineWidth / 2),\r\n                    width : style.width + lineWidth,\r\n                    height : style.height + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Rectangle, Base);\r\n        return Rectangle;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Rectangle.js\n// module id = 7\n// module chunks = 0","/**\r\n * echarts组件基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ecConfig = require('../config');\r\n    var ecData = require('../util/ecData');\r\n    var ecQuery = require('../util/ecQuery');\r\n    var number = require('../util/number');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    \r\n    function Base(ecTheme, messageCenter, zr, option, myChart){\r\n        this.ecTheme = ecTheme;\r\n        this.messageCenter = messageCenter;\r\n        this.zr =zr;\r\n        this.option = option;\r\n        this.series = option.series;\r\n        this.myChart = myChart;\r\n        this.component = myChart.component;\r\n\r\n        this.shapeList = [];\r\n        this.effectList = [];\r\n        \r\n        var self = this;\r\n        \r\n        self._onlegendhoverlink = function(param) {\r\n            if (self.legendHoverLink) {\r\n                var targetName = param.target;\r\n                var name;\r\n                for (var i = self.shapeList.length - 1; i >= 0; i--) {\r\n                    name = self.type == ecConfig.CHART_TYPE_PIE\r\n                           || self.type == ecConfig.CHART_TYPE_FUNNEL\r\n                           ? ecData.get(self.shapeList[i], 'name')\r\n                           : (ecData.get(self.shapeList[i], 'series') || {}).name;\r\n                    if (name == targetName \r\n                        && !self.shapeList[i].invisible \r\n                        && !self.shapeList[i].__animating\r\n                    ) {\r\n                        self.zr.addHoverShape(self.shapeList[i]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        messageCenter && messageCenter.bind(\r\n            ecConfig.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 基类方法\r\n     */\r\n    Base.prototype = {\r\n        canvasSupported: require('zrenderjs/tool/env').canvasSupported,\r\n        _getZ : function(zWhat) {\r\n            if (this[zWhat] != null) {\r\n                return this[zWhat];\r\n            }\r\n            var opt = this.ecTheme[this.type];\r\n            if (opt && opt[zWhat] != null) {\r\n                return opt[zWhat];\r\n            }\r\n            opt = ecConfig[this.type];\r\n            if (opt && opt[zWhat] != null) {\r\n                return opt[zWhat];\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * 获取zlevel基数配置\r\n         */\r\n        getZlevelBase: function () {\r\n            return this._getZ('zlevel');\r\n        },\r\n        \r\n        /**\r\n         * 获取z基数配置\r\n         */\r\n        getZBase: function() {\r\n            return this._getZ('z');\r\n        },\r\n\r\n        /**\r\n         * 参数修正&默认值赋值\r\n         * @param {Object} opt 参数\r\n         *\r\n         * @return {Object} 修正后的参数\r\n         */\r\n        reformOption: function (opt) {\r\n            // 默认配置项动态多级合并，依赖加载的组件选项未被merge到ecTheme里，需要从config里取\r\n            opt = zrUtil.merge(\r\n                       zrUtil.merge(\r\n                           opt || {},\r\n                           zrUtil.clone(this.ecTheme[this.type] || {})\r\n                       ),\r\n                       zrUtil.clone(ecConfig[this.type] || {})\r\n                   );\r\n            this.z = opt.z;\r\n            this.zlevel = opt.zlevel;\r\n            return opt;\r\n        },\r\n        \r\n        /**\r\n         * css类属性数组补全，如padding，margin等~\r\n         */\r\n        reformCssArray: function (p) {\r\n            if (p instanceof Array) {\r\n                switch (p.length + '') {\r\n                    case '4':\r\n                        return p;\r\n                    case '3':\r\n                        return [p[0], p[1], p[2], p[1]];\r\n                    case '2':\r\n                        return [p[0], p[1], p[0], p[1]];\r\n                    case '1':\r\n                        return [p[0], p[0], p[0], p[0]];\r\n                    case '0':\r\n                        return [0, 0, 0, 0];\r\n                }\r\n            }\r\n            else {\r\n                return [p, p, p, p];\r\n            }\r\n        },\r\n        \r\n        getShapeById: function(id) {\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].id === id) {\r\n                    return this.shapeList[i];\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        \r\n        /**\r\n         * 获取自定义和默认配置合并后的字体设置\r\n         */\r\n        getFont: function (textStyle) {\r\n            var finalTextStyle = this.getTextStyle(\r\n                zrUtil.clone(textStyle)\r\n            );\r\n            return finalTextStyle.fontStyle + ' '\r\n                   + finalTextStyle.fontWeight + ' '\r\n                   + finalTextStyle.fontSize + 'px '\r\n                   + finalTextStyle.fontFamily;\r\n        },\r\n\r\n        /**\r\n         * 获取统一主题字体样式\r\n         */\r\n        getTextStyle: function(targetStyle) {\r\n            return zrUtil.merge(\r\n                       zrUtil.merge(\r\n                           targetStyle || {},\r\n                           this.ecTheme.textStyle\r\n                       ),\r\n                       ecConfig.textStyle\r\n                   );\r\n        },\r\n        \r\n        getItemStyleColor: function (itemColor, seriesIndex, dataIndex, data) {\r\n            return typeof itemColor === 'function'\r\n                   ? itemColor.call(\r\n                        this.myChart,\r\n                        {\r\n                            seriesIndex: seriesIndex,\r\n                            series: this.series[seriesIndex],\r\n                            dataIndex: dataIndex,\r\n                            data: data\r\n                        }\r\n                   )\r\n                   : itemColor;\r\n            \r\n        }, \r\n\r\n        /**\r\n         * @parmas {object | number} data 目标data\r\n         * @params {string= | number=} defaultData 无数据时默认返回\r\n         */\r\n        getDataFromOption: function (data, defaultData) {\r\n            return data != null ? (data.value != null ? data.value : data) : defaultData;\r\n        },\r\n        \r\n        // 亚像素优化\r\n        subPixelOptimize: function (position, lineWidth) {\r\n            if (lineWidth % 2 === 1) {\r\n                //position += position === Math.ceil(position) ? 0.5 : 0;\r\n                position = Math.floor(position) + 0.5;\r\n            }\r\n            else {\r\n                position = Math.round(position);\r\n            }\r\n            return position;\r\n        },\r\n        \r\n        // 默认resize\r\n        resize: function () {\r\n            this.refresh && this.refresh();\r\n            this.clearEffectShape && this.clearEffectShape(true);\r\n            var self = this;\r\n            setTimeout(function(){\r\n                self.animationEffect && self.animationEffect();\r\n            },200);\r\n        },\r\n\r\n        /**\r\n         * 清除图形数据，实例仍可用\r\n         */\r\n        clear :function () {\r\n            this.clearEffectShape && this.clearEffectShape();\r\n            this.zr && this.zr.delShape(this.shapeList);\r\n            this.shapeList = [];\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用\r\n         */\r\n        dispose: function () {\r\n            this.onbeforDispose && this.onbeforDispose();\r\n            this.clear();\r\n            this.shapeList = null;\r\n            this.effectList = null;\r\n            this.messageCenter && this.messageCenter.unbind(\r\n                ecConfig.EVENT.LEGEND_HOVERLINK, this._onlegendhoverlink\r\n            );\r\n            this.onafterDispose && this.onafterDispose();\r\n        },\r\n        \r\n        query: ecQuery.query,\r\n        deepQuery: ecQuery.deepQuery,\r\n        deepMerge: ecQuery.deepMerge,\r\n        \r\n        parsePercent: number.parsePercent,\r\n        parseCenter: number.parseCenter,\r\n        parseRadius: number.parseRadius,\r\n        numAddCommas: number.addCommas,\r\n\r\n        getPrecision: number.getPrecision\r\n    };\r\n    \r\n    return Base;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/base.js\n// module id = 8\n// module chunks = 0","/**\r\n * 事件辅助类\r\n * @module zrender/tool/event\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n */\r\ndefine(\r\n    function(require) {\r\n\r\n        'use strict';\r\n\r\n        var Eventful = require('../mixin/Eventful');\r\n\r\n        /**\r\n        * 提取鼠标（手指）x坐标\r\n        * @memberOf module:zrender/tool/event\r\n        * @param  {Event} e 事件.\r\n        * @return {number} 鼠标（手指）x坐标.\r\n        */\r\n        function getX(e) {\r\n            return typeof e.zrenderX != 'undefined' && e.zrenderX\r\n                   || typeof e.offsetX != 'undefined' && e.offsetX\r\n                   || typeof e.layerX != 'undefined' && e.layerX\r\n                   || typeof e.clientX != 'undefined' && e.clientX;\r\n        }\r\n\r\n        /**\r\n        * 提取鼠标y坐标\r\n        * @memberOf module:zrender/tool/event\r\n        * @param  {Event} e 事件.\r\n        * @return {number} 鼠标（手指）y坐标.\r\n        */\r\n        function getY(e) {\r\n            return typeof e.zrenderY != 'undefined' && e.zrenderY\r\n                   || typeof e.offsetY != 'undefined' && e.offsetY\r\n                   || typeof e.layerY != 'undefined' && e.layerY\r\n                   || typeof e.clientY != 'undefined' && e.clientY;\r\n        }\r\n\r\n        /**\r\n        * 提取鼠标滚轮变化\r\n        * @memberOf module:zrender/tool/event\r\n        * @param  {Event} e 事件.\r\n        * @return {number} 滚轮变化，正值说明滚轮是向上滚动，如果是负值说明滚轮是向下滚动\r\n        */\r\n        function getDelta(e) {\r\n            return typeof e.zrenderDelta != 'undefined' && e.zrenderDelta\r\n                   || typeof e.wheelDelta != 'undefined' && e.wheelDelta\r\n                   || typeof e.detail != 'undefined' && -e.detail;\r\n        }\r\n\r\n        /**\r\n         * 停止冒泡和阻止默认行为\r\n         * @memberOf module:zrender/tool/event\r\n         * @method\r\n         * @param {Event} e : event对象\r\n         */\r\n        var stop = typeof window.addEventListener === 'function'\r\n            ? function (e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                e.cancelBubble = true;\r\n            }\r\n            : function (e) {\r\n                e.returnValue = false;\r\n                e.cancelBubble = true;\r\n            };\r\n        \r\n        return {\r\n            getX : getX,\r\n            getY : getY,\r\n            getDelta : getDelta,\r\n            stop : stop,\r\n            // 做向上兼容\r\n            Dispatcher : Eventful\r\n        };\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/event.js\n// module id = 9\n// module chunks = 0","define(function () {\r\n    /**\r\n     * config默认配置项\r\n     * @exports zrender/config\r\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n     */\r\n    var config = {\r\n        /**\r\n         * @namespace module:zrender/config.EVENT\r\n         */\r\n        EVENT : {\r\n            /**\r\n             * 窗口大小变化\r\n             * @type {string}\r\n             */\r\n            RESIZE : 'resize',\r\n            /**\r\n             * 鼠标按钮被（手指）按下，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            CLICK : 'click',\r\n            /**\r\n             * 双击事件\r\n             * @type {string}\r\n             */\r\n            DBLCLICK : 'dblclick',\r\n            /**\r\n             * 鼠标滚轮变化，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            MOUSEWHEEL : 'mousewheel',\r\n            /**\r\n             * 鼠标（手指）被移动，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            MOUSEMOVE : 'mousemove',\r\n            /**\r\n             * 鼠标移到某图形元素之上，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            MOUSEOVER : 'mouseover',\r\n            /**\r\n             * 鼠标从某图形元素移开，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            MOUSEOUT : 'mouseout',\r\n            /**\r\n             * 鼠标按钮（手指）被按下，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            MOUSEDOWN : 'mousedown',\r\n            /**\r\n             * 鼠标按键（手指）被松开，事件对象是：目标图形元素或空\r\n             * @type {string}\r\n             */\r\n            MOUSEUP : 'mouseup',\r\n            /**\r\n             * 全局离开，MOUSEOUT触发比较频繁，一次离开优化绑定\r\n             * @type {string}\r\n             */\r\n            GLOBALOUT : 'globalout',    // \r\n\r\n            // 一次成功元素拖拽的行为事件过程是：\r\n            // dragstart > dragenter > dragover [> dragleave] > drop > dragend\r\n            /**\r\n             * 开始拖拽时触发，事件对象是：被拖拽图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGSTART : 'dragstart',\r\n            /**\r\n             * 拖拽完毕时触发（在drop之后触发），事件对象是：被拖拽图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGEND : 'dragend',\r\n            /**\r\n             * 拖拽图形元素进入目标图形元素时触发，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGENTER : 'dragenter',\r\n            /**\r\n             * 拖拽图形元素在目标图形元素上移动时触发，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGOVER : 'dragover',\r\n            /**\r\n             * 拖拽图形元素离开目标图形元素时触发，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            DRAGLEAVE : 'dragleave',\r\n            /**\r\n             * 拖拽图形元素放在目标图形元素内时触发，事件对象是：目标图形元素\r\n             * @type {string}\r\n             */\r\n            DROP : 'drop',\r\n            /**\r\n             * touch end - start < delay is click\r\n             * @type {number}\r\n             */\r\n            touchClickDelay : 300\r\n        },\r\n\r\n        elementClassName: 'zr-element',\r\n\r\n        // 是否异常捕获\r\n        catchBrushException: false,\r\n\r\n        /**\r\n         * debug日志选项：catchBrushException为true下有效\r\n         * 0 : 不生成debug数据，发布用\r\n         * 1 : 异常抛出，调试用\r\n         * 2 : 控制台输出，调试用\r\n         */\r\n        debugMode: 0,\r\n\r\n        // retina 屏幕优化\r\n        devicePixelRatio: Math.max(window.devicePixelRatio || 1, 1)\r\n    };\r\n    return config;\r\n});\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/config.js\n// module id = 10\n// module chunks = 0","/**\r\n * zrender: loading特效类\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n\r\ndefine(\r\n    function(require) {\r\n        var util = require('../tool/util');\r\n        var TextShape = require('../shape/Text');\r\n        var RectangleShape = require('../shape/Rectangle');\r\n\r\n\r\n        var DEFAULT_TEXT = 'Loading...';\r\n        var DEFAULT_TEXT_FONT = 'normal 16px Arial';\r\n\r\n        /**\r\n         * @constructor\r\n         * \r\n         * @param {Object} options 选项\r\n         * @param {color} options.backgroundColor 背景颜色\r\n         * @param {Object} options.textStyle 文字样式，同shape/text.style\r\n         * @param {number=} options.progress 进度参数，部分特效有用\r\n         * @param {Object=} options.effect 特效参数，部分特效有用\r\n         * \r\n         * {\r\n         *     effect,\r\n         *     //loading话术\r\n         *     text:'',\r\n         *     // 水平安放位置，默认为 'center'，可指定x坐标\r\n         *     x:'center' || 'left' || 'right' || {number},\r\n         *     // 垂直安放位置，默认为'top'，可指定y坐标\r\n         *     y:'top' || 'bottom' || {number},\r\n         *\r\n         *     textStyle:{\r\n         *         textFont: 'normal 20px Arial' || {textFont}, //文本字体\r\n         *         color: {color}\r\n         *     }\r\n         * }\r\n         */\r\n        function Base(options) {\r\n            this.setOptions(options);\r\n        }\r\n\r\n        /**\r\n         * 创建loading文字图形\r\n         * \r\n         * @param {Object} textStyle 文字style，同shape/text.style\r\n         */\r\n        Base.prototype.createTextShape = function (textStyle) {\r\n            return new TextShape({\r\n                highlightStyle : util.merge(\r\n                    {\r\n                        x : this.canvasWidth / 2,\r\n                        y : this.canvasHeight / 2,\r\n                        text : DEFAULT_TEXT,\r\n                        textAlign : 'center',\r\n                        textBaseline : 'middle',\r\n                        textFont : DEFAULT_TEXT_FONT,\r\n                        color: '#333',\r\n                        brushType : 'fill'\r\n                    },\r\n                    textStyle,\r\n                    true\r\n                )\r\n            });\r\n        };\r\n        \r\n        /**\r\n         * 获取loading背景图形\r\n         * \r\n         * @param {color} color 背景颜色\r\n         */\r\n        Base.prototype.createBackgroundShape = function (color) {\r\n            return new RectangleShape({\r\n                highlightStyle : {\r\n                    x : 0,\r\n                    y : 0,\r\n                    width : this.canvasWidth,\r\n                    height : this.canvasHeight,\r\n                    brushType : 'fill',\r\n                    color : color\r\n                }\r\n            });\r\n        };\r\n\r\n        Base.prototype.start = function (painter) {\r\n            this.canvasWidth = painter._width;\r\n            this.canvasHeight = painter._height;\r\n\r\n            function addShapeHandle(param) {\r\n                painter.storage.addHover(param);\r\n            }\r\n            function refreshHandle() {\r\n                painter.refreshHover();\r\n            }\r\n            this.loadingTimer = this._start(addShapeHandle, refreshHandle);\r\n        };\r\n\r\n        Base.prototype._start = function (/*addShapeHandle, refreshHandle*/) {\r\n            return setInterval(function () {\r\n            }, 10000);\r\n        };\r\n\r\n        Base.prototype.stop = function () {\r\n            clearInterval(this.loadingTimer);\r\n        };\r\n\r\n        Base.prototype.setOptions = function (options) {\r\n            this.options = options || {};\r\n        };\r\n        \r\n        Base.prototype.adjust = function (value, region) {\r\n            if (value <= region[0]) {\r\n                value = region[0];\r\n            }\r\n            else if (value >= region[1]) {\r\n                value = region[1];\r\n            }\r\n            return value;\r\n        };\r\n        \r\n        Base.prototype.getLocation = function(loc, totalWidth, totalHeight) {\r\n            var x = loc.x != null ? loc.x : 'center';\r\n            switch (x) {\r\n                case 'center' :\r\n                    x = Math.floor((this.canvasWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = 0;\r\n                    break;\r\n                case 'right' :\r\n                    x = this.canvasWidth - totalWidth;\r\n                    break;\r\n            }\r\n            var y = loc.y != null ? loc.y : 'center';\r\n            switch (y) {\r\n                case 'center' :\r\n                    y = Math.floor((this.canvasHeight - totalHeight) / 2);\r\n                    break;\r\n                case 'top' :\r\n                    y = 0;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = this.canvasHeight - totalHeight;\r\n                    break;\r\n            }\r\n            return {\r\n                x : x,\r\n                y : y,\r\n                width : totalWidth,\r\n                height : totalHeight\r\n            };\r\n        };\r\n\r\n        return Base;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/loadingEffect/Base.js\n// module id = 11\n// module chunks = 0","/**\r\n * 图片绘制\r\n * @module zrender/shape/Image\r\n * @author pissang(https://www.github.com/pissang)\r\n * @example\r\n *     var ImageShape = require('zrender/shape/Image');\r\n *     var image = new ImageShape({\r\n *         style: {\r\n *             image: 'test.jpg',\r\n *             x: 100,\r\n *             y: 100\r\n *         }\r\n *     });\r\n *     zr.addShape(image);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IImageStyle\r\n * @property {string|HTMLImageElement|HTMLCanvasElement} image 图片url或者图片对象\r\n * @property {number} x 左上角横坐标\r\n * @property {number} y 左上角纵坐标\r\n * @property {number} [width] 绘制到画布上的宽度，默认为图片宽度\r\n * @property {number} [height] 绘制到画布上的高度，默认为图片高度\r\n * @property {number} [sx=0] 从图片中裁剪的左上角横坐标\r\n * @property {number} [sy=0] 从图片中裁剪的左上角纵坐标\r\n * @property {number} [sWidth] 从图片中裁剪的宽度，默认为图片高度\r\n * @property {number} [sHeight] 从图片中裁剪的高度，默认为图片高度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n\r\n        var Base = require('./Base');\r\n\r\n        /**\r\n         * @alias zrender/shape/Image\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var ZImage = function(options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 图片绘制样式\r\n             * @name module:zrender/shape/Image#style\r\n             * @type {module:zrender/shape/Image~IImageStyle}\r\n             */\r\n            /**\r\n             * 图片高亮绘制样式\r\n             * @name module:zrender/shape/Image#highlightStyle\r\n             * @type {module:zrender/shape/Image~IImageStyle}\r\n             */\r\n        };\r\n\r\n        ZImage.prototype = {\r\n            \r\n            type: 'image',\r\n\r\n            brush : function(ctx, isHighlight, refreshNextFrame) {\r\n                var style = this.style || {};\r\n\r\n                if (isHighlight) {\r\n                    // 根据style扩展默认高亮样式\r\n                    style = this.getHighlightStyle(\r\n                        style, this.highlightStyle || {}\r\n                    );\r\n                }\r\n\r\n                var image = style.image;\r\n                var self = this;\r\n\r\n                if (!this._imageCache) {\r\n                    this._imageCache = {};\r\n                }\r\n                if (typeof(image) === 'string') {\r\n                    var src = image;\r\n                    if (this._imageCache[src]) {\r\n                        image = this._imageCache[src];\r\n                    } else {\r\n                        image = new Image();\r\n                        image.onload = function () {\r\n                            image.onload = null;\r\n                            self.modSelf();\r\n                            refreshNextFrame();\r\n                        };\r\n\r\n                        image.src = src;\r\n                        this._imageCache[src] = image;\r\n                    }\r\n                }\r\n                if (image) {\r\n                    // 图片已经加载完成\r\n                    if (image.nodeName.toUpperCase() == 'IMG') {\r\n                        if (window.ActiveXObject) {\r\n                            if (image.readyState != 'complete') {\r\n                                return;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (!image.complete) {\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Else is canvas\r\n                    var width = style.width || image.width;\r\n                    var height = style.height || image.height;\r\n                    var x = style.x;\r\n                    var y = style.y;\r\n                    // 图片加载失败\r\n                    if (!image.width || !image.height) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    this.doClip(ctx);\r\n\r\n                    this.setContext(ctx, style);\r\n\r\n                    // 设置transform\r\n                    this.setTransform(ctx);\r\n\r\n                    if (style.sWidth && style.sHeight) {\r\n                        var sx = style.sx || 0;\r\n                        var sy = style.sy || 0;\r\n                        ctx.drawImage(\r\n                            image,\r\n                            sx, sy, style.sWidth, style.sHeight,\r\n                            x, y, width, height\r\n                        );\r\n                    }\r\n                    else if (style.sx && style.sy) {\r\n                        var sx = style.sx;\r\n                        var sy = style.sy;\r\n                        var sWidth = width - sx;\r\n                        var sHeight = height - sy;\r\n                        ctx.drawImage(\r\n                            image,\r\n                            sx, sy, sWidth, sHeight,\r\n                            x, y, width, height\r\n                        );\r\n                    }\r\n                    else {\r\n                        ctx.drawImage(image, x, y, width, height);\r\n                    }\r\n                    // 如果没设置宽和高的话自动根据图片宽高设置\r\n                    if (!style.width) {\r\n                        style.width = width;\r\n                    }\r\n                    if (!style.height) {\r\n                        style.height = height;\r\n                    }\r\n                    if (!this.style.width) {\r\n                        this.style.width = width;\r\n                    }\r\n                    if (!this.style.height) {\r\n                        this.style.height = height;\r\n                    }\r\n\r\n                    this.drawText(ctx, style, this.style);\r\n\r\n                    ctx.restore();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 计算返回图片的包围盒矩形\r\n             * @param {module:zrender/shape/Image~IImageStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect: function(style) {\r\n                return {\r\n                    x : style.x,\r\n                    y : style.y,\r\n                    width : style.width,\r\n                    height : style.height\r\n                };\r\n            },\r\n\r\n            clearCache: function() {\r\n                this._imageCache = {};\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(ZImage, Base);\r\n        return ZImage;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Image.js\n// module id = 12\n// module chunks = 0","/**\r\n * echarts扩展zrender shape\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：icon\r\n * 可配图形属性：\r\n   {\r\n       // 基础属性\r\n       shape  : 'icon',       // 必须，shape类标识，需要显式指定\r\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\r\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\r\n       invisible : {boolean},   // 默认为false，是否可见\r\n\r\n       // 样式属性，默认状态样式样式属性\r\n       style  : {\r\n           x             : {number},  // 必须，左上角横坐标\r\n           y             : {number},  // 必须，左上角纵坐标\r\n           width         : {number},  // 必须，宽度\r\n           height        : {number},  // 必须，高度\r\n           iconType      : {string},  // 必须，icon类型\r\n       },\r\n\r\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\r\n       highlightStyle : {\r\n           // 同style\r\n       }\r\n\r\n       // 交互属性，详见shape.Base\r\n\r\n       // 事件属性，详见shape.Base\r\n   }\r\n */\r\ndefine(function (require) {\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    \r\n    function _iconMark(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n        ctx.moveTo(x,                 y + style.height);\r\n        ctx.lineTo(x + 5 * dx,        y + 14 * dy);\r\n        ctx.lineTo(x + style.width,   y + 3 * dy);\r\n        ctx.lineTo(x + 13 * dx,       y);\r\n        ctx.lineTo(x + 2 * dx,        y + 11 * dy);\r\n        ctx.lineTo(x,                 y + style.height);\r\n\r\n        ctx.moveTo(x + 6 * dx,        y + 10 * dy);\r\n        ctx.lineTo(x + 14 * dx,       y + 2 * dy);\r\n\r\n        ctx.moveTo(x + 10 * dx,       y + 13 * dy);\r\n        ctx.lineTo(x + style.width,   y + 13 * dy);\r\n\r\n        ctx.moveTo(x + 13 * dx,       y + 10 * dy);\r\n        ctx.lineTo(x + 13 * dx,       y + style.height);\r\n    }\r\n\r\n    function _iconMarkUndo(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n        ctx.moveTo(x,                 y + style.height);\r\n        ctx.lineTo(x + 5 * dx,        y + 14 * dy);\r\n        ctx.lineTo(x + style.width,   y + 3 * dy);\r\n        ctx.lineTo(x + 13 * dx,       y);\r\n        ctx.lineTo(x + 2 * dx,        y + 11 * dy);\r\n        ctx.lineTo(x,                 y + style.height);\r\n\r\n        ctx.moveTo(x + 6 * dx,        y + 10 * dy);\r\n        ctx.lineTo(x + 14 * dx,       y + 2 * dy);\r\n\r\n        ctx.moveTo(x + 10 * dx,       y + 13 * dy);\r\n        ctx.lineTo(x + style.width,   y + 13 * dy);\r\n    }\r\n\r\n    function _iconMarkClear(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x + 4 * dx,        y + 15 * dy);\r\n        ctx.lineTo(x + 9 * dx,        y + 13 * dy);\r\n        ctx.lineTo(x + 14 * dx,       y + 8 * dy);\r\n        ctx.lineTo(x + 11 * dx,       y + 5 * dy);\r\n        ctx.lineTo(x + 6 * dx,        y + 10 * dy);\r\n        ctx.lineTo(x + 4 * dx,        y + 15 * dy);\r\n\r\n        ctx.moveTo(x + 5 * dx,        y);\r\n        ctx.lineTo(x + 11 * dx,       y);\r\n        ctx.moveTo(x + 5 * dx,        y + dy);\r\n        ctx.lineTo(x + 11 * dx,       y + dy);\r\n        ctx.moveTo(x,                 y + 2 * dy);\r\n        ctx.lineTo(x + style.width,   y + 2 * dy);\r\n\r\n        ctx.moveTo(x,                 y + 5 * dy);\r\n        ctx.lineTo(x + 3 * dx,        y + style.height);\r\n        ctx.lineTo(x + 13 * dx,       y + style.height);\r\n        ctx.lineTo(x + style.width,   y + 5 * dy);\r\n    }\r\n\r\n    function _iconDataZoom(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x,               y + 3 * dy);\r\n        ctx.lineTo(x + 6 * dx,      y + 3 * dy);\r\n        \r\n        ctx.moveTo(x + 3 * dx,      y);\r\n        ctx.lineTo(x + 3 * dx,      y + 6 * dy);\r\n\r\n        ctx.moveTo(x + 3 * dx,      y + 8 * dy);\r\n        ctx.lineTo(x + 3 * dx,      y + style.height);\r\n        ctx.lineTo(x + style.width, y + style.height);\r\n        ctx.lineTo(x + style.width, y + 3 * dy);\r\n        ctx.lineTo(x + 8 * dx,      y + 3 * dy);\r\n    }\r\n    \r\n    function _iconDataZoomReset(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x + 6 * dx,      y);\r\n        ctx.lineTo(x + 2 * dx,      y + 3 * dy);\r\n        ctx.lineTo(x + 6 * dx,      y + 6 * dy);\r\n        \r\n        ctx.moveTo(x + 2 * dx,      y + 3 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 3 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 11 * dy);\r\n        \r\n        ctx.moveTo(x + 2 * dx,      y + 5 * dy);\r\n        ctx.lineTo(x + 2 * dx,      y + 13 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 13 * dy);\r\n        \r\n        ctx.moveTo(x + 10 * dx,     y + 10 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 13 * dy);\r\n        ctx.lineTo(x + 10 * dx,     y + style.height);\r\n    }\r\n    \r\n    function _iconRestore(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n        var r = style.width / 2;\r\n        \r\n        ctx.lineWidth = 1.5;\r\n\r\n        ctx.arc(x + r, y + r, r - dx, 0, Math.PI * 2 / 3);\r\n        ctx.moveTo(x + 3 * dx,        y + style.height);\r\n        ctx.lineTo(x + 0 * dx,        y + 12 * dy);\r\n        ctx.lineTo(x + 5 * dx,        y + 11 * dy);\r\n\r\n        ctx.moveTo(x, y + 8 * dy);\r\n        ctx.arc(x + r, y + r, r - dx, Math.PI, Math.PI * 5 / 3);\r\n        ctx.moveTo(x + 13 * dx,       y);\r\n        ctx.lineTo(x + style.width,   y + 4 * dy);\r\n        ctx.lineTo(x + 11 * dx,       y + 5 * dy);\r\n    }\r\n\r\n    function _iconLineChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, y + style.height);\r\n        ctx.lineTo(x + style.width, y + style.height);\r\n\r\n        ctx.moveTo(x + 2 * dx,    y + 14 * dy);\r\n        ctx.lineTo(x + 7 * dx,    y + 6 * dy);\r\n        ctx.lineTo(x + 11 * dx,   y + 11 * dy);\r\n        ctx.lineTo(x + 15 * dx,   y + 2 * dy);\r\n    }\r\n\r\n    function _iconBarChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, y + style.height);\r\n        ctx.lineTo(x + style.width, y + style.height);\r\n\r\n        ctx.moveTo(x + 3 * dx,        y + 14 * dy);\r\n        ctx.lineTo(x + 3 * dx,        y + 6 * dy);\r\n        ctx.lineTo(x + 4 * dx,        y + 6 * dy);\r\n        ctx.lineTo(x + 4 * dx,        y + 14 * dy);\r\n        ctx.moveTo(x + 7 * dx,        y + 14 * dy);\r\n        ctx.lineTo(x + 7 * dx,        y + 2 * dy);\r\n        ctx.lineTo(x + 8 * dx,        y + 2 * dy);\r\n        ctx.lineTo(x + 8 * dx,        y + 14 * dy);\r\n        ctx.moveTo(x + 11 * dx,       y + 14 * dy);\r\n        ctx.lineTo(x + 11 * dx,       y + 9 * dy);\r\n        ctx.lineTo(x + 12 * dx,       y + 9 * dy);\r\n        ctx.lineTo(x + 12 * dx,       y + 14 * dy);\r\n    }\r\n    \r\n    function _iconPieChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width - 2;\r\n        var height = style.height - 2;\r\n        var r = Math.min(width, height) / 2;\r\n        y += 2;\r\n        ctx.moveTo(x + r + 3, y + r - 3);\r\n        ctx.arc(x + r + 3, y + r - 3, r - 1, 0, -Math.PI / 2, true);\r\n        ctx.lineTo(x + r + 3, y + r - 3);\r\n      \r\n        ctx.moveTo(x + r, y);\r\n        ctx.lineTo(x + r, y + r);\r\n        ctx.arc(x + r, y + r, r, -Math.PI / 2, Math.PI * 2, true);\r\n        ctx.lineTo(x + r, y + r);\r\n        ctx.lineWidth = 1.5;\r\n    }\r\n    \r\n    function _iconFunnelChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n        y -= dy;\r\n        ctx.moveTo(x + 1 * dx,      y + 2 * dy);\r\n        ctx.lineTo(x + 15 * dx,     y + 2 * dy);\r\n        ctx.lineTo(x + 14 * dx,     y + 3 * dy);\r\n        ctx.lineTo(x + 2 * dx,      y + 3 * dy);\r\n        \r\n        ctx.moveTo(x + 3 * dx,      y + 6 * dy);\r\n        ctx.lineTo(x + 13 * dx,     y + 6 * dy);\r\n        ctx.lineTo(x + 12 * dx,     y + 7 * dy);\r\n        ctx.lineTo(x + 4 * dx,      y + 7 * dy);\r\n        \r\n        ctx.moveTo(x + 5 * dx,      y + 10 * dy);\r\n        ctx.lineTo(x + 11 * dx,      y + 10 * dy);\r\n        ctx.lineTo(x + 10 * dx,      y + 11 * dy);\r\n        ctx.lineTo(x + 6 * dx,      y + 11 * dy);\r\n        \r\n        ctx.moveTo(x + 7 * dx,      y + 14 * dy);\r\n        ctx.lineTo(x + 9 * dx,      y + 14 * dy);\r\n        ctx.lineTo(x + 8 * dx,      y + 15 * dy);\r\n        ctx.lineTo(x + 7 * dx,      y + 15 * dy);\r\n    }\r\n    \r\n    function _iconForceChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        var dx = width / 16;\r\n        var dy = height / 16;\r\n        var r = Math.min(dx, dy) * 2;\r\n\r\n        ctx.moveTo(x + dx + r, y + dy + r);\r\n        ctx.arc(x + dx, y + dy, r, Math.PI / 4, Math.PI * 3);\r\n        \r\n        ctx.lineTo(x + 7 * dx - r, y + 6 * dy - r);\r\n        ctx.arc(x + 7 * dx, y + 6 * dy, r, Math.PI / 4 * 5, Math.PI * 4);\r\n        ctx.arc(x + 7 * dx, y + 6 * dy, r / 2, Math.PI / 4 * 5, Math.PI * 4);\r\n        \r\n        ctx.moveTo(x + 7 * dx - r / 2, y + 6 * dy + r);\r\n        ctx.lineTo(x + dx + r, y + 14 * dy - r);\r\n        ctx.arc(x + dx, y + 14 * dy, r, -Math.PI / 4, Math.PI * 2);\r\n        \r\n        ctx.moveTo(x + 7 * dx + r / 2, y + 6 * dy);\r\n        ctx.lineTo(x + 14 * dx - r, y + 10 * dy - r / 2);\r\n        ctx.moveTo(x + 16 * dx, y + 10 * dy);\r\n        ctx.arc(x + 14 * dx, y + 10 * dy, r, 0, Math.PI * 3);\r\n        ctx.lineWidth = 1.5;\r\n    }\r\n    \r\n    function _iconChordChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        var r = Math.min(width, height) / 2;\r\n\r\n        ctx.moveTo(x + width, y + height / 2);\r\n        ctx.arc(x + r, y + r, r, 0, Math.PI * 2);\r\n        \r\n        ctx.arc(x + r, y, r, Math.PI / 4, Math.PI / 5 * 4);\r\n        ctx.arc(x, y + r, r, -Math.PI / 3, Math.PI / 3);\r\n        ctx.arc(x + width, y + height, r, Math.PI, Math.PI / 2 * 3);\r\n        ctx.lineWidth = 1.5;\r\n    }\r\n\r\n    function _iconStackChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        var dy = Math.round(height / 3);\r\n        var delta = Math.round((dy - 2) / 2);\r\n        var len = 3;\r\n        while (len--) {\r\n            ctx.rect(x, y + dy * len + delta, width, 2);\r\n        }\r\n    }\r\n    \r\n    function _iconTiledChart(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        var dx = Math.round(width / 3);\r\n        var delta = Math.round((dx - 2) / 2);\r\n        var len = 3;\r\n        while (len--) {\r\n            ctx.rect(x + dx * len + delta, y, 2, height);\r\n        }\r\n    }\r\n    \r\n    function _iconDataView(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n\r\n        ctx.moveTo(x + dx, y);\r\n        ctx.lineTo(x + dx, y + style.height);\r\n        ctx.lineTo(x + 15 * dx, y + style.height);\r\n        ctx.lineTo(x + 15 * dx, y);\r\n        ctx.lineTo(x + dx, y);\r\n\r\n        ctx.moveTo(x + 3 * dx, y + 3 * dx);\r\n        ctx.lineTo(x + 13 * dx, y + 3 * dx);\r\n\r\n        ctx.moveTo(x + 3 * dx, y + 6 * dx);\r\n        ctx.lineTo(x + 13 * dx, y + 6 * dx);\r\n\r\n        ctx.moveTo(x + 3 * dx, y + 9 * dx);\r\n        ctx.lineTo(x + 13 * dx, y + 9 * dx);\r\n\r\n        ctx.moveTo(x + 3 * dx, y + 12 * dx);\r\n        ctx.lineTo(x + 9 * dx, y + 12 * dx);\r\n    }\r\n    \r\n    function _iconSave(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        var dy = style.height / 16;\r\n\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x, y + style.height);\r\n        ctx.lineTo(x + style.width, y + style.height);\r\n        ctx.lineTo(x + style.width, y);\r\n        ctx.lineTo(x, y);\r\n\r\n        ctx.moveTo(x + 4 * dx,    y);\r\n        ctx.lineTo(x + 4 * dx,    y + 8 * dy);\r\n        ctx.lineTo(x + 12 * dx,   y + 8 * dy);\r\n        ctx.lineTo(x + 12 * dx,   y);\r\n        \r\n        ctx.moveTo(x + 6 * dx,    y + 11 * dy);\r\n        ctx.lineTo(x + 6 * dx,    y + 13 * dy);\r\n        ctx.lineTo(x + 10 * dx,   y + 13 * dy);\r\n        ctx.lineTo(x + 10 * dx,   y + 11 * dy);\r\n        ctx.lineTo(x + 6 * dx,    y + 11 * dy);\r\n    }\r\n    \r\n    function _iconCross(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var width = style.width;\r\n        var height = style.height;\r\n        ctx.moveTo(x, y + height / 2);\r\n        ctx.lineTo(x + width, y + height / 2);\r\n        \r\n        ctx.moveTo(x + width / 2, y);\r\n        ctx.lineTo(x + width / 2, y + height);\r\n    }\r\n    \r\n    function _iconCircle(ctx, style) {\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        var r = Math.min(width, height);\r\n        ctx.moveTo(\r\n            style.x + width + r, \r\n            style.y + height\r\n        );\r\n        ctx.arc(\r\n            style.x + width, \r\n            style.y + height, \r\n            r,\r\n            0, \r\n            Math.PI * 2\r\n        );\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconRectangle(ctx, style) {\r\n        ctx.rect(style.x, style.y, style.width, style.height);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconTriangle(ctx, style) {\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        var x = style.x + width;\r\n        var y = style.y + height;\r\n        var symbolSize = Math.min(width, height);\r\n        ctx.moveTo(x, y - symbolSize);\r\n        ctx.lineTo(x + symbolSize, y + symbolSize);\r\n        ctx.lineTo(x - symbolSize, y + symbolSize);\r\n        ctx.lineTo(x, y - symbolSize);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconDiamond(ctx, style) {\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        var x = style.x + width;\r\n        var y = style.y + height;\r\n        var symbolSize = Math.min(width, height);\r\n        ctx.moveTo(x, y - symbolSize);\r\n        ctx.lineTo(x + symbolSize, y);\r\n        ctx.lineTo(x, y + symbolSize);\r\n        ctx.lineTo(x - symbolSize, y);\r\n        ctx.lineTo(x, y - symbolSize);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconArrow(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y;\r\n        var dx = style.width / 16;\r\n        ctx.moveTo(x + 8 * dx,  y);\r\n        ctx.lineTo(x + dx,      y + style.height);\r\n        ctx.lineTo(x + 8 * dx,  y + style.height / 4 * 3);\r\n        ctx.lineTo(x + 15 * dx, y + style.height);\r\n        ctx.lineTo(x + 8 * dx,  y);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconStar(ctx, style) {\r\n        var StarShape = require('zrenderjs/shape/Star');\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        StarShape.prototype.buildPath(ctx, {\r\n            x : style.x + width,\r\n            y : style.y + height,\r\n            r : Math.min(width, height),\r\n            n : style.n || 5\r\n        });\r\n    }\r\n    \r\n    function _iconHeart(ctx, style) {\r\n        var HeartShape = require('zrenderjs/shape/Heart');\r\n        HeartShape.prototype.buildPath(ctx, {\r\n            x : style.x + style.width / 2,\r\n            y : style.y + style.height * 0.2,\r\n            a : style.width / 2,\r\n            b : style.height * 0.8\r\n        });\r\n    }\r\n    \r\n    function _iconDroplet(ctx, style) {\r\n        var DropletShape = require('zrenderjs/shape/Droplet');\r\n        DropletShape.prototype.buildPath(ctx, {\r\n            x : style.x + style.width * 0.5,\r\n            y : style.y + style.height * 0.5,\r\n            a : style.width * 0.5,\r\n            b : style.height * 0.8\r\n        });\r\n    }\r\n    \r\n    function _iconPin(ctx, style) {\r\n        var x = style.x;\r\n        var y = style.y - style.height / 2 * 1.5;\r\n        var width = style.width / 2;\r\n        var height = style.height / 2;\r\n        var r = Math.min(width, height);\r\n        ctx.arc(\r\n            x + width, \r\n            y + height, \r\n            r,\r\n            Math.PI / 5 * 4, \r\n            Math.PI / 5\r\n        );\r\n        ctx.lineTo(x + width, y + height + r * 1.5);\r\n        ctx.closePath();\r\n    }\r\n    \r\n    function _iconImage(ctx, style, refreshNextFrame) {\r\n        var ImageShape = require('zrenderjs/shape/Image');\r\n        this._imageShape = this._imageShape || new ImageShape({\r\n            style: {}\r\n        });\r\n        for (var name in style) {\r\n            this._imageShape.style[name] = style[name];\r\n        }\r\n        this._imageShape.brush(ctx, false, refreshNextFrame);\r\n    }\r\n    \r\n    var Base = require('zrenderjs/shape/Base');\r\n    \r\n    function Icon(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Icon.prototype =  {\r\n        type : 'icon',\r\n        iconLibrary : {\r\n            mark : _iconMark,\r\n            markUndo : _iconMarkUndo,\r\n            markClear : _iconMarkClear,\r\n            dataZoom : _iconDataZoom,\r\n            dataZoomReset : _iconDataZoomReset,\r\n            restore : _iconRestore,\r\n            lineChart : _iconLineChart,\r\n            barChart : _iconBarChart,\r\n            pieChart : _iconPieChart,\r\n            funnelChart : _iconFunnelChart,\r\n            forceChart : _iconForceChart,\r\n            chordChart : _iconChordChart,\r\n            stackChart : _iconStackChart,\r\n            tiledChart : _iconTiledChart,\r\n            dataView : _iconDataView,\r\n            saveAsImage : _iconSave,\r\n            \r\n            cross : _iconCross,\r\n            circle : _iconCircle,\r\n            rectangle : _iconRectangle,\r\n            triangle : _iconTriangle,\r\n            diamond : _iconDiamond,\r\n            arrow : _iconArrow,\r\n            star : _iconStar,\r\n            heart : _iconHeart,\r\n            droplet : _iconDroplet,\r\n            pin : _iconPin,\r\n            image : _iconImage\r\n        },\r\n        brush: function (ctx, isHighlight, refreshNextFrame) {\r\n            var style = isHighlight ? this.highlightStyle : this.style;\r\n            style = style || {};\r\n            var iconType = style.iconType || this.style.iconType;\r\n            if (iconType === 'image') {\r\n                var ImageShape = require('zrenderjs/shape/Image');\r\n                ImageShape.prototype.brush.call(this, ctx, isHighlight, refreshNextFrame);\r\n\r\n            } else {\r\n\r\n                var style = this.beforeBrush(ctx, isHighlight);\r\n\r\n                ctx.beginPath();\r\n                this.buildPath(ctx, style, refreshNextFrame);\r\n\r\n                switch (style.brushType) {\r\n                    /* jshint ignore:start */\r\n                    case 'both':\r\n                        ctx.fill();\r\n                    case 'stroke':\r\n                        style.lineWidth > 0 && ctx.stroke();\r\n                        break;\r\n                    /* jshint ignore:end */\r\n                    default:\r\n                        ctx.fill();\r\n                }\r\n                \r\n                this.drawText(ctx, style, this.style);\r\n\r\n                this.afterBrush(ctx);\r\n            }\r\n        },\r\n        /**\r\n         * 创建矩形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style, refreshNextFrame) {\r\n            if (this.iconLibrary[style.iconType]) {\r\n                this.iconLibrary[style.iconType].call(this, ctx, style, refreshNextFrame);\r\n            }\r\n            else {\r\n                ctx.moveTo(style.x, style.y);\r\n                ctx.lineTo(style.x + style.width, style.y);\r\n                ctx.lineTo(style.x + style.width, style.y + style.height);\r\n                ctx.lineTo(style.x, style.y + style.height);\r\n                ctx.lineTo(style.x, style.y);\r\n                ctx.closePath();\r\n            }\r\n\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            if (style.__rect) {\r\n                return style.__rect;\r\n            }\r\n            \r\n            // pin比较特殊，让尖端在目标x,y上\r\n            style.__rect = {\r\n                x : Math.round(style.x),\r\n                y : Math.round(style.y - (style.iconType == 'pin' \r\n                                         ? (style.height / 2 * 1.5) : 0)\r\n                               ),\r\n                width : style.width,\r\n                height : style.height * (\r\n                    style.iconType === 'pin' ? 1.25 : 1\r\n                )\r\n            };\r\n            \r\n            return style.__rect;\r\n        },\r\n\r\n        isCover : function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n\r\n            // 快速预判并保留判断矩形\r\n            var rect = this.style.__rect;\r\n            if (!rect) {\r\n                rect = this.style.__rect = this.getRect(this.style);\r\n            }\r\n            // 提高交互体验，太小的图形包围盒四向扩大4px\r\n            var delta = (rect.height < 8 || rect.width < 8 ) ? 4 : 0;\r\n            return x >= rect.x - delta\r\n                && x <= (rect.x + rect.width + delta)\r\n                && y >= rect.y - delta\r\n                && y <= (rect.y + rect.height + delta);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Icon, Base);\r\n    \r\n    return Icon;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/shape/Icon.js\n// module id = 13\n// module chunks = 0","/**\r\n * echarts通用私有数据服务\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function() {\r\n    /**\r\n     * 打包私有数据\r\n     *\r\n     * @param {shape} shape 修改目标\r\n     * @param {Object} series\r\n     * @param {number} seriesIndex\r\n     * @param {number | Object} data\r\n     * @param {number} dataIndex\r\n     * @param {*=} special\r\n     * @param {*=} special2\r\n     */\r\n    function pack(\r\n        shape, series, seriesIndex, data, dataIndex, name, special, special2\r\n    ) {\r\n        var value;\r\n        if (typeof data != 'undefined') {\r\n            value = data.value == null\r\n                ? data\r\n                : data.value;\r\n        }\r\n\r\n        shape._echartsData = {\r\n            '_series' : series,\r\n            '_seriesIndex' : seriesIndex,\r\n            '_data' : data,\r\n            '_dataIndex' : dataIndex,\r\n            '_name' : name,\r\n            '_value' : value,\r\n            '_special' : special,\r\n            '_special2' : special2\r\n        };\r\n        return shape._echartsData;\r\n    }\r\n\r\n    /**\r\n     * 从私有数据中获取特定项\r\n     * @param {shape} shape\r\n     * @param {string} key\r\n     */\r\n    function get(shape, key) {\r\n        var data = shape._echartsData;\r\n        if (!key) {\r\n            return data;\r\n        }\r\n\r\n        switch (key) {\r\n            case 'series' :\r\n            case 'seriesIndex' :\r\n            case 'data' :\r\n            case 'dataIndex' :\r\n            case 'name' :\r\n            case 'value' :\r\n            case 'special' :\r\n            case 'special2' :\r\n                return data && data['_' + key];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 修改私有数据中获取特定项\r\n     * @param {shape} shape\r\n     * @param {string} key\r\n     * @param {*} value\r\n     */\r\n    function set(shape, key, value) {\r\n        shape._echartsData = shape._echartsData || {};\r\n        switch (key) {\r\n            case 'series' :             // 当前系列值\r\n            case 'seriesIndex' :        // 系列数组位置索引\r\n            case 'data' :               // 当前数据值\r\n            case 'dataIndex' :          // 数据数组位置索引\r\n            case 'name' :\r\n            case 'value' :\r\n            case 'special' :\r\n            case 'special2' :\r\n                shape._echartsData['_' + key] = value;\r\n                break;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 私有数据克隆，把source拷贝到target上\r\n     * @param {shape} source 源\r\n     * @param {shape} target 目标\r\n     */\r\n    function clone(source, target) {\r\n        target._echartsData =  {\r\n            '_series' : source._echartsData._series,\r\n            '_seriesIndex' : source._echartsData._seriesIndex,\r\n            '_data' : source._echartsData._data,\r\n            '_dataIndex' : source._echartsData._dataIndex,\r\n            '_name' : source._echartsData._name,\r\n            '_value' : source._echartsData._value,\r\n            '_special' : source._echartsData._special,\r\n            '_special2' : source._echartsData._special2\r\n        };\r\n    }\r\n\r\n    return {\r\n        pack : pack,\r\n        set : set,\r\n        get : get,\r\n        clone : clone\r\n    };\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/ecData.js\n// module id = 14\n// module chunks = 0","/**\r\n * echarts设备环境识别\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author firede[firede@firede.us]\r\n * @desc thanks zepto.\r\n */\r\ndefine(function() {\r\n    // Zepto.js\r\n    // (c) 2010-2013 Thomas Fuchs\r\n    // Zepto.js may be freely distributed under the MIT license.\r\n\r\n    function detect(ua) {\r\n        var os = this.os = {};\r\n        var browser = this.browser = {};\r\n        var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\r\n        var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\r\n        var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n        var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n        var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\r\n        var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\r\n        var touchpad = webos && ua.match(/TouchPad/);\r\n        var kindle = ua.match(/Kindle\\/([\\d.]+)/);\r\n        var silk = ua.match(/Silk\\/([\\d._]+)/);\r\n        var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\r\n        var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\r\n        var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\r\n        var playbook = ua.match(/PlayBook/);\r\n        var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\r\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\r\n        var ie = ua.match(/MSIE ([\\d.]+)/);\r\n        var safari = webkit && ua.match(/Mobile\\//) && !chrome;\r\n        var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\r\n        var ie = ua.match(/MSIE\\s([\\d.]+)/);\r\n\r\n        // Todo: clean this up with a better OS/browser seperation:\r\n        // - discern (more) between multiple browsers on android\r\n        // - decide if kindle fire in silk mode is android or not\r\n        // - Firefox on Android doesn't specify the Android version\r\n        // - possibly devide in os, device and browser hashes\r\n\r\n        if (browser.webkit = !!webkit) browser.version = webkit[1];\r\n\r\n        if (android) os.android = true, os.version = android[2];\r\n        if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\r\n        if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\r\n        if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\r\n        if (webos) os.webos = true, os.version = webos[2];\r\n        if (touchpad) os.touchpad = true;\r\n        if (blackberry) os.blackberry = true, os.version = blackberry[2];\r\n        if (bb10) os.bb10 = true, os.version = bb10[2];\r\n        if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\r\n        if (playbook) browser.playbook = true;\r\n        if (kindle) os.kindle = true, os.version = kindle[1];\r\n        if (silk) browser.silk = true, browser.version = silk[1];\r\n        if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\r\n        if (chrome) browser.chrome = true, browser.version = chrome[1];\r\n        if (firefox) browser.firefox = true, browser.version = firefox[1];\r\n        if (ie) browser.ie = true, browser.version = ie[1];\r\n        if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\r\n        if (webview) browser.webview = true;\r\n        if (ie) browser.ie = true, browser.version = ie[1];\r\n\r\n        os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\r\n            (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\r\n        os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 ||\r\n            (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\r\n            (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\r\n\r\n        return {\r\n            browser: browser,\r\n            os: os,\r\n            // 原生canvas支持，改极端点了\r\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\r\n            canvasSupported : document.createElement('canvas').getContext ? true : false\r\n        };\r\n    }\r\n\r\n    return detect(navigator.userAgent);\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/env.js\n// module id = 15\n// module chunks = 0","/**\r\n * @module zrender/shape/Text\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *     var Text = require('zrender/shape/Text');\r\n *     var shape = new Text({\r\n *         style: {\r\n *             text: 'Label',\r\n *             x: 100,\r\n *             y: 100,\r\n *             textFont: '14px Arial'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} ITextStyle\r\n * @property {number} x 横坐标\r\n * @property {number} y 纵坐标\r\n * @property {string} text 文本内容\r\n * @property {number} [maxWidth=null] 最大宽度限制\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textAlign] 可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n */\r\n\r\ndefine(\r\n    function (require) {\r\n        var area = require('../tool/area');\r\n        var Base = require('./Base');\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Text\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Text = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 文字绘制样式\r\n             * @name module:zrender/shape/Text#style\r\n             * @type {module:zrender/shape/Text~ITextStyle}\r\n             */\r\n            /**\r\n             * 文字高亮绘制样式\r\n             * @name module:zrender/shape/Text#highlightStyle\r\n             * @type {module:zrender/shape/Text~ITextStyle}\r\n             */\r\n        };\r\n\r\n        Text.prototype =  {\r\n            type: 'text',\r\n\r\n            brush : function (ctx, isHighlight) {\r\n                var style = this.style;\r\n                if (isHighlight) {\r\n                    // 根据style扩展默认高亮样式\r\n                    style = this.getHighlightStyle(\r\n                        style, this.highlightStyle || {}\r\n                    );\r\n                }\r\n                \r\n                if (typeof(style.text) == 'undefined' || style.text === false) {\r\n                    return;\r\n                }\r\n\r\n                ctx.save();\r\n                this.doClip(ctx);\r\n\r\n                this.setContext(ctx, style);\r\n\r\n                // 设置transform\r\n                this.setTransform(ctx);\r\n\r\n                if (style.textFont) {\r\n                    ctx.font = style.textFont;\r\n                }\r\n                ctx.textAlign = style.textAlign || 'start';\r\n                ctx.textBaseline = style.textBaseline || 'middle';\r\n\r\n                var text = (style.text + '').split('\\n');\r\n                var lineHeight = area.getTextHeight('国', style.textFont);\r\n                var rect = this.getRect(style);\r\n                var x = style.x;\r\n                var y;\r\n                if (style.textBaseline == 'top') {\r\n                    y = rect.y;\r\n                }\r\n                else if (style.textBaseline == 'bottom') {\r\n                    y = rect.y + lineHeight;\r\n                }\r\n                else {\r\n                    y = rect.y + lineHeight / 2;\r\n                }\r\n                \r\n                for (var i = 0, l = text.length; i < l; i++) {\r\n                    if (style.maxWidth) {\r\n                        switch (style.brushType) {\r\n                            case 'fill':\r\n                                ctx.fillText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                                break;\r\n                            case 'stroke':\r\n                                ctx.strokeText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                                break;\r\n                            case 'both':\r\n                                ctx.fillText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                                ctx.strokeText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                                break;\r\n                            default:\r\n                                ctx.fillText(\r\n                                    text[i],\r\n                                    x, y, style.maxWidth\r\n                                );\r\n                        }\r\n                    }\r\n                    else {\r\n                        switch (style.brushType) {\r\n                            case 'fill':\r\n                                ctx.fillText(text[i], x, y);\r\n                                break;\r\n                            case 'stroke':\r\n                                ctx.strokeText(text[i], x, y);\r\n                                break;\r\n                            case 'both':\r\n                                ctx.fillText(text[i], x, y);\r\n                                ctx.strokeText(text[i], x, y);\r\n                                break;\r\n                            default:\r\n                                ctx.fillText(text[i], x, y);\r\n                        }\r\n                    }\r\n                    y += lineHeight;\r\n                }\r\n\r\n                ctx.restore();\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 返回文字包围盒矩形\r\n             * @param {module:zrender/shape/Text~ITextStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var width = area.getTextWidth(style.text, style.textFont);\r\n                var height = area.getTextHeight(style.text, style.textFont);\r\n                \r\n                var textX = style.x;                 // 默认start == left\r\n                if (style.textAlign == 'end' || style.textAlign == 'right') {\r\n                    textX -= width;\r\n                }\r\n                else if (style.textAlign == 'center') {\r\n                    textX -= (width / 2);\r\n                }\r\n\r\n                var textY;\r\n                if (style.textBaseline == 'top') {\r\n                    textY = style.y;\r\n                }\r\n                else if (style.textBaseline == 'bottom') {\r\n                    textY = style.y - height;\r\n                }\r\n                else {\r\n                    // middle\r\n                    textY = style.y - height / 2;\r\n                }\r\n\r\n                style.__rect = {\r\n                    x : textX,\r\n                    y : textY,\r\n                    width : width,\r\n                    height : height\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Text, Base);\r\n        return Text;\r\n    }\r\n);\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Text.js\n// module id = 16\n// module chunks = 0","/**\r\n * 曲线辅助模块\r\n * @module zrender/tool/curve\r\n * @author pissang(https://www.github.com/pissang)\r\n */\r\ndefine(function(require) {\r\n\r\n    var vector = require('./vector');\r\n\r\n    'use strict';\r\n\r\n    var EPSILON = 1e-4;\r\n\r\n    var THREE_SQRT = Math.sqrt(3);\r\n    var ONE_THIRD = 1 / 3;\r\n\r\n    // 临时变量\r\n    var _v0 = vector.create();\r\n    var _v1 = vector.create();\r\n    var _v2 = vector.create();\r\n    // var _v3 = vector.create();\r\n\r\n    function isAroundZero(val) {\r\n        return val > -EPSILON && val < EPSILON;\r\n    }\r\n    function isNotAroundZero(val) {\r\n        return val > EPSILON || val < -EPSILON;\r\n    }\r\n    /*\r\n    function evalCubicCoeff(a, b, c, d, t) {\r\n        return ((a * t + b) * t + c) * t + d;\r\n    }\r\n    */\r\n\r\n    /** \r\n     * 计算三次贝塞尔值\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function cubicAt(p0, p1, p2, p3, t) {\r\n        var onet = 1 - t;\r\n        return onet * onet * (onet * p0 + 3 * t * p1)\r\n             + t * t * (t * p3 + 3 * onet * p2);\r\n    }\r\n\r\n    /** \r\n     * 计算三次贝塞尔导数值\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\r\n        var onet = 1 - t;\r\n        return 3 * (\r\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\r\n            + (p3 - p2) * t * t\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔方程根，使用盛金公式\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} val\r\n     * @param  {Array.<number>} roots\r\n     * @return {number} 有效根数目\r\n     */\r\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\r\n        // Evaluate roots of cubic functions\r\n        var a = p3 + 3 * (p1 - p2) - p0;\r\n        var b = 3 * (p2 - p1 * 2 + p0);\r\n        var c = 3 * (p1  - p0);\r\n        var d = p0 - val;\r\n\r\n        var A = b * b - 3 * a * c;\r\n        var B = b * c - 9 * a * d;\r\n        var C = c * c - 3 * b * d;\r\n\r\n        var n = 0;\r\n\r\n        if (isAroundZero(A) && isAroundZero(B)) {\r\n            if (isAroundZero(b)) {\r\n                roots[0] = 0;\r\n            }\r\n            else {\r\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = B * B - 4 * A * C;\r\n\r\n            if (isAroundZero(disc)) {\r\n                var K = B / A;\r\n                var t1 = -b / a + K;  // t1, a is not zero\r\n                var t2 = -K / 2;  // t2, t3\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = Math.sqrt(disc);\r\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\r\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\r\n                if (Y1 < 0) {\r\n                    Y1 = -Math.pow(-Y1, ONE_THIRD);\r\n                }\r\n                else {\r\n                    Y1 = Math.pow(Y1, ONE_THIRD);\r\n                }\r\n                if (Y2 < 0) {\r\n                    Y2 = -Math.pow(-Y2, ONE_THIRD);\r\n                }\r\n                else {\r\n                    Y2 = Math.pow(Y2, ONE_THIRD);\r\n                }\r\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n            else {\r\n                var T = (2 * A * b - 3 * a * B) / (2 * Math.sqrt(A * A * A));\r\n                var theta = Math.acos(T) / 3;\r\n                var ASqrt = Math.sqrt(A);\r\n                var tmp = Math.cos(theta);\r\n                \r\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\r\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n                if (t3 >= 0 && t3 <= 1) {\r\n                    roots[n++] = t3;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔方程极限值的位置\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {Array.<number>} extrema\r\n     * @return {number} 有效数目\r\n     */\r\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\r\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\r\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\r\n        var c = 3 * p1 - 3 * p0;\r\n\r\n        var n = 0;\r\n        if (isAroundZero(a)) {\r\n            if (isNotAroundZero(b)) {\r\n                var t1 = -c / b;\r\n                if (t1 >= 0 && t1 <=1) {\r\n                    extrema[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = b * b - 4 * a * c;\r\n            if (isAroundZero(disc)) {\r\n                extrema[0] = -b / (2 * a);\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = Math.sqrt(disc);\r\n                var t1 = (-b + discSqrt) / (2 * a);\r\n                var t2 = (-b - discSqrt) / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    extrema[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    extrema[n++] = t2;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 细分三次贝塞尔曲线\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} out\r\n     */\r\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\r\n        var p01 = (p1 - p0) * t + p0;\r\n        var p12 = (p2 - p1) * t + p1;\r\n        var p23 = (p3 - p2) * t + p2;\r\n\r\n        var p012 = (p12 - p01) * t + p01;\r\n        var p123 = (p23 - p12) * t + p12;\r\n\r\n        var p0123 = (p123 - p012) * t + p012;\r\n        // Seg0\r\n        out[0] = p0;\r\n        out[1] = p01;\r\n        out[2] = p012;\r\n        out[3] = p0123;\r\n        // Seg1\r\n        out[4] = p0123;\r\n        out[5] = p123;\r\n        out[6] = p23;\r\n        out[7] = p3;\r\n    }\r\n\r\n    /**\r\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\r\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {number} x2\r\n     * @param {number} y2\r\n     * @param {number} x3\r\n     * @param {number} y3\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {Array.<number>} [out] 投射点\r\n     * @return {number}\r\n     */\r\n    function cubicProjectPoint(\r\n        x0, y0, x1, y1, x2, y2, x3, y3,\r\n        x, y, out\r\n    ) {\r\n        // http://pomax.github.io/bezierinfo/#projections\r\n        var t;\r\n        var interval = 0.005;\r\n        var d = Infinity;\r\n\r\n        _v0[0] = x;\r\n        _v0[1] = y;\r\n\r\n        // 先粗略估计一下可能的最小距离的 t 值\r\n        // PENDING\r\n        for (var _t = 0; _t < 1; _t += 0.05) {\r\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\r\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\r\n            var d1 = vector.distSquare(_v0, _v1);\r\n            if (d1 < d) {\r\n                t = _t;\r\n                d = d1;\r\n            }\r\n        }\r\n        d = Infinity;\r\n\r\n        // At most 32 iteration\r\n        for (var i = 0; i < 32; i++) {\r\n            if (interval < EPSILON) {\r\n                break;\r\n            }\r\n            var prev = t - interval;\r\n            var next = t + interval;\r\n            // t - interval\r\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\r\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\r\n\r\n            var d1 = vector.distSquare(_v1, _v0);\r\n\r\n            if (prev >= 0 && d1 < d) {\r\n                t = prev;\r\n                d = d1;\r\n            }\r\n            else {\r\n                // t + interval\r\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\r\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\r\n                var d2 = vector.distSquare(_v2, _v0);\r\n\r\n                if (next <= 1 && d2 < d) {\r\n                    t = next;\r\n                    d = d2;\r\n                }\r\n                else {\r\n                    interval *= 0.5;\r\n                }\r\n            }\r\n        }\r\n        // t\r\n        if (out) {\r\n            out[0] = cubicAt(x0, x1, x2, x3, t);\r\n            out[1] = cubicAt(y0, y1, y2, y3, t);   \r\n        }\r\n        // console.log(interval, i);\r\n        return Math.sqrt(d);\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔值\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function quadraticAt(p0, p1, p2, t) {\r\n        var onet = 1 - t;\r\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔导数值\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function quadraticDerivativeAt(p0, p1, p2, t) {\r\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔方程根\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} roots\r\n     * @return {number} 有效根数目\r\n     */\r\n    function quadraticRootAt(p0, p1, p2, val, roots) {\r\n        var a = p0 - 2 * p1 + p2;\r\n        var b = 2 * (p1 - p0);\r\n        var c = p0 - val;\r\n\r\n        var n = 0;\r\n        if (isAroundZero(a)) {\r\n            if (isNotAroundZero(b)) {\r\n                var t1 = -c / b;\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = b * b - 4 * a * c;\r\n            if (isAroundZero(disc)) {\r\n                var t1 = -b / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = Math.sqrt(disc);\r\n                var t1 = (-b + discSqrt) / (2 * a);\r\n                var t2 = (-b - discSqrt) / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 计算二次贝塞尔方程极限值\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @return {number}\r\n     */\r\n    function quadraticExtremum(p0, p1, p2) {\r\n        var divider = p0 + p2 - 2 * p1;\r\n        if (divider === 0) {\r\n            // p1 is center of p0 and p2 \r\n            return 0.5;\r\n        }\r\n        else {\r\n            return (p0 - p1) / divider;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 细分二次贝塞尔曲线\r\n     * @memberOf module:zrender/tool/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} out\r\n     */\r\n    function quadraticSubdivide(p0, p1, p2, t, out) {\r\n        var p01 = (p1 - p0) * t + p0;\r\n        var p12 = (p2 - p1) * t + p1;\r\n        var p012 = (p12 - p01) * t + p01;\r\n\r\n        // Seg0\r\n        out[0] = p0;\r\n        out[1] = p01;\r\n        out[2] = p012;\r\n\r\n        // Seg1\r\n        out[3] = p012;\r\n        out[4] = p12;\r\n        out[5] = p2;\r\n    }\r\n\r\n    /**\r\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\r\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {number} x2\r\n     * @param {number} y2\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {Array.<number>} out 投射点\r\n     * @return {number}\r\n     */\r\n    function quadraticProjectPoint(\r\n        x0, y0, x1, y1, x2, y2,\r\n        x, y, out\r\n    ) {\r\n        // http://pomax.github.io/bezierinfo/#projections\r\n        var t;\r\n        var interval = 0.005;\r\n        var d = Infinity;\r\n\r\n        _v0[0] = x;\r\n        _v0[1] = y;\r\n\r\n        // 先粗略估计一下可能的最小距离的 t 值\r\n        // PENDING\r\n        for (var _t = 0; _t < 1; _t += 0.05) {\r\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\r\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\r\n            var d1 = vector.distSquare(_v0, _v1);\r\n            if (d1 < d) {\r\n                t = _t;\r\n                d = d1;\r\n            }\r\n        }\r\n        d = Infinity;\r\n\r\n        // At most 32 iteration\r\n        for (var i = 0; i < 32; i++) {\r\n            if (interval < EPSILON) {\r\n                break;\r\n            }\r\n            var prev = t - interval;\r\n            var next = t + interval;\r\n            // t - interval\r\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\r\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\r\n\r\n            var d1 = vector.distSquare(_v1, _v0);\r\n\r\n            if (prev >= 0 && d1 < d) {\r\n                t = prev;\r\n                d = d1;\r\n            }\r\n            else {\r\n                // t + interval\r\n                _v2[0] = quadraticAt(x0, x1, x2, next);\r\n                _v2[1] = quadraticAt(y0, y1, y2, next);\r\n                var d2 = vector.distSquare(_v2, _v0);\r\n                if (next <= 1 && d2 < d) {\r\n                    t = next;\r\n                    d = d2;\r\n                }\r\n                else {\r\n                    interval *= 0.5;\r\n                }\r\n            }\r\n        }\r\n        // t\r\n        if (out) {\r\n            out[0] = quadraticAt(x0, x1, x2, t);\r\n            out[1] = quadraticAt(y0, y1, y2, t);   \r\n        }\r\n        // console.log(interval, i);\r\n        return Math.sqrt(d);\r\n    }\r\n\r\n    return {\r\n\r\n        cubicAt: cubicAt,\r\n\r\n        cubicDerivativeAt: cubicDerivativeAt,\r\n\r\n        cubicRootAt: cubicRootAt,\r\n\r\n        cubicExtrema: cubicExtrema,\r\n\r\n        cubicSubdivide: cubicSubdivide,\r\n\r\n        cubicProjectPoint: cubicProjectPoint,\r\n\r\n        quadraticAt: quadraticAt,\r\n\r\n        quadraticDerivativeAt: quadraticDerivativeAt,\r\n\r\n        quadraticRootAt: quadraticRootAt,\r\n\r\n        quadraticExtremum: quadraticExtremum,\r\n\r\n        quadraticSubdivide: quadraticSubdivide,\r\n\r\n        quadraticProjectPoint: quadraticProjectPoint\r\n    };\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/curve.js\n// module id = 17\n// module chunks = 0","/**\r\n * 直线\r\n * @module zrender/shape/Line\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *   var Line = require('zrender/shape/Line');\r\n *   var shape = new Line({\r\n *       style: {\r\n *           xStart: 0,\r\n *           yStart: 0,\r\n *           xEnd: 100,\r\n *           yEnd: 100,\r\n *           strokeColor: '#000',\r\n *           lineWidth: 10\r\n *       }\r\n *   });\r\n *   zr.addShape(line);\r\n */\r\n/**\r\n * @typedef {Object} ILineStyle\r\n * @property {number} xStart 起点x坐标\r\n * @property {number} yStart 起点y坐标\r\n * @property {number} xEnd 终止点x坐标\r\n * @property {number} yEnd 终止点y坐标\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var dashedLineTo = require('./util/dashedLineTo');\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Line\r\n         * @param {Object} options\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         */\r\n        var Line = function (options) {\r\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\r\n            this.textPosition = 'end';\r\n            Base.call(this, options);\r\n\r\n            /**\r\n             * 直线绘制样式\r\n             * @name module:zrender/shape/Line#style\r\n             * @type {module:zrender/shape/Line~ILineStyle}\r\n             */\r\n            /**\r\n             * 直线高亮绘制样式\r\n             * @name module:zrender/shape/Line#highlightStyle\r\n             * @type {module:zrender/shape/Line~ILineStyle}\r\n             */\r\n        };\r\n\r\n        Line.prototype =  {\r\n            type: 'line',\r\n\r\n            /**\r\n             * 创建线条路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Line~ILineStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                if (!style.lineType || style.lineType == 'solid') {\r\n                    // 默认为实线\r\n                    ctx.moveTo(style.xStart, style.yStart);\r\n                    ctx.lineTo(style.xEnd, style.yEnd);\r\n                }\r\n                else if (style.lineType == 'dashed'\r\n                        || style.lineType == 'dotted'\r\n                ) {\r\n                    var dashLength = (style.lineWidth || 1)  \r\n                                     * (style.lineType == 'dashed' ? 5 : 1);\r\n                    dashedLineTo(\r\n                        ctx,\r\n                        style.xStart, style.yStart,\r\n                        style.xEnd, style.yEnd,\r\n                        dashLength\r\n                    );\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 计算返回线条的包围盒矩形\r\n             * @param {module:zrender/shape/Line~ILineStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth = style.lineWidth || 1;\r\n                style.__rect = {\r\n                    x : Math.min(style.xStart, style.xEnd) - lineWidth,\r\n                    y : Math.min(style.yStart, style.yEnd) - lineWidth,\r\n                    width : Math.abs(style.xStart - style.xEnd)\r\n                            + lineWidth,\r\n                    height : Math.abs(style.yStart - style.yEnd)\r\n                             + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Line, Base);\r\n        return Line;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Line.js\n// module id = 18\n// module chunks = 0","/**\r\n * 虚线lineTo \r\n *\r\n * author:  Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *          errorrik (errorrik@gmail.com)\r\n */\r\ndefine(\r\n    function (/* require */) {\r\n\r\n        var dashPattern = [ 5, 5 ];\r\n        /**\r\n         * 虚线lineTo \r\n         */\r\n        return function (ctx, x1, y1, x2, y2, dashLength) {\r\n            // http://msdn.microsoft.com/en-us/library/ie/dn265063(v=vs.85).aspx\r\n            if (ctx.setLineDash) {\r\n                dashPattern[0] = dashPattern[1] = dashLength;\r\n                ctx.setLineDash(dashPattern);\r\n                ctx.moveTo(x1, y1);\r\n                ctx.lineTo(x2, y2);\r\n                return;\r\n            }\r\n\r\n            dashLength = typeof dashLength != 'number'\r\n                            ? 5 \r\n                            : dashLength;\r\n\r\n            var dx = x2 - x1;\r\n            var dy = y2 - y1;\r\n            var numDashes = Math.floor(\r\n                Math.sqrt(dx * dx + dy * dy) / dashLength\r\n            );\r\n            dx = dx / numDashes;\r\n            dy = dy / numDashes;\r\n            var flag = true;\r\n            for (var i = 0; i < numDashes; ++i) {\r\n                if (flag) {\r\n                    ctx.moveTo(x1, y1);\r\n                }\r\n                else {\r\n                    ctx.lineTo(x1, y1);\r\n                }\r\n                flag = !flag;\r\n                x1 += dx;\r\n                y1 += dy;\r\n            }\r\n            ctx.lineTo(x2, y2);\r\n        };\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/util/dashedLineTo.js\n// module id = 19\n// module chunks = 0","/**\r\n * 事件扩展\r\n * @module zrender/mixin/Eventful\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\r\ndefine(function (require) {\r\n\r\n    /**\r\n     * 事件分发器\r\n     * @alias module:zrender/mixin/Eventful\r\n     * @constructor\r\n     */\r\n    var Eventful = function () {\r\n        this._handlers = {};\r\n    };\r\n    /**\r\n     * 单次触发绑定，dispatch后销毁\r\n     * \r\n     * @param {string} event 事件名\r\n     * @param {Function} handler 响应函数\r\n     * @param {Object} context\r\n     */\r\n    Eventful.prototype.one = function (event, handler, context) {\r\n        var _h = this._handlers;\r\n\r\n        if (!handler || !event) {\r\n            return this;\r\n        }\r\n\r\n        if (!_h[event]) {\r\n            _h[event] = [];\r\n        }\r\n\r\n        _h[event].push({\r\n            h : handler,\r\n            one : true,\r\n            ctx: context || this\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 绑定事件\r\n     * @param {string} event 事件名\r\n     * @param {Function} handler 事件处理函数\r\n     * @param {Object} [context]\r\n     */\r\n    Eventful.prototype.bind = function (event, handler, context) {\r\n        var _h = this._handlers;\r\n\r\n        if (!handler || !event) {\r\n            return this;\r\n        }\r\n\r\n        if (!_h[event]) {\r\n            _h[event] = [];\r\n        }\r\n\r\n        _h[event].push({\r\n            h : handler,\r\n            one : false,\r\n            ctx: context || this\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 解绑事件\r\n     * @param {string} event 事件名\r\n     * @param {Function} [handler] 事件处理函数\r\n     */\r\n    Eventful.prototype.unbind = function (event, handler) {\r\n        var _h = this._handlers;\r\n\r\n        if (!event) {\r\n            this._handlers = {};\r\n            return this;\r\n        }\r\n\r\n        if (handler) {\r\n            if (_h[event]) {\r\n                var newList = [];\r\n                for (var i = 0, l = _h[event].length; i < l; i++) {\r\n                    if (_h[event][i]['h'] != handler) {\r\n                        newList.push(_h[event][i]);\r\n                    }\r\n                }\r\n                _h[event] = newList;\r\n            }\r\n\r\n            if (_h[event] && _h[event].length === 0) {\r\n                delete _h[event];\r\n            }\r\n        }\r\n        else {\r\n            delete _h[event];\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 事件分发\r\n     * \r\n     * @param {string} type 事件类型\r\n     */\r\n    Eventful.prototype.dispatch = function (type) {\r\n        if (this._handlers[type]) {\r\n            var args = arguments;\r\n            var argLen = args.length;\r\n\r\n            if (argLen > 3) {\r\n                args = Array.prototype.slice.call(args, 1);\r\n            }\r\n            \r\n            var _h = this._handlers[type];\r\n            var len = _h.length;\r\n            for (var i = 0; i < len;) {\r\n                // Optimize advise from backbone\r\n                switch (argLen) {\r\n                    case 1:\r\n                        _h[i]['h'].call(_h[i]['ctx']);\r\n                        break;\r\n                    case 2:\r\n                        _h[i]['h'].call(_h[i]['ctx'], args[1]);\r\n                        break;\r\n                    case 3:\r\n                        _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\r\n                        break;\r\n                    default:\r\n                        // have more than 2 given arguments\r\n                        _h[i]['h'].apply(_h[i]['ctx'], args);\r\n                        break;\r\n                }\r\n                \r\n                if (_h[i]['one']) {\r\n                    _h.splice(i, 1);\r\n                    len--;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 带有context的事件分发, 最后一个参数是事件回调的context\r\n     * @param {string} type 事件类型\r\n     */\r\n    Eventful.prototype.dispatchWithContext = function (type) {\r\n        if (this._handlers[type]) {\r\n            var args = arguments;\r\n            var argLen = args.length;\r\n\r\n            if (argLen > 4) {\r\n                args = Array.prototype.slice.call(args, 1, args.length - 1);\r\n            }\r\n            var ctx = args[args.length - 1];\r\n\r\n            var _h = this._handlers[type];\r\n            var len = _h.length;\r\n            for (var i = 0; i < len;) {\r\n                // Optimize advise from backbone\r\n                switch (argLen) {\r\n                    case 1:\r\n                        _h[i]['h'].call(ctx);\r\n                        break;\r\n                    case 2:\r\n                        _h[i]['h'].call(ctx, args[1]);\r\n                        break;\r\n                    case 3:\r\n                        _h[i]['h'].call(ctx, args[1], args[2]);\r\n                        break;\r\n                    default:\r\n                        // have more than 2 given arguments\r\n                        _h[i]['h'].apply(ctx, args);\r\n                        break;\r\n                }\r\n                \r\n                if (_h[i]['one']) {\r\n                    _h.splice(i, 1);\r\n                    len--;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    // 对象可以通过 onxxxx 绑定事件\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onclick\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseover\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseout\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousemove\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousewheel\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousedown\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseup\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragstart\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragend\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragenter\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragleave\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragover\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondrop\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    \r\n    return Eventful;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/mixin/Eventful.js\n// module id = 20\n// module chunks = 0","define(\r\n    function () {\r\n\r\n        var ArrayCtor = typeof Float32Array === 'undefined'\r\n            ? Array\r\n            : Float32Array;\r\n        /**\r\n         * 3x2矩阵操作类\r\n         * @exports zrender/tool/matrix\r\n         */\r\n        var matrix = {\r\n            /**\r\n             * 创建一个单位矩阵\r\n             * @return {Float32Array|Array.<number>}\r\n             */\r\n            create : function() {\r\n                var out = new ArrayCtor(6);\r\n                matrix.identity(out);\r\n                \r\n                return out;\r\n            },\r\n            /**\r\n             * 设置矩阵为单位矩阵\r\n             * @param {Float32Array|Array.<number>} out\r\n             */\r\n            identity : function(out) {\r\n                out[0] = 1;\r\n                out[1] = 0;\r\n                out[2] = 0;\r\n                out[3] = 1;\r\n                out[4] = 0;\r\n                out[5] = 0;\r\n                return out;\r\n            },\r\n            /**\r\n             * 复制矩阵\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} m\r\n             */\r\n            copy: function(out, m) {\r\n                out[0] = m[0];\r\n                out[1] = m[1];\r\n                out[2] = m[2];\r\n                out[3] = m[3];\r\n                out[4] = m[4];\r\n                out[5] = m[5];\r\n                return out;\r\n            },\r\n            /**\r\n             * 矩阵相乘\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} m1\r\n             * @param {Float32Array|Array.<number>} m2\r\n             */\r\n            mul : function (out, m1, m2) {\r\n                out[0] = m1[0] * m2[0] + m1[2] * m2[1];\r\n                out[1] = m1[1] * m2[0] + m1[3] * m2[1];\r\n                out[2] = m1[0] * m2[2] + m1[2] * m2[3];\r\n                out[3] = m1[1] * m2[2] + m1[3] * m2[3];\r\n                out[4] = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\r\n                out[5] = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\r\n                return out;\r\n            },\r\n            /**\r\n             * 平移变换\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} a\r\n             * @param {Float32Array|Array.<number>} v\r\n             */\r\n            translate : function(out, a, v) {\r\n                out[0] = a[0];\r\n                out[1] = a[1];\r\n                out[2] = a[2];\r\n                out[3] = a[3];\r\n                out[4] = a[4] + v[0];\r\n                out[5] = a[5] + v[1];\r\n                return out;\r\n            },\r\n            /**\r\n             * 旋转变换\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} a\r\n             * @param {number} rad\r\n             */\r\n            rotate : function(out, a, rad) {\r\n                var aa = a[0];\r\n                var ac = a[2];\r\n                var atx = a[4];\r\n                var ab = a[1];\r\n                var ad = a[3];\r\n                var aty = a[5];\r\n                var st = Math.sin(rad);\r\n                var ct = Math.cos(rad);\r\n\r\n                out[0] = aa * ct + ab * st;\r\n                out[1] = -aa * st + ab * ct;\r\n                out[2] = ac * ct + ad * st;\r\n                out[3] = -ac * st + ct * ad;\r\n                out[4] = ct * atx + st * aty;\r\n                out[5] = ct * aty - st * atx;\r\n                return out;\r\n            },\r\n            /**\r\n             * 缩放变换\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} a\r\n             * @param {Float32Array|Array.<number>} v\r\n             */\r\n            scale : function(out, a, v) {\r\n                var vx = v[0];\r\n                var vy = v[1];\r\n                out[0] = a[0] * vx;\r\n                out[1] = a[1] * vy;\r\n                out[2] = a[2] * vx;\r\n                out[3] = a[3] * vy;\r\n                out[4] = a[4] * vx;\r\n                out[5] = a[5] * vy;\r\n                return out;\r\n            },\r\n            /**\r\n             * 求逆矩阵\r\n             * @param {Float32Array|Array.<number>} out\r\n             * @param {Float32Array|Array.<number>} a\r\n             */\r\n            invert : function(out, a) {\r\n            \r\n                var aa = a[0];\r\n                var ac = a[2];\r\n                var atx = a[4];\r\n                var ab = a[1];\r\n                var ad = a[3];\r\n                var aty = a[5];\r\n\r\n                var det = aa * ad - ab * ac;\r\n                if (!det) {\r\n                    return null;\r\n                }\r\n                det = 1.0 / det;\r\n\r\n                out[0] = ad * det;\r\n                out[1] = -ab * det;\r\n                out[2] = -ac * det;\r\n                out[3] = aa * det;\r\n                out[4] = (ac * aty - ad * atx) * det;\r\n                out[5] = (ab * atx - aa * aty) * det;\r\n                return out;\r\n            }\r\n        };\r\n\r\n        return matrix;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/matrix.js\n// module id = 21\n// module chunks = 0","/**\r\n * 多边形\r\n * @module zrender/shape/Polygon\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *     var Polygon = require('zrender/shape/Polygon');\r\n *     var shape = new Polygon({\r\n *         style: {\r\n *             // 100x100的正方形\r\n *             pointList: [[0, 0], [100, 0], [100, 100], [0, 100]],\r\n *             color: 'blue'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IPolygonStyle\r\n * @property {string} pointList 多边形顶点数组\r\n * @property {string} [smooth=''] 是否做平滑插值, 平滑算法可以选择 bezier, spline\r\n * @property {number} [smoothConstraint] 平滑约束\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var smoothSpline = require('./util/smoothSpline');\r\n        var smoothBezier = require('./util/smoothBezier');\r\n        var dashedLineTo = require('./util/dashedLineTo');\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Polygon\r\n         * @param {Object} options\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         */\r\n        var Polygon = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 多边形绘制样式\r\n             * @name module:zrender/shape/Polygon#style\r\n             * @type {module:zrender/shape/Polygon~IPolygonStyle}\r\n             */\r\n            /**\r\n             * 多边形高亮绘制样式\r\n             * @name module:zrender/shape/Polygon#highlightStyle\r\n             * @type {module:zrender/shape/Polygon~IPolygonStyle}\r\n             */\r\n        };\r\n\r\n        Polygon.prototype = {\r\n            type: 'polygon',\r\n\r\n            /**\r\n             * 创建多边形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Polygon~IPolygonStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                // 虽然能重用brokenLine，但底层图形基于性能考虑，重复代码减少调用吧\r\n                var pointList = style.pointList;\r\n                // 开始点和结束点重复\r\n                /*\r\n                var start = pointList[0];\r\n                var end = pointList[pointList.length-1];\r\n\r\n                if (start && end) {\r\n                    if (start[0] == end[0] &&\r\n                        start[1] == end[1]) {\r\n                        // 移除最后一个点\r\n                        pointList.pop();\r\n                    }\r\n                }\r\n                */\r\n\r\n                if (pointList.length < 2) {\r\n                    // 少于2个点就不画了~\r\n                    return;\r\n                }\r\n\r\n                if (style.smooth && style.smooth !== 'spline') {\r\n                    var controlPoints = smoothBezier(\r\n                        pointList, style.smooth, true, style.smoothConstraint\r\n                    );\r\n\r\n                    ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                    var cp1;\r\n                    var cp2;\r\n                    var p;\r\n                    var len = pointList.length;\r\n                    for (var i = 0; i < len; i++) {\r\n                        cp1 = controlPoints[i * 2];\r\n                        cp2 = controlPoints[i * 2 + 1];\r\n                        p = pointList[(i + 1) % len];\r\n                        ctx.bezierCurveTo(\r\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\r\n                        );\r\n                    }\r\n                } \r\n                else {\r\n                    if (style.smooth === 'spline') {\r\n                        pointList = smoothSpline(pointList, true);\r\n                    }\r\n\r\n                    if (!style.lineType || style.lineType == 'solid') {\r\n                        // 默认为实线\r\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                        for (var i = 1, l = pointList.length; i < l; i++) {\r\n                            ctx.lineTo(pointList[i][0], pointList[i][1]);\r\n                        }\r\n                        ctx.lineTo(pointList[0][0], pointList[0][1]);\r\n                    }\r\n                    else if (style.lineType == 'dashed'\r\n                            || style.lineType == 'dotted'\r\n                    ) {\r\n                        var dashLength = \r\n                            style._dashLength\r\n                            || (style.lineWidth || 1) \r\n                               * (style.lineType == 'dashed' ? 5 : 1);\r\n                        style._dashLength = dashLength;\r\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                        for (var i = 1, l = pointList.length; i < l; i++) {\r\n                            dashedLineTo(\r\n                                ctx,\r\n                                pointList[i - 1][0], pointList[i - 1][1],\r\n                                pointList[i][0], pointList[i][1],\r\n                                dashLength\r\n                            );\r\n                        }\r\n                        dashedLineTo(\r\n                            ctx,\r\n                            pointList[pointList.length - 1][0], \r\n                            pointList[pointList.length - 1][1],\r\n                            pointList[0][0],\r\n                            pointList[0][1],\r\n                            dashLength\r\n                        );\r\n                    }\r\n                }\r\n\r\n                ctx.closePath();\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回多边形包围盒矩阵\r\n             * @param {module:zrender/shape/Polygon~IPolygonStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var minX =  Number.MAX_VALUE;\r\n                var maxX =  Number.MIN_VALUE;\r\n                var minY = Number.MAX_VALUE;\r\n                var maxY = Number.MIN_VALUE;\r\n\r\n                var pointList = style.pointList;\r\n                for (var i = 0, l = pointList.length; i < l; i++) {\r\n                    if (pointList[i][0] < minX) {\r\n                        minX = pointList[i][0];\r\n                    }\r\n                    if (pointList[i][0] > maxX) {\r\n                        maxX = pointList[i][0];\r\n                    }\r\n                    if (pointList[i][1] < minY) {\r\n                        minY = pointList[i][1];\r\n                    }\r\n                    if (pointList[i][1] > maxY) {\r\n                        maxY = pointList[i][1];\r\n                    }\r\n                }\r\n\r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                \r\n                style.__rect = {\r\n                    x : Math.round(minX - lineWidth / 2),\r\n                    y : Math.round(minY - lineWidth / 2),\r\n                    width : maxX - minX + lineWidth,\r\n                    height : maxY - minY + lineWidth\r\n                };\r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Polygon, Base);\r\n        return Polygon;\r\n    }\r\n);\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Polygon.js\n// module id = 22\n// module chunks = 0","/**\r\n * 圆形\r\n * @module zrender/shape/Circle\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *   var Circle = require('zrender/shape/Circle');\r\n *   var shape = new Circle({\r\n *       style: {\r\n *           x: 100,\r\n *           y: 100,\r\n *           r: 40,\r\n *           brushType: 'both',\r\n *           color: 'blue',\r\n *           strokeColor: 'red',\r\n *           lineWidth: 3,\r\n *           text: 'Circle'\r\n *       }    \r\n *   });\r\n *   zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} ICircleStyle\r\n * @property {number} x 圆心x坐标\r\n * @property {number} y 圆心y坐标\r\n * @property {number} r 半径\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n        'use strict';\r\n\r\n        var Base = require('./Base');\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Circle\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Circle = function(options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 圆形绘制样式\r\n             * @name module:zrender/shape/Circle#style\r\n             * @type {module:zrender/shape/Circle~ICircleStyle}\r\n             */\r\n            /**\r\n             * 圆形高亮绘制样式\r\n             * @name module:zrender/shape/Circle#highlightStyle\r\n             * @type {module:zrender/shape/Circle~ICircleStyle}\r\n             */\r\n        };\r\n\r\n        Circle.prototype = {\r\n            type: 'circle',\r\n            /**\r\n             * 创建圆形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Circle~ICircleStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                // Better stroking in ShapeBundle\r\n                ctx.moveTo(style.x + style.r, style.y);\r\n                ctx.arc(style.x, style.y, style.r, 0, Math.PI * 2, true);\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回圆形的包围盒矩形\r\n             * @param {module:zrender/shape/Circle~ICircleStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                style.__rect = {\r\n                    x : Math.round(style.x - style.r - lineWidth / 2),\r\n                    y : Math.round(style.y - style.r - lineWidth / 2),\r\n                    width : style.r * 2 + lineWidth,\r\n                    height : style.r * 2 + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Circle, Base);\r\n        return Circle;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Circle.js\n// module id = 23\n// module chunks = 0","/*!\r\n * ZRender, a high performance canvas library.\r\n *  \r\n * Copyright (c) 2013, Baidu Inc.\r\n * All rights reserved.\r\n * \r\n * LICENSE\r\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\r\n */\r\ndefine(\r\n    function(require) {\r\n        /*\r\n         * HTML5 Canvas for Internet Explorer!\r\n         * Modern browsers like Firefox, Safari, Chrome and Opera support\r\n         * the HTML5 canvas tag to allow 2D command-based drawing.\r\n         * ExplorerCanvas brings the same functionality to Internet Explorer.\r\n         * To use, web developers only need to include a single script tag\r\n         * in their existing web pages.\r\n         *\r\n         * https://code.google.com/p/explorercanvas/\r\n         * http://explorercanvas.googlecode.com/svn/trunk/excanvas.js\r\n         */\r\n        // 核心代码会生成一个全局变量 G_vmlCanvasManager，模块改造后借用于快速判断canvas支持\r\n        require('./dep/excanvas');\r\n\r\n        var util = require('./tool/util');\r\n        var log = require('./tool/log');\r\n        var guid = require('./tool/guid');\r\n\r\n        var Handler = require('./Handler');\r\n        var Painter = require('./Painter');\r\n        var Storage = require('./Storage');\r\n        var Animation = require('./animation/Animation');\r\n\r\n        var _instances = {};    // ZRender实例map索引\r\n\r\n        /**\r\n         * @exports zrender\r\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n         *         pissang (https://www.github.com/pissang)\r\n         */\r\n        var zrender = {};\r\n        /**\r\n         * @type {string}\r\n         */\r\n        zrender.version = '2.1.1';\r\n\r\n        /**\r\n         * 创建zrender实例\r\n         *\r\n         * @param {HTMLElement} dom 绘图容器\r\n         * @return {module:zrender/ZRender} ZRender实例\r\n         */\r\n        // 不让外部直接new ZRender实例，为啥？\r\n        // 不为啥，提供全局可控同时减少全局污染和降低命名冲突的风险！\r\n        zrender.init = function(dom) {\r\n            var zr = new ZRender(guid(), dom);\r\n            _instances[zr.id] = zr;\r\n            return zr;\r\n        };\r\n\r\n        /**\r\n         * zrender实例销毁\r\n         * @param {module:zrender/ZRender} zr ZRender对象，不传则销毁全部\r\n         */\r\n        // 在_instances里的索引也会删除了\r\n        // 管生就得管死，可以通过zrender.dispose(zr)销毁指定ZRender实例\r\n        // 当然也可以直接zr.dispose()自己销毁\r\n        zrender.dispose = function (zr) {\r\n            if (zr) {\r\n                zr.dispose();\r\n            }\r\n            else {\r\n                for (var key in _instances) {\r\n                    _instances[key].dispose();\r\n                }\r\n                _instances = {};\r\n            }\r\n\r\n            return zrender;\r\n        };\r\n\r\n        /**\r\n         * 获取zrender实例\r\n         * @param {string} id ZRender对象索引\r\n         * @return {module:zrender/ZRender}\r\n         */\r\n        zrender.getInstance = function (id) {\r\n            return _instances[id];\r\n        };\r\n\r\n        /**\r\n         * 删除zrender实例，ZRender实例dispose时会调用，\r\n         * 删除后getInstance则返回undefined\r\n         * ps: 仅是删除，删除的实例不代表已经dispose了~~\r\n         *     这是一个摆脱全局zrender.dispose()自动销毁的后门，\r\n         *     take care of yourself~\r\n         *\r\n         * @param {string} id ZRender对象索引\r\n         */\r\n        zrender.delInstance = function (id) {\r\n            delete _instances[id];\r\n            return zrender;\r\n        };\r\n\r\n        function getFrameCallback(zrInstance) {\r\n            return function () {\r\n                if (zrInstance._needsRefreshNextFrame) {\r\n                    zrInstance.refresh();\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * @module zrender/ZRender\r\n         */\r\n        /**\r\n         * ZRender接口类，对外可用的所有接口都在这里\r\n         * 非get接口统一返回支持链式调用\r\n         *\r\n         * @constructor\r\n         * @alias module:zrender/ZRender\r\n         * @param {string} id 唯一标识\r\n         * @param {HTMLElement} dom dom对象，不帮你做document.getElementById\r\n         * @return {ZRender} ZRender实例\r\n         */\r\n        var ZRender = function(id, dom) {\r\n            /**\r\n             * 实例 id\r\n             * @type {string}\r\n             */\r\n            this.id = id;\r\n            this.env = require('./tool/env');\r\n\r\n            this.storage = new Storage();\r\n            this.painter = new Painter(dom, this.storage);\r\n            this.handler = new Handler(dom, this.storage, this.painter);\r\n\r\n            /**\r\n             * @type {module:zrender/animation/Animation}\r\n             */\r\n            this.animation = new Animation({\r\n                stage: {\r\n                    update: getFrameCallback(this)\r\n                }\r\n            });\r\n            this.animation.start();\r\n\r\n            var self = this;\r\n            this.painter.refreshNextFrame = function () {\r\n                self.refreshNextFrame();\r\n            };\r\n\r\n            this._needsRefreshNextFrame = false;\r\n\r\n            // 修改 storage.delFromMap, 每次删除元素之前删除动画\r\n            // FIXME 有点ugly\r\n            var self = this;\r\n            var storage = this.storage;\r\n            var oldDelFromMap = storage.delFromMap;\r\n            storage.delFromMap = function (elId) {\r\n                var el = storage.get(elId);\r\n                self.stopAnimation(el);\r\n                oldDelFromMap.call(storage, elId);\r\n            };\r\n        };\r\n\r\n        /**\r\n         * 获取实例唯一标识\r\n         * @return {string}\r\n         */\r\n        ZRender.prototype.getId = function () {\r\n            return this.id;\r\n        };\r\n\r\n        /**\r\n         * 添加图形形状到根节点\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.addElement} instead\r\n         * @param {module:zrender/shape/Base} shape 形状对象，可用属性全集，详见各shape\r\n         */\r\n        ZRender.prototype.addShape = function (shape) {\r\n            this.addElement(shape);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 添加组到根节点\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.addElement} instead\r\n         * @param {module:zrender/Group} group\r\n         */\r\n        ZRender.prototype.addGroup = function(group) {\r\n            this.addElement(group);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 从根节点删除图形形状\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.delElement} instead\r\n         * @param {string} shapeId 形状对象唯一标识\r\n         */\r\n        ZRender.prototype.delShape = function (shapeId) {\r\n            this.delElement(shapeId);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 从根节点删除组\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.delElement} instead\r\n         * @param {string} groupId\r\n         */\r\n        ZRender.prototype.delGroup = function (groupId) {\r\n            this.delElement(groupId);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 修改图形形状\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.modElement} instead\r\n         * @param {string} shapeId 形状对象唯一标识\r\n         * @param {Object} shape 形状对象\r\n         */\r\n        ZRender.prototype.modShape = function (shapeId, shape) {\r\n            this.modElement(shapeId, shape);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 修改组\r\n         * @deprecated Use {@link module:zrender/ZRender.prototype.modElement} instead\r\n         * @param {string} groupId\r\n         * @param {Object} group\r\n         */\r\n        ZRender.prototype.modGroup = function (groupId, group) {\r\n            this.modElement(groupId, group);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 添加元素\r\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\r\n         */\r\n        ZRender.prototype.addElement = function (el) {\r\n            this.storage.addRoot(el);\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 删除元素\r\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\r\n         */\r\n        ZRender.prototype.delElement = function (el) {\r\n            this.storage.delRoot(el);\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 修改元素, 主要标记图形或者组需要在下一帧刷新。\r\n         * 第二个参数为需要覆盖到元素上的参数，不建议使用。\r\n         *\r\n         * @example\r\n         *     el.style.color = 'red';\r\n         *     el.position = [10, 10];\r\n         *     zr.modElement(el);\r\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\r\n         * @param {Object} [params]\r\n         */\r\n        ZRender.prototype.modElement = function (el, params) {\r\n            this.storage.mod(el, params);\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 修改指定zlevel的绘制配置项\r\n         * \r\n         * @param {string} zLevel\r\n         * @param {Object} config 配置对象\r\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\r\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\r\n         * @param {number} [config.lastFrameAlpha=0.7]\r\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n         * @param {Array.<number>} [config.position] 层的平移\r\n         * @param {Array.<number>} [config.rotation] 层的旋转\r\n         * @param {Array.<number>} [config.scale] 层的缩放\r\n         * @param {boolean} [config.zoomable=false] 层是否支持鼠标缩放操作\r\n         * @param {boolean} [config.panable=false] 层是否支持鼠标平移操作\r\n         */\r\n        ZRender.prototype.modLayer = function (zLevel, config) {\r\n            this.painter.modLayer(zLevel, config);\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 添加额外高亮层显示，仅提供添加方法，每次刷新后高亮层图形均被清空\r\n         * \r\n         * @param {Object} shape 形状对象\r\n         */\r\n        ZRender.prototype.addHoverShape = function (shape) {\r\n            this.storage.addHover(shape);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 渲染\r\n         * \r\n         * @param {Function} callback  渲染结束后回调函数\r\n         */\r\n        ZRender.prototype.render = function (callback) {\r\n            this.painter.render(callback);\r\n            this._needsRefreshNextFrame = false;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 视图更新\r\n         * \r\n         * @param {Function} callback  视图更新后回调函数\r\n         */\r\n        ZRender.prototype.refresh = function (callback) {\r\n            this.painter.refresh(callback);\r\n            this._needsRefreshNextFrame = false;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 标记视图在浏览器下一帧需要绘制\r\n         */\r\n        ZRender.prototype.refreshNextFrame = function() {\r\n            this._needsRefreshNextFrame = true;\r\n            return this;\r\n        };\r\n        \r\n        /**\r\n         * 绘制高亮层\r\n         * @param {Function} callback  视图更新后回调函数\r\n         */\r\n        ZRender.prototype.refreshHover = function (callback) {\r\n            this.painter.refreshHover(callback);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 视图更新\r\n         * \r\n         * @param {Array.<module:zrender/shape/Base>} shapeList 需要更新的图形列表\r\n         * @param {Function} callback  视图更新后回调函数\r\n         */\r\n        ZRender.prototype.refreshShapes = function (shapeList, callback) {\r\n            this.painter.refreshShapes(shapeList, callback);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 调整视图大小\r\n         */\r\n        ZRender.prototype.resize = function() {\r\n            this.painter.resize();\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 动画\r\n         * \r\n         * @param {string|module:zrender/Group|module:zrender/shape/Base} el 动画对象\r\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\r\n         * @param {boolean} [loop] 动画是否循环\r\n         * @return {module:zrender/animation/Animation~Animator}\r\n         * @example:\r\n         *     zr.animate(circle.id, 'style', false)\r\n         *         .when(1000, {x: 10} )\r\n         *         .done(function(){ // Animation done })\r\n         *         .start()\r\n         */\r\n        ZRender.prototype.animate = function (el, path, loop) {\r\n            var self = this;\r\n\r\n            if (typeof(el) === 'string') {\r\n                el = this.storage.get(el);\r\n            }\r\n            if (el) {\r\n                var target;\r\n                if (path) {\r\n                    var pathSplitted = path.split('.');\r\n                    var prop = el;\r\n                    for (var i = 0, l = pathSplitted.length; i < l; i++) {\r\n                        if (!prop) {\r\n                            continue;\r\n                        }\r\n                        prop = prop[pathSplitted[i]];\r\n                    }\r\n                    if (prop) {\r\n                        target = prop;\r\n                    }\r\n                }\r\n                else {\r\n                    target = el;\r\n                }\r\n\r\n                if (!target) {\r\n                    log(\r\n                        'Property \"'\r\n                        + path\r\n                        + '\" is not existed in element '\r\n                        + el.id\r\n                    );\r\n                    return;\r\n                }\r\n\r\n                if (el.__animators == null) {\r\n                    // 正在进行的动画记数\r\n                    el.__animators = [];\r\n                }\r\n                var animators = el.__animators;\r\n\r\n                var animator = this.animation.animate(target, { loop: loop })\r\n                    .during(function () {\r\n                        self.modShape(el);\r\n                    })\r\n                    .done(function () {\r\n                        var idx = util.indexOf(el.__animators, animator);\r\n                        if (idx >= 0) {\r\n                            animators.splice(idx, 1);\r\n                        }\r\n                    });\r\n                animators.push(animator);\r\n\r\n                return animator;\r\n            }\r\n            else {\r\n                log('Element not existed');\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 停止动画对象的动画\r\n         * @param  {string|module:zrender/Group|module:zrender/shape/Base} el\r\n         */\r\n        ZRender.prototype.stopAnimation = function (el) {\r\n            if (el.__animators) {\r\n                var animators = el.__animators;\r\n                var len = animators.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    animators[i].stop();\r\n                }\r\n                animators.length = 0;\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 停止所有动画\r\n         */\r\n        ZRender.prototype.clearAnimation = function () {\r\n            this.animation.clear();\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * loading显示\r\n         * \r\n         * @param {Object=} loadingEffect loading效果对象\r\n         */\r\n        ZRender.prototype.showLoading = function (loadingEffect) {\r\n            this.painter.showLoading(loadingEffect);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * loading结束\r\n         */\r\n        ZRender.prototype.hideLoading = function () {\r\n            this.painter.hideLoading();\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 获取视图宽度\r\n         */\r\n        ZRender.prototype.getWidth = function() {\r\n            return this.painter.getWidth();\r\n        };\r\n\r\n        /**\r\n         * 获取视图高度\r\n         */\r\n        ZRender.prototype.getHeight = function() {\r\n            return this.painter.getHeight();\r\n        };\r\n\r\n        /**\r\n         * 图像导出\r\n         * @param {string} type\r\n         * @param {string} [backgroundColor='#fff'] 背景色\r\n         * @return {string} 图片的Base64 url\r\n         */\r\n        ZRender.prototype.toDataURL = function(type, backgroundColor, args) {\r\n            return this.painter.toDataURL(type, backgroundColor, args);\r\n        };\r\n\r\n        /**\r\n         * 将常规shape转成image shape\r\n         * @param {module:zrender/shape/Base} e\r\n         * @param {number} width\r\n         * @param {number} height\r\n         */\r\n        ZRender.prototype.shapeToImage = function(e, width, height) {\r\n            var id = guid();\r\n            return this.painter.shapeToImage(id, e, width, height);\r\n        };\r\n\r\n        /**\r\n         * 事件绑定\r\n         * \r\n         * @param {string} eventName 事件名称\r\n         * @param {Function} eventHandler 响应函数\r\n         * @param {Object} [context] 响应函数\r\n         */\r\n        ZRender.prototype.on = function(eventName, eventHandler, context) {\r\n            this.handler.on(eventName, eventHandler, context);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 事件解绑定，参数为空则解绑所有自定义事件\r\n         * \r\n         * @param {string} eventName 事件名称\r\n         * @param {Function} eventHandler 响应函数\r\n         */\r\n        ZRender.prototype.un = function(eventName, eventHandler) {\r\n            this.handler.un(eventName, eventHandler);\r\n            return this;\r\n        };\r\n        \r\n        /**\r\n         * 事件触发\r\n         * \r\n         * @param {string} eventName 事件名称，resize，hover，drag，etc\r\n         * @param {event=} event event dom事件对象\r\n         */\r\n        ZRender.prototype.trigger = function (eventName, event) {\r\n            this.handler.trigger(eventName, event);\r\n            return this;\r\n        };\r\n        \r\n\r\n        /**\r\n         * 清除当前ZRender下所有类图的数据和显示，clear后MVC和已绑定事件均还存在在，ZRender可用\r\n         */\r\n        ZRender.prototype.clear = function () {\r\n            this.storage.delRoot();\r\n            this.painter.clear();\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 释放当前ZR实例（删除包括dom，数据、显示和事件绑定），dispose后ZR不可用\r\n         */\r\n        ZRender.prototype.dispose = function () {\r\n            this.animation.stop();\r\n            \r\n            this.clear();\r\n            this.storage.dispose();\r\n            this.painter.dispose();\r\n            this.handler.dispose();\r\n\r\n            this.animation = \r\n            this.storage = \r\n            this.painter = \r\n            this.handler = null;\r\n\r\n            // 释放后告诉全局删除对自己的索引，没想到啥好方法\r\n            zrender.delInstance(this.id);\r\n        };\r\n\r\n        return zrender;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/zrender.js\n// module id = 24\n// module chunks = 0","define(\r\n    function (require) {\r\n        var config = require('../config');\r\n\r\n        /**\r\n         * @exports zrender/tool/log\r\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n         */\r\n        return function() {\r\n            if (config.debugMode === 0) {\r\n                return;\r\n            }\r\n            else if (config.debugMode == 1) {\r\n                for (var k in arguments) {\r\n                    throw new Error(arguments[k]);\r\n                }\r\n            }\r\n            else if (config.debugMode > 1) {\r\n                for (var k in arguments) {\r\n                    console.log(arguments[k]);\r\n                }\r\n            }\r\n        };\r\n\r\n        /* for debug\r\n        return function(mes) {\r\n            document.getElementById('wrong-message').innerHTML =\r\n                mes + ' ' + (new Date() - 0)\r\n                + '<br/>' \r\n                + document.getElementById('wrong-message').innerHTML;\r\n        };\r\n        */\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/log.js\n// module id = 25\n// module chunks = 0","/**\r\n * zrender: 生成唯一id\r\n *\r\n * @author errorrik (errorrik@gmail.com)\r\n */\r\n\r\ndefine(\r\n    function() {\r\n        var idStart = 0x0907;\r\n\r\n        return function () {\r\n            return 'zrender__' + (idStart++);\r\n        };\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/guid.js\n// module id = 26\n// module chunks = 0","/**\r\n * 提供变换扩展\r\n * @module zrender/mixin/Transformable\r\n * @author pissang (https://www.github.com/pissang)\r\n */\r\ndefine(function (require) {\r\n\r\n    'use strict';\r\n\r\n    var matrix = require('../tool/matrix');\r\n    var vector = require('../tool/vector');\r\n    var origin = [0, 0];\r\n\r\n    var mTranslate = matrix.translate;\r\n\r\n    var EPSILON = 5e-5;\r\n\r\n    function isAroundZero(val) {\r\n        return val > -EPSILON && val < EPSILON;\r\n    }\r\n    function isNotAroundZero(val) {\r\n        return val > EPSILON || val < -EPSILON;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/mixin/Transformable\r\n     * @constructor\r\n     */\r\n    var Transformable = function () {\r\n\r\n        if (!this.position) {\r\n            /**\r\n             * 平移\r\n             * @type {Array.<number>}\r\n             * @default [0, 0]\r\n             */\r\n            this.position = [ 0, 0 ];\r\n        }\r\n        if (typeof(this.rotation) == 'undefined') {\r\n            /**\r\n             * 旋转，可以通过数组二三项指定旋转的原点\r\n             * @type {Array.<number>}\r\n             * @default [0, 0, 0]\r\n             */\r\n            this.rotation = [ 0, 0, 0 ];\r\n        }\r\n        if (!this.scale) {\r\n            /**\r\n             * 缩放，可以通过数组三四项指定缩放的原点\r\n             * @type {Array.<number>}\r\n             * @default [1, 1, 0, 0]\r\n             */\r\n            this.scale = [ 1, 1, 0, 0 ];\r\n        }\r\n\r\n        this.needLocalTransform = false;\r\n\r\n        /**\r\n         * 是否有坐标变换\r\n         * @type {boolean}\r\n         * @readOnly\r\n         */\r\n        this.needTransform = false;\r\n    };\r\n\r\n    Transformable.prototype = {\r\n        \r\n        constructor: Transformable,\r\n\r\n        updateNeedTransform: function () {\r\n            this.needLocalTransform = isNotAroundZero(this.rotation[0])\r\n                || isNotAroundZero(this.position[0])\r\n                || isNotAroundZero(this.position[1])\r\n                || isNotAroundZero(this.scale[0] - 1)\r\n                || isNotAroundZero(this.scale[1] - 1);\r\n        },\r\n\r\n        /**\r\n         * 判断是否需要有坐标变换，更新needTransform属性。\r\n         * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\r\n         */\r\n        updateTransform: function () {\r\n            \r\n            this.updateNeedTransform();\r\n\r\n            var parentHasTransform = this.parent && this.parent.needTransform;\r\n            this.needTransform = this.needLocalTransform || parentHasTransform;\r\n            \r\n            if (!this.needTransform) {\r\n                return;\r\n            }\r\n\r\n            var m = this.transform || matrix.create();\r\n            matrix.identity(m);\r\n\r\n            if (this.needLocalTransform) {\r\n                var scale = this.scale;\r\n                if (\r\n                    isNotAroundZero(scale[0])\r\n                 || isNotAroundZero(scale[1])\r\n                ) {\r\n                    origin[0] = -scale[2] || 0;\r\n                    origin[1] = -scale[3] || 0;\r\n                    var haveOrigin = isNotAroundZero(origin[0])\r\n                                  || isNotAroundZero(origin[1]);\r\n                    if (haveOrigin) {\r\n                        mTranslate(m, m, origin);\r\n                    }\r\n                    matrix.scale(m, m, scale);\r\n                    if (haveOrigin) {\r\n                        origin[0] = -origin[0];\r\n                        origin[1] = -origin[1];\r\n                        mTranslate(m, m, origin);\r\n                    }\r\n                }\r\n\r\n                if (this.rotation instanceof Array) {\r\n                    if (this.rotation[0] !== 0) {\r\n                        origin[0] = -this.rotation[1] || 0;\r\n                        origin[1] = -this.rotation[2] || 0;\r\n                        var haveOrigin = isNotAroundZero(origin[0])\r\n                                      || isNotAroundZero(origin[1]);\r\n                        if (haveOrigin) {\r\n                            mTranslate(m, m, origin);\r\n                        }\r\n                        matrix.rotate(m, m, this.rotation[0]);\r\n                        if (haveOrigin) {\r\n                            origin[0] = -origin[0];\r\n                            origin[1] = -origin[1];\r\n                            mTranslate(m, m, origin);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.rotation !== 0) {\r\n                        matrix.rotate(m, m, this.rotation);\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1])\r\n                ) {\r\n                    mTranslate(m, m, this.position);\r\n                }\r\n            }\r\n\r\n            // 应用父节点变换\r\n            if (parentHasTransform) {\r\n                if (this.needLocalTransform) {\r\n                    matrix.mul(m, this.parent.transform, m);\r\n                }\r\n                else {\r\n                    matrix.copy(m, this.parent.transform);\r\n                }\r\n            }\r\n            // 保存这个变换矩阵\r\n            this.transform = m;\r\n\r\n            this.invTransform = this.invTransform || matrix.create();\r\n            matrix.invert(this.invTransform, m);\r\n        },\r\n        /**\r\n         * 将自己的transform应用到context上\r\n         * @param {Context2D} ctx\r\n         */\r\n        setTransform: function (ctx) {\r\n            if (this.needTransform) {\r\n                var m = this.transform;\r\n                ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            }\r\n        },\r\n        /**\r\n         * 设置图形的朝向\r\n         * @param  {Array.<number>|Float32Array} target\r\n         * @method\r\n         */\r\n        lookAt: (function () {\r\n            var v = vector.create();\r\n            return function(target) {\r\n                if (!this.transform) {\r\n                    this.transform = matrix.create();\r\n                }\r\n                var m = this.transform;\r\n                vector.sub(v, target, this.position);\r\n                if (isAroundZero(v[0]) && isAroundZero(v[1])) {\r\n                    return;\r\n                }\r\n                vector.normalize(v, v);\r\n                var scale = this.scale;\r\n                // Y Axis\r\n                // TODO Scale origin ?\r\n                m[2] = v[0] * scale[1];\r\n                m[3] = v[1] * scale[1];\r\n                // X Axis\r\n                m[0] = v[1] * scale[0];\r\n                m[1] = -v[0] * scale[0];\r\n                // Position\r\n                m[4] = this.position[0];\r\n                m[5] = this.position[1];\r\n\r\n                this.decomposeTransform();\r\n            };\r\n        })(),\r\n        /**\r\n         * 分解`transform`矩阵到`position`, `rotation`, `scale`\r\n         */\r\n        decomposeTransform: function () {\r\n            if (!this.transform) {\r\n                return;\r\n            }\r\n            var m = this.transform;\r\n            var sx = m[0] * m[0] + m[1] * m[1];\r\n            var position = this.position;\r\n            var scale = this.scale;\r\n            var rotation = this.rotation;\r\n            if (isNotAroundZero(sx - 1)) {\r\n                sx = Math.sqrt(sx);\r\n            }\r\n            var sy = m[2] * m[2] + m[3] * m[3];\r\n            if (isNotAroundZero(sy - 1)) {\r\n                sy = Math.sqrt(sy);\r\n            }\r\n            position[0] = m[4];\r\n            position[1] = m[5];\r\n            scale[0] = sx;\r\n            scale[1] = sy;\r\n            scale[2] = scale[3] = 0;\r\n            rotation[0] = Math.atan2(-m[1] / sy, m[0] / sx);\r\n            rotation[1] = rotation[2] = 0;\r\n        },\r\n\r\n        /**\r\n         * 变换坐标位置到 shape 的局部坐标空间\r\n         * @method\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @return {Array.<number>}\r\n         */\r\n        transformCoordToLocal: function (x, y) {\r\n            var v2 = [x, y];\r\n            if (this.needTransform && this.invTransform) {\r\n                vector.applyTransform(v2, v2, this.invTransform);\r\n            }\r\n            return v2;\r\n        }\r\n    };\r\n\r\n    return Transformable;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/mixin/Transformable.js\n// module id = 27\n// module chunks = 0","// 由于大多数shape默认的isCover都是相同的逻辑\r\n// 所以在echarts里临时抽象一个module，用于isCover method\r\n// TODO: 对zrender的isCover和getRect方法进行抽象，重新整理该逻辑\r\n\r\ndefine(function () {\r\n    return function (x, y) {\r\n        var originPos = this.transformCoordToLocal(x, y);\r\n        x = originPos[0];\r\n        y = originPos[1];\r\n\r\n        return this.isCoverRect(x, y);\r\n    };\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/shape/normalIsCover.js\n// module id = 28\n// module chunks = 0","/**\r\n * echart图表库\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n */\r\ndefine(function (/*require*/) {     //chart\r\n    var self = {};\r\n\r\n    var _chartLibrary = {};         //echart图表库\r\n\r\n    /**\r\n     * 定义图形实现\r\n     * @param {Object} name\r\n     * @param {Object} clazz 图形实现\r\n     */\r\n    self.define = function (name, clazz) {\r\n        _chartLibrary[name] = clazz;\r\n        return self;\r\n    };\r\n\r\n    /**\r\n     * 获取图形实现\r\n     * @param {Object} name\r\n     */\r\n    self.get = function (name) {\r\n        return _chartLibrary[name];\r\n    };\r\n\r\n    return self;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/chart.js\n// module id = 29\n// module chunks = 0","/**\r\n * 扇形\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @module zrender/shape/Sector\r\n * @example\r\n *     var Sector = require('zrender/shape/Sector');\r\n *     var shape = new Sector({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r: 60,\r\n *             r0: 30,\r\n *             startAngle: 0,\r\n *             endEngle: 180\r\n *         } \r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} ISectorStyle\r\n * @property {number} x 圆心x坐标\r\n * @property {number} y 圆心y坐标\r\n * @property {number} r 外圆半径\r\n * @property {number} [r0=0] 内圆半径，指定后将出现内弧，同时扇边长度为`r - r0`\r\n * @property {number} startAngle 起始角度，`[0, 360)`\r\n * @property {number} endAngle 结束角度，`(0, 360]`\r\n * @property {boolean} [clockWise=false] 是否是顺时针\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n\r\ndefine(\r\n    function (require) {\r\n\r\n        var math = require('../tool/math');\r\n        var computeBoundingBox = require('../tool/computeBoundingBox');\r\n        var vec2 = require('../tool/vector');\r\n        var Base = require('./Base');\r\n        \r\n        var min0 = vec2.create();\r\n        var min1 = vec2.create();\r\n        var max0 = vec2.create();\r\n        var max1 = vec2.create();\r\n        /**\r\n         * @alias module:zrender/shape/Sector\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Sector = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 扇形绘制样式\r\n             * @name module:zrender/shape/Sector#style\r\n             * @type {module:zrender/shape/Sector~ISectorStyle}\r\n             */\r\n            /**\r\n             * 扇形高亮绘制样式\r\n             * @name module:zrender/shape/Sector#highlightStyle\r\n             * @type {module:zrender/shape/Sector~ISectorStyle}\r\n             */\r\n        };\r\n\r\n        Sector.prototype = {\r\n            type: 'sector',\r\n\r\n            /**\r\n             * 创建扇形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Sector~ISectorStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                var x = style.x;   // 圆心x\r\n                var y = style.y;   // 圆心y\r\n                var r0 = style.r0 || 0;     // 形内半径[0,r)\r\n                var r = style.r;            // 扇形外半径(0,r]\r\n                var startAngle = style.startAngle;          // 起始角度[0,360)\r\n                var endAngle = style.endAngle;              // 结束角度(0,360]\r\n                var clockWise = style.clockWise || false;\r\n\r\n                startAngle = math.degreeToRadian(startAngle);\r\n                endAngle = math.degreeToRadian(endAngle);\r\n\r\n                if (!clockWise) {\r\n                    // 扇形默认是逆时针方向，Y轴向上\r\n                    // 这个跟arc的标准不一样，为了兼容echarts\r\n                    startAngle = -startAngle;\r\n                    endAngle = -endAngle;\r\n                }\r\n\r\n                var unitX = math.cos(startAngle);\r\n                var unitY = math.sin(startAngle);\r\n                ctx.moveTo(\r\n                    unitX * r0 + x,\r\n                    unitY * r0 + y\r\n                );\r\n\r\n                ctx.lineTo(\r\n                    unitX * r + x,\r\n                    unitY * r + y\r\n                );\r\n\r\n                ctx.arc(x, y, r, startAngle, endAngle, !clockWise);\r\n\r\n                ctx.lineTo(\r\n                    math.cos(endAngle) * r0 + x,\r\n                    math.sin(endAngle) * r0 + y\r\n                );\r\n\r\n                if (r0 !== 0) {\r\n                    ctx.arc(x, y, r0, endAngle, startAngle, clockWise);\r\n                }\r\n\r\n                ctx.closePath();\r\n\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 返回扇形包围盒矩形\r\n             * @param {module:zrender/shape/Sector~ISectorStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var x = style.x;   // 圆心x\r\n                var y = style.y;   // 圆心y\r\n                var r0 = style.r0 || 0;     // 形内半径[0,r)\r\n                var r = style.r;            // 扇形外半径(0,r]\r\n                var startAngle = math.degreeToRadian(style.startAngle);\r\n                var endAngle = math.degreeToRadian(style.endAngle);\r\n                var clockWise = style.clockWise;\r\n\r\n                if (!clockWise) {\r\n                    startAngle = -startAngle;\r\n                    endAngle = -endAngle;\r\n                }\r\n\r\n                if (r0 > 1) {\r\n                    computeBoundingBox.arc(\r\n                        x, y, r0, startAngle, endAngle, !clockWise, min0, max0\r\n                    );   \r\n                } else {\r\n                    min0[0] = max0[0] = x;\r\n                    min0[1] = max0[1] = y;\r\n                }\r\n                computeBoundingBox.arc(\r\n                    x, y, r, startAngle, endAngle, !clockWise, min1, max1\r\n                );\r\n\r\n                vec2.min(min0, min0, min1);\r\n                vec2.max(max0, max0, max1);\r\n                style.__rect = {\r\n                    x: min0[0],\r\n                    y: min0[1],\r\n                    width: max0[0] - min0[0],\r\n                    height: max0[1] - min0[1]\r\n                };\r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n\r\n        require('../tool/util').inherits(Sector, Base);\r\n        return Sector;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Sector.js\n// module id = 30\n// module chunks = 0","<template>\r\n  <div class=\"chart-container\">\r\n    <div\r\n      class=\"chart\"\r\n      :style=\"setChartContainer\"\r\n    >\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from \"echarts/echarts\";\r\nimport \"echarts/chart/wordCloud\";\r\nexport default {\r\n  name: 'vue-echart-wordcloud',\r\n  mounted () {\r\n    this.editChartData();\r\n    console.log(this.chartContent);\r\n    this.drawChart();\r\n  },\r\n  methods: {\r\n    drawChart () {\r\n      // 初始化echarts实例\r\n      let myChart = echarts.init(document.querySelector('.chart'));\r\n      // 配置选项\r\n      let charCloudOption = {\r\n        series: [{\r\n          // 文字云名称\r\n          name: 'word cloud',\r\n          // 图表类型\r\n          type: 'wordCloud',\r\n          // 文字云大小\r\n          size: ['100%', '100%'],\r\n          textRotation: [0, 0],\r\n          textPadding: 0,\r\n          autoSize: {\r\n            enable: true,\r\n            minSize: 12\r\n          },\r\n          data: this.chartContent\r\n        }]\r\n      };\r\n      myChart.setOption(charCloudOption);\r\n    },\r\n    createItemStyle (color) {\r\n      return {\r\n        normal: {\r\n          color: color\r\n        }\r\n      }\r\n    },\r\n    editChartData () {\r\n      this.chartContent.forEach(item => {\r\n        if (item.itemStyle) {\r\n          let color = item.itemStyle;\r\n          item.itemStyle = this.createItemStyle(color);\r\n        }\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    setChartContainer () {\r\n      return `width: ${this.chartWidth}px; height: ${this.chartHeight}px`;\r\n    }\r\n  },\r\n  props: {\r\n    // 文字云的宽度\r\n    chartWidth: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    // 文字云的高度\r\n    chartHeight: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    // 文字云的内容\r\n    chartContent: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.chart-container {\r\n  background-color: transparent;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/lib/VueEchartWordcloud.vue","// Copyright 2006 Google Inc.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\n\r\n// Known Issues:\r\n//\r\n// * Patterns only support repeat.\r\n// * Radial gradient are not implemented. The VML version of these look very\r\n//   different from the canvas one.\r\n// * Clipping paths are not implemented.\r\n// * Coordsize. The width and height attribute have higher priority than the\r\n//   width and height style values which isn't correct.\r\n// * Painting mode isn't implemented.\r\n// * Canvas width/height should is using content-box by default. IE in\r\n//   Quirks mode will draw the canvas using border-box. Either change your\r\n//   doctype to HTML5\r\n//   (http://www.whatwg.org/specs/web-apps/current-work/#the-doctype)\r\n//   or use Box Sizing Behavior from WebFX\r\n//   (http://webfx.eae.net/dhtml/boxsizing/boxsizing.html)\r\n// * Non uniform scaling does not correctly scale strokes.\r\n// * Optimize. There is always room for speed improvements.\r\n\r\n// AMD by kener.linfeng@gmail.com\r\ndefine(function(require) {\r\n\r\n// Only add this code if we do not already have a canvas implementation\r\nif (!document.createElement('canvas').getContext) {\r\n\r\n(function() {\r\n\r\n  // alias some functions to make (compiled) code shorter\r\n  var m = Math;\r\n  var mr = m.round;\r\n  var ms = m.sin;\r\n  var mc = m.cos;\r\n  var abs = m.abs;\r\n  var sqrt = m.sqrt;\r\n\r\n  // this is used for sub pixel precision\r\n  var Z = 10;\r\n  var Z2 = Z / 2;\r\n\r\n  var IE_VERSION = +navigator.userAgent.match(/MSIE ([\\d.]+)?/)[1];\r\n\r\n  /**\r\n   * This funtion is assigned to the <canvas> elements as element.getContext().\r\n   * @this {HTMLElement}\r\n   * @return {CanvasRenderingContext2D_}\r\n   */\r\n  function getContext() {\r\n    return this.context_ ||\r\n        (this.context_ = new CanvasRenderingContext2D_(this));\r\n  }\r\n\r\n  var slice = Array.prototype.slice;\r\n\r\n  /**\r\n   * Binds a function to an object. The returned function will always use the\r\n   * passed in {@code obj} as {@code this}.\r\n   *\r\n   * Example:\r\n   *\r\n   *   g = bind(f, obj, a, b)\r\n   *   g(c, d) // will do f.call(obj, a, b, c, d)\r\n   *\r\n   * @param {Function} f The function to bind the object to\r\n   * @param {Object} obj The object that should act as this when the function\r\n   *     is called\r\n   * @param {*} var_args Rest arguments that will be used as the initial\r\n   *     arguments when the function is called\r\n   * @return {Function} A new function that has bound this\r\n   */\r\n  function bind(f, obj, var_args) {\r\n    var a = slice.call(arguments, 2);\r\n    return function() {\r\n      return f.apply(obj, a.concat(slice.call(arguments)));\r\n    };\r\n  }\r\n\r\n  function encodeHtmlAttribute(s) {\r\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\r\n  }\r\n\r\n  function addNamespace(doc, prefix, urn) {\r\n    if (!doc.namespaces[prefix]) {\r\n      doc.namespaces.add(prefix, urn, '#default#VML');\r\n    }\r\n  }\r\n\r\n  function addNamespacesAndStylesheet(doc) {\r\n    addNamespace(doc, 'g_vml_', 'urn:schemas-microsoft-com:vml');\r\n    addNamespace(doc, 'g_o_', 'urn:schemas-microsoft-com:office:office');\r\n\r\n    // Setup default CSS.  Only add one style sheet per document\r\n    if (!doc.styleSheets['ex_canvas_']) {\r\n      var ss = doc.createStyleSheet();\r\n      ss.owningElement.id = 'ex_canvas_';\r\n      ss.cssText = 'canvas{display:inline-block;overflow:hidden;' +\r\n          // default size is 300x150 in Gecko and Opera\r\n          'text-align:left;width:300px;height:150px}';\r\n    }\r\n  }\r\n\r\n  // Add namespaces and stylesheet at startup.\r\n  addNamespacesAndStylesheet(document);\r\n\r\n  var G_vmlCanvasManager_ = {\r\n    init: function(opt_doc) {\r\n      var doc = opt_doc || document;\r\n      // Create a dummy element so that IE will allow canvas elements to be\r\n      // recognized.\r\n      doc.createElement('canvas');\r\n      doc.attachEvent('onreadystatechange', bind(this.init_, this, doc));\r\n    },\r\n\r\n    init_: function(doc) {\r\n      // find all canvas elements\r\n      var els = doc.getElementsByTagName('canvas');\r\n      for (var i = 0; i < els.length; i++) {\r\n        this.initElement(els[i]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Public initializes a canvas element so that it can be used as canvas\r\n     * element from now on. This is called automatically before the page is\r\n     * loaded but if you are creating elements using createElement you need to\r\n     * make sure this is called on the element.\r\n     * @param {HTMLElement} el The canvas element to initialize.\r\n     * @return {HTMLElement} the element that was created.\r\n     */\r\n    initElement: function(el) {\r\n      if (!el.getContext) {\r\n        el.getContext = getContext;\r\n\r\n        // Add namespaces and stylesheet to document of the element.\r\n        addNamespacesAndStylesheet(el.ownerDocument);\r\n\r\n        // Remove fallback content. There is no way to hide text nodes so we\r\n        // just remove all childNodes. We could hide all elements and remove\r\n        // text nodes but who really cares about the fallback content.\r\n        el.innerHTML = '';\r\n\r\n        // do not use inline function because that will leak memory\r\n        el.attachEvent('onpropertychange', onPropertyChange);\r\n        el.attachEvent('onresize', onResize);\r\n\r\n        var attrs = el.attributes;\r\n        if (attrs.width && attrs.width.specified) {\r\n          // TODO: use runtimeStyle and coordsize\r\n          // el.getContext().setWidth_(attrs.width.nodeValue);\r\n          el.style.width = attrs.width.nodeValue + 'px';\r\n        } else {\r\n          el.width = el.clientWidth;\r\n        }\r\n        if (attrs.height && attrs.height.specified) {\r\n          // TODO: use runtimeStyle and coordsize\r\n          // el.getContext().setHeight_(attrs.height.nodeValue);\r\n          el.style.height = attrs.height.nodeValue + 'px';\r\n        } else {\r\n          el.height = el.clientHeight;\r\n        }\r\n        //el.getContext().setCoordsize_()\r\n      }\r\n      return el;\r\n    }\r\n  };\r\n\r\n  function onPropertyChange(e) {\r\n    var el = e.srcElement;\r\n\r\n    switch (e.propertyName) {\r\n      case 'width':\r\n        el.getContext().clearRect();\r\n        el.style.width = el.attributes.width.nodeValue + 'px';\r\n        // In IE8 this does not trigger onresize.\r\n        el.firstChild.style.width =  el.clientWidth + 'px';\r\n        break;\r\n      case 'height':\r\n        el.getContext().clearRect();\r\n        el.style.height = el.attributes.height.nodeValue + 'px';\r\n        el.firstChild.style.height = el.clientHeight + 'px';\r\n        break;\r\n    }\r\n  }\r\n\r\n  function onResize(e) {\r\n    var el = e.srcElement;\r\n    if (el.firstChild) {\r\n      el.firstChild.style.width =  el.clientWidth + 'px';\r\n      el.firstChild.style.height = el.clientHeight + 'px';\r\n    }\r\n  }\r\n\r\n  G_vmlCanvasManager_.init();\r\n\r\n  // precompute \"00\" to \"FF\"\r\n  var decToHex = [];\r\n  for (var i = 0; i < 16; i++) {\r\n    for (var j = 0; j < 16; j++) {\r\n      decToHex[i * 16 + j] = i.toString(16) + j.toString(16);\r\n    }\r\n  }\r\n\r\n  function createMatrixIdentity() {\r\n    return [\r\n      [1, 0, 0],\r\n      [0, 1, 0],\r\n      [0, 0, 1]\r\n    ];\r\n  }\r\n\r\n  function matrixMultiply(m1, m2) {\r\n    var result = createMatrixIdentity();\r\n\r\n    for (var x = 0; x < 3; x++) {\r\n      for (var y = 0; y < 3; y++) {\r\n        var sum = 0;\r\n\r\n        for (var z = 0; z < 3; z++) {\r\n          sum += m1[x][z] * m2[z][y];\r\n        }\r\n\r\n        result[x][y] = sum;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function copyState(o1, o2) {\r\n    o2.fillStyle     = o1.fillStyle;\r\n    o2.lineCap       = o1.lineCap;\r\n    o2.lineJoin      = o1.lineJoin;\r\n    o2.lineWidth     = o1.lineWidth;\r\n    o2.miterLimit    = o1.miterLimit;\r\n    o2.shadowBlur    = o1.shadowBlur;\r\n    o2.shadowColor   = o1.shadowColor;\r\n    o2.shadowOffsetX = o1.shadowOffsetX;\r\n    o2.shadowOffsetY = o1.shadowOffsetY;\r\n    o2.strokeStyle   = o1.strokeStyle;\r\n    o2.globalAlpha   = o1.globalAlpha;\r\n    o2.font          = o1.font;\r\n    o2.textAlign     = o1.textAlign;\r\n    o2.textBaseline  = o1.textBaseline;\r\n    o2.scaleX_    = o1.scaleX_;\r\n    o2.scaleY_    = o1.scaleY_;\r\n    o2.lineScale_    = o1.lineScale_;\r\n  }\r\n\r\n  var colorData = {\r\n    aliceblue: '#F0F8FF',\r\n    antiquewhite: '#FAEBD7',\r\n    aquamarine: '#7FFFD4',\r\n    azure: '#F0FFFF',\r\n    beige: '#F5F5DC',\r\n    bisque: '#FFE4C4',\r\n    black: '#000000',\r\n    blanchedalmond: '#FFEBCD',\r\n    blueviolet: '#8A2BE2',\r\n    brown: '#A52A2A',\r\n    burlywood: '#DEB887',\r\n    cadetblue: '#5F9EA0',\r\n    chartreuse: '#7FFF00',\r\n    chocolate: '#D2691E',\r\n    coral: '#FF7F50',\r\n    cornflowerblue: '#6495ED',\r\n    cornsilk: '#FFF8DC',\r\n    crimson: '#DC143C',\r\n    cyan: '#00FFFF',\r\n    darkblue: '#00008B',\r\n    darkcyan: '#008B8B',\r\n    darkgoldenrod: '#B8860B',\r\n    darkgray: '#A9A9A9',\r\n    darkgreen: '#006400',\r\n    darkgrey: '#A9A9A9',\r\n    darkkhaki: '#BDB76B',\r\n    darkmagenta: '#8B008B',\r\n    darkolivegreen: '#556B2F',\r\n    darkorange: '#FF8C00',\r\n    darkorchid: '#9932CC',\r\n    darkred: '#8B0000',\r\n    darksalmon: '#E9967A',\r\n    darkseagreen: '#8FBC8F',\r\n    darkslateblue: '#483D8B',\r\n    darkslategray: '#2F4F4F',\r\n    darkslategrey: '#2F4F4F',\r\n    darkturquoise: '#00CED1',\r\n    darkviolet: '#9400D3',\r\n    deeppink: '#FF1493',\r\n    deepskyblue: '#00BFFF',\r\n    dimgray: '#696969',\r\n    dimgrey: '#696969',\r\n    dodgerblue: '#1E90FF',\r\n    firebrick: '#B22222',\r\n    floralwhite: '#FFFAF0',\r\n    forestgreen: '#228B22',\r\n    gainsboro: '#DCDCDC',\r\n    ghostwhite: '#F8F8FF',\r\n    gold: '#FFD700',\r\n    goldenrod: '#DAA520',\r\n    grey: '#808080',\r\n    greenyellow: '#ADFF2F',\r\n    honeydew: '#F0FFF0',\r\n    hotpink: '#FF69B4',\r\n    indianred: '#CD5C5C',\r\n    indigo: '#4B0082',\r\n    ivory: '#FFFFF0',\r\n    khaki: '#F0E68C',\r\n    lavender: '#E6E6FA',\r\n    lavenderblush: '#FFF0F5',\r\n    lawngreen: '#7CFC00',\r\n    lemonchiffon: '#FFFACD',\r\n    lightblue: '#ADD8E6',\r\n    lightcoral: '#F08080',\r\n    lightcyan: '#E0FFFF',\r\n    lightgoldenrodyellow: '#FAFAD2',\r\n    lightgreen: '#90EE90',\r\n    lightgrey: '#D3D3D3',\r\n    lightpink: '#FFB6C1',\r\n    lightsalmon: '#FFA07A',\r\n    lightseagreen: '#20B2AA',\r\n    lightskyblue: '#87CEFA',\r\n    lightslategray: '#778899',\r\n    lightslategrey: '#778899',\r\n    lightsteelblue: '#B0C4DE',\r\n    lightyellow: '#FFFFE0',\r\n    limegreen: '#32CD32',\r\n    linen: '#FAF0E6',\r\n    magenta: '#FF00FF',\r\n    mediumaquamarine: '#66CDAA',\r\n    mediumblue: '#0000CD',\r\n    mediumorchid: '#BA55D3',\r\n    mediumpurple: '#9370DB',\r\n    mediumseagreen: '#3CB371',\r\n    mediumslateblue: '#7B68EE',\r\n    mediumspringgreen: '#00FA9A',\r\n    mediumturquoise: '#48D1CC',\r\n    mediumvioletred: '#C71585',\r\n    midnightblue: '#191970',\r\n    mintcream: '#F5FFFA',\r\n    mistyrose: '#FFE4E1',\r\n    moccasin: '#FFE4B5',\r\n    navajowhite: '#FFDEAD',\r\n    oldlace: '#FDF5E6',\r\n    olivedrab: '#6B8E23',\r\n    orange: '#FFA500',\r\n    orangered: '#FF4500',\r\n    orchid: '#DA70D6',\r\n    palegoldenrod: '#EEE8AA',\r\n    palegreen: '#98FB98',\r\n    paleturquoise: '#AFEEEE',\r\n    palevioletred: '#DB7093',\r\n    papayawhip: '#FFEFD5',\r\n    peachpuff: '#FFDAB9',\r\n    peru: '#CD853F',\r\n    pink: '#FFC0CB',\r\n    plum: '#DDA0DD',\r\n    powderblue: '#B0E0E6',\r\n    rosybrown: '#BC8F8F',\r\n    royalblue: '#4169E1',\r\n    saddlebrown: '#8B4513',\r\n    salmon: '#FA8072',\r\n    sandybrown: '#F4A460',\r\n    seagreen: '#2E8B57',\r\n    seashell: '#FFF5EE',\r\n    sienna: '#A0522D',\r\n    skyblue: '#87CEEB',\r\n    slateblue: '#6A5ACD',\r\n    slategray: '#708090',\r\n    slategrey: '#708090',\r\n    snow: '#FFFAFA',\r\n    springgreen: '#00FF7F',\r\n    steelblue: '#4682B4',\r\n    tan: '#D2B48C',\r\n    thistle: '#D8BFD8',\r\n    tomato: '#FF6347',\r\n    turquoise: '#40E0D0',\r\n    violet: '#EE82EE',\r\n    wheat: '#F5DEB3',\r\n    whitesmoke: '#F5F5F5',\r\n    yellowgreen: '#9ACD32'\r\n  };\r\n\r\n\r\n  function getRgbHslContent(styleString) {\r\n    var start = styleString.indexOf('(', 3);\r\n    var end = styleString.indexOf(')', start + 1);\r\n    var parts = styleString.substring(start + 1, end).split(',');\r\n    // add alpha if needed\r\n    if (parts.length != 4 || styleString.charAt(3) != 'a') {\r\n      parts[3] = 1;\r\n    }\r\n    return parts;\r\n  }\r\n\r\n  function percent(s) {\r\n    return parseFloat(s) / 100;\r\n  }\r\n\r\n  function clamp(v, min, max) {\r\n    return Math.min(max, Math.max(min, v));\r\n  }\r\n\r\n  function hslToRgb(parts){\r\n    var r, g, b, h, s, l;\r\n    h = parseFloat(parts[0]) / 360 % 360;\r\n    if (h < 0)\r\n      h++;\r\n    s = clamp(percent(parts[1]), 0, 1);\r\n    l = clamp(percent(parts[2]), 0, 1);\r\n    if (s == 0) {\r\n      r = g = b = l; // achromatic\r\n    } else {\r\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      var p = 2 * l - q;\r\n      r = hueToRgb(p, q, h + 1 / 3);\r\n      g = hueToRgb(p, q, h);\r\n      b = hueToRgb(p, q, h - 1 / 3);\r\n    }\r\n\r\n    return '#' + decToHex[Math.floor(r * 255)] +\r\n        decToHex[Math.floor(g * 255)] +\r\n        decToHex[Math.floor(b * 255)];\r\n  }\r\n\r\n  function hueToRgb(m1, m2, h) {\r\n    if (h < 0)\r\n      h++;\r\n    if (h > 1)\r\n      h--;\r\n\r\n    if (6 * h < 1)\r\n      return m1 + (m2 - m1) * 6 * h;\r\n    else if (2 * h < 1)\r\n      return m2;\r\n    else if (3 * h < 2)\r\n      return m1 + (m2 - m1) * (2 / 3 - h) * 6;\r\n    else\r\n      return m1;\r\n  }\r\n\r\n  var processStyleCache = {};\r\n\r\n  function processStyle(styleString) {\r\n    if (styleString in processStyleCache) {\r\n      return processStyleCache[styleString];\r\n    }\r\n\r\n    var str, alpha = 1;\r\n\r\n    styleString = String(styleString);\r\n    if (styleString.charAt(0) == '#') {\r\n      str = styleString;\r\n    } else if (/^rgb/.test(styleString)) {\r\n      var parts = getRgbHslContent(styleString);\r\n      var str = '#', n;\r\n      for (var i = 0; i < 3; i++) {\r\n        if (parts[i].indexOf('%') != -1) {\r\n          n = Math.floor(percent(parts[i]) * 255);\r\n        } else {\r\n          n = +parts[i];\r\n        }\r\n        str += decToHex[clamp(n, 0, 255)];\r\n      }\r\n      alpha = +parts[3];\r\n    } else if (/^hsl/.test(styleString)) {\r\n      var parts = getRgbHslContent(styleString);\r\n      str = hslToRgb(parts);\r\n      alpha = parts[3];\r\n    } else {\r\n      str = colorData[styleString] || styleString;\r\n    }\r\n    return processStyleCache[styleString] = {color: str, alpha: alpha};\r\n  }\r\n\r\n  var DEFAULT_STYLE = {\r\n    style: 'normal',\r\n    variant: 'normal',\r\n    weight: 'normal',\r\n    size: 12,           //10\r\n    family: '微软雅黑'     //'sans-serif'\r\n  };\r\n\r\n  // Internal text style cache\r\n  var fontStyleCache = {};\r\n\r\n  function processFontStyle(styleString) {\r\n    if (fontStyleCache[styleString]) {\r\n      return fontStyleCache[styleString];\r\n    }\r\n\r\n    var el = document.createElement('div');\r\n    var style = el.style;\r\n    var fontFamily;\r\n    try {\r\n      style.font = styleString;\r\n      fontFamily = style.fontFamily.split(',')[0];\r\n    } catch (ex) {\r\n      // Ignore failures to set to invalid font.\r\n    }\r\n\r\n    return fontStyleCache[styleString] = {\r\n      style: style.fontStyle || DEFAULT_STYLE.style,\r\n      variant: style.fontVariant || DEFAULT_STYLE.variant,\r\n      weight: style.fontWeight || DEFAULT_STYLE.weight,\r\n      size: style.fontSize || DEFAULT_STYLE.size,\r\n      family: fontFamily || DEFAULT_STYLE.family\r\n    };\r\n  }\r\n\r\n  function getComputedStyle(style, element) {\r\n    var computedStyle = {};\r\n\r\n    for (var p in style) {\r\n      computedStyle[p] = style[p];\r\n    }\r\n\r\n    // Compute the size\r\n    var canvasFontSize = parseFloat(element.currentStyle.fontSize),\r\n        fontSize = parseFloat(style.size);\r\n\r\n    if (typeof style.size == 'number') {\r\n      computedStyle.size = style.size;\r\n    } else if (style.size.indexOf('px') != -1) {\r\n      computedStyle.size = fontSize;\r\n    } else if (style.size.indexOf('em') != -1) {\r\n      computedStyle.size = canvasFontSize * fontSize;\r\n    } else if(style.size.indexOf('%') != -1) {\r\n      computedStyle.size = (canvasFontSize / 100) * fontSize;\r\n    } else if (style.size.indexOf('pt') != -1) {\r\n      computedStyle.size = fontSize / .75;\r\n    } else {\r\n      computedStyle.size = canvasFontSize;\r\n    }\r\n\r\n    // Different scaling between normal text and VML text. This was found using\r\n    // trial and error to get the same size as non VML text.\r\n    //computedStyle.size *= 0.981;\r\n\r\n    return computedStyle;\r\n  }\r\n\r\n  function buildStyle(style) {\r\n    return style.style + ' ' + style.variant + ' ' + style.weight + ' ' +\r\n        style.size + \"px '\" + style.family + \"'\";\r\n  }\r\n\r\n  var lineCapMap = {\r\n    'butt': 'flat',\r\n    'round': 'round'\r\n  };\r\n\r\n  function processLineCap(lineCap) {\r\n    return lineCapMap[lineCap] || 'square';\r\n  }\r\n\r\n  /**\r\n   * This class implements CanvasRenderingContext2D interface as described by\r\n   * the WHATWG.\r\n   * @param {HTMLElement} canvasElement The element that the 2D context should\r\n   * be associated with\r\n   */\r\n  function CanvasRenderingContext2D_(canvasElement) {\r\n    this.m_ = createMatrixIdentity();\r\n\r\n    this.mStack_ = [];\r\n    this.aStack_ = [];\r\n    this.currentPath_ = [];\r\n\r\n    // Canvas context properties\r\n    this.strokeStyle = '#000';\r\n    this.fillStyle = '#000';\r\n\r\n    this.lineWidth = 1;\r\n    this.lineJoin = 'miter';\r\n    this.lineCap = 'butt';\r\n    this.miterLimit = Z * 1;\r\n    this.globalAlpha = 1;\r\n    // this.font = '10px sans-serif';\r\n    this.font = '12px 微软雅黑';        // 决定还是改这吧，影响代价最小\r\n    this.textAlign = 'left';\r\n    this.textBaseline = 'alphabetic';\r\n    this.canvas = canvasElement;\r\n\r\n    var cssText = 'width:' + canvasElement.clientWidth + 'px;height:' +\r\n        canvasElement.clientHeight + 'px;overflow:hidden;position:absolute';\r\n    var el = canvasElement.ownerDocument.createElement('div');\r\n    el.style.cssText = cssText;\r\n    canvasElement.appendChild(el);\r\n\r\n    var overlayEl = el.cloneNode(false);\r\n    // Use a non transparent background.\r\n    overlayEl.style.backgroundColor = '#fff'; //red, I don't know why, it work!\r\n    overlayEl.style.filter = 'alpha(opacity=0)';\r\n    canvasElement.appendChild(overlayEl);\r\n\r\n    this.element_ = el;\r\n    this.scaleX_ = 1;\r\n    this.scaleY_ = 1;\r\n    this.lineScale_ = 1;\r\n  }\r\n\r\n  var contextPrototype = CanvasRenderingContext2D_.prototype;\r\n  contextPrototype.clearRect = function() {\r\n    if (this.textMeasureEl_) {\r\n      this.textMeasureEl_.removeNode(true);\r\n      this.textMeasureEl_ = null;\r\n    }\r\n    this.element_.innerHTML = '';\r\n  };\r\n\r\n  contextPrototype.beginPath = function() {\r\n    // TODO: Branch current matrix so that save/restore has no effect\r\n    //       as per safari docs.\r\n    this.currentPath_ = [];\r\n  };\r\n\r\n  contextPrototype.moveTo = function(aX, aY) {\r\n    var p = getCoords(this, aX, aY);\r\n    this.currentPath_.push({type: 'moveTo', x: p.x, y: p.y});\r\n    this.currentX_ = p.x;\r\n    this.currentY_ = p.y;\r\n  };\r\n\r\n  contextPrototype.lineTo = function(aX, aY) {\r\n    var p = getCoords(this, aX, aY);\r\n    this.currentPath_.push({type: 'lineTo', x: p.x, y: p.y});\r\n\r\n    this.currentX_ = p.x;\r\n    this.currentY_ = p.y;\r\n  };\r\n\r\n  contextPrototype.bezierCurveTo = function(aCP1x, aCP1y,\r\n                                            aCP2x, aCP2y,\r\n                                            aX, aY) {\r\n    var p = getCoords(this, aX, aY);\r\n    var cp1 = getCoords(this, aCP1x, aCP1y);\r\n    var cp2 = getCoords(this, aCP2x, aCP2y);\r\n    bezierCurveTo(this, cp1, cp2, p);\r\n  };\r\n\r\n  // Helper function that takes the already fixed cordinates.\r\n  function bezierCurveTo(self, cp1, cp2, p) {\r\n    self.currentPath_.push({\r\n      type: 'bezierCurveTo',\r\n      cp1x: cp1.x,\r\n      cp1y: cp1.y,\r\n      cp2x: cp2.x,\r\n      cp2y: cp2.y,\r\n      x: p.x,\r\n      y: p.y\r\n    });\r\n    self.currentX_ = p.x;\r\n    self.currentY_ = p.y;\r\n  }\r\n\r\n  contextPrototype.quadraticCurveTo = function(aCPx, aCPy, aX, aY) {\r\n    // the following is lifted almost directly from\r\n    // http://developer.mozilla.org/en/docs/Canvas_tutorial:Drawing_shapes\r\n\r\n    var cp = getCoords(this, aCPx, aCPy);\r\n    var p = getCoords(this, aX, aY);\r\n\r\n    var cp1 = {\r\n      x: this.currentX_ + 2.0 / 3.0 * (cp.x - this.currentX_),\r\n      y: this.currentY_ + 2.0 / 3.0 * (cp.y - this.currentY_)\r\n    };\r\n    var cp2 = {\r\n      x: cp1.x + (p.x - this.currentX_) / 3.0,\r\n      y: cp1.y + (p.y - this.currentY_) / 3.0\r\n    };\r\n\r\n    bezierCurveTo(this, cp1, cp2, p);\r\n  };\r\n\r\n  contextPrototype.arc = function(aX, aY, aRadius,\r\n                                  aStartAngle, aEndAngle, aClockwise) {\r\n    aRadius *= Z;\r\n    var arcType = aClockwise ? 'at' : 'wa';\r\n\r\n    var xStart = aX + mc(aStartAngle) * aRadius - Z2;\r\n    var yStart = aY + ms(aStartAngle) * aRadius - Z2;\r\n\r\n    var xEnd = aX + mc(aEndAngle) * aRadius - Z2;\r\n    var yEnd = aY + ms(aEndAngle) * aRadius - Z2;\r\n\r\n    // IE won't render arches drawn counter clockwise if xStart == xEnd.\r\n    if (xStart == xEnd && !aClockwise) {\r\n      xStart += 0.125; // Offset xStart by 1/80 of a pixel. Use something\r\n                       // that can be represented in binary\r\n    }\r\n\r\n    var p = getCoords(this, aX, aY);\r\n    var pStart = getCoords(this, xStart, yStart);\r\n    var pEnd = getCoords(this, xEnd, yEnd);\r\n\r\n    this.currentPath_.push({type: arcType,\r\n                           x: p.x,\r\n                           y: p.y,\r\n                           radius: aRadius,\r\n                           xStart: pStart.x,\r\n                           yStart: pStart.y,\r\n                           xEnd: pEnd.x,\r\n                           yEnd: pEnd.y});\r\n\r\n  };\r\n\r\n  contextPrototype.rect = function(aX, aY, aWidth, aHeight) {\r\n    this.moveTo(aX, aY);\r\n    this.lineTo(aX + aWidth, aY);\r\n    this.lineTo(aX + aWidth, aY + aHeight);\r\n    this.lineTo(aX, aY + aHeight);\r\n    this.closePath();\r\n  };\r\n\r\n  contextPrototype.strokeRect = function(aX, aY, aWidth, aHeight) {\r\n    var oldPath = this.currentPath_;\r\n    this.beginPath();\r\n\r\n    this.moveTo(aX, aY);\r\n    this.lineTo(aX + aWidth, aY);\r\n    this.lineTo(aX + aWidth, aY + aHeight);\r\n    this.lineTo(aX, aY + aHeight);\r\n    this.closePath();\r\n    this.stroke();\r\n\r\n    this.currentPath_ = oldPath;\r\n  };\r\n\r\n  contextPrototype.fillRect = function(aX, aY, aWidth, aHeight) {\r\n    var oldPath = this.currentPath_;\r\n    this.beginPath();\r\n\r\n    this.moveTo(aX, aY);\r\n    this.lineTo(aX + aWidth, aY);\r\n    this.lineTo(aX + aWidth, aY + aHeight);\r\n    this.lineTo(aX, aY + aHeight);\r\n    this.closePath();\r\n    this.fill();\r\n\r\n    this.currentPath_ = oldPath;\r\n  };\r\n\r\n  contextPrototype.createLinearGradient = function(aX0, aY0, aX1, aY1) {\r\n    var gradient = new CanvasGradient_('gradient');\r\n    gradient.x0_ = aX0;\r\n    gradient.y0_ = aY0;\r\n    gradient.x1_ = aX1;\r\n    gradient.y1_ = aY1;\r\n    return gradient;\r\n  };\r\n\r\n  contextPrototype.createRadialGradient = function(aX0, aY0, aR0,\r\n                                                   aX1, aY1, aR1) {\r\n    var gradient = new CanvasGradient_('gradientradial');\r\n    gradient.x0_ = aX0;\r\n    gradient.y0_ = aY0;\r\n    gradient.r0_ = aR0;\r\n    gradient.x1_ = aX1;\r\n    gradient.y1_ = aY1;\r\n    gradient.r1_ = aR1;\r\n    return gradient;\r\n  };\r\n\r\n  contextPrototype.drawImage = function(image, var_args) {\r\n    var dx, dy, dw, dh, sx, sy, sw, sh;\r\n\r\n    // to find the original width we overide the width and height\r\n    var oldRuntimeWidth = image.runtimeStyle.width;\r\n    var oldRuntimeHeight = image.runtimeStyle.height;\r\n    image.runtimeStyle.width = 'auto';\r\n    image.runtimeStyle.height = 'auto';\r\n\r\n    // get the original size\r\n    var w = image.width;\r\n    var h = image.height;\r\n\r\n    // and remove overides\r\n    image.runtimeStyle.width = oldRuntimeWidth;\r\n    image.runtimeStyle.height = oldRuntimeHeight;\r\n\r\n    if (arguments.length == 3) {\r\n      dx = arguments[1];\r\n      dy = arguments[2];\r\n      sx = sy = 0;\r\n      sw = dw = w;\r\n      sh = dh = h;\r\n    } else if (arguments.length == 5) {\r\n      dx = arguments[1];\r\n      dy = arguments[2];\r\n      dw = arguments[3];\r\n      dh = arguments[4];\r\n      sx = sy = 0;\r\n      sw = w;\r\n      sh = h;\r\n    } else if (arguments.length == 9) {\r\n      sx = arguments[1];\r\n      sy = arguments[2];\r\n      sw = arguments[3];\r\n      sh = arguments[4];\r\n      dx = arguments[5];\r\n      dy = arguments[6];\r\n      dw = arguments[7];\r\n      dh = arguments[8];\r\n    } else {\r\n      throw Error('Invalid number of arguments');\r\n    }\r\n\r\n    var d = getCoords(this, dx, dy);\r\n\r\n    var w2 = sw / 2;\r\n    var h2 = sh / 2;\r\n\r\n    var vmlStr = [];\r\n\r\n    var W = 10;\r\n    var H = 10;\r\n\r\n    var scaleX = scaleY = 1;\r\n\r\n    // For some reason that I've now forgotten, using divs didn't work\r\n    vmlStr.push(' <g_vml_:group',\r\n                ' coordsize=\"', Z * W, ',', Z * H, '\"',\r\n                ' coordorigin=\"0,0\"' ,\r\n                ' style=\"width:', W, 'px;height:', H, 'px;position:absolute;');\r\n\r\n    // If filters are necessary (rotation exists), create them\r\n    // filters are bog-slow, so only create them if abbsolutely necessary\r\n    // The following check doesn't account for skews (which don't exist\r\n    // in the canvas spec (yet) anyway.\r\n\r\n    if (this.m_[0][0] != 1 || this.m_[0][1] ||\r\n        this.m_[1][1] != 1 || this.m_[1][0]) {\r\n      var filter = [];\r\n\r\n     var scaleX = this.scaleX_;\r\n     var scaleY = this.scaleY_;\r\n      // Note the 12/21 reversal\r\n      filter.push('M11=', this.m_[0][0] / scaleX, ',',\r\n                  'M12=', this.m_[1][0] / scaleY, ',',\r\n                  'M21=', this.m_[0][1] / scaleX, ',',\r\n                  'M22=', this.m_[1][1] / scaleY, ',',\r\n                  'Dx=', mr(d.x / Z), ',',\r\n                  'Dy=', mr(d.y / Z), '');\r\n\r\n      // Bounding box calculation (need to minimize displayed area so that\r\n      // filters don't waste time on unused pixels.\r\n      var max = d;\r\n      var c2 = getCoords(this, dx + dw, dy);\r\n      var c3 = getCoords(this, dx, dy + dh);\r\n      var c4 = getCoords(this, dx + dw, dy + dh);\r\n\r\n      max.x = m.max(max.x, c2.x, c3.x, c4.x);\r\n      max.y = m.max(max.y, c2.y, c3.y, c4.y);\r\n\r\n      vmlStr.push('padding:0 ', mr(max.x / Z), 'px ', mr(max.y / Z),\r\n                  'px 0;filter:progid:DXImageTransform.Microsoft.Matrix(',\r\n                  filter.join(''), \", SizingMethod='clip');\");\r\n\r\n    } else {\r\n      vmlStr.push('top:', mr(d.y / Z), 'px;left:', mr(d.x / Z), 'px;');\r\n    }\r\n\r\n    vmlStr.push(' \">');\r\n\r\n    // Draw a special cropping div if needed\r\n    if (sx || sy) {\r\n      // Apply scales to width and height\r\n      vmlStr.push('<div style=\"overflow: hidden; width:', Math.ceil((dw + sx * dw / sw) * scaleX), 'px;',\r\n                  ' height:', Math.ceil((dh + sy * dh / sh) * scaleY), 'px;',\r\n                  ' filter:progid:DxImageTransform.Microsoft.Matrix(Dx=',\r\n                  -sx * dw / sw * scaleX, ',Dy=', -sy * dh / sh * scaleY, ');\">');\r\n    }\r\n\r\n\r\n    // Apply scales to width and height\r\n    vmlStr.push('<div style=\"width:', Math.round(scaleX * w * dw / sw), 'px;',\r\n                ' height:', Math.round(scaleY * h * dh / sh), 'px;',\r\n                ' filter:');\r\n\r\n    // If there is a globalAlpha, apply it to image\r\n    if(this.globalAlpha < 1) {\r\n      vmlStr.push(' progid:DXImageTransform.Microsoft.Alpha(opacity=' + (this.globalAlpha * 100) + ')');\r\n    }\r\n\r\n    vmlStr.push(' progid:DXImageTransform.Microsoft.AlphaImageLoader(src=', image.src, ',sizingMethod=scale)\">');\r\n\r\n    // Close the crop div if necessary\r\n    if (sx || sy) vmlStr.push('</div>');\r\n\r\n    vmlStr.push('</div></div>');\r\n\r\n    this.element_.insertAdjacentHTML('BeforeEnd', vmlStr.join(''));\r\n  };\r\n\r\n  contextPrototype.stroke = function(aFill) {\r\n    var lineStr = [];\r\n    var lineOpen = false;\r\n\r\n    var W = 10;\r\n    var H = 10;\r\n\r\n    lineStr.push('<g_vml_:shape',\r\n                 ' filled=\"', !!aFill, '\"',\r\n                 ' style=\"position:absolute;width:', W, 'px;height:', H, 'px;\"',\r\n                 ' coordorigin=\"0,0\"',\r\n                 ' coordsize=\"', Z * W, ',', Z * H, '\"',\r\n                 ' stroked=\"', !aFill, '\"',\r\n                 ' path=\"');\r\n\r\n    var newSeq = false;\r\n    var min = {x: null, y: null};\r\n    var max = {x: null, y: null};\r\n\r\n    for (var i = 0; i < this.currentPath_.length; i++) {\r\n      var p = this.currentPath_[i];\r\n      var c;\r\n\r\n      switch (p.type) {\r\n        case 'moveTo':\r\n          c = p;\r\n          lineStr.push(' m ', mr(p.x), ',', mr(p.y));\r\n          break;\r\n        case 'lineTo':\r\n          lineStr.push(' l ', mr(p.x), ',', mr(p.y));\r\n          break;\r\n        case 'close':\r\n          lineStr.push(' x ');\r\n          p = null;\r\n          break;\r\n        case 'bezierCurveTo':\r\n          lineStr.push(' c ',\r\n                       mr(p.cp1x), ',', mr(p.cp1y), ',',\r\n                       mr(p.cp2x), ',', mr(p.cp2y), ',',\r\n                       mr(p.x), ',', mr(p.y));\r\n          break;\r\n        case 'at':\r\n        case 'wa':\r\n          lineStr.push(' ', p.type, ' ',\r\n                       mr(p.x - this.scaleX_ * p.radius), ',',\r\n                       mr(p.y - this.scaleY_ * p.radius), ' ',\r\n                       mr(p.x + this.scaleX_ * p.radius), ',',\r\n                       mr(p.y + this.scaleY_ * p.radius), ' ',\r\n                       mr(p.xStart), ',', mr(p.yStart), ' ',\r\n                       mr(p.xEnd), ',', mr(p.yEnd));\r\n          break;\r\n      }\r\n\r\n\r\n      // TODO: Following is broken for curves due to\r\n      //       move to proper paths.\r\n\r\n      // Figure out dimensions so we can do gradient fills\r\n      // properly\r\n      if (p) {\r\n        if (min.x == null || p.x < min.x) {\r\n          min.x = p.x;\r\n        }\r\n        if (max.x == null || p.x > max.x) {\r\n          max.x = p.x;\r\n        }\r\n        if (min.y == null || p.y < min.y) {\r\n          min.y = p.y;\r\n        }\r\n        if (max.y == null || p.y > max.y) {\r\n          max.y = p.y;\r\n        }\r\n      }\r\n    }\r\n    lineStr.push(' \">');\r\n\r\n    if (!aFill) {\r\n      appendStroke(this, lineStr);\r\n    } else {\r\n      appendFill(this, lineStr, min, max);\r\n    }\r\n\r\n    lineStr.push('</g_vml_:shape>');\r\n\r\n    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));\r\n  };\r\n\r\n  function appendStroke(ctx, lineStr) {\r\n    var a = processStyle(ctx.strokeStyle);\r\n    var color = a.color;\r\n    var opacity = a.alpha * ctx.globalAlpha;\r\n    var lineWidth = ctx.lineScale_ * ctx.lineWidth;\r\n\r\n    // VML cannot correctly render a line if the width is less than 1px.\r\n    // In that case, we dilute the color to make the line look thinner.\r\n    if (lineWidth < 1) {\r\n      opacity *= lineWidth;\r\n    }\r\n\r\n    lineStr.push(\r\n      '<g_vml_:stroke',\r\n      ' opacity=\"', opacity, '\"',\r\n      ' joinstyle=\"', ctx.lineJoin, '\"',\r\n      ' miterlimit=\"', ctx.miterLimit, '\"',\r\n      ' endcap=\"', processLineCap(ctx.lineCap), '\"',\r\n      ' weight=\"', lineWidth, 'px\"',\r\n      ' color=\"', color, '\" />'\r\n    );\r\n  }\r\n\r\n  function appendFill(ctx, lineStr, min, max) {\r\n    var fillStyle = ctx.fillStyle;\r\n    var arcScaleX = ctx.scaleX_;\r\n    var arcScaleY = ctx.scaleY_;\r\n    var width = max.x - min.x;\r\n    var height = max.y - min.y;\r\n    if (fillStyle instanceof CanvasGradient_) {\r\n      // TODO: Gradients transformed with the transformation matrix.\r\n      var angle = 0;\r\n      var focus = {x: 0, y: 0};\r\n\r\n      // additional offset\r\n      var shift = 0;\r\n      // scale factor for offset\r\n      var expansion = 1;\r\n\r\n      if (fillStyle.type_ == 'gradient') {\r\n        var x0 = fillStyle.x0_ / arcScaleX;\r\n        var y0 = fillStyle.y0_ / arcScaleY;\r\n        var x1 = fillStyle.x1_ / arcScaleX;\r\n        var y1 = fillStyle.y1_ / arcScaleY;\r\n        var p0 = getCoords(ctx, x0, y0);\r\n        var p1 = getCoords(ctx, x1, y1);\r\n        var dx = p1.x - p0.x;\r\n        var dy = p1.y - p0.y;\r\n        angle = Math.atan2(dx, dy) * 180 / Math.PI;\r\n\r\n        // The angle should be a non-negative number.\r\n        if (angle < 0) {\r\n          angle += 360;\r\n        }\r\n\r\n        // Very small angles produce an unexpected result because they are\r\n        // converted to a scientific notation string.\r\n        if (angle < 1e-6) {\r\n          angle = 0;\r\n        }\r\n      } else {\r\n        var p0 = getCoords(ctx, fillStyle.x0_, fillStyle.y0_);\r\n        focus = {\r\n          x: (p0.x - min.x) / width,\r\n          y: (p0.y - min.y) / height\r\n        };\r\n\r\n        width  /= arcScaleX * Z;\r\n        height /= arcScaleY * Z;\r\n        var dimension = m.max(width, height);\r\n        shift = 2 * fillStyle.r0_ / dimension;\r\n        expansion = 2 * fillStyle.r1_ / dimension - shift;\r\n      }\r\n\r\n      // We need to sort the color stops in ascending order by offset,\r\n      // otherwise IE won't interpret it correctly.\r\n      var stops = fillStyle.colors_;\r\n      stops.sort(function(cs1, cs2) {\r\n        return cs1.offset - cs2.offset;\r\n      });\r\n\r\n      var length = stops.length;\r\n      var color1 = stops[0].color;\r\n      var color2 = stops[length - 1].color;\r\n      var opacity1 = stops[0].alpha * ctx.globalAlpha;\r\n      var opacity2 = stops[length - 1].alpha * ctx.globalAlpha;\r\n\r\n      var colors = [];\r\n      for (var i = 0; i < length; i++) {\r\n        var stop = stops[i];\r\n        colors.push(stop.offset * expansion + shift + ' ' + stop.color);\r\n      }\r\n\r\n      // When colors attribute is used, the meanings of opacity and o:opacity2\r\n      // are reversed.\r\n      lineStr.push('<g_vml_:fill type=\"', fillStyle.type_, '\"',\r\n                   ' method=\"none\" focus=\"100%\"',\r\n                   ' color=\"', color1, '\"',\r\n                   ' color2=\"', color2, '\"',\r\n                   ' colors=\"', colors.join(','), '\"',\r\n                   ' opacity=\"', opacity2, '\"',\r\n                   ' g_o_:opacity2=\"', opacity1, '\"',\r\n                   ' angle=\"', angle, '\"',\r\n                   ' focusposition=\"', focus.x, ',', focus.y, '\" />');\r\n    } else if (fillStyle instanceof CanvasPattern_) {\r\n      if (width && height) {\r\n        var deltaLeft = -min.x;\r\n        var deltaTop = -min.y;\r\n        lineStr.push('<g_vml_:fill',\r\n                     ' position=\"',\r\n                     deltaLeft / width * arcScaleX * arcScaleX, ',',\r\n                     deltaTop / height * arcScaleY * arcScaleY, '\"',\r\n                     ' type=\"tile\"',\r\n                     // TODO: Figure out the correct size to fit the scale.\r\n                     //' size=\"', w, 'px ', h, 'px\"',\r\n                     ' src=\"', fillStyle.src_, '\" />');\r\n       }\r\n    } else {\r\n      var a = processStyle(ctx.fillStyle);\r\n      var color = a.color;\r\n      var opacity = a.alpha * ctx.globalAlpha;\r\n      lineStr.push('<g_vml_:fill color=\"', color, '\" opacity=\"', opacity,\r\n                   '\" />');\r\n    }\r\n  }\r\n\r\n  contextPrototype.fill = function() {\r\n    this.stroke(true);\r\n  };\r\n\r\n  contextPrototype.closePath = function() {\r\n    this.currentPath_.push({type: 'close'});\r\n  };\r\n\r\n  function getCoords(ctx, aX, aY) {\r\n    var m = ctx.m_;\r\n    return {\r\n      x: Z * (aX * m[0][0] + aY * m[1][0] + m[2][0]) - Z2,\r\n      y: Z * (aX * m[0][1] + aY * m[1][1] + m[2][1]) - Z2\r\n    };\r\n  };\r\n\r\n  contextPrototype.save = function() {\r\n    var o = {};\r\n    copyState(this, o);\r\n    this.aStack_.push(o);\r\n    this.mStack_.push(this.m_);\r\n    this.m_ = matrixMultiply(createMatrixIdentity(), this.m_);\r\n  };\r\n\r\n  contextPrototype.restore = function() {\r\n    if (this.aStack_.length) {\r\n      copyState(this.aStack_.pop(), this);\r\n      this.m_ = this.mStack_.pop();\r\n    }\r\n  };\r\n\r\n  function matrixIsFinite(m) {\r\n    return isFinite(m[0][0]) && isFinite(m[0][1]) &&\r\n        isFinite(m[1][0]) && isFinite(m[1][1]) &&\r\n        isFinite(m[2][0]) && isFinite(m[2][1]);\r\n  }\r\n\r\n  function setM(ctx, m, updateLineScale) {\r\n    if (!matrixIsFinite(m)) {\r\n      return;\r\n    }\r\n    ctx.m_ = m;\r\n\r\n    ctx.scaleX_ = Math.sqrt(m[0][0] * m[0][0] + m[0][1] * m[0][1]);\r\n    ctx.scaleY_ = Math.sqrt(m[1][0] * m[1][0] + m[1][1] * m[1][1]);\r\n\r\n    if (updateLineScale) {\r\n      // Get the line scale.\r\n      // Determinant of this.m_ means how much the area is enlarged by the\r\n      // transformation. So its square root can be used as a scale factor\r\n      // for width.\r\n      var det = m[0][0] * m[1][1] - m[0][1] * m[1][0];\r\n      ctx.lineScale_ = sqrt(abs(det));\r\n    }\r\n  }\r\n\r\n  contextPrototype.translate = function(aX, aY) {\r\n    var m1 = [\r\n      [1,  0,  0],\r\n      [0,  1,  0],\r\n      [aX, aY, 1]\r\n    ];\r\n\r\n    setM(this, matrixMultiply(m1, this.m_), false);\r\n  };\r\n\r\n  contextPrototype.rotate = function(aRot) {\r\n    var c = mc(aRot);\r\n    var s = ms(aRot);\r\n\r\n    var m1 = [\r\n      [c,  s, 0],\r\n      [-s, c, 0],\r\n      [0,  0, 1]\r\n    ];\r\n\r\n    setM(this, matrixMultiply(m1, this.m_), false);\r\n  };\r\n\r\n  contextPrototype.scale = function(aX, aY) {\r\n    var m1 = [\r\n      [aX, 0,  0],\r\n      [0,  aY, 0],\r\n      [0,  0,  1]\r\n    ];\r\n\r\n    setM(this, matrixMultiply(m1, this.m_), true);\r\n  };\r\n\r\n  contextPrototype.transform = function(m11, m12, m21, m22, dx, dy) {\r\n    var m1 = [\r\n      [m11, m12, 0],\r\n      [m21, m22, 0],\r\n      [dx,  dy,  1]\r\n    ];\r\n\r\n    setM(this, matrixMultiply(m1, this.m_), true);\r\n\r\n  };\r\n\r\n  contextPrototype.setTransform = function(m11, m12, m21, m22, dx, dy) {\r\n    var m = [\r\n      [m11, m12, 0],\r\n      [m21, m22, 0],\r\n      [dx,  dy,  1]\r\n    ];\r\n\r\n    setM(this, m, true);\r\n  };\r\n\r\n  /**\r\n   * The text drawing function.\r\n   * The maxWidth argument isn't taken in account, since no browser supports\r\n   * it yet.\r\n   */\r\n  contextPrototype.drawText_ = function(text, x, y, maxWidth, stroke) {\r\n    var m = this.m_,\r\n        delta = 1000,\r\n        left = 0,\r\n        right = delta,\r\n        offset = {x: 0, y: 0},\r\n        lineStr = [];\r\n\r\n    var fontStyle = getComputedStyle(processFontStyle(this.font),\r\n                                     this.element_);\r\n\r\n    var fontStyleString = buildStyle(fontStyle);\r\n\r\n    var elementStyle = this.element_.currentStyle;\r\n    var textAlign = this.textAlign.toLowerCase();\r\n    switch (textAlign) {\r\n      case 'left':\r\n      case 'center':\r\n      case 'right':\r\n        break;\r\n      case 'end':\r\n        textAlign = elementStyle.direction == 'ltr' ? 'right' : 'left';\r\n        break;\r\n      case 'start':\r\n        textAlign = elementStyle.direction == 'rtl' ? 'right' : 'left';\r\n        break;\r\n      default:\r\n        textAlign = 'left';\r\n    }\r\n\r\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\r\n    switch (this.textBaseline) {\r\n      case 'hanging':\r\n      case 'top':\r\n        offset.y = fontStyle.size / 1.75;\r\n        break;\r\n      case 'middle':\r\n        break;\r\n      default:\r\n      case null:\r\n      case 'alphabetic':\r\n      case 'ideographic':\r\n      case 'bottom':\r\n        offset.y = -fontStyle.size / 2.25;\r\n        break;\r\n    }\r\n\r\n    switch(textAlign) {\r\n      case 'right':\r\n        left = delta;\r\n        right = 0.05;\r\n        break;\r\n      case 'center':\r\n        left = right = delta / 2;\r\n        break;\r\n    }\r\n\r\n    var d = getCoords(this, x + offset.x, y + offset.y);\r\n\r\n    lineStr.push('<g_vml_:line from=\"', -left ,' 0\" to=\"', right ,' 0.05\" ',\r\n                 ' coordsize=\"100 100\" coordorigin=\"0 0\"',\r\n                 ' filled=\"', !stroke, '\" stroked=\"', !!stroke,\r\n                 '\" style=\"position:absolute;width:1px;height:1px;\">');\r\n\r\n    if (stroke) {\r\n      appendStroke(this, lineStr);\r\n    } else {\r\n      // TODO: Fix the min and max params.\r\n      appendFill(this, lineStr, {x: -left, y: 0},\r\n                 {x: right, y: fontStyle.size});\r\n    }\r\n\r\n    var skewM = m[0][0].toFixed(3) + ',' + m[1][0].toFixed(3) + ',' +\r\n                m[0][1].toFixed(3) + ',' + m[1][1].toFixed(3) + ',0,0';\r\n\r\n    var skewOffset = mr(d.x / Z) + ',' + mr(d.y / Z);\r\n\r\n    lineStr.push('<g_vml_:skew on=\"t\" matrix=\"', skewM ,'\" ',\r\n                 ' offset=\"', skewOffset, '\" origin=\"', left ,' 0\" />',\r\n                 '<g_vml_:path textpathok=\"true\" />',\r\n                 '<g_vml_:textpath on=\"true\" string=\"',\r\n                 encodeHtmlAttribute(text),\r\n                 '\" style=\"v-text-align:', textAlign,\r\n                 ';font:', encodeHtmlAttribute(fontStyleString),\r\n                 '\" /></g_vml_:line>');\r\n\r\n    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));\r\n  };\r\n\r\n  contextPrototype.fillText = function(text, x, y, maxWidth) {\r\n    this.drawText_(text, x, y, maxWidth, false);\r\n  };\r\n\r\n  contextPrototype.strokeText = function(text, x, y, maxWidth) {\r\n    this.drawText_(text, x, y, maxWidth, true);\r\n  };\r\n\r\n  contextPrototype.measureText = function(text) {\r\n    if (!this.textMeasureEl_) {\r\n      var s = '<span style=\"position:absolute;' +\r\n          'top:-20000px;left:0;padding:0;margin:0;border:none;' +\r\n          'white-space:pre;\"></span>';\r\n      this.element_.insertAdjacentHTML('beforeEnd', s);\r\n      this.textMeasureEl_ = this.element_.lastChild;\r\n    }\r\n    var doc = this.element_.ownerDocument;\r\n    this.textMeasureEl_.innerHTML = '';\r\n    try {\r\n        this.textMeasureEl_.style.font = this.font;\r\n    } catch (ex) {\r\n        // Ignore failures to set to invalid font.\r\n    }\r\n\r\n    // Don't use innerHTML or innerText because they allow markup/whitespace.\r\n    this.textMeasureEl_.appendChild(doc.createTextNode(text));\r\n    return {width: this.textMeasureEl_.offsetWidth};\r\n  };\r\n\r\n  /******** STUBS ********/\r\n  contextPrototype.clip = function() {\r\n    // TODO: Implement\r\n  };\r\n\r\n  contextPrototype.arcTo = function() {\r\n    // TODO: Implement\r\n  };\r\n\r\n  contextPrototype.createPattern = function(image, repetition) {\r\n    return new CanvasPattern_(image, repetition);\r\n  };\r\n\r\n  // Gradient / Pattern Stubs\r\n  function CanvasGradient_(aType) {\r\n    this.type_ = aType;\r\n    this.x0_ = 0;\r\n    this.y0_ = 0;\r\n    this.r0_ = 0;\r\n    this.x1_ = 0;\r\n    this.y1_ = 0;\r\n    this.r1_ = 0;\r\n    this.colors_ = [];\r\n  }\r\n\r\n  CanvasGradient_.prototype.addColorStop = function(aOffset, aColor) {\r\n    aColor = processStyle(aColor);\r\n    this.colors_.push({offset: aOffset,\r\n                       color: aColor.color,\r\n                       alpha: aColor.alpha});\r\n  };\r\n\r\n  function CanvasPattern_(image, repetition) {\r\n    assertImageIsValid(image);\r\n    switch (repetition) {\r\n      case 'repeat':\r\n      case null:\r\n      case '':\r\n        this.repetition_ = 'repeat';\r\n        break\r\n      case 'repeat-x':\r\n      case 'repeat-y':\r\n      case 'no-repeat':\r\n        this.repetition_ = repetition;\r\n        break;\r\n      default:\r\n        throwException('SYNTAX_ERR');\r\n    }\r\n\r\n    this.src_ = image.src;\r\n    this.width_ = image.width;\r\n    this.height_ = image.height;\r\n  }\r\n\r\n  function throwException(s) {\r\n    throw new DOMException_(s);\r\n  }\r\n\r\n  function assertImageIsValid(img) {\r\n    if (!img || img.nodeType != 1 || img.tagName != 'IMG') {\r\n      throwException('TYPE_MISMATCH_ERR');\r\n    }\r\n    if (img.readyState != 'complete') {\r\n      throwException('INVALID_STATE_ERR');\r\n    }\r\n  }\r\n\r\n  function DOMException_(s) {\r\n    this.code = this[s];\r\n    this.message = s +': DOM Exception ' + this.code;\r\n  }\r\n  var p = DOMException_.prototype = new Error;\r\n  p.INDEX_SIZE_ERR = 1;\r\n  p.DOMSTRING_SIZE_ERR = 2;\r\n  p.HIERARCHY_REQUEST_ERR = 3;\r\n  p.WRONG_DOCUMENT_ERR = 4;\r\n  p.INVALID_CHARACTER_ERR = 5;\r\n  p.NO_DATA_ALLOWED_ERR = 6;\r\n  p.NO_MODIFICATION_ALLOWED_ERR = 7;\r\n  p.NOT_FOUND_ERR = 8;\r\n  p.NOT_SUPPORTED_ERR = 9;\r\n  p.INUSE_ATTRIBUTE_ERR = 10;\r\n  p.INVALID_STATE_ERR = 11;\r\n  p.SYNTAX_ERR = 12;\r\n  p.INVALID_MODIFICATION_ERR = 13;\r\n  p.NAMESPACE_ERR = 14;\r\n  p.INVALID_ACCESS_ERR = 15;\r\n  p.VALIDATION_ERR = 16;\r\n  p.TYPE_MISMATCH_ERR = 17;\r\n\r\n  // set up externs\r\n  G_vmlCanvasManager = G_vmlCanvasManager_;\r\n  CanvasRenderingContext2D = CanvasRenderingContext2D_;\r\n  CanvasGradient = CanvasGradient_;\r\n  CanvasPattern = CanvasPattern_;\r\n  DOMException = DOMException_;\r\n})();\r\n\r\n} // if\r\nelse { // make the canvas test simple by kener.linfeng@gmail.com\r\n    G_vmlCanvasManager = void 0;\r\n}\r\nreturn G_vmlCanvasManager;\r\n}); // define\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/dep/excanvas.js\n// module id = 32\n// module chunks = 0","/**\r\n * echarts图表基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    // 图形依赖\r\n    var ImageShape = require('zrenderjs/shape/Image');\r\n    var IconShape = require('../util/shape/Icon');\r\n    var MarkLineShape = require('../util/shape/MarkLine');\r\n    var SymbolShape = require('../util/shape/Symbol');\r\n    var PolylineShape = require('zrenderjs/shape/Polyline');\r\n    var ShapeBundle = require('zrenderjs/shape/ShapeBundle');\r\n    \r\n    var ecConfig = require('../config');\r\n    var ecData = require('../util/ecData');\r\n    var ecAnimation = require('../util/ecAnimation');\r\n    var ecEffect = require('../util/ecEffect');\r\n    var accMath = require('../util/accMath');\r\n    var ComponentBase = require('../component/base');\r\n    var EdgeBundling = require('../layout/EdgeBundling');\r\n\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrArea = require('zrenderjs/tool/area');\r\n\r\n    // Some utility functions\r\n    function isCoordAvailable(coord) {\r\n        return coord.x != null && coord.y != null;\r\n    }\r\n    \r\n    function Base(ecTheme, messageCenter, zr, option, myChart) {\r\n\r\n        ComponentBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        var self = this;\r\n        this.selectedMap = {};\r\n        this.lastShapeList = [];\r\n        this.shapeHandler = {\r\n            onclick: function () {\r\n                self.isClick = true;\r\n            },\r\n            \r\n            ondragover: function (param) {\r\n                // 返回触发可计算特性的图形提示\r\n                var calculableShape = param.target;\r\n                calculableShape.highlightStyle = calculableShape.highlightStyle || {};\r\n                \r\n                // 备份特出特性\r\n                var highlightStyle = calculableShape.highlightStyle;\r\n                var brushType = highlightStyle.brushTyep;\r\n                var strokeColor = highlightStyle.strokeColor;\r\n                var lineWidth = highlightStyle.lineWidth;\r\n                \r\n                highlightStyle.brushType = 'stroke';\r\n                highlightStyle.strokeColor = self.ecTheme.calculableColor\r\n                                             || ecConfig.calculableColor;\r\n                highlightStyle.lineWidth = calculableShape.type === 'icon' ? 30 : 10;\r\n\r\n                self.zr.addHoverShape(calculableShape);\r\n                \r\n                setTimeout(function (){\r\n                    // 复位\r\n                    if (highlightStyle) {\r\n                        highlightStyle.brushType = brushType;\r\n                        highlightStyle.strokeColor = strokeColor;\r\n                        highlightStyle.lineWidth = lineWidth;\r\n                    }\r\n                },20);\r\n            },\r\n            \r\n            ondrop: function (param) {\r\n                // 排除一些非数据的拖拽进入\r\n                if (ecData.get(param.dragged, 'data') != null) {\r\n                    self.isDrop = true;\r\n                }\r\n            },\r\n            \r\n            ondragend: function () {\r\n                self.isDragend = true;\r\n            }\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * 基类方法\r\n     */\r\n    Base.prototype = {\r\n        /**\r\n         * 图形拖拽特性 \r\n         */\r\n        setCalculable: function (shape) {\r\n            shape.dragEnableTime = this.ecTheme.DRAG_ENABLE_TIME || ecConfig.DRAG_ENABLE_TIME;\r\n            shape.ondragover = this.shapeHandler.ondragover;\r\n            shape.ondragend = this.shapeHandler.ondragend;\r\n            shape.ondrop = this.shapeHandler.ondrop;\r\n            return shape;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽进来\r\n         */\r\n        ondrop: function (param, status) {\r\n            if (!this.isDrop || !param.target || status.dragIn) {\r\n                // 没有在当前实例上发生拖拽行为或者已经被认领了则直接返回\r\n                return;\r\n            }\r\n            var target = param.target;      // 拖拽安放目标\r\n            var dragged = param.dragged;    // 当前被拖拽的图形对象\r\n\r\n            var seriesIndex = ecData.get(target, 'seriesIndex');\r\n            var dataIndex = ecData.get(target, 'dataIndex');\r\n\r\n            var series = this.series;\r\n            var data;\r\n            var legend = this.component.legend;\r\n            if (dataIndex === -1) {\r\n                // 落到calculableCase上，数据被拖拽进某个饼图|雷达|漏斗，增加数据\r\n                if (ecData.get(dragged, 'seriesIndex') == seriesIndex) {\r\n                    // 自己拖拽到自己\r\n                    status.dragOut = status.dragIn = status.needRefresh = true;\r\n                    this.isDrop = false;\r\n                    return;\r\n                }\r\n                \r\n                data = {\r\n                    value: ecData.get(dragged, 'value'),\r\n                    name: ecData.get(dragged, 'name')\r\n                };\r\n\r\n                // 修饼图数值不为负值\r\n                if (this.type === ecConfig.CHART_TYPE_PIE && data.value < 0) {\r\n                    data.value = 0;\r\n                }\r\n\r\n                var hasFind = false;\r\n                var sData = series[seriesIndex].data;\r\n                for (var i = 0, l = sData.length; i < l; i++) {\r\n                    if (sData[i].name === data.name && sData[i].value === '-') {\r\n                        series[seriesIndex].data[i].value = data.value;\r\n                        hasFind = true;\r\n                    }\r\n                }\r\n                !hasFind && series[seriesIndex].data.push(data);\r\n\r\n                legend && legend.add(\r\n                    data.name,\r\n                    dragged.style.color || dragged.style.strokeColor\r\n                );\r\n            }\r\n            else {\r\n                // 落到数据item上，数据被拖拽到某个数据项上，数据修改\r\n                data = series[seriesIndex].data[dataIndex] || '-';\r\n                if (data.value != null) {\r\n                    if (data.value != '-') {\r\n                        series[seriesIndex].data[dataIndex].value = \r\n                            accMath.accAdd(\r\n                                series[seriesIndex].data[dataIndex].value,\r\n                                ecData.get(dragged, 'value')\r\n                            );\r\n                    }\r\n                    else {\r\n                        series[seriesIndex].data[dataIndex].value =\r\n                            ecData.get(dragged, 'value');\r\n                    }\r\n                    \r\n                    if (this.type === ecConfig.CHART_TYPE_FUNNEL\r\n                        || this.type === ecConfig.CHART_TYPE_PIE\r\n                    ) {\r\n                        legend && legend.getRelatedAmount(data.name) === 1 \r\n                               && this.component.legend.del(data.name);\r\n                        data.name += this.option.nameConnector + ecData.get(dragged, 'name');\r\n                        legend && legend.add(\r\n                            data.name,\r\n                            dragged.style.color || dragged.style.strokeColor\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    if (data != '-') {\r\n                        series[seriesIndex].data[dataIndex] = \r\n                            accMath.accAdd(\r\n                                series[seriesIndex].data[dataIndex],\r\n                                ecData.get(dragged, 'value')\r\n                            );\r\n                    }\r\n                    else {\r\n                        series[seriesIndex].data[dataIndex] =\r\n                            ecData.get(dragged, 'value');\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 别status = {}赋值啊！！\r\n            status.dragIn = status.dragIn || true;\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDrop = false;\r\n\r\n            var self = this;\r\n            setTimeout(function(){\r\n                self.zr.trigger('mousemove', param.event);\r\n            }, 300);\r\n            \r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽出去\r\n         */\r\n        ondragend: function (param, status) {\r\n            if (!this.isDragend || !param.target || status.dragOut) {\r\n                // 没有在当前实例上发生拖拽行为或者已经被认领了则直接返回\r\n                return;\r\n            }\r\n            var target = param.target;      // 被拖拽图形元素\r\n\r\n            var seriesIndex = ecData.get(target, 'seriesIndex');\r\n            var dataIndex = ecData.get(target, 'dataIndex');\r\n\r\n            var series = this.series;\r\n\r\n            // 删除被拖拽走的数据\r\n            if (series[seriesIndex].data[dataIndex].value != null) {\r\n                series[seriesIndex].data[dataIndex].value = '-';\r\n                // 清理可能有且唯一的legend data\r\n                var name = series[seriesIndex].data[dataIndex].name;\r\n                var legend = this.component.legend;\r\n                if (legend && legend.getRelatedAmount(name) === 0) {\r\n                    legend.del(name);\r\n                }\r\n            }\r\n            else {\r\n                series[seriesIndex].data[dataIndex] = '-';\r\n            }\r\n            \r\n            // 别status = {}赋值啊！！\r\n            status.dragOut = true;\r\n            status.needRefresh = true;\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 图例选择\r\n         */\r\n        onlegendSelected: function (param, status) {\r\n            var legendSelected = param.selected;\r\n            for (var itemName in this.selectedMap) {\r\n                if (this.selectedMap[itemName] != legendSelected[itemName]) {\r\n                    // 有一项不一致都需要重绘\r\n                    status.needRefresh = true;\r\n                }\r\n                this.selectedMap[itemName] = legendSelected[itemName];\r\n            }\r\n            return;\r\n        },\r\n        \r\n        /**\r\n         * 折线图、柱形图公用方法\r\n         */\r\n        _buildPosition: function() {\r\n            this._symbol = this.option.symbolList;\r\n            this._sIndex2ShapeMap = {};  // series拐点图形类型，seriesIndex索引到shape type\r\n            this._sIndex2ColorMap = {};  // series默认颜色索引，seriesIndex索引到color\r\n\r\n            this.selectedMap = {};\r\n            this.xMarkMap = {};\r\n            \r\n            var series = this.series;\r\n            // 水平垂直双向series索引 ，position索引到seriesIndex\r\n            var _position2sIndexMap = {\r\n                top: [],\r\n                bottom: [],\r\n                left: [],\r\n                right: [],\r\n                other: []\r\n            };\r\n            var xAxisIndex;\r\n            var yAxisIndex;\r\n            var xAxis;\r\n            var yAxis;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].type === this.type) {\r\n                    series[i] = this.reformOption(series[i]);\r\n                    this.legendHoverLink = series[i].legendHoverLink || this.legendHoverLink;\r\n                    xAxisIndex = series[i].xAxisIndex;\r\n                    yAxisIndex = series[i].yAxisIndex;\r\n                    xAxis = this.component.xAxis.getAxis(xAxisIndex);\r\n                    yAxis = this.component.yAxis.getAxis(yAxisIndex);\r\n                    if (xAxis.type === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY) {\r\n                        _position2sIndexMap[xAxis.getPosition()].push(i);\r\n                    }\r\n                    else if (yAxis.type === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY) {\r\n                        _position2sIndexMap[yAxis.getPosition()].push(i);\r\n                    }\r\n                    else {\r\n                        _position2sIndexMap.other.push(i);\r\n                    }\r\n                }\r\n            }\r\n            // console.log(_position2sIndexMap);\r\n            for (var position in _position2sIndexMap) {\r\n                if (_position2sIndexMap[position].length > 0) {\r\n                    this._buildSinglePosition(\r\n                        position, _position2sIndexMap[position]\r\n                    );\r\n                }\r\n            }\r\n\r\n            this.addShapeList();\r\n        },\r\n        \r\n        /**\r\n         * 构建单个方向上的折线图、柱形图公用方法\r\n         *\r\n         * @param {number} seriesIndex 系列索引\r\n         */\r\n        _buildSinglePosition: function (position, seriesArray) {\r\n            var mapData = this._mapData(seriesArray);\r\n            var locationMap = mapData.locationMap;\r\n            var maxDataLength = mapData.maxDataLength;\r\n\r\n            if (maxDataLength === 0 || locationMap.length === 0) {\r\n                return;\r\n            }\r\n            switch (position) {\r\n                case 'bottom' :\r\n                case 'top' :\r\n                    this._buildHorizontal(seriesArray, maxDataLength, locationMap, this.xMarkMap);\r\n                    break;\r\n                case 'left' :\r\n                case 'right' :\r\n                    this._buildVertical(seriesArray, maxDataLength, locationMap, this.xMarkMap);\r\n                    break;\r\n                case 'other' :\r\n                    this._buildOther(seriesArray, maxDataLength, locationMap, this.xMarkMap);\r\n                    break;\r\n            }\r\n            \r\n            for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                this.buildMark(seriesArray[i]);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 数据整形，折线图、柱形图公用方法\r\n         * 数组位置映射到系列索引\r\n         */\r\n        _mapData: function (seriesArray) {\r\n            var series = this.series;\r\n            var serie;                              // 临时映射变量\r\n            var dataIndex = 0;                      // 堆积数据所在位置映射\r\n            var stackMap = {};                      // 堆积数据位置映射，堆积组在二维中的第几项\r\n            var magicStackKey = '__kener__stack__'; // 堆积命名，非堆积数据安单一堆积处理\r\n            var stackKey;                           // 临时映射变量\r\n            var serieName;                          // 临时映射变量\r\n            var legend = this.component.legend;\r\n            var locationMap = [];                   // 需要返回的东西：数组位置映射到系列索引\r\n            var maxDataLength = 0;                  // 需要返回的东西：最大数据长度\r\n            var iconShape;\r\n            // 计算需要显示的个数和分配位置并记在下面这个结构里\r\n            for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                serie = series[seriesArray[i]];\r\n                serieName = serie.name;\r\n                \r\n                this._sIndex2ShapeMap[seriesArray[i]] = this._sIndex2ShapeMap[seriesArray[i]]\r\n                                                        || this.query(serie,'symbol')\r\n                                                        || this._symbol[i % this._symbol.length];\r\n                      \r\n                if (legend){\r\n                    this.selectedMap[serieName] = legend.isSelected(serieName);\r\n                    \r\n                    this._sIndex2ColorMap[seriesArray[i]] = legend.getColor(serieName);\r\n                        \r\n                    iconShape = legend.getItemShape(serieName);\r\n                    if (iconShape) {\r\n                        // 回调legend，换一个更形象的icon\r\n                        var style = iconShape.style;\r\n                        if (this.type == ecConfig.CHART_TYPE_LINE) {\r\n                            style.iconType = 'legendLineIcon';\r\n                            style.symbol =  this._sIndex2ShapeMap[seriesArray[i]];\r\n                        }\r\n                        else if (serie.itemStyle.normal.barBorderWidth > 0) {\r\n                            var highlightStyle = iconShape.highlightStyle;\r\n                            style.brushType = 'both';\r\n                            style.x += 1;\r\n                            style.y += 1;\r\n                            style.width -= 2;\r\n                            style.height -= 2;\r\n                            style.strokeColor \r\n                                = highlightStyle.strokeColor \r\n                                = serie.itemStyle.normal.barBorderColor;\r\n                            highlightStyle.lineWidth = 3;\r\n                        }\r\n                        \r\n                        legend.setItemShape(serieName, iconShape);\r\n                    }\r\n                }\r\n                else {\r\n                    this.selectedMap[serieName] = true;\r\n                    this._sIndex2ColorMap[seriesArray[i]] = this.zr.getColor(seriesArray[i]);\r\n                }\r\n\r\n                if (this.selectedMap[serieName]) {\r\n                    stackKey = serie.stack || (magicStackKey + seriesArray[i]);\r\n                    if (stackMap[stackKey] == null) {\r\n                        stackMap[stackKey] = dataIndex;\r\n                        locationMap[dataIndex] = [seriesArray[i]];\r\n                        dataIndex++;\r\n                    }\r\n                    else {\r\n                        // 已经分配了位置就推进去就行\r\n                        locationMap[stackMap[stackKey]].push(seriesArray[i]);\r\n                    }\r\n                }\r\n                // 兼职帮算一下最大长度\r\n                maxDataLength = Math.max(maxDataLength, serie.data.length);\r\n            }\r\n            /* 调试输出\r\n            var s = '';\r\n            for (var i = 0, l = maxDataLength; i < l; i++) {\r\n                s = '[';\r\n                for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                    s +='['\r\n                    for (var m = 0, n = locationMap[j].length - 1; m < n; m++) {\r\n                        s += series[locationMap[j][m]].data[i] + ','\r\n                    }\r\n                    s += series[locationMap[j][locationMap[j].length - 1]]\r\n                         .data[i];\r\n                    s += ']'\r\n                }\r\n                s += ']';\r\n                console.log(s);\r\n            }\r\n            console.log(locationMap)\r\n            */\r\n\r\n            return {\r\n                locationMap: locationMap,\r\n                maxDataLength: maxDataLength\r\n            };\r\n        },\r\n        \r\n        _calculMarkMapXY : function(xMarkMap, locationMap, xy) {\r\n            var series = this.series;\r\n            for (var j = 0, k = locationMap.length; j < k; j++) {\r\n                for (var m = 0, n = locationMap[j].length; m < n; m++) {\r\n                    var seriesIndex = locationMap[j][m];\r\n                    var valueIndex = xy == 'xy' ? 0 : '';\r\n                    var grid = this.component.grid;\r\n                    var tarMark = xMarkMap[seriesIndex];\r\n\r\n                    if (xy.indexOf('x') != '-1') {\r\n                        if (tarMark['counter' + valueIndex] > 0) {\r\n                            tarMark['average' + valueIndex] =\r\n                                tarMark['sum' + valueIndex] / tarMark['counter' + valueIndex];\r\n                        }\r\n                        \r\n                        var x = this.component.xAxis.getAxis(series[seriesIndex].xAxisIndex || 0)\r\n                                .getCoord(tarMark['average' + valueIndex]);\r\n                        tarMark['averageLine' + valueIndex] = [\r\n                            [x, grid.getYend()],\r\n                            [x, grid.getY()]\r\n                        ];\r\n                        tarMark['minLine' + valueIndex] = [\r\n                            [tarMark['minX' + valueIndex], grid.getYend()],\r\n                            [tarMark['minX' + valueIndex], grid.getY()]\r\n                        ];\r\n                        tarMark['maxLine' + valueIndex] = [\r\n                            [tarMark['maxX' + valueIndex], grid.getYend()],\r\n                            [tarMark['maxX' + valueIndex], grid.getY()]\r\n                        ];\r\n                        \r\n                        tarMark.isHorizontal = false;\r\n                    }\r\n                    \r\n                    valueIndex = xy == 'xy' ? 1 : '';\r\n                    if (xy.indexOf('y') != '-1') {\r\n                        if (tarMark['counter' + valueIndex] > 0) {\r\n                            tarMark['average' + valueIndex] = \r\n                                tarMark['sum' + valueIndex] / tarMark['counter' + valueIndex];\r\n                        }\r\n                        var y = this.component.yAxis.getAxis(series[seriesIndex].yAxisIndex || 0)\r\n                                .getCoord(tarMark['average' + valueIndex]);\r\n                        tarMark['averageLine' + valueIndex] = [\r\n                            [grid.getX(), y],\r\n                            [grid.getXend(), y]\r\n                        ];\r\n                        tarMark['minLine' + valueIndex] = [\r\n                            [grid.getX(), tarMark['minY' + valueIndex]],\r\n                            [grid.getXend(), tarMark['minY' + valueIndex]]\r\n                        ];\r\n                        tarMark['maxLine' + valueIndex] = [\r\n                            [grid.getX(), tarMark['maxY' + valueIndex]],\r\n                            [grid.getXend(), tarMark['maxY' + valueIndex]]\r\n                        ];\r\n                        \r\n                        tarMark.isHorizontal = true;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 添加文本 \r\n         */\r\n        addLabel: function (tarShape, serie, data, name, orient) {\r\n            // 多级控制\r\n            var queryTarget = [data, serie];\r\n            var nLabel = this.deepMerge(queryTarget, 'itemStyle.normal.label');\r\n            var eLabel = this.deepMerge(queryTarget, 'itemStyle.emphasis.label');\r\n\r\n            var nTextStyle = nLabel.textStyle || {};\r\n            var eTextStyle = eLabel.textStyle || {};\r\n            \r\n            if (nLabel.show) {\r\n                var style = tarShape.style;\r\n                style.text = this._getLabelText(\r\n                    serie, data, name, 'normal'\r\n                );\r\n                style.textPosition = nLabel.position == null\r\n                                     ? (orient === 'horizontal' ? 'right' : 'top')\r\n                                     : nLabel.position;\r\n                style.textColor = nTextStyle.color;\r\n                style.textFont = this.getFont(nTextStyle);\r\n                style.textAlign = nTextStyle.align;\r\n                style.textBaseline = nTextStyle.baseline;\r\n            }\r\n            if (eLabel.show) {\r\n                var highlightStyle = tarShape.highlightStyle;\r\n                highlightStyle.text = this._getLabelText(\r\n                    serie, data, name, 'emphasis'\r\n                );\r\n                highlightStyle.textPosition = nLabel.show\r\n                                              ? tarShape.style.textPosition\r\n                                              : (eLabel.position == null\r\n                                                 ? (orient === 'horizontal' ? 'right' : 'top')\r\n                                                 : eLabel.position);\r\n                highlightStyle.textColor = eTextStyle.color;\r\n                highlightStyle.textFont = this.getFont(eTextStyle);\r\n                highlightStyle.textAlign = eTextStyle.align;\r\n                highlightStyle.textBaseline = eTextStyle.baseline;\r\n            }\r\n            \r\n            return tarShape;\r\n        },\r\n        \r\n        /**\r\n         * 根据lable.format计算label text\r\n         */\r\n        _getLabelText: function (serie, data, name, status) {\r\n            var formatter = this.deepQuery(\r\n                [data, serie],\r\n                'itemStyle.' + status + '.label.formatter'\r\n            );\r\n            if (!formatter && status === 'emphasis') {\r\n                // emphasis时需要看看normal下是否有formatter\r\n                formatter = this.deepQuery(\r\n                    [data, serie],\r\n                    'itemStyle.normal.label.formatter'\r\n                );\r\n            }\r\n            \r\n            var value = this.getDataFromOption(data, '-');\r\n            \r\n            if (formatter) {\r\n                if (typeof formatter === 'function') {\r\n                    return formatter.call(\r\n                        this.myChart,\r\n                        {\r\n                            seriesName: serie.name,\r\n                            series: serie,\r\n                            name: name,\r\n                            value: value,\r\n                            data: data,\r\n                            status: status\r\n                        }\r\n                    );\r\n                }\r\n                else if (typeof formatter === 'string') {\r\n                    formatter = formatter.replace('{a}','{a0}')\r\n                                         .replace('{b}','{b0}')\r\n                                         .replace('{c}','{c0}')\r\n                                         .replace('{a0}', serie.name)\r\n                                         .replace('{b0}', name)\r\n                                         .replace('{c0}', this.numAddCommas(value));\r\n    \r\n                    return formatter;\r\n                }\r\n            }\r\n            else {\r\n                if (value instanceof Array) {\r\n                    return value[2] != null\r\n                           ? this.numAddCommas(value[2])\r\n                           : (value[0] + ' , ' + value[1]);\r\n                }\r\n                else {\r\n                    return this.numAddCommas(value);\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标线标注 \r\n         */\r\n        buildMark: function (seriesIndex) {\r\n            var serie = this.series[seriesIndex];\r\n            if (this.selectedMap[serie.name]) {\r\n                serie.markLine && this._buildMarkLine(seriesIndex);\r\n                serie.markPoint && this._buildMarkPoint(seriesIndex);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标注逻辑\r\n         */\r\n        _buildMarkPoint: function (seriesIndex) {\r\n            var attachStyle =  (this.markAttachStyle || {})[seriesIndex];\r\n            var serie = this.series[seriesIndex];\r\n            var mpData;\r\n            var pos;\r\n            var markPoint = zrUtil.clone(serie.markPoint);\r\n            for (var i = 0, l = markPoint.data.length; i < l; i++) {\r\n                mpData = markPoint.data[i];\r\n                pos = this.getMarkCoord(seriesIndex, mpData);\r\n                mpData.x = mpData.x != null ? mpData.x : pos[0];\r\n                mpData.y = mpData.y != null ? mpData.y : pos[1];\r\n                if (mpData.type\r\n                    && (mpData.type === 'max' || mpData.type === 'min')\r\n                ) {\r\n                    // 特殊值内置支持\r\n                    mpData.value = pos[3];\r\n                    mpData.name = mpData.name || mpData.type;\r\n                    mpData.symbolSize = mpData.symbolSize\r\n                        || (zrArea.getTextWidth(pos[3], this.getFont()) / 2 + 5);\r\n                }\r\n            }\r\n            \r\n            var shapeList = this._markPoint(seriesIndex, markPoint);\r\n            \r\n            for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                var tarShape = shapeList[i];\r\n                tarShape.zlevel = serie.zlevel;\r\n                tarShape.z = serie.z + 1;\r\n                for (var key in attachStyle) {\r\n                    tarShape[key] = zrUtil.clone(attachStyle[key]);\r\n                }\r\n                this.shapeList.push(tarShape);\r\n            }\r\n            // 个别特殊图表需要自己addShape\r\n            if (this.type === ecConfig.CHART_TYPE_FORCE\r\n                || this.type === ecConfig.CHART_TYPE_CHORD\r\n            ) {\r\n                for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(shapeList[i]);\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标线逻辑\r\n         */\r\n        _buildMarkLine: function (seriesIndex) {\r\n            var attachStyle =  (this.markAttachStyle || {})[seriesIndex];\r\n            var serie = this.series[seriesIndex];\r\n            var pos;\r\n            var markLine = zrUtil.clone(serie.markLine);\r\n            for (var i = 0, l = markLine.data.length; i < l; i++) {\r\n                var mlData = markLine.data[i];\r\n                if (mlData.type\r\n                    && (mlData.type === 'max' || mlData.type === 'min' || mlData.type === 'average')\r\n                ) {\r\n                    // 特殊值内置支持\r\n                    pos = this.getMarkCoord(seriesIndex, mlData);\r\n                    markLine.data[i] = [zrUtil.clone(mlData), {}];\r\n                    markLine.data[i][0].name = mlData.name || mlData.type;\r\n                    markLine.data[i][0].value = mlData.type !== 'average'\r\n                                                ? pos[3]\r\n                                                : +pos[3].toFixed(\r\n                                                      markLine.precision != null \r\n                                                      ? markLine.precision \r\n                                                      : this.deepQuery(\r\n                                                            [this.ecTheme, ecConfig],\r\n                                                            'markLine.precision'\r\n                                                        )\r\n                                                  );\r\n                    pos = pos[2];\r\n                    mlData = [{},{}];\r\n                }\r\n                else {\r\n                    pos = [\r\n                        this.getMarkCoord(seriesIndex, mlData[0]),\r\n                        this.getMarkCoord(seriesIndex, mlData[1])\r\n                    ];\r\n                }\r\n                if (pos == null || pos[0] == null || pos[1] == null) {\r\n                    // 不在显示区域内\r\n                    continue;\r\n                }\r\n                markLine.data[i][0].x = mlData[0].x != null ? mlData[0].x : pos[0][0];\r\n                markLine.data[i][0].y = mlData[0].y != null ? mlData[0].y : pos[0][1];\r\n                markLine.data[i][1].x = mlData[1].x != null ? mlData[1].x : pos[1][0];\r\n                markLine.data[i][1].y = mlData[1].y != null ? mlData[1].y : pos[1][1];\r\n            }\r\n            \r\n            var shapeList = this._markLine(seriesIndex, markLine);\r\n\r\n            var isLarge = markLine.large;\r\n\r\n            if (isLarge) {\r\n                var shapeBundle = new ShapeBundle({\r\n                    style: {\r\n                        shapeList: shapeList\r\n                    }\r\n                });\r\n                var firstShape = shapeList[0];\r\n                if (firstShape) {\r\n                    zrUtil.merge(shapeBundle.style, firstShape.style);\r\n                    zrUtil.merge(shapeBundle.highlightStyle = {}, firstShape.highlightStyle);\r\n                    shapeBundle.style.brushType = 'stroke';\r\n                    shapeBundle.zlevel = serie.zlevel;\r\n                    shapeBundle.z = serie.z + 1;\r\n                    shapeBundle.hoverable = false;\r\n                    for (var key in attachStyle) {\r\n                        shapeBundle[key] = zrUtil.clone(attachStyle[key]);\r\n                    }\r\n                }\r\n                this.shapeList.push(shapeBundle);\r\n                this.zr.addShape(shapeBundle);\r\n\r\n                shapeBundle._mark = 'largeLine';\r\n                var effect = markLine.effect;\r\n                if (effect.show) {\r\n                    shapeBundle.effect = effect;\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                    var tarShape = shapeList[i];\r\n                    tarShape.zlevel = serie.zlevel;\r\n                    tarShape.z = serie.z + 1;\r\n                    for (var key in attachStyle) {\r\n                        tarShape[key] = zrUtil.clone(attachStyle[key]);\r\n                    }\r\n                    this.shapeList.push(tarShape);\r\n                }\r\n                // 个别特殊图表需要自己addShape\r\n                if (this.type === ecConfig.CHART_TYPE_FORCE\r\n                    || this.type === ecConfig.CHART_TYPE_CHORD\r\n                ) {\r\n                    for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                        this.zr.addShape(shapeList[i]);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标注多级控制构造\r\n         */\r\n        _markPoint: function (seriesIndex, mpOption) {\r\n            var serie = this.series[seriesIndex];\r\n            var component = this.component;\r\n            zrUtil.merge(\r\n                zrUtil.merge(\r\n                    mpOption,\r\n                    zrUtil.clone(this.ecTheme.markPoint || {})\r\n                ),\r\n                zrUtil.clone(ecConfig.markPoint)\r\n            );\r\n\r\n            mpOption.name = serie.name;\r\n                   \r\n            var pList = [];\r\n            var data = mpOption.data;\r\n            var itemShape;\r\n            \r\n            var dataRange = component.dataRange;\r\n            var legend = component.legend;\r\n            var color;\r\n            var value;\r\n            var queryTarget;\r\n            var nColor;\r\n            var eColor;\r\n            var effect;\r\n            var zrWidth = this.zr.getWidth();\r\n            var zrHeight = this.zr.getHeight();\r\n\r\n            if (!mpOption.large) {\r\n                for (var i = 0, l = data.length; i < l; i++) {\r\n                    if (data[i].x == null || data[i].y == null) {\r\n                        continue;\r\n                    }\r\n                    value = data[i].value != null ? data[i].value : '';\r\n                    // 图例\r\n                    if (legend) {\r\n                        color = legend.getColor(serie.name);\r\n                    }\r\n                    // 值域\r\n                    if (dataRange) {\r\n                        color = isNaN(value) ? color : dataRange.getColor(value);\r\n                        \r\n                        queryTarget = [data[i], mpOption];\r\n                        nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\r\n                                 || color;\r\n                        eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\r\n                                 || nColor;\r\n                        // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\r\n                        if (nColor == null && eColor == null) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    \r\n                    color = color == null ? this.zr.getColor(seriesIndex) : color;\r\n                    \r\n                    // 标准化一些参数\r\n                    data[i].tooltip = data[i].tooltip\r\n                                      || mpOption.tooltip\r\n                                      || {trigger:'item'}; // tooltip.trigger指定为item\r\n                    data[i].name = data[i].name != null ? data[i].name : '';\r\n                    data[i].value = value;\r\n\r\n                    // 复用getSymbolShape\r\n                    itemShape = this.getSymbolShape(\r\n                        mpOption, seriesIndex,      // 系列 \r\n                        data[i], i, data[i].name,   // 数据\r\n                        this.parsePercent(data[i].x, zrWidth),   // 坐标\r\n                        this.parsePercent(data[i].y, zrHeight),  // 坐标\r\n                        'pin', color,               // 默认symbol和color\r\n                        'rgba(0,0,0,0)',\r\n                        'horizontal'                // 走向，用于默认文字定位\r\n                    );\r\n                    itemShape._mark = 'point';\r\n                    \r\n                    effect = this.deepMerge(\r\n                        [data[i], mpOption],\r\n                        'effect'\r\n                    );\r\n                    if (effect.show) {\r\n                        itemShape.effect = effect;\r\n                    }\r\n                    \r\n                    if (serie.type === ecConfig.CHART_TYPE_MAP) {\r\n                        itemShape._geo = this.getMarkGeo(data[i]);\r\n                    }\r\n                    \r\n                    // 重新pack一下数据\r\n                    ecData.pack(\r\n                        itemShape,\r\n                        serie, seriesIndex,\r\n                        data[i], i,\r\n                        data[i].name,\r\n                        value\r\n                    );\r\n                    pList.push(itemShape);\r\n                }\r\n            }\r\n            else {\r\n                // 大规模MarkPoint\r\n                itemShape = this.getLargeMarkPointShape(seriesIndex, mpOption);\r\n                itemShape._mark = 'largePoint';\r\n                itemShape && pList.push(itemShape);\r\n            }\r\n            return pList;\r\n        },\r\n        \r\n        /**\r\n         * 标线多级控制构造\r\n         */\r\n        _markLine: (function () {\r\n            function normalizeOptionValue(mlOption, key) {\r\n                mlOption[key] = mlOption[key] instanceof Array\r\n                          ? mlOption[key].length > 1 \r\n                            ? mlOption[key] \r\n                            : [mlOption[key][0], mlOption[key][0]]\r\n                          : [mlOption[key], mlOption[key]];\r\n            }\r\n\r\n            return function (seriesIndex, mlOption) {\r\n                var serie = this.series[seriesIndex];\r\n                var component = this.component;\r\n                var dataRange = component.dataRange;\r\n                var legend = component.legend;\r\n\r\n                zrUtil.merge(\r\n                    zrUtil.merge(\r\n                        mlOption,\r\n                        zrUtil.clone(this.ecTheme.markLine || {})\r\n                    ),\r\n                    zrUtil.clone(ecConfig.markLine)\r\n                );\r\n\r\n                var defaultColor = legend ? legend.getColor(serie.name)\r\n                    : this.zr.getColor(seriesIndex);\r\n\r\n                // 标准化一些同时支持Array和String的参数\r\n                normalizeOptionValue(mlOption, 'symbol');\r\n                normalizeOptionValue(mlOption, 'symbolSize');\r\n                normalizeOptionValue(mlOption, 'symbolRotate');\r\n\r\n                // Normalize and filter data\r\n                var data = mlOption.data;\r\n                var edges = [];\r\n                var zrWidth = this.zr.getWidth();\r\n                var zrHeight = this.zr.getHeight();\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var mlData = data[i];\r\n                    if (isCoordAvailable(mlData[0])\r\n                        && isCoordAvailable(mlData[1])\r\n                    ) {\r\n                        // 组装一个mergeData\r\n                        var mergeData = this.deepMerge(mlData);\r\n                        var queryTarget = [mergeData, mlOption];\r\n                        var color = defaultColor;\r\n                        var value = mergeData.value != null ? mergeData.value : '';\r\n                        // 值域\r\n                        if (dataRange) {\r\n                            color = isNaN(value) ? color : dataRange.getColor(value);\r\n\r\n                            var nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\r\n                                     || color;\r\n                            var eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\r\n                                     || nColor;\r\n                            // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\r\n                            if (nColor == null && eColor == null) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                        // 标准化一些参数\r\n                        mlData[0].tooltip = mergeData.tooltip\r\n                                            || mlOption.tooltip\r\n                                            || {trigger:'item'}; // tooltip.trigger指定为item\r\n                        mlData[0].name = mlData[0].name || '';\r\n                        mlData[1].name = mlData[1].name || '';\r\n                        mlData[0].value = value;\r\n\r\n                        edges.push({\r\n                            points: [\r\n                                [this.parsePercent(mlData[0].x, zrWidth),\r\n                                this.parsePercent(mlData[0].y, zrHeight)],\r\n                                [this.parsePercent(mlData[1].x, zrWidth),\r\n                                this.parsePercent(mlData[1].y, zrHeight)]\r\n                            ],\r\n                            rawData: mlData,\r\n                            color: color\r\n                        });\r\n                    }\r\n                }\r\n\r\n                var enableBundling = this.query(mlOption, 'bundling.enable');\r\n                if (enableBundling) {\r\n                    var edgeBundling = new EdgeBundling();\r\n                    edgeBundling.maxTurningAngle = this.query(\r\n                        mlOption, 'bundling.maxTurningAngle'\r\n                    ) / 180 * Math.PI;\r\n                    edges = edgeBundling.run(edges);\r\n                }\r\n\r\n                mlOption.name = serie.name;\r\n  \r\n                var shapeList = [];\r\n\r\n                for (var i = 0, l = edges.length; i < l; i++) {\r\n                    var edge = edges[i];\r\n                    var rawEdge = edge.rawEdge || edge; \r\n                    var mlData = rawEdge.rawData;\r\n                    var value = mlData.value != null ? mlData.value : '';\r\n\r\n                    var itemShape = this.getMarkLineShape(\r\n                        mlOption,\r\n                        seriesIndex,\r\n                        mlData,\r\n                        i,\r\n                        edge.points,\r\n                        enableBundling,\r\n                        rawEdge.color\r\n                    );\r\n                    itemShape._mark = 'line';\r\n                    \r\n                    var effect = this.deepMerge(\r\n                        [mlData[0], mlData[1], mlOption],\r\n                        'effect'\r\n                    );\r\n                    if (effect.show) {\r\n                        itemShape.effect = effect;\r\n                        itemShape.effect.large = mlOption.large;\r\n                    }\r\n                    \r\n                    if (serie.type === ecConfig.CHART_TYPE_MAP) {\r\n                        itemShape._geo = [\r\n                            this.getMarkGeo(mlData[0]),\r\n                            this.getMarkGeo(mlData[1])\r\n                        ];\r\n                    }\r\n                    \r\n                    // 重新pack一下数据\r\n                    ecData.pack(\r\n                        itemShape,\r\n                        serie, seriesIndex,\r\n                        mlData[0], i,\r\n                        mlData[0].name \r\n                            // 不要帮我代码规范\r\n                            + (mlData[1].name !== '' ? (' > ' + mlData[1].name) : ''),\r\n                        value\r\n                    );\r\n                    shapeList.push(itemShape);\r\n                }\r\n\r\n                return shapeList;\r\n            };\r\n        })(),\r\n        \r\n        getMarkCoord: function () {\r\n            // 无转换位置\r\n            return [0, 0];\r\n        },\r\n        \r\n        /**\r\n         * symbol构造器 \r\n         */\r\n        getSymbolShape: function (\r\n            serie, seriesIndex,     // 系列 \r\n            data, dataIndex, name,  // 数据\r\n            x, y,                   // 坐标\r\n            symbol, color,          // 默认symbol和color，来自legend或dataRange全局分配\r\n            emptyColor,             // 折线的emptySymbol用白色填充\r\n            orient                  // 走向，用于默认文字定位\r\n        ) {\r\n            var queryTarget = [data, serie];\r\n            var value = this.getDataFromOption(data, '-');\r\n            \r\n            symbol = this.deepQuery(queryTarget, 'symbol') || symbol;\r\n            var symbolSize = this.deepQuery(queryTarget, 'symbolSize');\r\n            symbolSize = typeof symbolSize === 'function'\r\n                         ? symbolSize(value)\r\n                         : symbolSize;\r\n            if (typeof symbolSize === 'number') {\r\n                symbolSize = [symbolSize, symbolSize];\r\n            }\r\n            var symbolRotate = this.deepQuery(queryTarget, 'symbolRotate');\r\n            \r\n            var normal = this.deepMerge(\r\n                queryTarget,\r\n                'itemStyle.normal'\r\n            );\r\n            var emphasis = this.deepMerge(\r\n                queryTarget,\r\n                'itemStyle.emphasis'\r\n            );\r\n            var nBorderWidth = normal.borderWidth != null\r\n                               ? normal.borderWidth\r\n                               : (normal.lineStyle && normal.lineStyle.width);\r\n            if (nBorderWidth == null) {\r\n                nBorderWidth = symbol.match('empty') ? 2 : 0;\r\n            }\r\n            var eBorderWidth = emphasis.borderWidth != null\r\n                               ? emphasis.borderWidth\r\n                               : (emphasis.lineStyle && emphasis.lineStyle.width);\r\n            if (eBorderWidth == null) {\r\n                eBorderWidth = nBorderWidth + 2;\r\n            }\r\n\r\n            var nColor = this.getItemStyleColor(normal.color, seriesIndex, dataIndex, data);\r\n            var eColor = this.getItemStyleColor(emphasis.color, seriesIndex, dataIndex, data);\r\n            \r\n            var width = symbolSize[0];\r\n            var height = symbolSize[1];\r\n            var itemShape = new IconShape({\r\n                style: {\r\n                    iconType: symbol.replace('empty', '').toLowerCase(),\r\n                    x: x - width,\r\n                    y: y - height,\r\n                    width: width * 2,\r\n                    height: height * 2,\r\n                    brushType: 'both',\r\n                    color: symbol.match('empty') \r\n                           ? emptyColor \r\n                           : (nColor || color),\r\n                    strokeColor: normal.borderColor || nColor || color,\r\n                    lineWidth: nBorderWidth\r\n                },\r\n                highlightStyle: {\r\n                    color: symbol.match('empty') \r\n                           ? emptyColor \r\n                           : (eColor || nColor || color),\r\n                    strokeColor: emphasis.borderColor \r\n                                 || normal.borderColor\r\n                                 || eColor\r\n                                 || nColor\r\n                                 || color,\r\n                    lineWidth: eBorderWidth\r\n                },\r\n                clickable: this.deepQuery(queryTarget, 'clickable')\r\n            });\r\n\r\n            if (symbol.match('image')) {\r\n                itemShape.style.image = symbol.replace(new RegExp('^image:\\\\/\\\\/'), '');\r\n                itemShape = new ImageShape({\r\n                    style: itemShape.style,\r\n                    highlightStyle: itemShape.highlightStyle,\r\n                    clickable: this.deepQuery(queryTarget, 'clickable')\r\n                });\r\n            }\r\n            \r\n            if (symbolRotate != null) {\r\n                itemShape.rotation = [\r\n                    symbolRotate * Math.PI / 180, x, y\r\n                ];\r\n            }\r\n            \r\n            if (symbol.match('star')) {\r\n                itemShape.style.iconType = 'star';\r\n                itemShape.style.n = \r\n                    (symbol.replace('empty', '').replace('star','') - 0) || 5;\r\n            }\r\n            \r\n            if (symbol === 'none') {\r\n                itemShape.invisible = true;\r\n                itemShape.hoverable = false;\r\n            }\r\n            \r\n            /*\r\n            if (this.deepQuery([data, serie, option], 'calculable')) {\r\n                this.setCalculable(itemShape);\r\n                itemShape.draggable = true;\r\n            }\r\n            */\r\n\r\n            itemShape = this.addLabel(\r\n                itemShape, \r\n                serie, data, name, \r\n                orient\r\n            );\r\n            \r\n            if (symbol.match('empty')) {\r\n                if (itemShape.style.textColor == null) {\r\n                    itemShape.style.textColor = itemShape.style.strokeColor;\r\n                }\r\n                if (itemShape.highlightStyle.textColor == null) {\r\n                    itemShape.highlightStyle.textColor = \r\n                        itemShape.highlightStyle.strokeColor;\r\n                }\r\n            }\r\n            \r\n            ecData.pack(\r\n                itemShape,\r\n                serie, seriesIndex,\r\n                data, dataIndex,\r\n                name\r\n            );\r\n\r\n            itemShape._x = x;\r\n            itemShape._y = y;\r\n            \r\n            itemShape._dataIndex = dataIndex;\r\n            itemShape._seriesIndex = seriesIndex;\r\n\r\n            return itemShape;\r\n        },\r\n        \r\n        /**\r\n         * 标线构造器 \r\n         */\r\n        getMarkLineShape: function (\r\n            mlOption,               // 系列 \r\n            seriesIndex,            // 系列索引\r\n            data,                   // 数据\r\n            dataIndex,              // 数据索引\r\n            points,                 // 坐标点\r\n            bundling,               // 是否边捆绑过\r\n            color                   // 默认color，来自legend或dataRange全局分配\r\n        ) {\r\n            var value0 = data[0].value != null ? data[0].value : '-';\r\n            var value1 = data[1].value != null ? data[1].value : '-';\r\n            var symbol = [\r\n                data[0].symbol || mlOption.symbol[0],\r\n                data[1].symbol || mlOption.symbol[1]\r\n            ];\r\n            var symbolSize = [\r\n                data[0].symbolSize || mlOption.symbolSize[0],\r\n                data[1].symbolSize || mlOption.symbolSize[1]\r\n            ];\r\n            symbolSize[0] = typeof symbolSize[0] === 'function'\r\n                            ? symbolSize[0](value0)\r\n                            : symbolSize[0];\r\n            symbolSize[1] = typeof symbolSize[1] === 'function'\r\n                            ? symbolSize[1](value1)\r\n                            : symbolSize[1];\r\n            var symbolRotate = [\r\n                this.query(data[0], 'symbolRotate') || mlOption.symbolRotate[0],\r\n                this.query(data[1], 'symbolRotate') || mlOption.symbolRotate[1]\r\n            ];\r\n            //console.log(symbol, symbolSize, symbolRotate);\r\n\r\n            var queryTarget = [data[0], data[1], mlOption];\r\n            var normal = this.deepMerge(\r\n                queryTarget,\r\n                'itemStyle.normal'\r\n            );\r\n            normal.color = this.getItemStyleColor(normal.color, seriesIndex, dataIndex, data);\r\n            var emphasis = this.deepMerge(\r\n                queryTarget,\r\n                'itemStyle.emphasis'\r\n            );\r\n            emphasis.color = this.getItemStyleColor(emphasis.color, seriesIndex, dataIndex, data);\r\n            \r\n            var nlineStyle = normal.lineStyle;\r\n            var elineStyle = emphasis.lineStyle;\r\n            \r\n            var nBorderWidth = nlineStyle.width;\r\n            if (nBorderWidth == null) {\r\n                nBorderWidth = normal.borderWidth;\r\n            }\r\n            var eBorderWidth = elineStyle.width;\r\n            if (eBorderWidth == null) {\r\n                eBorderWidth = emphasis.borderWidth != null \r\n                               ? emphasis.borderWidth\r\n                               : (nBorderWidth + 2);\r\n            }\r\n            var smoothness = this.deepQuery(queryTarget, 'smoothness');\r\n            if (! this.deepQuery(queryTarget, 'smooth')) {\r\n                smoothness = 0;\r\n            }\r\n\r\n            var ShapeCtor = bundling ? PolylineShape : MarkLineShape;\r\n            var itemShape = new ShapeCtor({\r\n                style: {\r\n                    symbol: symbol,\r\n                    symbolSize: symbolSize,\r\n                    symbolRotate: symbolRotate,\r\n                    // data: [data[0].name,data[1].name],\r\n                    brushType: 'both',\r\n                    lineType: nlineStyle.type,\r\n                    shadowColor: nlineStyle.shadowColor\r\n                                 || nlineStyle.color\r\n                                 || normal.borderColor\r\n                                 || normal.color\r\n                                 || color,\r\n                    shadowBlur: nlineStyle.shadowBlur,\r\n                    shadowOffsetX: nlineStyle.shadowOffsetX,\r\n                    shadowOffsetY: nlineStyle.shadowOffsetY,\r\n                    color: normal.color || color,\r\n                    strokeColor: nlineStyle.color\r\n                                 || normal.borderColor\r\n                                 || normal.color\r\n                                 || color,\r\n                    lineWidth: nBorderWidth,\r\n                    symbolBorderColor: normal.borderColor\r\n                                       || normal.color\r\n                                       || color,\r\n                    symbolBorder: normal.borderWidth\r\n                },\r\n                highlightStyle: {\r\n                    shadowColor: elineStyle.shadowColor,\r\n                    shadowBlur: elineStyle.shadowBlur,\r\n                    shadowOffsetX: elineStyle.shadowOffsetX,\r\n                    shadowOffsetY: elineStyle.shadowOffsetY,\r\n                    color: emphasis.color|| normal.color || color,\r\n                    strokeColor: elineStyle.color\r\n                                 || nlineStyle.color\r\n                                 || emphasis.borderColor \r\n                                 || normal.borderColor\r\n                                 || emphasis.color \r\n                                 || normal.color\r\n                                 || color,\r\n                    lineWidth: eBorderWidth,\r\n                    symbolBorderColor: emphasis.borderColor\r\n                                       || normal.borderColor\r\n                                       || emphasis.color\r\n                                       || normal.color\r\n                                       || color,\r\n                    symbolBorder: emphasis.borderWidth == null\r\n                                  ? (normal.borderWidth + 2)\r\n                                  : (emphasis.borderWidth)\r\n                },\r\n                clickable: this.deepQuery(queryTarget, 'clickable')\r\n            });\r\n            var shapeStyle = itemShape.style;\r\n            if (bundling) {\r\n                shapeStyle.pointList = points;\r\n                shapeStyle.smooth = smoothness;\r\n            }\r\n            else {\r\n                shapeStyle.xStart = points[0][0];\r\n                shapeStyle.yStart = points[0][1];\r\n                shapeStyle.xEnd = points[1][0];\r\n                shapeStyle.yEnd = points[1][1];\r\n                shapeStyle.curveness = smoothness;\r\n                itemShape.updatePoints(itemShape.style);\r\n            }\r\n            \r\n            itemShape = this.addLabel(\r\n                itemShape, \r\n                mlOption, \r\n                data[0], \r\n                data[0].name + ' : ' + data[1].name\r\n            );\r\n\r\n            return itemShape;\r\n        },\r\n        \r\n        /**\r\n         * 大规模标注构造器 \r\n         */\r\n        getLargeMarkPointShape: function(seriesIndex, mpOption) {\r\n            var serie = this.series[seriesIndex];\r\n            var component = this.component;\r\n            var data = mpOption.data;\r\n            var itemShape;\r\n            \r\n            var dataRange = component.dataRange;\r\n            var legend = component.legend;\r\n            var color;\r\n            var value;\r\n            var queryTarget = [data[0], mpOption];\r\n            var nColor;\r\n            var eColor;\r\n            var effect;\r\n            \r\n            // 图例\r\n            if (legend) {\r\n                color = legend.getColor(serie.name);\r\n            }\r\n            // 值域\r\n            if (dataRange) {\r\n                value = data[0].value != null ? data[0].value : '';\r\n                color = isNaN(value) ? color : dataRange.getColor(value);\r\n                \r\n                nColor = this.deepQuery(queryTarget, 'itemStyle.normal.color')\r\n                         || color;\r\n                eColor = this.deepQuery(queryTarget, 'itemStyle.emphasis.color')\r\n                         || nColor;\r\n                // 有值域，并且值域返回null且用户没有自己定义颜色，则隐藏这个mark\r\n                if (nColor == null && eColor == null) {\r\n                    return;\r\n                }\r\n            }\r\n            color = this.deepMerge(queryTarget, 'itemStyle.normal').color \r\n                    || color;\r\n            \r\n            var symbol = this.deepQuery(queryTarget, 'symbol') || 'circle';\r\n            symbol = symbol.replace('empty', '').replace(/\\d/g, '');\r\n            \r\n            effect = this.deepMerge(\r\n                [data[0], mpOption],\r\n                'effect'\r\n            );\r\n            \r\n            var devicePixelRatio = window.devicePixelRatio || 1;\r\n            \r\n            //console.log(data)\r\n            itemShape = new SymbolShape({\r\n                style: {\r\n                    pointList: data,\r\n                    color: color,\r\n                    strokeColor: color,\r\n                    shadowColor: effect.shadowColor || color,\r\n                    shadowBlur: (effect.shadowBlur != null ? effect.shadowBlur : 8)\r\n                                 * devicePixelRatio,\r\n                    size: this.deepQuery(queryTarget, 'symbolSize'),\r\n                    iconType: symbol,\r\n                    brushType: 'fill',\r\n                    lineWidth:1\r\n                },\r\n                draggable: false,\r\n                hoverable: false\r\n            });\r\n            \r\n            if (effect.show) {\r\n                itemShape.effect = effect;\r\n            }\r\n            \r\n            return itemShape;\r\n        },\r\n        \r\n        backupShapeList: function () {\r\n            if (this.shapeList && this.shapeList.length > 0) {\r\n                this.lastShapeList = this.shapeList;\r\n                this.shapeList = [];\r\n            }\r\n            else {\r\n                this.lastShapeList = [];\r\n            }\r\n        },\r\n        \r\n        addShapeList: function () {\r\n            var maxLenth = this.option.animationThreshold / (this.canvasSupported ? 2 : 4);\r\n            var lastShapeList = this.lastShapeList;\r\n            var shapeList = this.shapeList;\r\n            var isUpdate = lastShapeList.length > 0;\r\n            var duration = isUpdate\r\n                           ? this.query(this.option, 'animationDurationUpdate')\r\n                           : this.query(this.option, 'animationDuration');\r\n            var easing = this.query(this.option, 'animationEasing');\r\n            var delay;\r\n            var key;\r\n            var oldMap = {};\r\n            var newMap = {};\r\n            if (this.option.animation \r\n                && !this.option.renderAsImage \r\n                && shapeList.length < maxLenth\r\n                && !this.motionlessOnce\r\n            ) {\r\n                // 通过已有的shape做动画过渡\r\n                for (var i = 0, l = lastShapeList.length; i < l; i++) {\r\n                    key = this._getAnimationKey(lastShapeList[i]);\r\n                    if (key.match('undefined')) {\r\n                        this.zr.delShape(lastShapeList[i].id);  // 非关键元素直接删除\r\n                    }\r\n                    else {\r\n                        key += lastShapeList[i].type;\r\n                        // https://github.com/ecomfe/echarts/issues/1219#issuecomment-71987602\r\n                        // 响应中断可能产生的重复元素\r\n                        if (oldMap[key]) {\r\n                            this.zr.delShape(lastShapeList[i].id);\r\n                        }\r\n                        else {\r\n                            oldMap[key] = lastShapeList[i];\r\n                        }\r\n                    }\r\n                }\r\n                for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                    key = this._getAnimationKey(shapeList[i]);\r\n                    if (key.match('undefined')) {\r\n                        this.zr.addShape(shapeList[i]);         // 非关键元素直接添加\r\n                    }\r\n                    else {\r\n                        key += shapeList[i].type;\r\n                        newMap[key] = shapeList[i];\r\n                    }\r\n                }\r\n                \r\n                for (key in oldMap) {\r\n                    if (!newMap[key]) {\r\n                        // 新的没有 删除\r\n                        this.zr.delShape(oldMap[key].id);\r\n                    }\r\n                }\r\n                for (key in newMap) {\r\n                    if (oldMap[key]) {\r\n                        // 新旧都有 动画过渡\r\n                        this.zr.delShape(oldMap[key].id);\r\n                        this._animateMod(\r\n                            oldMap[key], newMap[key], duration, easing, 0, isUpdate\r\n                        );\r\n                    }\r\n                    else {\r\n                        // 新有旧没有  添加并动画过渡\r\n                        //this._animateAdd(newMap[key], duration, easing);\r\n                        delay = (this.type == ecConfig.CHART_TYPE_LINE\r\n                                || this.type == ecConfig.CHART_TYPE_RADAR)\r\n                                && key.indexOf('icon') !== 0\r\n                                ? duration / 2\r\n                                : 0;\r\n                        this._animateMod(\r\n                            false, newMap[key], duration, easing, delay, isUpdate\r\n                        );\r\n                    }\r\n                }\r\n                this.zr.refresh();\r\n                this.animationEffect();\r\n            }\r\n            else {\r\n                this.motionlessOnce = false;\r\n                // clear old\r\n                this.zr.delShape(lastShapeList);\r\n                // 直接添加\r\n                for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(shapeList[i]);\r\n                }\r\n            }\r\n        },\r\n        \r\n        _getAnimationKey: function(shape) {\r\n            if (this.type != ecConfig.CHART_TYPE_MAP\r\n                && this.type != ecConfig.CHART_TYPE_TREEMAP\r\n                && this.type != ecConfig.CHART_TYPE_VENN\r\n                && this.type != ecConfig.CHART_TYPE_TREE\r\n                ) {\r\n                return ecData.get(shape, 'seriesIndex') + '_'\r\n                       + ecData.get(shape, 'dataIndex')\r\n                       + (shape._mark ? shape._mark : '')\r\n                       + (this.type === ecConfig.CHART_TYPE_RADAR \r\n                          ? ecData.get(shape, 'special') : '');\r\n            }\r\n            else {\r\n                return ecData.get(shape, 'seriesIndex') + '_'\r\n                       + ecData.get(shape, 'dataIndex')\r\n                       + (shape._mark ? shape._mark : 'undefined');\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 动画过渡 \r\n         */\r\n        _animateMod: function (oldShape, newShape, duration, easing, delay, isUpdate) {\r\n            switch (newShape.type) {\r\n                case 'polyline' :\r\n                case 'half-smooth-polygon' :\r\n                    ecAnimation.pointList(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'rectangle' :\r\n                    ecAnimation.rectangle(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'image' :\r\n                case 'icon' :\r\n                    ecAnimation.icon(this.zr, oldShape, newShape, duration, easing, delay);\r\n                    break;\r\n                case 'candle' :\r\n                    if (!isUpdate) {\r\n                        ecAnimation.candle(this.zr, oldShape, newShape, duration, easing);\r\n                    }\r\n                    else {\r\n                        this.zr.addShape(newShape);\r\n                    }\r\n                    break;\r\n                case 'ring' :\r\n                case 'sector' :\r\n                case 'circle' :\r\n                    if (!isUpdate) {\r\n                        // 进入动画，加旋转\r\n                        ecAnimation.ring(\r\n                            this.zr,\r\n                            oldShape,\r\n                            newShape, \r\n                            duration + ((ecData.get(newShape, 'dataIndex') || 0) % 20 * 100), \r\n                            easing\r\n                        );\r\n                    }\r\n                    else if (newShape.type === 'sector') {\r\n                        ecAnimation.sector(this.zr, oldShape, newShape, duration, easing);\r\n                    }\r\n                    else {\r\n                        this.zr.addShape(newShape);\r\n                    }\r\n                    break;\r\n                case 'text' :\r\n                    ecAnimation.text(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'polygon' :\r\n                    if (!isUpdate) {\r\n                        ecAnimation.polygon(this.zr, oldShape, newShape, duration, easing);\r\n                    }\r\n                    else {\r\n                        ecAnimation.pointList(this.zr, oldShape, newShape, duration, easing);\r\n                    }\r\n                    break;\r\n                case 'ribbon' :\r\n                    ecAnimation.ribbon(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'gauge-pointer' :\r\n                    ecAnimation.gaugePointer(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'mark-line' :\r\n                    ecAnimation.markline(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                case 'bezier-curve' :\r\n                case 'line' :\r\n                    ecAnimation.line(this.zr, oldShape, newShape, duration, easing);\r\n                    break;\r\n                default :\r\n                    this.zr.addShape(newShape);\r\n                    break;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 标注动画\r\n         * @param {number} duration 时长\r\n         * @param {string=} easing 缓动效果\r\n         * @param {Array=} shapeList 指定特效对象，不指定默认使用this.shapeList\r\n         */\r\n        animationMark: function (duration , easing, shapeList) {\r\n            var shapeList = shapeList || this.shapeList;\r\n            for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                if (!shapeList[i]._mark) {\r\n                    continue;\r\n                }\r\n                this._animateMod(false, shapeList[i], duration, easing, 0, true);\r\n            }\r\n            this.animationEffect(shapeList);\r\n        },\r\n\r\n        /**\r\n         * 特效动画\r\n         * @param {Array=} shapeList 指定特效对象，不知道默认使用this.shapeList\r\n         */\r\n        animationEffect: function (shapeList) {\r\n            !shapeList && this.clearEffectShape();\r\n            shapeList = shapeList || this.shapeList;\r\n            if (shapeList == null) {\r\n                return;\r\n            }\r\n            var zlevel = ecConfig.EFFECT_ZLEVEL;\r\n            if (this.canvasSupported) {\r\n                this.zr.modLayer(\r\n                    zlevel,\r\n                    {\r\n                        motionBlur: true,\r\n                        lastFrameAlpha: this.option.effectBlendAlpha\r\n                            || ecConfig.effectBlendAlpha\r\n                    }\r\n                );\r\n            }\r\n            var shape;\r\n            for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                shape = shapeList[i];\r\n                if (!(shape._mark && shape.effect && shape.effect.show && ecEffect[shape._mark])) {\r\n                    continue;\r\n                }\r\n                ecEffect[shape._mark](this.zr, this.effectList, shape, zlevel);\r\n                this.effectList[this.effectList.length - 1]._mark = shape._mark;\r\n            }\r\n        },\r\n        \r\n        clearEffectShape: function (clearMotionBlur) {\r\n            var effectList = this.effectList;\r\n            if (this.zr && effectList && effectList.length > 0) {\r\n                clearMotionBlur && this.zr.modLayer(\r\n                    ecConfig.EFFECT_ZLEVEL, \r\n                    { motionBlur: false }\r\n                );\r\n                this.zr.delShape(effectList);\r\n\r\n                // 手动清除不会被 zr 自动清除的动画控制器\r\n                for (var i = 0; i < effectList.length; i++) {\r\n                    if (effectList[i].effectAnimator) {\r\n                        effectList[i].effectAnimator.stop();\r\n                    }\r\n                }\r\n            }\r\n            this.effectList = [];\r\n        },\r\n        \r\n        /**\r\n         * 动态标线标注添加\r\n         * @param {number} seriesIndex 系列索引\r\n         * @param {Object} markData 标线标注对象，支持多个\r\n         * @param {string} markType 标线标注类型\r\n         */\r\n        addMark: function (seriesIndex, markData, markType) {\r\n            var serie = this.series[seriesIndex];\r\n            if (this.selectedMap[serie.name]) {\r\n                var duration = this.query(this.option, 'animationDurationUpdate');\r\n                var easing = this.query(this.option, 'animationEasing');\r\n                // 备份，复用_buildMarkX\r\n                var oriMarkData = serie[markType].data;\r\n                var lastLength = this.shapeList.length;\r\n                \r\n                serie[markType].data = markData.data;\r\n                this['_build' + markType.replace('m', 'M')](seriesIndex);\r\n                if (this.option.animation && !this.option.renderAsImage) {\r\n                    // animationMark就会addShape\r\n                    this.animationMark(duration, easing, this.shapeList.slice(lastLength));\r\n                }\r\n                else {\r\n                    for (var i = lastLength, l = this.shapeList.length; i < l; i++) {\r\n                        this.zr.addShape(this.shapeList[i]);\r\n                    }\r\n                    this.zr.refreshNextFrame();\r\n                }\r\n                // 还原，复用_buildMarkX\r\n                serie[markType].data = oriMarkData;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 动态标线标注删除\r\n         * @param {number} seriesIndex 系列索引\r\n         * @param {string} markName 标线标注名称\r\n         * @param {string} markType 标线标注类型\r\n         */\r\n        delMark: function (seriesIndex, markName, markType) {\r\n            markType = markType.replace('mark', '').replace('large', '').toLowerCase();\r\n            var serie = this.series[seriesIndex];\r\n            if (this.selectedMap[serie.name]) {\r\n                var needRefresh = false;\r\n                var shapeList = [this.shapeList, this.effectList];\r\n                var len = 2;\r\n                while(len--) {\r\n                    for (var i = 0, l = shapeList[len].length; i < l; i++) {\r\n                        if (shapeList[len][i]._mark == markType\r\n                            && ecData.get(shapeList[len][i], 'seriesIndex') == seriesIndex\r\n                            && ecData.get(shapeList[len][i], 'name') == markName\r\n                        ) {\r\n                            this.zr.delShape(shapeList[len][i].id);\r\n                            shapeList[len].splice(i, 1);\r\n                            needRefresh = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                needRefresh && this.zr.refreshNextFrame();\r\n            }\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Base, ComponentBase);\r\n\r\n    return Base;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/chart/base.js\n// module id = 33\n// module chunks = 0","/**\r\n * zrender: 数学辅助类\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * sin：正弦函数\r\n * cos：余弦函数\r\n * degreeToRadian：角度转弧度\r\n * radianToDegree：弧度转角度\r\n */\r\ndefine(\r\n    function () {\r\n\r\n        var _radians = Math.PI / 180;\r\n\r\n        /**\r\n         * @param {number} angle 弧度（角度）参数\r\n         * @param {boolean} isDegrees angle参数是否为角度计算，默认为false，angle为以弧度计量的角度\r\n         */\r\n        function sin(angle, isDegrees) {\r\n            return Math.sin(isDegrees ? angle * _radians : angle);\r\n        }\r\n\r\n        /**\r\n         * @param {number} angle 弧度（角度）参数\r\n         * @param {boolean} isDegrees angle参数是否为角度计算，默认为false，angle为以弧度计量的角度\r\n         */\r\n        function cos(angle, isDegrees) {\r\n            return Math.cos(isDegrees ? angle * _radians : angle);\r\n        }\r\n\r\n        /**\r\n         * 角度转弧度\r\n         * @param {Object} angle\r\n         */\r\n        function degreeToRadian(angle) {\r\n            return angle * _radians;\r\n        }\r\n\r\n        /**\r\n         * 弧度转角度\r\n         * @param {Object} angle\r\n         */\r\n        function radianToDegree(angle) {\r\n            return angle / _radians;\r\n        }\r\n\r\n        return {\r\n            sin : sin,\r\n            cos : cos,\r\n            degreeToRadian : degreeToRadian,\r\n            radianToDegree : radianToDegree\r\n        };\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/math.js\n// module id = 34\n// module chunks = 0","/**\r\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\r\n * 可以用于 isInsidePath 判断以及获取boundingRect\r\n * \r\n * @module zrender/shape/tool/PathProxy\r\n * @author pissang (http://www.github.com/pissang)\r\n * \r\n * @example\r\n *     var SomeShape = function() {\r\n *         this._pathProxy = new PathProxy();\r\n *         ...\r\n *     }\r\n *     SomeShape.prototype.buildPath = function(ctx, style) {\r\n *         this._pathProxy.begin(ctx);\r\n *             .moveTo(style.x, style.y);\r\n *             .lineTo(style.x1, style.y1);\r\n *         ...\r\n *             .closePath();\r\n *     },\r\n *     SomeShape.prototype.getRect = function(style) {\r\n *         if (!style._rect) {\r\n *             // 这里必须要在 buildPath 之后才能调用\r\n *             style._rect = this._pathProxy.fastBoundingRect();\r\n *         }\r\n *         return this.style._rect;\r\n *     },\r\n *     SomeShape.prototype.isCover = function(x, y) {\r\n *         var rect = this.getRect(this.style);\r\n *         if (x >= rect.x\r\n *             && x <= (rect.x + rect.width)\r\n *             && y >= rect.y\r\n *             && y <= (rect.y + rect.height)\r\n *         ) {\r\n *             return area.isInsidePath(\r\n *                 this._pathProxy.pathCommands, 0, 'fill', x, y\r\n *             );\r\n *         }\r\n *     }\r\n */\r\ndefine(function (require) {\r\n    \r\n    var vector = require('../../tool/vector');\r\n    // var computeBoundingBox = require('../../tool/computeBoundingBox');\r\n\r\n    var PathSegment = function(command, points) {\r\n        this.command = command;\r\n        this.points = points || null;\r\n    };\r\n\r\n    /**\r\n     * @alias module:zrender/shape/tool/PathProxy\r\n     * @constructor\r\n     */\r\n    var PathProxy = function () {\r\n\r\n        /**\r\n         * Path描述的数组，用于`isInsidePath`的判断\r\n         * @type {Array.<Object>}\r\n         */\r\n        this.pathCommands = [];\r\n\r\n        this._ctx = null;\r\n\r\n        this._min = [];\r\n        this._max = [];\r\n    };\r\n\r\n    /**\r\n     * 快速计算Path包围盒（并不是最小包围盒）\r\n     * @return {Object}\r\n     */\r\n    PathProxy.prototype.fastBoundingRect = function () {\r\n        var min = this._min;\r\n        var max = this._max;\r\n        min[0] = min[1] = Infinity;\r\n        max[0] = max[1] = -Infinity;\r\n        for (var i = 0; i < this.pathCommands.length; i++) {\r\n            var seg = this.pathCommands[i];\r\n            var p = seg.points;\r\n            switch (seg.command) {\r\n                case 'M':\r\n                    vector.min(min, min, p);\r\n                    vector.max(max, max, p);\r\n                    break;\r\n                case 'L':\r\n                    vector.min(min, min, p);\r\n                    vector.max(max, max, p);\r\n                    break;\r\n                case 'C':\r\n                    for (var j = 0; j < 6; j += 2) {\r\n                        min[0] = Math.min(min[0], min[0], p[j]);\r\n                        min[1] = Math.min(min[1], min[1], p[j + 1]);\r\n                        max[0] = Math.max(max[0], max[0], p[j]);\r\n                        max[1] = Math.max(max[1], max[1], p[j + 1]);\r\n                    }\r\n                    break;\r\n                case 'Q':\r\n                    for (var j = 0; j < 4; j += 2) {\r\n                        min[0] = Math.min(min[0], min[0], p[j]);\r\n                        min[1] = Math.min(min[1], min[1], p[j + 1]);\r\n                        max[0] = Math.max(max[0], max[0], p[j]);\r\n                        max[1] = Math.max(max[1], max[1], p[j + 1]);\r\n                    }\r\n                    break;\r\n                case 'A':\r\n                    var cx = p[0];\r\n                    var cy = p[1];\r\n                    var rx = p[2];\r\n                    var ry = p[3];\r\n                    min[0] = Math.min(min[0], min[0], cx - rx);\r\n                    min[1] = Math.min(min[1], min[1], cy - ry);\r\n                    max[0] = Math.max(max[0], max[0], cx + rx);\r\n                    max[1] = Math.max(max[1], max[1], cy + ry);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            x: min[0],\r\n            y: min[1],\r\n            width: max[0] - min[0],\r\n            height: max[1] - min[1]\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @param  {CanvasRenderingContext2D} ctx\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.begin = function (ctx) {\r\n        this._ctx = ctx || null;\r\n        // 清空pathCommands\r\n        this.pathCommands.length = 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} x\r\n     * @param  {number} y\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.moveTo = function (x, y) {\r\n        this.pathCommands.push(new PathSegment('M', [x, y]));\r\n        if (this._ctx) {\r\n            this._ctx.moveTo(x, y);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} x\r\n     * @param  {number} y\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.lineTo = function (x, y) {\r\n        this.pathCommands.push(new PathSegment('L', [x, y]));\r\n        if (this._ctx) {\r\n            this._ctx.lineTo(x, y);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} x1\r\n     * @param  {number} y1\r\n     * @param  {number} x2\r\n     * @param  {number} y2\r\n     * @param  {number} x3\r\n     * @param  {number} y3\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\r\n        this.pathCommands.push(new PathSegment('C', [x1, y1, x2, y2, x3, y3]));\r\n        if (this._ctx) {\r\n            this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} x1\r\n     * @param  {number} y1\r\n     * @param  {number} x2\r\n     * @param  {number} y2\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\r\n        this.pathCommands.push(new PathSegment('Q', [x1, y1, x2, y2]));\r\n        if (this._ctx) {\r\n            this._ctx.quadraticCurveTo(x1, y1, x2, y2);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param  {number} cx\r\n     * @param  {number} cy\r\n     * @param  {number} r\r\n     * @param  {number} startAngle\r\n     * @param  {number} endAngle\r\n     * @param  {boolean} anticlockwise\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\r\n        this.pathCommands.push(new PathSegment(\r\n            'A', [cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1]\r\n        ));\r\n        if (this._ctx) {\r\n            this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    // TODO\r\n    PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\r\n        if (this._ctx) {\r\n            this._ctx.arcTo(x1, y1, x2, y2, radius);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    // TODO\r\n    PathProxy.prototype.rect = function (x, y, w, h) {\r\n        if (this._ctx) {\r\n            this._ctx.rect(x, y, w, h);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @return {module:zrender/shape/util/PathProxy}\r\n     */\r\n    PathProxy.prototype.closePath = function () {\r\n        this.pathCommands.push(new PathSegment('z'));\r\n        if (this._ctx) {\r\n            this._ctx.closePath();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 是否没有Path命令\r\n     * @return {boolean}\r\n     */\r\n    PathProxy.prototype.isEmpty = function() {\r\n        return this.pathCommands.length === 0;\r\n    };\r\n\r\n    PathProxy.PathSegment = PathSegment;\r\n\r\n    return PathProxy;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/util/PathProxy.js\n// module id = 35\n// module chunks = 0","/**\r\n * 水滴形状\r\n * @module zrender/shape/Droplet\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *   var Droplet = require('zrender/shape/Droplet');\r\n *   var shape = new Droplet({\r\n *       style: {\r\n *           x: 100,\r\n *           y: 100,\r\n *           a: 40,\r\n *           b: 40,\r\n *           brushType: 'both',\r\n *           color: 'blue',\r\n *           strokeColor: 'red',\r\n *           lineWidth: 3,\r\n *           text: 'Droplet'\r\n *       }    \r\n *   });\r\n *   zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IDropletStyle\r\n * @property {number} x 水滴中心x坐标\r\n * @property {number} y 水滴中心y坐标\r\n * @property {number} a 水滴横宽（中心到水平边缘最宽处距离）\r\n * @property {number} b 水滴纵高（中心到尖端距离）\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n        'use strict';\r\n\r\n        var Base = require('./Base');\r\n        var PathProxy = require('./util/PathProxy');\r\n        var area = require('../tool/area');\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Droplet\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Droplet = function(options) {\r\n            Base.call(this, options);\r\n            this._pathProxy = new PathProxy();\r\n            /**\r\n             * 水滴绘制样式\r\n             * @name module:zrender/shape/Droplet#style\r\n             * @type {module:zrender/shape/Droplet~IDropletStyle}\r\n             */\r\n            /**\r\n             * 水滴高亮绘制样式\r\n             * @name module:zrender/shape/Droplet#highlightStyle\r\n             * @type {module:zrender/shape/Droplet~IDropletStyle}\r\n             */\r\n        };\r\n\r\n        Droplet.prototype = {\r\n            type: 'droplet',\r\n\r\n            /**\r\n             * 创建水滴路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Droplet~IDropletStyle} style\r\n             */\r\n            buildPath : function(ctx, style) {\r\n                var path = this._pathProxy || new PathProxy();\r\n                path.begin(ctx);\r\n\r\n                path.moveTo(style.x, style.y + style.a);\r\n                path.bezierCurveTo(\r\n                    style.x + style.a,\r\n                    style.y + style.a,\r\n                    style.x + style.a * 3 / 2,\r\n                    style.y - style.a / 3,\r\n                    style.x,\r\n                    style.y - style.b\r\n                );\r\n                path.bezierCurveTo(\r\n                    style.x - style.a * 3 / 2,\r\n                    style.y - style.a / 3,\r\n                    style.x - style.a,\r\n                    style.y + style.a,\r\n                    style.x,\r\n                    style.y + style.a\r\n                );\r\n                path.closePath();\r\n            },\r\n\r\n            /**\r\n             * 计算返回水滴的包围盒矩形\r\n             * @param {module:zrender/shape/Droplet~IDropletStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                if (!this._pathProxy.isEmpty()) {\r\n                    this.buildPath(null, style);\r\n                }\r\n                return this._pathProxy.fastBoundingRect();\r\n            },\r\n\r\n            isCover: function (x, y) {\r\n                var originPos = this.transformCoordToLocal(x, y);\r\n                x = originPos[0];\r\n                y = originPos[1];\r\n                \r\n                if (this.isCoverRect(x, y)) {\r\n                    return area.isInsidePath(\r\n                        this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, x, y\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Droplet, Base);\r\n        return Droplet;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Droplet.js\n// module id = 36\n// module chunks = 0","/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：大规模散点图图形\r\n * 可配图形属性：\r\n   {\r\n       // 基础属性\r\n       shape  : 'symbol',       // 必须，shape类标识，需要显式指定\r\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\r\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\r\n       invisible : {boolean},   // 默认为false，是否可见\r\n\r\n       // 样式属性，默认状态样式样式属性\r\n       style  : {\r\n           pointList     : {Array},   // 必须，二维数组，二维内容如下\r\n               x         : {number},  // 必须，横坐标\r\n               y         : {number},  // 必须，纵坐标数组\r\n               size      : {number},  // 必须，半宽\r\n               type      : {string=}, // 默认为'circle',图形类型\r\n       },\r\n\r\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\r\n       highlightStyle : {\r\n           // 同style\r\n       }\r\n\r\n       // 交互属性，详见shape.Base\r\n\r\n       // 事件属性，详见shape.Base\r\n   }\r\n */\r\ndefine(function (require) {\r\n    var Base = require('zrenderjs/shape/Base');\r\n    var PolygonShape = require('zrenderjs/shape/Polygon');\r\n    var polygonInstance = new PolygonShape({});\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n\r\n    function Symbol(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Symbol.prototype =  {\r\n        type : 'symbol',\r\n        /**\r\n         * 创建矩形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            var pointList = style.pointList;\r\n            var len = pointList.length;\r\n            if (len === 0) {\r\n                return;\r\n            }\r\n\r\n            var subSize = 10000;\r\n            var subSetLength = Math.ceil(len / subSize);\r\n            var sub;\r\n            var subLen;\r\n            var isArray = pointList[0] instanceof Array;\r\n            var size = style.size ? style.size : 2;\r\n            var curSize = size;\r\n            var halfSize = size / 2;\r\n            var PI2 = Math.PI * 2;\r\n            var percent;\r\n            var x;\r\n            var y;\r\n            for (var j = 0; j < subSetLength; j++) {\r\n                ctx.beginPath();\r\n                sub = j * subSize;\r\n                subLen = sub + subSize;\r\n                subLen = subLen > len ? len : subLen;\r\n                for (var i = sub; i < subLen; i++) {\r\n                    if (style.random) {\r\n                        percent = style['randomMap' + (i % 20)] / 100;\r\n                        curSize = size * percent * percent;\r\n                        halfSize = curSize / 2;\r\n                    }\r\n                    if (isArray) {\r\n                        x = pointList[i][0];\r\n                        y = pointList[i][1];\r\n                    }\r\n                    else {\r\n                        x = pointList[i].x;\r\n                        y = pointList[i].y;\r\n                    }\r\n                    if (curSize < 3) {\r\n                        // 小于3像素视觉误差\r\n                        ctx.rect(x - halfSize, y - halfSize, curSize, curSize);\r\n                    }\r\n                    else {\r\n                        // 大于3像素才考虑图形\r\n                        switch (style.iconType) {\r\n                            case 'circle' :\r\n                                ctx.moveTo(x, y);\r\n                                ctx.arc(x, y, halfSize, 0, PI2, true);\r\n                                break;\r\n                            case 'diamond' :\r\n                                ctx.moveTo(x, y - halfSize);\r\n                                ctx.lineTo(x + halfSize / 3, y - halfSize / 3);\r\n                                ctx.lineTo(x + halfSize, y);\r\n                                ctx.lineTo(x + halfSize / 3, y + halfSize / 3);\r\n                                ctx.lineTo(x, y + halfSize);\r\n                                ctx.lineTo(x - halfSize / 3, y + halfSize / 3);\r\n                                ctx.lineTo(x - halfSize, y);\r\n                                ctx.lineTo(x - halfSize / 3, y - halfSize / 3);\r\n                                ctx.lineTo(x, y - halfSize);\r\n                                break;\r\n                            default :\r\n                                ctx.rect(x - halfSize, y - halfSize, curSize, curSize);\r\n                        }\r\n                    }\r\n                }\r\n                ctx.closePath();\r\n                if (j < (subSetLength - 1)) {\r\n                    switch (style.brushType) {\r\n                        case 'both':\r\n                            ctx.fill();\r\n                            style.lineWidth > 0 && ctx.stroke();  // js hint -_-\"\r\n                            break;\r\n                        case 'stroke':\r\n                            style.lineWidth > 0 && ctx.stroke();\r\n                            break;\r\n                        default:\r\n                            ctx.fill();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /* 像素模式\r\n        buildPath : function (ctx, style) {\r\n            var pointList = style.pointList;\r\n            var rect = this.getRect(style);\r\n            var ratio = window.devicePixelRatio || 1;\r\n            // console.log(rect)\r\n            // var ti = new Date();\r\n            // bbox取整\r\n            rect = {\r\n                x : Math.floor(rect.x),\r\n                y : Math.floor(rect.y),\r\n                width : Math.floor(rect.width),\r\n                height : Math.floor(rect.height)\r\n            };\r\n            var pixels = ctx.getImageData(\r\n                rect.x * ratio, rect.y * ratio,\r\n                rect.width * ratio, rect.height * ratio\r\n            );\r\n            var data = pixels.data;\r\n            var idx;\r\n            var zrColor = require('zrenderjs/tool/color');\r\n            var color = zrColor.toArray(style.color);\r\n            var r = color[0];\r\n            var g = color[1];\r\n            var b = color[2];\r\n            var width = rect.width;\r\n\r\n            for (var i = 1, l = pointList.length; i < l; i++) {\r\n                idx = ((Math.floor(pointList[i][0]) - rect.x) * ratio\r\n                       + (Math.floor(pointList[i][1])- rect.y) * width * ratio * ratio\r\n                      ) * 4;\r\n                data[idx] = r;\r\n                data[idx + 1] = g;\r\n                data[idx + 2] = b;\r\n                data[idx + 3] = 255;\r\n            }\r\n            ctx.putImageData(pixels, rect.x * ratio, rect.y * ratio);\r\n            // console.log(new Date() - ti);\r\n            return;\r\n        },\r\n        */\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            return style.__rect || polygonInstance.getRect(style);\r\n        },\r\n\r\n        isCover : require('./normalIsCover')\r\n    };\r\n\r\n    zrUtil.inherits(Symbol, Base);\r\n\r\n    return Symbol;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/shape/Symbol.js\n// module id = 37\n// module chunks = 0","/**\r\n * Catmull-Rom spline 插值折线\r\n * @module zrender/shape/util/smoothSpline\r\n * @author pissang (https://www.github.com/pissang) \r\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\ndefine(\r\n    function (require) {\r\n        var vector = require('../../tool/vector');\r\n\r\n        /**\r\n         * @inner\r\n         */\r\n        function interpolate(p0, p1, p2, p3, t, t2, t3) {\r\n            var v0 = (p2 - p0) * 0.5;\r\n            var v1 = (p3 - p1) * 0.5;\r\n            return (2 * (p1 - p2) + v0 + v1) * t3 \r\n                    + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\r\n                    + v0 * t + p1;\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/shape/util/smoothSpline\r\n         * @param {Array} points 线段顶点数组\r\n         * @param {boolean} isLoop\r\n         * @param {Array} constraint \r\n         * @return {Array}\r\n         */\r\n        return function (points, isLoop, constraint) {\r\n            var len = points.length;\r\n            var ret = [];\r\n\r\n            var distance = 0;\r\n            for (var i = 1; i < len; i++) {\r\n                distance += vector.distance(points[i - 1], points[i]);\r\n            }\r\n            \r\n            var segs = distance / 5;\r\n            segs = segs < len ? len : segs;\r\n            for (var i = 0; i < segs; i++) {\r\n                var pos = i / (segs - 1) * (isLoop ? len : len - 1);\r\n                var idx = Math.floor(pos);\r\n\r\n                var w = pos - idx;\r\n\r\n                var p0;\r\n                var p1 = points[idx % len];\r\n                var p2;\r\n                var p3;\r\n                if (!isLoop) {\r\n                    p0 = points[idx === 0 ? idx : idx - 1];\r\n                    p2 = points[idx > len - 2 ? len - 1 : idx + 1];\r\n                    p3 = points[idx > len - 3 ? len - 1 : idx + 2];\r\n                }\r\n                else {\r\n                    p0 = points[(idx - 1 + len) % len];\r\n                    p2 = points[(idx + 1) % len];\r\n                    p3 = points[(idx + 2) % len];\r\n                }\r\n\r\n                var w2 = w * w;\r\n                var w3 = w * w2;\r\n\r\n                ret.push([\r\n                    interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\r\n                    interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\r\n                ]);\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/util/smoothSpline.js\n// module id = 38\n// module chunks = 0","/**\r\n * 贝塞尔平滑曲线 \r\n * @module zrender/shape/util/smoothBezier\r\n * @author pissang (https://www.github.com/pissang) \r\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\ndefine(\r\n    function (require) {\r\n        var vector = require('../../tool/vector');\r\n\r\n        /**\r\n         * 贝塞尔平滑曲线\r\n         * @alias module:zrender/shape/util/smoothBezier\r\n         * @param {Array} points 线段顶点数组\r\n         * @param {number} smooth 平滑等级, 0-1\r\n         * @param {boolean} isLoop\r\n         * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\r\n         *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\r\n         *                           整个折线的包围盒做一个并集用来约束控制点。\r\n         * @param {Array} 计算出来的控制点数组\r\n         */\r\n        return function (points, smooth, isLoop, constraint) {\r\n            var cps = [];\r\n\r\n            var v = [];\r\n            var v1 = [];\r\n            var v2 = [];\r\n            var prevPoint;\r\n            var nextPoint;\r\n\r\n            var hasConstraint = !!constraint;\r\n            var min, max;\r\n            if (hasConstraint) {\r\n                min = [Infinity, Infinity];\r\n                max = [-Infinity, -Infinity];\r\n                for (var i = 0, len = points.length; i < len; i++) {\r\n                    vector.min(min, min, points[i]);\r\n                    vector.max(max, max, points[i]);\r\n                }\r\n                // 与指定的包围盒做并集\r\n                vector.min(min, min, constraint[0]);\r\n                vector.max(max, max, constraint[1]);\r\n            }\r\n\r\n            for (var i = 0, len = points.length; i < len; i++) {\r\n                var point = points[i];\r\n                var prevPoint;\r\n                var nextPoint;\r\n\r\n                if (isLoop) {\r\n                    prevPoint = points[i ? i - 1 : len - 1];\r\n                    nextPoint = points[(i + 1) % len];\r\n                } \r\n                else {\r\n                    if (i === 0 || i === len - 1) {\r\n                        cps.push(vector.clone(points[i]));\r\n                        continue;\r\n                    } \r\n                    else {\r\n                        prevPoint = points[i - 1];\r\n                        nextPoint = points[i + 1];\r\n                    }\r\n                }\r\n\r\n                vector.sub(v, nextPoint, prevPoint);\r\n\r\n                // use degree to scale the handle length\r\n                vector.scale(v, v, smooth);\r\n\r\n                var d0 = vector.distance(point, prevPoint);\r\n                var d1 = vector.distance(point, nextPoint);\r\n                var sum = d0 + d1;\r\n                if (sum !== 0) {\r\n                    d0 /= sum;\r\n                    d1 /= sum;\r\n                }\r\n\r\n                vector.scale(v1, v, -d0);\r\n                vector.scale(v2, v, d1);\r\n                var cp0 = vector.add([], point, v1);\r\n                var cp1 = vector.add([], point, v2);\r\n                if (hasConstraint) {\r\n                    vector.max(cp0, cp0, min);\r\n                    vector.min(cp0, cp0, max);\r\n                    vector.max(cp1, cp1, min);\r\n                    vector.min(cp1, cp1, max);\r\n                }\r\n                cps.push(cp0);\r\n                cps.push(cp1);\r\n            }\r\n            \r\n            if (isLoop) {\r\n                cps.push(vector.clone(cps.shift()));\r\n            }\r\n\r\n            return cps;\r\n        };\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/util/smoothBezier.js\n// module id = 39\n// module chunks = 0","/**\r\n * 折线\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @module zrender/shape/Polyline\r\n * @example\r\n *     var Polyline = require('zrender/shape/Polyline');\r\n *     var shape = new Polyline({\r\n *         style: {\r\n *             pointList: [[0, 0], [100, 100], [100, 0]],\r\n *             smooth: 'bezier',\r\n *             strokeColor: 'purple'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IPolylineStyle\r\n * @property {Array.<number>} pointList 顶点坐标数组\r\n * @property {string|number} [smooth=''] 是否做平滑插值, 平滑算法可以选择 bezier, spline\r\n * @property {number} [smoothConstraint] 平滑约束\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {string} [lineJoin='miter'] 线段连接样式，可以是 miter, round, bevel\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var smoothSpline = require('./util/smoothSpline');\r\n        var smoothBezier = require('./util/smoothBezier');\r\n        var dashedLineTo = require('./util/dashedLineTo');\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Polyline\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Polyline = function(options) {\r\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\r\n            this.textPosition = 'end';\r\n            Base.call(this, options);\r\n            /**\r\n             * 贝赛尔曲线绘制样式\r\n             * @name module:zrender/shape/Polyline#style\r\n             * @type {module:zrender/shape/Polyline~IPolylineStyle}\r\n             */\r\n            /**\r\n             * 贝赛尔曲线高亮绘制样式\r\n             * @name module:zrender/shape/Polyline#highlightStyle\r\n             * @type {module:zrender/shape/Polyline~IPolylineStyle}\r\n             */\r\n        };\r\n\r\n        Polyline.prototype =  {\r\n            type: 'polyline',\r\n\r\n            /**\r\n             * 创建多边形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Polyline~IPolylineStyle} style\r\n             */\r\n            buildPath : function(ctx, style) {\r\n                var pointList = style.pointList;\r\n                if (pointList.length < 2) {\r\n                    // 少于2个点就不画了~\r\n                    return;\r\n                }\r\n                \r\n                var len = Math.min(\r\n                    style.pointList.length, \r\n                    Math.round(style.pointListLength || style.pointList.length)\r\n                );\r\n                \r\n                if (style.smooth && style.smooth !== 'spline') {\r\n                    if (! style.controlPointList) {\r\n                        this.updateControlPoints(style);\r\n                    }\r\n                    var controlPointList = style.controlPointList;\r\n\r\n                    ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                    var cp1;\r\n                    var cp2;\r\n                    var p;\r\n                    for (var i = 0; i < len - 1; i++) {\r\n                        cp1 = controlPointList[i * 2];\r\n                        cp2 = controlPointList[i * 2 + 1];\r\n                        p = pointList[i + 1];\r\n                        ctx.bezierCurveTo(\r\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    if (style.smooth === 'spline') {\r\n                        pointList = smoothSpline(pointList);\r\n                        len = pointList.length;\r\n                    }\r\n                    if (!style.lineType || style.lineType == 'solid') {\r\n                        // 默认为实线\r\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                        for (var i = 1; i < len; i++) {\r\n                            ctx.lineTo(pointList[i][0], pointList[i][1]);\r\n                        }\r\n                    }\r\n                    else if (style.lineType == 'dashed'\r\n                            || style.lineType == 'dotted'\r\n                    ) {\r\n                        var dashLength = (style.lineWidth || 1) \r\n                                         * (style.lineType == 'dashed' ? 5 : 1);\r\n                        ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                        for (var i = 1; i < len; i++) {\r\n                            dashedLineTo(\r\n                                ctx,\r\n                                pointList[i - 1][0], pointList[i - 1][1],\r\n                                pointList[i][0], pointList[i][1],\r\n                                dashLength\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n                return;\r\n            },\r\n\r\n            updateControlPoints: function (style) {\r\n                style.controlPointList = smoothBezier(\r\n                    style.pointList, style.smooth, false, style.smoothConstraint\r\n                );\r\n            },\r\n\r\n            /**\r\n             * 计算返回折线包围盒矩形。\r\n             * @param {IZRenderBezierCurveStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function(style) {\r\n                return require('./Polygon').prototype.getRect(style);\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Polyline, Base);\r\n        return Polyline;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Polyline.js\n// module id = 40\n// module chunks = 0","/**\r\n * ShapeBundle 捆绑多个 shape 的 buildPath 方法，但是共用同一个样式\r\n * @author pissang (https://github.com/pissang)\r\n * @module zrender/shape/ShapeBundle\r\n * @example\r\n *     var poly1 = new PolygonShape();\r\n *     var poly2 = new PolygonShape();\r\n *     var poly3 = new PolygonShape();\r\n *     var shapeBundle = new ShapeBundle({\r\n *         style: {\r\n *             shapeList: [poly1, poly2, poly3],\r\n *             color: 'red'\r\n *         }\r\n *     });\r\n *     zr.addShape(shapeBundle);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IShapeBundleStyle\r\n * @property {string} shapeList shape列表\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(function (require) {\r\n\r\n    var Base = require('./Base');\r\n\r\n    var ShapeBundle = function (options) {\r\n        Base.call(this, options);\r\n        /**\r\n         * ShapeBundle绘制样式\r\n         * @name module:zrender/shape/ShapeBundle#style\r\n         * @type {module:zrender/shape/ShapeBundle~IShapeBundleStyle}\r\n         */\r\n        /**\r\n         * ShapeBundle高亮绘制样式\r\n         * @name module:zrender/shape/ShapeBundle#highlightStyle\r\n         * @type {module:zrender/shape/ShapeBundle~IShapeBundleStyle}\r\n         */\r\n    };\r\n\r\n    ShapeBundle.prototype = {\r\n\r\n        constructor: ShapeBundle,\r\n\r\n        type: 'shape-bundle',\r\n\r\n        brush: function (ctx, isHighlight) {\r\n            var style = this.beforeBrush(ctx, isHighlight);\r\n\r\n            ctx.beginPath();\r\n            for (var i = 0; i < style.shapeList.length; i++) {\r\n                var subShape = style.shapeList[i];\r\n                var subShapeStyle = subShape.style;\r\n                if (isHighlight) {\r\n                    subShapeStyle = subShape.getHighlightStyle(\r\n                        subShapeStyle,\r\n                        subShape.highlightStyle || {},\r\n                        subShape.brushTypeOnly\r\n                    );\r\n                }\r\n                subShape.buildPath(ctx, subShapeStyle);\r\n            }\r\n            switch (style.brushType) {\r\n                /* jshint ignore:start */\r\n                case 'both':\r\n                    ctx.fill();\r\n                case 'stroke':\r\n                    style.lineWidth > 0 && ctx.stroke();\r\n                    break;\r\n                /* jshint ignore:end */\r\n                default:\r\n                    ctx.fill();\r\n            }\r\n\r\n            this.drawText(ctx, style, this.style);\r\n\r\n            this.afterBrush(ctx);\r\n        },\r\n\r\n        /**\r\n         * 计算返回多边形包围盒矩阵\r\n         * @param {module:zrender/shape/Polygon~IShapeBundleStyle} style\r\n         * @return {module:zrender/shape/Base~IBoundingRect}\r\n         */\r\n        getRect: function (style) {\r\n            if (style.__rect) {\r\n                return style.__rect;\r\n            }\r\n            var minX = Infinity;\r\n            var maxX = -Infinity;\r\n            var minY = Infinity;\r\n            var maxY = -Infinity;\r\n            for (var i = 0; i < style.shapeList.length; i++) {\r\n                var subShape = style.shapeList[i];\r\n                // TODO Highlight style ?\r\n                var subRect = subShape.getRect(subShape.style);\r\n\r\n                var minX = Math.min(subRect.x, minX);\r\n                var minY = Math.min(subRect.y, minY);\r\n                var maxX = Math.max(subRect.x + subRect.width, maxX);\r\n                var maxY = Math.max(subRect.y + subRect.height, maxY);\r\n            }\r\n\r\n            style.__rect = {\r\n                x: minX,\r\n                y: minY,\r\n                width: maxX - minX,\r\n                height: maxY - minY\r\n            };\r\n\r\n            return style.__rect;\r\n        },\r\n\r\n        isCover: function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n            \r\n            if (this.isCoverRect(x, y)) {\r\n                for (var i = 0; i < this.style.shapeList.length; i++) {\r\n                    var subShape = this.style.shapeList[i];\r\n                    if (subShape.isCover(x, y)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n\r\n    require('../tool/util').inherits(ShapeBundle, Base);\r\n    return ShapeBundle;\r\n}); \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/ShapeBundle.js\n// module id = 41\n// module chunks = 0","/**\r\n * 高精度数学运算\r\n */\r\ndefine(function() {\r\n    // 除法函数，用来得到精确的除法结果 \r\n    // 说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。 \r\n    // 调用：accDiv(arg1,arg2) \r\n    // 返回值：arg1除以arg2的精确结果\r\n    function accDiv(arg1,arg2){\r\n        var s1 = arg1.toString();\r\n        var s2 = arg2.toString(); \r\n        var m = 0;\r\n        try {\r\n            m = s2.split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        try {\r\n            m -= s1.split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        \r\n        return (s1.replace('.', '') - 0) / (s2.replace('.', '') - 0) * Math.pow(10, m);\r\n    }\r\n\r\n    // 乘法函数，用来得到精确的乘法结果\r\n    // 说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。 \r\n    // 调用：accMul(arg1,arg2) \r\n    // 返回值：arg1乘以arg2的精确结果\r\n    function accMul(arg1, arg2) {\r\n        var s1 = arg1.toString();\r\n        var s2 = arg2.toString();\r\n        var m = 0;\r\n        try {\r\n            m += s1.split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        try {\r\n            m += s2.split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        \r\n        return (s1.replace('.', '') - 0) * (s2.replace('.', '') - 0) / Math.pow(10, m);\r\n    }\r\n\r\n    // 加法函数，用来得到精确的加法结果 \r\n    // 说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。 \r\n    // 调用：accAdd(arg1,arg2) \r\n    // 返回值：arg1加上arg2的精确结果 \r\n    function accAdd(arg1, arg2) {\r\n        var r1 = 0;\r\n        var r2 = 0;\r\n        try {\r\n            r1 = arg1.toString().split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        try {\r\n            r2 = arg2.toString().split('.')[1].length;\r\n        }\r\n        catch(e) {}\r\n        \r\n        var m = Math.pow(10, Math.max(r1, r2));\r\n        return (Math.round(arg1 * m) + Math.round(arg2 * m)) / m; \r\n    }\r\n\r\n    //减法函数，用来得到精确的减法结果 \r\n    //说明：javascript的减法结果会有误差，在两个浮点数减法的时候会比较明显。这个函数返回较为精确的减法结果。 \r\n    //调用：accSub(arg1,arg2) \r\n    //返回值：arg1减法arg2的精确结果 \r\n    function accSub(arg1,arg2) {\r\n        return accAdd(arg1, -arg2);\r\n    }\r\n\r\n    return {\r\n        accDiv : accDiv,\r\n        accMul : accMul,\r\n        accAdd : accAdd,\r\n        accSub : accSub\r\n    };\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/accMath.js\n// module id = 42\n// module chunks = 0","/**\r\n * 圆环\r\n * @module zrender/shape/Ring\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * @example\r\n *     var Ring = require('zrender/shape/Ring');\r\n *     var shape = new Ring({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r0: 30,\r\n *             r: 50\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IRingStyle\r\n * @property {number} x 圆心x坐标\r\n * @property {number} y 圆心y坐标\r\n * @property {number} r0 内圆半径\r\n * @property {number} r 外圆半径\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Ring\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Ring = function (options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * 圆环绘制样式\r\n             * @name module:zrender/shape/Ring#style\r\n             * @type {module:zrender/shape/Ring~IRingStyle}\r\n             */\r\n            /**\r\n             * 圆环高亮绘制样式\r\n             * @name module:zrender/shape/Ring#highlightStyle\r\n             * @type {module:zrender/shape/Ring~IRingStyle}\r\n             */\r\n        };\r\n\r\n        Ring.prototype = {\r\n            type: 'ring',\r\n\r\n            /**\r\n             * 创建圆环路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Ring~IRingStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                // 非零环绕填充优化\r\n                ctx.arc(style.x, style.y, style.r, 0, Math.PI * 2, false);\r\n                ctx.moveTo(style.x + style.r0, style.y);\r\n                ctx.arc(style.x, style.y, style.r0, 0, Math.PI * 2, true);\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回圆环包围盒矩阵\r\n             * @param {module:zrender/shape/Ring~IRingStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                style.__rect = {\r\n                    x : Math.round(style.x - style.r - lineWidth / 2),\r\n                    y : Math.round(style.y - style.r - lineWidth / 2),\r\n                    width : style.r * 2 + lineWidth,\r\n                    height : style.r * 2 + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Ring, Base);\r\n        return Ring;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Ring.js\n// module id = 43\n// module chunks = 0","import VueEchartWordcloud from \"./VueEchartWordcloud.vue\";\r\n\r\nconst comment = {\r\n    install: function (Vue) {\r\n        Vue.component(VueEchartWordcloud.name, VueEchartWordcloud);\r\n    }\r\n}\r\n\r\n// global 情况下自动安装\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n    window.Vue.use(comment)\r\n}\r\n\r\n// 导出模块\r\nexport default comment;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.js","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-21f2da39\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./VueEchartWordcloud.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueEchartWordcloud.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueEchartWordcloud.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-21f2da39\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./VueEchartWordcloud.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-21f2da39\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/VueEchartWordcloud.vue\n// module id = 45\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-21f2da39\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./VueEchartWordcloud.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"effa1f34\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-21f2da39\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/lib/VueEchartWordcloud.vue\n// module id = 46\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".chart-container[data-v-21f2da39]{background-color:transparent}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-21f2da39\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/lib/VueEchartWordcloud.vue\n// module id = 47\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 48\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 49\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 50\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 51\n// module chunks = 0","/*!\r\n * ECharts, a javascript interactive chart library.\r\n *\r\n * Copyright (c) 2015, Baidu Inc.\r\n * All rights reserved.\r\n *\r\n * LICENSE\r\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\r\n */\r\n\r\n/**\r\n * echarts\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ecConfig = require('./config');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrEvent = require('zrenderjs/tool/event');\r\n\r\n    var self = {};\r\n\r\n    var _canvasSupported = require('zrenderjs/tool/env').canvasSupported;\r\n    var _idBase = new Date() - 0;\r\n    var _instances = {};    // ECharts实例map索引\r\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\r\n\r\n    self.version = '2.2.7';\r\n    self.dependencies = {\r\n        zrender: '2.1.1'\r\n    };\r\n    /**\r\n     * 入口方法\r\n     */\r\n    self.init = function (dom, theme) {\r\n        var zrender = require('zrenderjs');\r\n        if ((zrender.version.replace('.', '') - 0) < (self.dependencies.zrender.replace('.', '') - 0)) {\r\n            console.error(\r\n                'ZRender ' + zrender.version\r\n                + ' is too old for ECharts ' + self.version\r\n                + '. Current version need ZRender '\r\n                + self.dependencies.zrender + '+'\r\n            );\r\n        }\r\n\r\n        dom = dom instanceof Array ? dom[0] : dom;\r\n\r\n        // dom与echarts实例映射索引\r\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n        if (!key) {\r\n            key = _idBase++;\r\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, key);\r\n        }\r\n\r\n        if (_instances[key]) {\r\n            // 同一个dom上多次init，自动释放已有实例\r\n            _instances[key].dispose();\r\n        }\r\n        _instances[key] = new Echarts(dom);\r\n        _instances[key].id = key;\r\n        _instances[key].canvasSupported = _canvasSupported;\r\n        _instances[key].setTheme(theme);\r\n\r\n        return _instances[key];\r\n    };\r\n\r\n    /**\r\n     * 通过id获得ECharts实例，id可在实例化后读取\r\n     */\r\n    self.getInstanceById = function (key) {\r\n        return _instances[key];\r\n    };\r\n\r\n    /**\r\n     * 消息中心\r\n     */\r\n    function MessageCenter() {\r\n        zrEvent.Dispatcher.call(this);\r\n    }\r\n    zrUtil.merge(MessageCenter.prototype, zrEvent.Dispatcher.prototype, true);\r\n\r\n    /**\r\n     * 基于zrender实现Echarts接口层\r\n     * @param {HtmlElement} dom 必要\r\n     */\r\n    function Echarts(dom) {\r\n        // Fxxk IE11 for breaking initialization without a warrant;\r\n        // Just set something to let it be!\r\n        // by kener 2015-01-09\r\n        dom.innerHTML = '';\r\n        this._themeConfig = {}; // zrUtil.clone(ecConfig);\r\n\r\n        this.dom = dom;\r\n        // this._zr;\r\n        // this._option;                    // curOption clone\r\n        // this._optionRestore;             // for restore;\r\n        // this._island;\r\n        // this._toolbox;\r\n        // this._timeline;\r\n        // this._refreshInside;             // 内部刷新标志位\r\n\r\n        this._connected = false;\r\n        this._status = {                    // 用于图表间通信\r\n            dragIn: false,\r\n            dragOut: false,\r\n            needRefresh: false\r\n        };\r\n        this._curEventType = false;         // 破循环信号灯\r\n        this._chartList = [];               // 图表实例\r\n\r\n        this._messageCenter = new MessageCenter();\r\n\r\n        this._messageCenterOutSide = new MessageCenter();    // Echarts层的外部消息中心，做Echarts层的消息转发\r\n\r\n        // resize方法经常被绑定到window.resize上，闭包一个this\r\n        this.resize = this.resize();\r\n\r\n        // 初始化::构造函数\r\n        this._init();\r\n    }\r\n\r\n    /**\r\n     * ZRender EVENT\r\n     *\r\n     * @inner\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var ZR_EVENT = require('zrenderjs/config').EVENT;\r\n\r\n    /**\r\n     * 要绑定监听的zrender事件列表\r\n     *\r\n     * @const\r\n     * @inner\r\n     * @type {Array}\r\n     */\r\n    var ZR_EVENT_LISTENS = [\r\n        'CLICK', 'DBLCLICK', 'MOUSEOVER', 'MOUSEOUT',\r\n        'DRAGSTART', 'DRAGEND', 'DRAGENTER', 'DRAGOVER', 'DRAGLEAVE', 'DROP'\r\n    ];\r\n\r\n    /**\r\n     * 对echarts的实例中的chartList属性成员，逐个进行方法调用，遍历顺序为逆序\r\n     * 由于在事件触发的默认行为处理中，多次用到相同逻辑，所以抽象了该方法\r\n     * 由于所有的调用场景里，最多只有两个参数，基于性能和体积考虑，这里就不使用call或者apply了\r\n     *\r\n     * @inner\r\n     * @param {ECharts} ecInstance ECharts实例\r\n     * @param {string} methodName 要调用的方法名\r\n     * @param {*} arg0 调用参数1\r\n     * @param {*} arg1 调用参数2\r\n     * @param {*} arg2 调用参数3\r\n     */\r\n    function callChartListMethodReverse(ecInstance, methodName, arg0, arg1, arg2) {\r\n        var chartList = ecInstance._chartList;\r\n        var len = chartList.length;\r\n\r\n        while (len--) {\r\n            var chart = chartList[len];\r\n            if (typeof chart[methodName] === 'function') {\r\n                chart[methodName](arg0, arg1, arg2);\r\n            }\r\n        }\r\n    }\r\n\r\n    Echarts.prototype = {\r\n        /**\r\n         * 初始化::构造函数\r\n         */\r\n        _init: function () {\r\n            var self = this;\r\n            var _zr = require('zrenderjs').init(this.dom);\r\n            this._zr = _zr;\r\n\r\n            // wrap: n,e,d,t for name event data this\r\n            this._messageCenter.dispatch = function(type, event, eventPackage, that) {\r\n                eventPackage = eventPackage || {};\r\n                eventPackage.type = type;\r\n                eventPackage.event = event;\r\n\r\n                self._messageCenter.dispatchWithContext(type, eventPackage, that);\r\n                self._messageCenterOutSide.dispatchWithContext(type, eventPackage, that);\r\n\r\n                // 如下注掉的代码，@see: https://github.com/ecomfe/echarts-discuss/issues/3\r\n                // if (type != 'HOVER' && type != 'MOUSEOUT') {    // 频繁事件直接抛出\r\n                //     setTimeout(function(){\r\n                //         self._messageCenterOutSide.dispatchWithContext(\r\n                //             type, eventPackage, that\r\n                //         );\r\n                //     },50);\r\n                // }\r\n                // else {\r\n                //     self._messageCenterOutSide.dispatchWithContext(\r\n                //         type, eventPackage, that\r\n                //     );\r\n                // }\r\n            };\r\n\r\n            this._onevent = function(param){\r\n                return self.__onevent(param);\r\n            };\r\n            for (var e in ecConfig.EVENT) {\r\n                if (e != 'CLICK' && e != 'DBLCLICK'\r\n                    && e != 'HOVER' && e != 'MOUSEOUT' && e != 'MAP_ROAM'\r\n                ) {\r\n                    this._messageCenter.bind(ecConfig.EVENT[e], this._onevent, this);\r\n                }\r\n            }\r\n\r\n\r\n            var eventBehaviors = {};\r\n            this._onzrevent = function (param) {\r\n                return self[eventBehaviors[ param.type ]](param);\r\n            };\r\n\r\n            // 挂载关心的事件\r\n            for (var i = 0, len = ZR_EVENT_LISTENS.length; i < len; i++) {\r\n                var eventName = ZR_EVENT_LISTENS[i];\r\n                var eventValue = ZR_EVENT[eventName];\r\n                eventBehaviors[eventValue] = '_on' + eventName.toLowerCase();\r\n                _zr.on(eventValue, this._onzrevent);\r\n            }\r\n\r\n            this.chart = {};            // 图表索引\r\n            this.component = {};        // 组件索引\r\n\r\n            // 内置图表\r\n            // 孤岛\r\n            var Island = require('./chart/island');\r\n            this._island = new Island(this._themeConfig, this._messageCenter, _zr, {}, this);\r\n            this.chart.island = this._island;\r\n\r\n            // 内置通用组件\r\n            // 工具箱\r\n            var Toolbox = require('./component/toolbox');\r\n            this._toolbox = new Toolbox(this._themeConfig, this._messageCenter, _zr, {}, this);\r\n            this.component.toolbox = this._toolbox;\r\n\r\n            var componentLibrary = require('./component');\r\n            componentLibrary.define('title', require('./component/title'));\r\n            componentLibrary.define('tooltip', require('./component/tooltip'));\r\n            componentLibrary.define('legend', require('./component/legend'));\r\n\r\n            if (_zr.getWidth() === 0 || _zr.getHeight() === 0) {\r\n                console.error('Dom’s width & height should be ready before init.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * ECharts事件处理中心\r\n         */\r\n        __onevent: function (param){\r\n            param.__echartsId = param.__echartsId || this.id;\r\n\r\n            // 来自其他联动图表的事件\r\n            var fromMyself = (param.__echartsId === this.id);\r\n\r\n            if (!this._curEventType) {\r\n                this._curEventType = param.type;\r\n            }\r\n\r\n            switch (param.type) {\r\n                case ecConfig.EVENT.LEGEND_SELECTED :\r\n                    this._onlegendSelected(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_ZOOM :\r\n                    if (!fromMyself) {\r\n                        var dz = this.component.dataZoom;\r\n                        if (dz) {\r\n                            dz.silence(true);\r\n                            dz.absoluteZoom(param.zoom);\r\n                            dz.silence(false);\r\n                        }\r\n                    }\r\n                    this._ondataZoom(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_RANGE :\r\n                    fromMyself && this._ondataRange(param);\r\n                    break;\r\n                case ecConfig.EVENT.MAGIC_TYPE_CHANGED :\r\n                    if (!fromMyself) {\r\n                        var tb = this.component.toolbox;\r\n                        if (tb) {\r\n                            tb.silence(true);\r\n                            tb.setMagicType(param.magicType);\r\n                            tb.silence(false);\r\n                        }\r\n                    }\r\n                    this._onmagicTypeChanged(param);\r\n                    break;\r\n                case ecConfig.EVENT.DATA_VIEW_CHANGED :\r\n                    fromMyself && this._ondataViewChanged(param);\r\n                    break;\r\n                case ecConfig.EVENT.TOOLTIP_HOVER :\r\n                    fromMyself && this._tooltipHover(param);\r\n                    break;\r\n                case ecConfig.EVENT.RESTORE :\r\n                    this._onrestore();\r\n                    break;\r\n                case ecConfig.EVENT.REFRESH :\r\n                    fromMyself && this._onrefresh(param);\r\n                    break;\r\n                // 鼠标同步\r\n                case ecConfig.EVENT.TOOLTIP_IN_GRID :\r\n                case ecConfig.EVENT.TOOLTIP_OUT_GRID :\r\n                    if (!fromMyself) {\r\n                        // 只处理来自外部的鼠标同步\r\n                        var grid = this.component.grid;\r\n                        if (grid) {\r\n                            this._zr.trigger(\r\n                                'mousemove',\r\n                                {\r\n                                    connectTrigger: true,\r\n                                    zrenderX: grid.getX() + param.x * grid.getWidth(),\r\n                                    zrenderY: grid.getY() + param.y * grid.getHeight()\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                    else if (this._connected) {\r\n                        // 来自自己，并且存在多图联动，空间坐标映射修改参数分发\r\n                        var grid = this.component.grid;\r\n                        if (grid) {\r\n                            param.x = (param.event.zrenderX - grid.getX()) / grid.getWidth();\r\n                            param.y = (param.event.zrenderY - grid.getY()) / grid.getHeight();\r\n                        }\r\n                    }\r\n                    break;\r\n                /*\r\n                case ecConfig.EVENT.RESIZE :\r\n                case ecConfig.EVENT.DATA_CHANGED :\r\n                case ecConfig.EVENT.PIE_SELECTED :\r\n                case ecConfig.EVENT.MAP_SELECTED :\r\n                    break;\r\n                */\r\n            }\r\n\r\n            // 多图联动，只做自己的一级事件分发，避免级联事件循环\r\n            if (this._connected && fromMyself && this._curEventType === param.type) {\r\n                for (var c in this._connected) {\r\n                    this._connected[c].connectedEventHandler(param);\r\n                }\r\n                // 分发完毕后复位\r\n                this._curEventType = null;\r\n            }\r\n\r\n            if (!fromMyself || (!this._connected && fromMyself)) {  // 处理了完联动事件复位\r\n                this._curEventType = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 点击事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onclick: function (param) {\r\n            callChartListMethodReverse(this, 'onclick', param);\r\n\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.CLICK,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 双击事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _ondblclick: function (param) {\r\n            callChartListMethodReverse(this, 'ondblclick', param);\r\n\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.DBLCLICK,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 鼠标移入事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onmouseover: function (param) {\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.HOVER,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 鼠标移出事件，响应zrender事件，包装后分发到Echarts层\r\n         */\r\n        _onmouseout: function (param) {\r\n            if (param.target) {\r\n                var ecData = this._eventPackage(param.target);\r\n                if (ecData && ecData.seriesIndex != null) {\r\n                    this._messageCenter.dispatch(\r\n                        ecConfig.EVENT.MOUSEOUT,\r\n                        param.event,\r\n                        ecData,\r\n                        this\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragstart: function (param) {\r\n            // 复位用于图表间通信拖拽标识\r\n            this._status = {\r\n                dragIn: false,\r\n                dragOut: false,\r\n                needRefresh: false\r\n            };\r\n\r\n            callChartListMethodReverse(this, 'ondragstart', param);\r\n        },\r\n\r\n        /**\r\n         * dragging回调，可计算特性实现\r\n         */\r\n        _ondragenter: function (param) {\r\n            callChartListMethodReverse(this, 'ondragenter', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragover: function (param) {\r\n            callChartListMethodReverse(this, 'ondragover', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondragleave: function (param) {\r\n            callChartListMethodReverse(this, 'ondragleave', param);\r\n        },\r\n\r\n        /**\r\n         * dragstart回调，可计算特性实现\r\n         */\r\n        _ondrop: function (param) {\r\n            callChartListMethodReverse(this, 'ondrop', param, this._status);\r\n            this._island.ondrop(param, this._status);\r\n        },\r\n\r\n        /**\r\n         * dragdone回调 ，可计算特性实现\r\n         */\r\n        _ondragend: function (param) {\r\n            callChartListMethodReverse(this, 'ondragend', param, this._status);\r\n\r\n            this._timeline && this._timeline.ondragend(param, this._status);\r\n            this._island.ondragend(param, this._status);\r\n\r\n            // 发生过重计算\r\n            if (this._status.needRefresh) {\r\n                this._syncBackupData(this._option);\r\n\r\n                var messageCenter = this._messageCenter;\r\n                messageCenter.dispatch(\r\n                    ecConfig.EVENT.DATA_CHANGED,\r\n                    param.event,\r\n                    this._eventPackage(param.target),\r\n                    this\r\n                );\r\n                messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 图例选择响应\r\n         */\r\n        _onlegendSelected: function (param) {\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'onlegendSelected', param, this._status);\r\n\r\n            if (this._status.needRefresh) {\r\n                this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 数据区域缩放响应\r\n         */\r\n        _ondataZoom: function (param) {\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'ondataZoom', param, this._status);\r\n\r\n            if (this._status.needRefresh) {\r\n                this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 值域漫游响应\r\n         */\r\n        _ondataRange: function (param) {\r\n            this._clearEffect();\r\n            // 用于图表间通信\r\n            this._status.needRefresh = false;\r\n            callChartListMethodReverse(this, 'ondataRange', param, this._status);\r\n\r\n            // 没有相互影响，直接刷新即可\r\n            if (this._status.needRefresh) {\r\n                this._zr.refreshNextFrame();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 动态类型切换响应\r\n         */\r\n        _onmagicTypeChanged: function () {\r\n            this._clearEffect();\r\n            this._render(this._toolbox.getMagicOption());\r\n        },\r\n\r\n        /**\r\n         * 数据视图修改响应\r\n         */\r\n        _ondataViewChanged: function (param) {\r\n            this._syncBackupData(param.option);\r\n            this._messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_CHANGED,\r\n                null,\r\n                param,\r\n                this\r\n            );\r\n            this._messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this);\r\n        },\r\n\r\n        /**\r\n         * tooltip与图表间通信\r\n         */\r\n        _tooltipHover: function (param) {\r\n            var tipShape = [];\r\n            callChartListMethodReverse(this, 'ontooltipHover', param, tipShape);\r\n        },\r\n\r\n        /**\r\n         * 还原\r\n         */\r\n        _onrestore: function () {\r\n            this.restore();\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        _onrefresh: function (param) {\r\n            this._refreshInside = true;\r\n            this.refresh(param);\r\n            this._refreshInside = false;\r\n        },\r\n\r\n        /**\r\n         * 数据修改后的反向同步dataZoom持有的备份数据\r\n         */\r\n        _syncBackupData: function (curOption) {\r\n            this.component.dataZoom && this.component.dataZoom.syncBackupData(curOption);\r\n        },\r\n\r\n        /**\r\n         * 打包Echarts层的事件附件\r\n         */\r\n        _eventPackage: function (target) {\r\n            if (target) {\r\n                var ecData = require('./util/ecData');\r\n\r\n                var seriesIndex = ecData.get(target, 'seriesIndex');\r\n                var dataIndex = ecData.get(target, 'dataIndex');\r\n\r\n                dataIndex = seriesIndex != -1 && this.component.dataZoom\r\n                            ? this.component.dataZoom.getRealDataIndex(\r\n                                seriesIndex,\r\n                                dataIndex\r\n                              )\r\n                            : dataIndex;\r\n                return {\r\n                    seriesIndex: seriesIndex,\r\n                    seriesName: (ecData.get(target, 'series') || {}).name,\r\n                    dataIndex: dataIndex,\r\n                    data: ecData.get(target, 'data'),\r\n                    name: ecData.get(target, 'name'),\r\n                    value: ecData.get(target, 'value'),\r\n                    special: ecData.get(target, 'special')\r\n                };\r\n            }\r\n            return;\r\n        },\r\n\r\n        _noDataCheck: function(magicOption) {\r\n            var series = magicOption.series;\r\n\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].type == ecConfig.CHART_TYPE_MAP\r\n                    || (series[i].data && series[i].data.length > 0)\r\n                    || (series[i].markPoint && series[i].markPoint.data && series[i].markPoint.data.length > 0)\r\n                    || (series[i].markLine && series[i].markLine.data && series[i].markLine.data.length > 0)\r\n                    || (series[i].nodes && series[i].nodes.length > 0)\r\n                    || (series[i].links && series[i].links.length > 0)\r\n                    || (series[i].matrix && series[i].matrix.length > 0)\r\n                    || (series[i].eventList && series[i].eventList.length > 0)\r\n                ) {\r\n                    return false;   // 存在任意数据则为非空数据\r\n                }\r\n            }\r\n            var loadOption = (this._option && this._option.noDataLoadingOption)\r\n                || this._themeConfig.noDataLoadingOption\r\n                || ecConfig.noDataLoadingOption\r\n                || {\r\n                    text: (this._option && this._option.noDataText)\r\n                          || this._themeConfig.noDataText\r\n                          || ecConfig.noDataText,\r\n                    effect: (this._option && this._option.noDataEffect)\r\n                            || this._themeConfig.noDataEffect\r\n                            || ecConfig.noDataEffect\r\n                };\r\n            // 空数据\r\n            this.clear();\r\n            this.showLoading(loadOption);\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * 图表渲染\r\n         */\r\n        _render: function (magicOption) {\r\n            this._mergeGlobalConifg(magicOption);\r\n\r\n            if (this._noDataCheck(magicOption)) {\r\n                return;\r\n            }\r\n\r\n            var bgColor = magicOption.backgroundColor;\r\n            if (bgColor) {\r\n                if (!_canvasSupported\r\n                    && bgColor.indexOf('rgba') != -1\r\n                ) {\r\n                    // IE6~8对RGBA的处理，filter会带来其他颜色的影响\r\n                    var cList = bgColor.split(',');\r\n                    this.dom.style.filter = 'alpha(opacity=' +\r\n                        cList[3].substring(0, cList[3].lastIndexOf(')')) * 100\r\n                        + ')';\r\n                    cList.length = 3;\r\n                    cList[0] = cList[0].replace('a', '');\r\n                    this.dom.style.backgroundColor = cList.join(',') + ')';\r\n                }\r\n                else {\r\n                    this.dom.style.backgroundColor = bgColor;\r\n                }\r\n            }\r\n\r\n            this._zr.clearAnimation();\r\n            this._chartList = [];\r\n\r\n            var chartLibrary = require('./chart');\r\n            var componentLibrary = require('./component');\r\n\r\n            if (magicOption.xAxis || magicOption.yAxis) {\r\n                magicOption.grid = magicOption.grid || {};\r\n                magicOption.dataZoom = magicOption.dataZoom || {};\r\n            }\r\n\r\n            var componentList = [\r\n                'title', 'legend', 'tooltip', 'dataRange', 'roamController',\r\n                'grid', 'dataZoom', 'xAxis', 'yAxis', 'polar'\r\n            ];\r\n\r\n            var ComponentClass;\r\n            var componentType;\r\n            var component;\r\n            for (var i = 0, l = componentList.length; i < l; i++) {\r\n                componentType = componentList[i];\r\n                component = this.component[componentType];\r\n\r\n                if (magicOption[componentType]) {\r\n                    if (component) {\r\n                        component.refresh && component.refresh(magicOption);\r\n                    }\r\n                    else {\r\n                        ComponentClass = componentLibrary.get(\r\n                            /^[xy]Axis$/.test(componentType) ? 'axis' : componentType\r\n                        );\r\n                        component = new ComponentClass(\r\n                            this._themeConfig, this._messageCenter, this._zr,\r\n                            magicOption, this, componentType\r\n                        );\r\n                        this.component[componentType] = component;\r\n                    }\r\n                    this._chartList.push(component);\r\n                }\r\n                else if (component) {\r\n                    component.dispose();\r\n                    this.component[componentType] = null;\r\n                    delete this.component[componentType];\r\n                }\r\n            }\r\n\r\n            var ChartClass;\r\n            var chartType;\r\n            var chart;\r\n            var chartMap = {};      // 记录已经初始化的图表\r\n            for (var i = 0, l = magicOption.series.length; i < l; i++) {\r\n                chartType = magicOption.series[i].type;\r\n                if (!chartType) {\r\n                    console.error('series[' + i + '] chart type has not been defined.');\r\n                    continue;\r\n                }\r\n\r\n                if (!chartMap[chartType]) {\r\n                    chartMap[chartType] = true;\r\n                    ChartClass = chartLibrary.get(chartType);\r\n                    if (ChartClass) {\r\n                        if (this.chart[chartType]) {\r\n                            chart = this.chart[chartType];\r\n                            chart.refresh(magicOption);\r\n                        }\r\n                        else {\r\n                            chart = new ChartClass(\r\n                                this._themeConfig, this._messageCenter, this._zr,\r\n                                magicOption, this\r\n                            );\r\n                        }\r\n                        this._chartList.push(chart);\r\n                        this.chart[chartType] = chart;\r\n                    }\r\n                    else {\r\n                        console.error(chartType + ' has not been required.');\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 已有实例但新option不带这类图表的实例释放\r\n            for (chartType in this.chart) {\r\n                if (chartType != ecConfig.CHART_TYPE_ISLAND  && !chartMap[chartType]) {\r\n                    this.chart[chartType].dispose();\r\n                    this.chart[chartType] = null;\r\n                    delete this.chart[chartType];\r\n                }\r\n            }\r\n\r\n            this.component.grid && this.component.grid.refixAxisShape(this.component);\r\n\r\n            this._island.refresh(magicOption);\r\n            this._toolbox.refresh(magicOption);\r\n\r\n            magicOption.animation && !magicOption.renderAsImage\r\n                ? this._zr.refresh()\r\n                : this._zr.render();\r\n\r\n            var imgId = 'IMG' + this.id;\r\n            var img = document.getElementById(imgId);\r\n            if (magicOption.renderAsImage && _canvasSupported) {\r\n                // IE8- 不支持图片渲染形式\r\n                if (img) {\r\n                    // 已经渲染过则更新显示\r\n                    img.src = this.getDataURL(magicOption.renderAsImage);\r\n                }\r\n                else {\r\n                    // 没有渲染过插入img dom\r\n                    img = this.getImage(magicOption.renderAsImage);\r\n                    img.id = imgId;\r\n                    img.style.position = 'absolute';\r\n                    img.style.left = 0;\r\n                    img.style.top = 0;\r\n                    this.dom.firstChild.appendChild(img);\r\n                }\r\n                this.un();\r\n                this._zr.un();\r\n                this._disposeChartList();\r\n                this._zr.clear();\r\n            }\r\n            else if (img) {\r\n                // 删除可能存在的img\r\n                img.parentNode.removeChild(img);\r\n            }\r\n            img = null;\r\n\r\n            this._option = magicOption;\r\n        },\r\n\r\n        /**\r\n         * 还原\r\n         */\r\n        restore: function () {\r\n            this._clearEffect();\r\n            this._option = zrUtil.clone(this._optionRestore);\r\n            this._disposeChartList();\r\n            this._island.clear();\r\n            this._toolbox.reset(this._option, true);\r\n            this._render(this._option);\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         * @param {Object=} param，可选参数，用于附带option，内部同步用，外部不建议带入数据修改，无法同步\r\n         */\r\n        refresh: function (param) {\r\n            this._clearEffect();\r\n            param = param || {};\r\n            var magicOption = param.option;\r\n\r\n            // 外部调用的refresh且有option带入\r\n            if (!this._refreshInside && magicOption) {\r\n                // 做简单的差异合并去同步内部持有的数据克隆，不建议带入数据\r\n                // 开启数据区域缩放、拖拽重计算、数据视图可编辑模式情况下，当用户产生了数据变化后无法同步\r\n                // 如有带入option存在数据变化，请重新setOption\r\n                magicOption = this.getOption();\r\n                zrUtil.merge(magicOption, param.option, true);\r\n                zrUtil.merge(this._optionRestore, param.option, true);\r\n                this._toolbox.reset(magicOption);\r\n            }\r\n\r\n            this._island.refresh(magicOption);\r\n            this._toolbox.refresh(magicOption);\r\n\r\n            // 停止动画\r\n            this._zr.clearAnimation();\r\n            // 先来后到，安顺序刷新各种图表，图表内部refresh优化检查magicOption，无需更新则不更新~\r\n            for (var i = 0, l = this._chartList.length; i < l; i++) {\r\n                this._chartList[i].refresh && this._chartList[i].refresh(magicOption);\r\n            }\r\n            this.component.grid && this.component.grid.refixAxisShape(this.component);\r\n            this._zr.refresh();\r\n        },\r\n\r\n        /**\r\n         * 释放图表实例\r\n         */\r\n        _disposeChartList: function () {\r\n            this._clearEffect();\r\n\r\n            // 停止动画\r\n            this._zr.clearAnimation();\r\n\r\n            var len = this._chartList.length;\r\n            while (len--) {\r\n                var chart = this._chartList[len];\r\n\r\n                if (chart) {\r\n                    var chartType = chart.type;\r\n                    this.chart[chartType] && delete this.chart[chartType];\r\n                    this.component[chartType] && delete this.component[chartType];\r\n                    chart.dispose && chart.dispose();\r\n                }\r\n            }\r\n\r\n            this._chartList = [];\r\n        },\r\n\r\n        /**\r\n         * 非图表全局属性merge~~\r\n         */\r\n        _mergeGlobalConifg: function (magicOption) {\r\n            var mergeList = [\r\n                // 背景颜色\r\n                'backgroundColor',\r\n\r\n                // 拖拽重计算相关\r\n                'calculable', 'calculableColor', 'calculableHolderColor',\r\n\r\n                // 孤岛显示连接符\r\n                'nameConnector', 'valueConnector',\r\n\r\n                // 动画相关\r\n                'animation', 'animationThreshold',\r\n                'animationDuration', 'animationDurationUpdate',\r\n                'animationEasing', 'addDataAnimation',\r\n\r\n                // 默认标志图形类型列表\r\n                'symbolList',\r\n\r\n                // 降低图表内元素拖拽敏感度，单位ms，不建议外部干预\r\n                'DRAG_ENABLE_TIME'\r\n            ];\r\n\r\n            var len = mergeList.length;\r\n            while (len--) {\r\n                var mergeItem = mergeList[len];\r\n                if (magicOption[mergeItem] == null) {\r\n                    magicOption[mergeItem] = this._themeConfig[mergeItem] != null\r\n                        ? this._themeConfig[mergeItem]\r\n                        : ecConfig[mergeItem];\r\n                }\r\n            }\r\n\r\n            // 数值系列的颜色列表，不传则采用内置颜色，可配数组，借用zrender实例注入，会有冲突风险，先这样\r\n            var themeColor = magicOption.color;\r\n            if (!(themeColor && themeColor.length)) {\r\n                themeColor = this._themeConfig.color || ecConfig.color;\r\n            }\r\n\r\n            this._zr.getColor = function (idx) {\r\n                var zrColor = require('zrenderjs/tool/color');\r\n                return zrColor.getColor(idx, themeColor);\r\n            };\r\n\r\n            if (!_canvasSupported) {\r\n                // 不支持Canvas的强制关闭动画\r\n                magicOption.animation = false;\r\n                magicOption.addDataAnimation = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 万能接口，配置图表实例任何可配置选项，多次调用时option选项做merge处理\r\n         * @param {Object} option\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并\r\n         */\r\n        setOption: function (option, notMerge) {\r\n            if (!option.timeline) {\r\n                return this._setOption(option, notMerge);\r\n            }\r\n            else {\r\n                return this._setTimelineOption(option);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 万能接口，配置图表实例任何可配置选项，多次调用时option选项做merge处理\r\n         * @param {Object} option\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并\r\n         * @param {boolean=} 默认false。keepTimeLine 表示从timeline组件调用而来，\r\n         *                   表示当前行为是timeline的数据切换，保持timeline，\r\n         *                   反之销毁timeline。 详见Issue #1601\r\n         */\r\n        _setOption: function (option, notMerge, keepTimeLine) {\r\n            if (!notMerge && this._option) {\r\n                this._option = zrUtil.merge(\r\n                    this.getOption(),\r\n                    zrUtil.clone(option),\r\n                    true\r\n                );\r\n            }\r\n            else {\r\n                this._option = zrUtil.clone(option);\r\n                !keepTimeLine && this._timeline && this._timeline.dispose();\r\n            }\r\n\r\n            this._optionRestore = zrUtil.clone(this._option);\r\n\r\n            if (!this._option.series || this._option.series.length === 0) {\r\n                this._zr.clear();\r\n                return;\r\n            }\r\n\r\n            if (this.component.dataZoom                         // 存在dataZoom控件\r\n                && (this._option.dataZoom                       // 并且新option也存在\r\n                    || (this._option.toolbox\r\n                        && this._option.toolbox.feature\r\n                        && this._option.toolbox.feature.dataZoom\r\n                        && this._option.toolbox.feature.dataZoom.show\r\n                    )\r\n                )\r\n            ) {\r\n                // dataZoom同步数据\r\n                this.component.dataZoom.syncOption(this._option);\r\n            }\r\n            this._toolbox.reset(this._option);\r\n            this._render(this._option);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 返回内部持有的当前显示option克隆\r\n         */\r\n        getOption: function () {\r\n            var magicOption = zrUtil.clone(this._option);\r\n\r\n            var self = this;\r\n            function restoreOption(prop) {\r\n                var restoreSource = self._optionRestore[prop];\r\n\r\n                if (restoreSource) {\r\n                    if (restoreSource instanceof Array) {\r\n                        var len = restoreSource.length;\r\n                        while (len--) {\r\n                            magicOption[prop][len].data = zrUtil.clone(\r\n                                restoreSource[len].data\r\n                            );\r\n                        }\r\n                    }\r\n                    else {\r\n                        magicOption[prop].data = zrUtil.clone(restoreSource.data);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 横轴数据还原\r\n            restoreOption('xAxis');\r\n\r\n            // 纵轴数据还原\r\n            restoreOption('yAxis');\r\n\r\n            // 系列数据还原\r\n            restoreOption('series');\r\n\r\n            return magicOption;\r\n        },\r\n\r\n        /**\r\n         * 数据设置快捷接口\r\n         * @param {Array} series\r\n         * @param {boolean=} notMerge 多次调用时option选项是默认是合并（merge）的，\r\n         *                   如果不需求，可以通过notMerger参数为true阻止与上次option的合并。\r\n         */\r\n        setSeries: function (series, notMerge) {\r\n            if (!notMerge) {\r\n                this.setOption({series: series});\r\n            }\r\n            else {\r\n                this._option.series = series;\r\n                this.setOption(this._option, notMerge);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 返回内部持有的当前显示series克隆\r\n         */\r\n        getSeries: function () {\r\n            return this.getOption().series;\r\n        },\r\n\r\n        /**\r\n         * timelineOption接口，配置图表实例任何可配置选项\r\n         * @param {Object} option\r\n         */\r\n        _setTimelineOption: function(option) {\r\n            this._timeline && this._timeline.dispose();\r\n            var Timeline = require('./component/timeline');\r\n            var timeline = new Timeline(\r\n                this._themeConfig, this._messageCenter, this._zr, option, this\r\n            );\r\n            this._timeline = timeline;\r\n            this.component.timeline = this._timeline;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态数据添加\r\n         * 形参为单组数据参数，多组时为数据，内容同[seriesIdx, data, isShift, additionData]\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {number | Object} data 增加数据\r\n         * @param {boolean=} isHead 是否队头加入，默认，不指定或false时为队尾插入\r\n         * @param {boolean=} dataGrow 是否增长数据队列长度，默认，不指定或false时移出目标数组对位数据\r\n         * @param {string=} additionData 是否增加类目轴(饼图为图例)数据，附加操作同isHead和dataGrow\r\n         */\r\n        addData: function (seriesIdx, data, isHead, dataGrow, additionData) {\r\n            var params = seriesIdx instanceof Array\r\n                ? seriesIdx\r\n                : [[seriesIdx, data, isHead, dataGrow, additionData]];\r\n\r\n            //this._optionRestore 和 magicOption 都要同步\r\n            var magicOption = this.getOption();\r\n            var optionRestore = this._optionRestore;\r\n            var self = this;\r\n            for (var i = 0, l = params.length; i < l; i++) {\r\n                seriesIdx = params[i][0];\r\n                data = params[i][1];\r\n                isHead = params[i][2];\r\n                dataGrow = params[i][3];\r\n                additionData = params[i][4];\r\n\r\n                var seriesItem = optionRestore.series[seriesIdx];\r\n                var inMethod = isHead ? 'unshift' : 'push';\r\n                var outMethod = isHead ? 'pop' : 'shift';\r\n                if (seriesItem) {\r\n                    var seriesItemData = seriesItem.data;\r\n                    var mSeriesItemData = magicOption.series[seriesIdx].data;\r\n\r\n                    seriesItemData[inMethod](data);\r\n                    mSeriesItemData[inMethod](data);\r\n                    if (!dataGrow) {\r\n                        seriesItemData[outMethod]();\r\n                        data = mSeriesItemData[outMethod]();\r\n                    }\r\n\r\n                    if (additionData != null) {\r\n                        var legend;\r\n                        var legendData;\r\n\r\n                        if (seriesItem.type === ecConfig.CHART_TYPE_PIE\r\n                            && (legend = optionRestore.legend)\r\n                            && (legendData = legend.data)\r\n                        ) {\r\n                            var mLegendData = magicOption.legend.data;\r\n                            legendData[inMethod](additionData);\r\n                            mLegendData[inMethod](additionData);\r\n\r\n                            if (!dataGrow) {\r\n                                var legendDataIdx = zrUtil.indexOf(legendData, data.name);\r\n                                legendDataIdx != -1 && legendData.splice(legendDataIdx, 1);\r\n\r\n                                legendDataIdx = zrUtil.indexOf(mLegendData, data.name);\r\n                                legendDataIdx != -1 && mLegendData.splice(legendDataIdx, 1);\r\n                            }\r\n                        }\r\n                        else if (optionRestore.xAxis != null && optionRestore.yAxis != null) {\r\n                            // x轴类目\r\n                            var axisData;\r\n                            var mAxisData;\r\n                            var axisIdx = seriesItem.xAxisIndex || 0;\r\n\r\n                            if (optionRestore.xAxis[axisIdx].type == null\r\n                                || optionRestore.xAxis[axisIdx].type === 'category'\r\n                            ) {\r\n                                axisData = optionRestore.xAxis[axisIdx].data;\r\n                                mAxisData = magicOption.xAxis[axisIdx].data;\r\n\r\n                                axisData[inMethod](additionData);\r\n                                mAxisData[inMethod](additionData);\r\n                                if (!dataGrow) {\r\n                                    axisData[outMethod]();\r\n                                    mAxisData[outMethod]();\r\n                                }\r\n                            }\r\n\r\n                            // y轴类目\r\n                            axisIdx = seriesItem.yAxisIndex || 0;\r\n                            if (optionRestore.yAxis[axisIdx].type === 'category') {\r\n                                axisData = optionRestore.yAxis[axisIdx].data;\r\n                                mAxisData = magicOption.yAxis[axisIdx].data;\r\n\r\n                                axisData[inMethod](additionData);\r\n                                mAxisData[inMethod](additionData);\r\n                                if (!dataGrow) {\r\n                                    axisData[outMethod]();\r\n                                    mAxisData[outMethod]();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 同步图表内状态，动画需要\r\n                    this._option.series[seriesIdx].data = magicOption.series[seriesIdx].data;\r\n                }\r\n            }\r\n\r\n            this._zr.clearAnimation();\r\n            var chartList = this._chartList;\r\n            var chartAnimationCount = 0;\r\n            var chartAnimationDone = function () {\r\n                chartAnimationCount--;\r\n                if (chartAnimationCount === 0) {\r\n                    animationDone();\r\n                }\r\n            };\r\n            for (var i = 0, l = chartList.length; i < l; i++) {\r\n                if (magicOption.addDataAnimation && chartList[i].addDataAnimation) {\r\n                    chartAnimationCount++;\r\n                    chartList[i].addDataAnimation(params, chartAnimationDone);\r\n                }\r\n            }\r\n\r\n            // dataZoom同步数据\r\n            this.component.dataZoom && this.component.dataZoom.syncOption(magicOption);\r\n\r\n            this._option = magicOption;\r\n            function animationDone() {\r\n                if (!self._zr) {\r\n                    return; // 已经被释放\r\n                }\r\n                self._zr.clearAnimation();\r\n                for (var i = 0, l = chartList.length; i < l; i++) {\r\n                    // 有addData动画就去掉过渡动画\r\n                    chartList[i].motionlessOnce =\r\n                        magicOption.addDataAnimation && chartList[i].addDataAnimation;\r\n                }\r\n                self._messageCenter.dispatch(\r\n                    ecConfig.EVENT.REFRESH,\r\n                    null,\r\n                    {option: magicOption},\r\n                    self\r\n                );\r\n            }\r\n\r\n            if (!magicOption.addDataAnimation) {\r\n                setTimeout(animationDone, 0);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态[标注 | 标线]添加\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {Object} markData [标注 | 标线]对象，支持多个\r\n         */\r\n        addMarkPoint: function (seriesIdx, markData) {\r\n            return this._addMark(seriesIdx, markData, 'markPoint');\r\n        },\r\n\r\n        addMarkLine: function (seriesIdx, markData) {\r\n            return this._addMark(seriesIdx, markData, 'markLine');\r\n        },\r\n\r\n        _addMark: function (seriesIdx, markData, markType) {\r\n            var series = this._option.series;\r\n            var seriesItem;\r\n\r\n            if (series && (seriesItem = series[seriesIdx])) {\r\n                var seriesR = this._optionRestore.series;\r\n                var seriesRItem = seriesR[seriesIdx];\r\n                var markOpt = seriesItem[markType];\r\n                var markOptR = seriesRItem[markType];\r\n\r\n                markOpt = seriesItem[markType] = markOpt || {data: []};\r\n                markOptR = seriesRItem[markType] = markOptR || {data: []};\r\n\r\n                for (var key in markData) {\r\n                    if (key === 'data') {\r\n                        // 数据concat\r\n                        markOpt.data = markOpt.data.concat(markData.data);\r\n                        markOptR.data = markOptR.data.concat(markData.data);\r\n                    }\r\n                    else if (typeof markData[key] != 'object' || markOpt[key] == null) {\r\n                        // 简单类型或新值直接赋值\r\n                        markOpt[key] = markOptR[key] = markData[key];\r\n                    }\r\n                    else {\r\n                        // 非数据的复杂对象merge\r\n                        zrUtil.merge(markOpt[key], markData[key], true);\r\n                        zrUtil.merge(markOptR[key], markData[key], true);\r\n                    }\r\n                }\r\n\r\n                var chart = this.chart[seriesItem.type];\r\n                chart && chart.addMark(seriesIdx, markData, markType);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 动态[标注 | 标线]删除\r\n         * @param {number} seriesIdx 系列索引\r\n         * @param {string} markName [标注 | 标线]名称\r\n         */\r\n        delMarkPoint: function (seriesIdx, markName) {\r\n            return this._delMark(seriesIdx, markName, 'markPoint');\r\n        },\r\n\r\n        delMarkLine: function (seriesIdx, markName) {\r\n            return this._delMark(seriesIdx, markName, 'markLine');\r\n        },\r\n\r\n        _delMark: function (seriesIdx, markName, markType) {\r\n            var series = this._option.series;\r\n            var seriesItem;\r\n            var mark;\r\n            var dataArray;\r\n\r\n            if (!(\r\n                    series\r\n                    && (seriesItem = series[seriesIdx])\r\n                    && (mark = seriesItem[markType])\r\n                    && (dataArray = mark.data)\r\n                )\r\n            ) {\r\n                return this;\r\n            }\r\n\r\n            markName = markName.split(' > ');\r\n            var targetIndex = -1;\r\n\r\n            for (var i = 0, l = dataArray.length; i < l; i++) {\r\n                var dataItem = dataArray[i];\r\n                if (dataItem instanceof Array) {\r\n                    if (dataItem[0].name === markName[0]\r\n                        && dataItem[1].name === markName[1]\r\n                    ) {\r\n                        targetIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                else if (dataItem.name === markName[0]) {\r\n                    targetIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (targetIndex > -1) {\r\n                dataArray.splice(targetIndex, 1);\r\n                this._optionRestore.series[seriesIdx][markType].data.splice(targetIndex, 1);\r\n\r\n                var chart = this.chart[seriesItem.type];\r\n                chart && chart.delMark(seriesIdx, markName.join(' > '), markType);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 获取当前dom\r\n         */\r\n        getDom: function () {\r\n            return this.dom;\r\n        },\r\n\r\n        /**\r\n         * 获取当前zrender实例，可用于添加额为的shape和深度控制\r\n         */\r\n        getZrender: function () {\r\n            return this._zr;\r\n        },\r\n\r\n        /**\r\n         * 获取Base64图片dataURL\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return imgDataURL\r\n         */\r\n        getDataURL: function (imgType) {\r\n            if (!_canvasSupported) {\r\n                return '';\r\n            }\r\n\r\n            if (this._chartList.length === 0) {\r\n                // 渲染为图片\r\n                var imgId = 'IMG' + this.id;\r\n                var img = document.getElementById(imgId);\r\n                if (img) {\r\n                    return img.src;\r\n                }\r\n            }\r\n\r\n            // 清除可能存在的tooltip元素\r\n            var tooltip = this.component.tooltip;\r\n            tooltip && tooltip.hideTip();\r\n\r\n            switch (imgType) {\r\n                case 'jpeg':\r\n                    break;\r\n                default:\r\n                    imgType = 'png';\r\n            }\r\n\r\n            var bgColor = this._option.backgroundColor;\r\n            if (bgColor && bgColor.replace(' ','') === 'rgba(0,0,0,0)') {\r\n                bgColor = '#fff';\r\n            }\r\n\r\n            return this._zr.toDataURL('image/' + imgType, bgColor);\r\n        },\r\n\r\n        /**\r\n         * 获取img\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return img dom\r\n         */\r\n        getImage: function (imgType) {\r\n            var title = this._optionRestore.title;\r\n            var imgDom = document.createElement('img');\r\n            imgDom.src = this.getDataURL(imgType);\r\n            imgDom.title = (title && title.text) || 'ECharts';\r\n            return imgDom;\r\n        },\r\n\r\n        /**\r\n         * 获取多图联动的Base64图片dataURL\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return imgDataURL\r\n         */\r\n        getConnectedDataURL: function (imgType) {\r\n            if (!this.isConnected()) {\r\n                return this.getDataURL(imgType);\r\n            }\r\n\r\n            var tempDom = this.dom;\r\n            var imgList = {\r\n                'self': {\r\n                    img: this.getDataURL(imgType),\r\n                    left: tempDom.offsetLeft,\r\n                    top: tempDom.offsetTop,\r\n                    right: tempDom.offsetLeft + tempDom.offsetWidth,\r\n                    bottom: tempDom.offsetTop + tempDom.offsetHeight\r\n                }\r\n            };\r\n\r\n            var minLeft = imgList.self.left;\r\n            var minTop = imgList.self.top;\r\n            var maxRight = imgList.self.right;\r\n            var maxBottom = imgList.self.bottom;\r\n\r\n            for (var c in this._connected) {\r\n                tempDom = this._connected[c].getDom();\r\n                imgList[c] = {\r\n                    img: this._connected[c].getDataURL(imgType),\r\n                    left: tempDom.offsetLeft,\r\n                    top: tempDom.offsetTop,\r\n                    right: tempDom.offsetLeft + tempDom.offsetWidth,\r\n                    bottom: tempDom.offsetTop + tempDom.offsetHeight\r\n                };\r\n\r\n                minLeft = Math.min(minLeft, imgList[c].left);\r\n                minTop = Math.min(minTop, imgList[c].top);\r\n                maxRight = Math.max(maxRight, imgList[c].right);\r\n                maxBottom = Math.max(maxBottom, imgList[c].bottom);\r\n            }\r\n\r\n            var zrDom = document.createElement('div');\r\n            zrDom.style.position = 'absolute';\r\n            zrDom.style.left = '-4000px';\r\n            zrDom.style.width = (maxRight - minLeft) + 'px';\r\n            zrDom.style.height = (maxBottom - minTop) + 'px';\r\n            document.body.appendChild(zrDom);\r\n\r\n            var zrImg = require('zrenderjs').init(zrDom);\r\n\r\n            var ImageShape = require('zrenderjs/shape/Image');\r\n            for (var c in imgList) {\r\n                zrImg.addShape(new ImageShape({\r\n                    style: {\r\n                        x: imgList[c].left - minLeft,\r\n                        y: imgList[c].top - minTop,\r\n                        image: imgList[c].img\r\n                    }\r\n                }));\r\n            }\r\n\r\n            zrImg.render();\r\n            var bgColor = this._option.backgroundColor;\r\n            if (bgColor && bgColor.replace(/ /g, '') === 'rgba(0,0,0,0)') {\r\n                bgColor = '#fff';\r\n            }\r\n\r\n            var image = zrImg.toDataURL('image/png', bgColor);\r\n\r\n            setTimeout(function () {\r\n                zrImg.dispose();\r\n                zrDom.parentNode.removeChild(zrDom);\r\n                zrDom = null;\r\n            }, 100);\r\n\r\n            return image;\r\n        },\r\n\r\n        /**\r\n         * 获取多图联动的img\r\n         * @param {string} imgType 图片类型，支持png|jpeg，默认为png\r\n         * @return img dom\r\n         */\r\n        getConnectedImage: function (imgType) {\r\n            var title = this._optionRestore.title;\r\n            var imgDom = document.createElement('img');\r\n            imgDom.src = this.getConnectedDataURL(imgType);\r\n            imgDom.title = (title && title.text) || 'ECharts';\r\n            return imgDom;\r\n        },\r\n\r\n        /**\r\n         * 外部接口绑定事件\r\n         * @param {Object} eventName 事件名称\r\n         * @param {Object} eventListener 事件响应函数\r\n         */\r\n        on: function (eventName, eventListener) {\r\n            this._messageCenterOutSide.bind(eventName, eventListener, this);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 外部接口解除事件绑定\r\n         * @param {Object} eventName 事件名称\r\n         * @param {Object} eventListener 事件响应函数\r\n         */\r\n        un: function (eventName, eventListener) {\r\n            this._messageCenterOutSide.unbind(eventName, eventListener);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 多图联动\r\n         * @param connectTarget{ECharts | Array <ECharts>} connectTarget 联动目标\r\n         */\r\n        connect: function (connectTarget) {\r\n            if (!connectTarget) {\r\n                return this;\r\n            }\r\n\r\n            if (!this._connected) {\r\n                this._connected = {};\r\n            }\r\n\r\n            if (connectTarget instanceof Array) {\r\n                for (var i = 0, l = connectTarget.length; i < l; i++) {\r\n                    this._connected[connectTarget[i].id] = connectTarget[i];\r\n                }\r\n            }\r\n            else {\r\n                this._connected[connectTarget.id] = connectTarget;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 解除多图联动\r\n         * @param connectTarget{ECharts | Array <ECharts>} connectTarget 解除联动目标\r\n         */\r\n        disConnect: function (connectTarget) {\r\n            if (!connectTarget || !this._connected) {\r\n                return this;\r\n            }\r\n\r\n            if (connectTarget instanceof Array) {\r\n                for (var i = 0, l = connectTarget.length; i < l; i++) {\r\n                    delete this._connected[connectTarget[i].id];\r\n                }\r\n            }\r\n            else {\r\n                delete this._connected[connectTarget.id];\r\n            }\r\n\r\n            for (var k in this._connected) {\r\n                return k, this; // 非空\r\n            }\r\n\r\n            // 空，转为标志位\r\n            this._connected = false;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 联动事件响应\r\n         */\r\n        connectedEventHandler: function (param) {\r\n            if (param.__echartsId != this.id) {\r\n                // 来自其他联动图表的事件\r\n                this._onevent(param);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 是否存在多图联动\r\n         */\r\n        isConnected: function () {\r\n            return !!this._connected;\r\n        },\r\n\r\n        /**\r\n         * 显示loading过渡\r\n         * @param {Object} loadingOption\r\n         */\r\n        showLoading: function (loadingOption) {\r\n            var effectList = {\r\n                bar: require('zrenderjs/loadingEffect/Bar'),\r\n                bubble: require('zrenderjs/loadingEffect/Bubble'),\r\n                dynamicLine: require('zrenderjs/loadingEffect/DynamicLine'),\r\n                ring: require('zrenderjs/loadingEffect/Ring'),\r\n                spin: require('zrenderjs/loadingEffect/Spin'),\r\n                whirling: require('zrenderjs/loadingEffect/Whirling')\r\n            };\r\n            this._toolbox.hideDataView();\r\n\r\n            loadingOption = loadingOption || {};\r\n\r\n            var textStyle = loadingOption.textStyle || {};\r\n            loadingOption.textStyle = textStyle;\r\n\r\n            var finalTextStyle = zrUtil.merge(\r\n                zrUtil.merge(\r\n                    zrUtil.clone(textStyle),\r\n                    this._themeConfig.textStyle\r\n                ),\r\n                ecConfig.textStyle\r\n            );\r\n\r\n            textStyle.textFont = finalTextStyle.fontStyle + ' '\r\n                                 + finalTextStyle.fontWeight + ' '\r\n                                 + finalTextStyle.fontSize + 'px '\r\n                                 + finalTextStyle.fontFamily;\r\n\r\n            textStyle.text = loadingOption.text\r\n                             || (this._option && this._option.loadingText)\r\n                             || this._themeConfig.loadingText\r\n                             || ecConfig.loadingText;\r\n\r\n            if (loadingOption.x != null) {\r\n                textStyle.x = loadingOption.x;\r\n            }\r\n            if (loadingOption.y != null) {\r\n                textStyle.y = loadingOption.y;\r\n            }\r\n\r\n            loadingOption.effectOption = loadingOption.effectOption || {};\r\n            loadingOption.effectOption.textStyle = textStyle;\r\n\r\n            var Effect = loadingOption.effect;\r\n            if (typeof Effect === 'string' || Effect == null) {\r\n                Effect =  effectList[\r\n                              loadingOption.effect\r\n                              || (this._option && this._option.loadingEffect)\r\n                              || this._themeConfig.loadingEffect\r\n                              || ecConfig.loadingEffect\r\n                          ]\r\n                          || effectList.spin;\r\n            }\r\n            this._zr.showLoading(new Effect(loadingOption.effectOption));\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 隐藏loading过渡\r\n         */\r\n        hideLoading: function () {\r\n            this._zr.hideLoading();\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 主题设置\r\n         */\r\n        setTheme: function (theme) {\r\n            if (theme) {\r\n               if (typeof theme === 'string') {\r\n                    // 默认主题\r\n                    switch (theme) {\r\n                        case 'macarons':\r\n                            theme = require('./theme/macarons');\r\n                            break;\r\n                        case 'infographic':\r\n                            theme = require('./theme/infographic');\r\n                            break;\r\n                        default:\r\n                            theme = {}; // require('./theme/default');\r\n                    }\r\n                }\r\n                else {\r\n                    theme = theme || {};\r\n                }\r\n\r\n                // // 复位默认配置\r\n                // // this._themeConfig会被别的对象引用持有\r\n                // // 所以不能改成this._themeConfig = {};\r\n                // for (var key in this._themeConfig) {\r\n                //     delete this._themeConfig[key];\r\n                // }\r\n                // for (var key in ecConfig) {\r\n                //     this._themeConfig[key] = zrUtil.clone(ecConfig[key]);\r\n                // }\r\n\r\n                // // 颜色数组随theme，不merge\r\n                // theme.color && (this._themeConfig.color = []);\r\n\r\n                // // 默认标志图形类型列表，不merge\r\n                // theme.symbolList && (this._themeConfig.symbolList = []);\r\n\r\n                // // 应用新主题\r\n                // zrUtil.merge(this._themeConfig, zrUtil.clone(theme), true);\r\n                this._themeConfig = theme;\r\n            }\r\n\r\n            if (!_canvasSupported) {   // IE8-\r\n                var textStyle = this._themeConfig.textStyle;\r\n                textStyle && textStyle.fontFamily && textStyle.fontFamily2\r\n                    && (textStyle.fontFamily = textStyle.fontFamily2);\r\n\r\n                textStyle = ecConfig.textStyle;\r\n                textStyle.fontFamily = textStyle.fontFamily2;\r\n            }\r\n\r\n            this._timeline && this._timeline.setTheme(true);\r\n            this._optionRestore && this.restore();\r\n        },\r\n\r\n        /**\r\n         * 视图区域大小变化更新，不默认绑定，供使用方按需调用\r\n         */\r\n        resize: function () {\r\n            var self = this;\r\n            return function(){\r\n                self._clearEffect();\r\n                self._zr.resize();\r\n                if (self._option && self._option.renderAsImage && _canvasSupported) {\r\n                    // 渲染为图片重走render模式\r\n                    self._render(self._option);\r\n                    return self;\r\n                }\r\n                // 停止动画\r\n                self._zr.clearAnimation();\r\n                self._island.resize();\r\n                self._toolbox.resize();\r\n                self._timeline && self._timeline.resize();\r\n                // 先来后到，不能仅刷新自己，也不能在上一个循环中刷新，如坐标系数据改变会影响其他图表的大小\r\n                // 所以安顺序刷新各种图表，图表内部refresh优化无需更新则不更新~\r\n                for (var i = 0, l = self._chartList.length; i < l; i++) {\r\n                    self._chartList[i].resize && self._chartList[i].resize();\r\n                }\r\n                self.component.grid && self.component.grid.refixAxisShape(self.component);\r\n                self._zr.refresh();\r\n                self._messageCenter.dispatch(ecConfig.EVENT.RESIZE, null, null, self);\r\n                return self;\r\n            };\r\n        },\r\n\r\n        _clearEffect: function() {\r\n            this._zr.modLayer(ecConfig.EFFECT_ZLEVEL, { motionBlur: false });\r\n            this._zr.painter.clearLayer(ecConfig.EFFECT_ZLEVEL);\r\n        },\r\n\r\n        /**\r\n         * 清除已渲染内容 ，clear后echarts实例可用\r\n         */\r\n        clear: function () {\r\n            this._disposeChartList();\r\n            this._zr.clear();\r\n            this._option = {};\r\n            this._optionRestore = {};\r\n            this.dom.style.backgroundColor = null;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 释放，dispose后echarts实例不可用\r\n         */\r\n        dispose: function () {\r\n            var key = this.dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n            key && delete _instances[key];\r\n\r\n            this._island.dispose();\r\n            this._toolbox.dispose();\r\n            this._timeline && this._timeline.dispose();\r\n            this._messageCenter.unbind();\r\n            this.clear();\r\n            this._zr.dispose();\r\n            this._zr = null;\r\n        }\r\n    };\r\n\r\n    return self;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/echarts.js\n// module id = 52\n// module chunks = 0","/**\r\n * Handler控制模块\r\n * @module zrender/Handler\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n *\r\n */\r\n// TODO mouseover 只触发一次\r\n// 目前的高亮因为每次都需要 addHover 所以不能只是开始的时候触发一次\r\ndefine(\r\n    function (require) {\r\n\r\n        'use strict';\r\n\r\n        var config = require('./config');\r\n        var env = require('./tool/env');\r\n        var eventTool = require('./tool/event');\r\n        var util = require('./tool/util');\r\n        var vec2 = require('./tool/vector');\r\n        var mat2d = require('./tool/matrix');\r\n        var EVENT = config.EVENT;\r\n\r\n        var Eventful = require('./mixin/Eventful');\r\n\r\n        var domHandlerNames = [\r\n            'resize', 'click', 'dblclick',\r\n            'mousewheel', 'mousemove', 'mouseout', 'mouseup', 'mousedown',\r\n            'touchstart', 'touchend', 'touchmove'\r\n        ];\r\n\r\n        var isZRenderElement = function (event) {\r\n            // 暂时忽略 IE8-\r\n            if (window.G_vmlCanvasManager) {\r\n                return true;\r\n            }\r\n\r\n            event = event || window.event;\r\n\r\n            // 进入对象优先~\r\n            var target = event.toElement\r\n                          || event.relatedTarget\r\n                          || event.srcElement\r\n                          || event.target;\r\n\r\n            return target && target.className.match(config.elementClassName)\r\n        };\r\n\r\n        var domHandlers = {\r\n            /**\r\n             * 窗口大小改变响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            resize: function (event) {\r\n                event = event || window.event;\r\n                this._lastHover = null;\r\n                this._isMouseDown = 0;\r\n                \r\n                // 分发config.EVENT.RESIZE事件，global\r\n                this.dispatch(EVENT.RESIZE, event);\r\n            },\r\n\r\n            /**\r\n             * 点击响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            click: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n\r\n                // 分发config.EVENT.CLICK事件\r\n                var _lastHover = this._lastHover;\r\n                if ((_lastHover && _lastHover.clickable)\r\n                    || !_lastHover\r\n                ) {\r\n\r\n                    // 判断没有发生拖拽才触发click事件\r\n                    if (this._clickThreshold < 5) {\r\n                        this._dispatchAgency(_lastHover, EVENT.CLICK, event);\r\n                    }\r\n                }\r\n\r\n                this._mousemoveHandler(event);\r\n            },\r\n            \r\n            /**\r\n             * 双击响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            dblclick: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = event || window.event;\r\n                event = this._zrenderEventFixed(event);\r\n\r\n                // 分发config.EVENT.DBLCLICK事件\r\n                var _lastHover = this._lastHover;\r\n                if ((_lastHover && _lastHover.clickable)\r\n                    || !_lastHover\r\n                ) {\r\n\r\n                    // 判断没有发生拖拽才触发dblclick事件\r\n                    if (this._clickThreshold < 5) {\r\n                        this._dispatchAgency(_lastHover, EVENT.DBLCLICK, event);\r\n                    }\r\n                }\r\n\r\n                this._mousemoveHandler(event);\r\n            },\r\n            \r\n\r\n            /**\r\n             * 鼠标滚轮响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mousewheel: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n\r\n                // http://www.sitepoint.com/html5-javascript-mouse-wheel/\r\n                // https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/mousewheel\r\n                var delta = event.wheelDelta // Webkit\r\n                            || -event.detail; // Firefox\r\n                var scale = delta > 0 ? 1.1 : 1 / 1.1;\r\n\r\n                var needsRefresh = false;\r\n\r\n                var mouseX = this._mouseX;\r\n                var mouseY = this._mouseY;\r\n                this.painter.eachBuildinLayer(function (layer) {\r\n                    var pos = layer.position;\r\n                    if (layer.zoomable) {\r\n                        layer.__zoom = layer.__zoom || 1;\r\n                        var newZoom = layer.__zoom;\r\n                        newZoom *= scale;\r\n                        newZoom = Math.max(\r\n                            Math.min(layer.maxZoom, newZoom),\r\n                            layer.minZoom\r\n                        );\r\n                        scale = newZoom / layer.__zoom;\r\n                        layer.__zoom = newZoom;\r\n                        // Keep the mouse center when scaling\r\n                        pos[0] -= (mouseX - pos[0]) * (scale - 1);\r\n                        pos[1] -= (mouseY - pos[1]) * (scale - 1);\r\n                        layer.scale[0] *= scale;\r\n                        layer.scale[1] *= scale;\r\n                        layer.dirty = true;\r\n                        needsRefresh = true;\r\n\r\n                        // Prevent browser default scroll action \r\n                        eventTool.stop(event);\r\n                    }\r\n                });\r\n                if (needsRefresh) {\r\n                    this.painter.refresh();\r\n                }\r\n\r\n                // 分发config.EVENT.MOUSEWHEEL事件\r\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEWHEEL, event);\r\n                this._mousemoveHandler(event);\r\n            },\r\n\r\n            /**\r\n             * 鼠标（手指）移动响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mousemove: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                if (this.painter.isLoading()) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n                this._lastX = this._mouseX;\r\n                this._lastY = this._mouseY;\r\n                this._mouseX = eventTool.getX(event);\r\n                this._mouseY = eventTool.getY(event);\r\n                var dx = this._mouseX - this._lastX;\r\n                var dy = this._mouseY - this._lastY;\r\n\r\n                // 可能出现config.EVENT.DRAGSTART事件\r\n                // 避免手抖点击误认为拖拽\r\n                // if (this._mouseX - this._lastX > 1 || this._mouseY - this._lastY > 1) {\r\n                this._processDragStart(event);\r\n                // }\r\n                this._hasfound = 0;\r\n                this._event = event;\r\n\r\n                this._iterateAndFindHover();\r\n\r\n                // 找到的在迭代函数里做了处理，没找到得在迭代完后处理\r\n                if (!this._hasfound) {\r\n                    // 过滤首次拖拽产生的mouseout和dragLeave\r\n                    if (!this._draggingTarget\r\n                        || (this._lastHover && this._lastHover != this._draggingTarget)\r\n                    ) {\r\n                        // 可能出现config.EVENT.MOUSEOUT事件\r\n                        this._processOutShape(event);\r\n\r\n                        // 可能出现config.EVENT.DRAGLEAVE事件\r\n                        this._processDragLeave(event);\r\n                    }\r\n\r\n                    this._lastHover = null;\r\n                    this.storage.delHover();\r\n                    this.painter.clearHover();\r\n                }\r\n\r\n                // set cursor for root element\r\n                var cursor = 'default';\r\n\r\n                // 如果存在拖拽中元素，被拖拽的图形元素最后addHover\r\n                if (this._draggingTarget) {\r\n                    this.storage.drift(this._draggingTarget.id, dx, dy);\r\n                    this._draggingTarget.modSelf();\r\n                    this.storage.addHover(this._draggingTarget);\r\n\r\n                    // 拖拽不触发click事件\r\n                    this._clickThreshold++;\r\n                }\r\n                else if (this._isMouseDown) {\r\n                    var needsRefresh = false;\r\n                    // Layer dragging\r\n                    this.painter.eachBuildinLayer(function (layer) {\r\n                        if (layer.panable) {\r\n                            // PENDING\r\n                            cursor = 'move';\r\n                            // Keep the mouse center when scaling\r\n                            layer.position[0] += dx;\r\n                            layer.position[1] += dy;\r\n                            needsRefresh = true;\r\n                            layer.dirty = true;\r\n                        }\r\n                    });\r\n                    if (needsRefresh) {\r\n                        this.painter.refresh();\r\n                    }\r\n                }\r\n\r\n                if (this._draggingTarget || (this._hasfound && this._lastHover.draggable)) {\r\n                    cursor = 'move';\r\n                }\r\n                else if (this._hasfound && this._lastHover.clickable) {\r\n                    cursor = 'pointer';\r\n                }\r\n                this.root.style.cursor = cursor;\r\n\r\n                // 分发config.EVENT.MOUSEMOVE事件\r\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEMOVE, event);\r\n\r\n                if (this._draggingTarget || this._hasfound || this.storage.hasHoverShape()) {\r\n                    this.painter.refreshHover();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 鼠标（手指）离开响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mouseout: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n\r\n                var element = event.toElement || event.relatedTarget;\r\n                if (element != this.root) {\r\n                    while (element && element.nodeType != 9) {\r\n                        // 忽略包含在root中的dom引起的mouseOut\r\n                        if (element == this.root) {\r\n                            this._mousemoveHandler(event);\r\n                            return;\r\n                        }\r\n\r\n                        element = element.parentNode;\r\n                    }\r\n                }\r\n\r\n                event.zrenderX = this._lastX;\r\n                event.zrenderY = this._lastY;\r\n                this.root.style.cursor = 'default';\r\n                this._isMouseDown = 0;\r\n\r\n                this._processOutShape(event);\r\n                this._processDrop(event);\r\n                this._processDragEnd(event);\r\n                if (!this.painter.isLoading()) {\r\n                    this.painter.refreshHover();\r\n                }\r\n                \r\n                this.dispatch(EVENT.GLOBALOUT, event);\r\n            },\r\n\r\n            /**\r\n             * 鼠标（手指）按下响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mousedown: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                // 重置 clickThreshold\r\n                this._clickThreshold = 0;\r\n\r\n                if (this._lastDownButton == 2) {\r\n                    this._lastDownButton = event.button;\r\n                    this._mouseDownTarget = null;\r\n                    // 仅作为关闭右键菜单使用\r\n                    return;\r\n                }\r\n\r\n                this._lastMouseDownMoment = new Date();\r\n                event = this._zrenderEventFixed(event);\r\n                this._isMouseDown = 1;\r\n\r\n                // 分发config.EVENT.MOUSEDOWN事件\r\n                this._mouseDownTarget = this._lastHover;\r\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEDOWN, event);\r\n                this._lastDownButton = event.button;\r\n            },\r\n\r\n            /**\r\n             * 鼠标（手指）抬起响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            mouseup: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event);\r\n                this.root.style.cursor = 'default';\r\n                this._isMouseDown = 0;\r\n                this._mouseDownTarget = null;\r\n\r\n                // 分发config.EVENT.MOUSEUP事件\r\n                this._dispatchAgency(this._lastHover, EVENT.MOUSEUP, event);\r\n                this._processDrop(event);\r\n                this._processDragEnd(event);\r\n            },\r\n\r\n            /**\r\n             * Touch开始响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            touchstart: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                // eventTool.stop(event);// 阻止浏览器默认事件，重要\r\n                event = this._zrenderEventFixed(event, true);\r\n                this._lastTouchMoment = new Date();\r\n\r\n                // 平板补充一次findHover\r\n                this._mobileFindFixed(event);\r\n                this._mousedownHandler(event);\r\n            },\r\n\r\n            /**\r\n             * Touch移动响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            touchmove: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                event = this._zrenderEventFixed(event, true);\r\n                this._mousemoveHandler(event);\r\n                if (this._isDragging) {\r\n                    eventTool.stop(event);// 阻止浏览器默认事件，重要\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Touch结束响应函数\r\n             * @inner\r\n             * @param {Event} event\r\n             */\r\n            touchend: function (event, manually) {\r\n                if (! isZRenderElement(event) && ! manually) {\r\n                    return;\r\n                }\r\n\r\n                // eventTool.stop(event);// 阻止浏览器默认事件，重要\r\n                event = this._zrenderEventFixed(event, true);\r\n                this._mouseupHandler(event);\r\n                \r\n                var now = new Date();\r\n                if (now - this._lastTouchMoment < EVENT.touchClickDelay) {\r\n                    this._mobileFindFixed(event);\r\n                    this._clickHandler(event);\r\n                    if (now - this._lastClickMoment < EVENT.touchClickDelay / 2) {\r\n                        this._dblclickHandler(event);\r\n                        if (this._lastHover && this._lastHover.clickable) {\r\n                            eventTool.stop(event);// 阻止浏览器默认事件，重要\r\n                        }\r\n                    }\r\n                    this._lastClickMoment = now;\r\n                }\r\n                this.painter.clearHover();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * bind一个参数的function\r\n         * \r\n         * @inner\r\n         * @param {Function} handler 要bind的function\r\n         * @param {Object} context 运行时this环境\r\n         * @return {Function}\r\n         */\r\n        // function bind1Arg(handler, context) {\r\n        //     return function (e) {\r\n        //         return handler.call(context, e);\r\n        //     };\r\n        // }\r\n        function bind2Arg(handler, context) {\r\n            return function (arg1, arg2) {\r\n                return handler.call(context, arg1, arg2);\r\n            };\r\n        }\r\n\r\n        function bind3Arg(handler, context) {\r\n            return function (arg1, arg2, arg3) {\r\n                return handler.call(context, arg1, arg2, arg3);\r\n            };\r\n        }\r\n        /**\r\n         * 为控制类实例初始化dom 事件处理函数\r\n         * \r\n         * @inner\r\n         * @param {module:zrender/Handler} instance 控制类实例\r\n         */\r\n        function initDomHandler(instance) {\r\n            var len = domHandlerNames.length;\r\n            while (len--) {\r\n                var name = domHandlerNames[len];\r\n                instance['_' + name + 'Handler'] = bind2Arg(domHandlers[name], instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/Handler\r\n         * @constructor\r\n         * @extends module:zrender/mixin/Eventful\r\n         * @param {HTMLElement} root 绘图区域\r\n         * @param {module:zrender/Storage} storage Storage实例\r\n         * @param {module:zrender/Painter} painter Painter实例\r\n         */\r\n        var Handler = function(root, storage, painter) {\r\n            // 添加事件分发器特性\r\n            Eventful.call(this);\r\n\r\n            this.root = root;\r\n            this.storage = storage;\r\n            this.painter = painter;\r\n\r\n            // 各种事件标识的私有变量\r\n            // this._hasfound = false;              //是否找到hover图形元素\r\n            // this._lastHover = null;              //最后一个hover图形元素\r\n            // this._mouseDownTarget = null;\r\n            // this._draggingTarget = null;         //当前被拖拽的图形元素\r\n            // this._isMouseDown = false;\r\n            // this._isDragging = false;\r\n            // this._lastMouseDownMoment;\r\n            // this._lastTouchMoment;\r\n            // this._lastDownButton;\r\n\r\n            this._lastX = \r\n            this._lastY = \r\n            this._mouseX = \r\n            this._mouseY = 0;\r\n\r\n            this._findHover = bind3Arg(findHover, this);\r\n            this._domHover = painter.getDomHover();\r\n            initDomHandler(this);\r\n\r\n            // 初始化，事件绑定，支持的所有事件都由如下原生事件计算得来\r\n            if (window.addEventListener) {\r\n                window.addEventListener('resize', this._resizeHandler);\r\n                \r\n                if (env.os.tablet || env.os.phone) {\r\n                    // mobile支持\r\n                    root.addEventListener('touchstart', this._touchstartHandler);\r\n                    root.addEventListener('touchmove', this._touchmoveHandler);\r\n                    root.addEventListener('touchend', this._touchendHandler);\r\n                }\r\n                else {\r\n                    // mobile的click/move/up/down自己模拟\r\n                    root.addEventListener('click', this._clickHandler);\r\n                    root.addEventListener('dblclick', this._dblclickHandler);\r\n                    root.addEventListener('mousewheel', this._mousewheelHandler);\r\n                    root.addEventListener('mousemove', this._mousemoveHandler);\r\n                    root.addEventListener('mousedown', this._mousedownHandler);\r\n                    root.addEventListener('mouseup', this._mouseupHandler);\r\n                } \r\n                root.addEventListener('DOMMouseScroll', this._mousewheelHandler);\r\n                root.addEventListener('mouseout', this._mouseoutHandler);\r\n            }\r\n            else {\r\n                window.attachEvent('onresize', this._resizeHandler);\r\n\r\n                root.attachEvent('onclick', this._clickHandler);\r\n                //root.attachEvent('ondblclick ', this._dblclickHandler);\r\n                root.ondblclick = this._dblclickHandler;\r\n                root.attachEvent('onmousewheel', this._mousewheelHandler);\r\n                root.attachEvent('onmousemove', this._mousemoveHandler);\r\n                root.attachEvent('onmouseout', this._mouseoutHandler);\r\n                root.attachEvent('onmousedown', this._mousedownHandler);\r\n                root.attachEvent('onmouseup', this._mouseupHandler);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 自定义事件绑定\r\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\r\n         * @param {Function} handler 响应函数\r\n         * @param {Object} [context] 响应函数\r\n         */\r\n        Handler.prototype.on = function (eventName, handler, context) {\r\n            this.bind(eventName, handler, context);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 自定义事件解绑\r\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\r\n         * @param {Function} handler 响应函数\r\n         */\r\n        Handler.prototype.un = function (eventName, handler) {\r\n            this.unbind(eventName, handler);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 事件触发\r\n         * @param {string} eventName 事件名称，resize，hover，drag，etc~\r\n         * @param {event=} eventArgs event dom事件对象\r\n         */\r\n        Handler.prototype.trigger = function (eventName, eventArgs) {\r\n            switch (eventName) {\r\n                case EVENT.RESIZE:\r\n                case EVENT.CLICK:\r\n                case EVENT.DBLCLICK:\r\n                case EVENT.MOUSEWHEEL:\r\n                case EVENT.MOUSEMOVE:\r\n                case EVENT.MOUSEDOWN:\r\n                case EVENT.MOUSEUP:\r\n                case EVENT.MOUSEOUT:\r\n                    this['_' + eventName + 'Handler'](eventArgs, true);\r\n                    break;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 释放，解绑所有事件\r\n         */\r\n        Handler.prototype.dispose = function () {\r\n            var root = this.root;\r\n\r\n            if (window.removeEventListener) {\r\n                window.removeEventListener('resize', this._resizeHandler);\r\n\r\n                if (env.os.tablet || env.os.phone) {\r\n                    // mobile支持\r\n                    root.removeEventListener('touchstart', this._touchstartHandler);\r\n                    root.removeEventListener('touchmove', this._touchmoveHandler);\r\n                    root.removeEventListener('touchend', this._touchendHandler);\r\n                }\r\n                else {\r\n                    // mobile的click自己模拟\r\n                    root.removeEventListener('click', this._clickHandler);\r\n                    root.removeEventListener('dblclick', this._dblclickHandler);\r\n                    root.removeEventListener('mousewheel', this._mousewheelHandler);\r\n                    root.removeEventListener('mousemove', this._mousemoveHandler);\r\n                    root.removeEventListener('mousedown', this._mousedownHandler);\r\n                    root.removeEventListener('mouseup', this._mouseupHandler);\r\n                }\r\n                root.removeEventListener('DOMMouseScroll', this._mousewheelHandler);\r\n                root.removeEventListener('mouseout', this._mouseoutHandler);\r\n            }\r\n            else {\r\n                window.detachEvent('onresize', this._resizeHandler);\r\n\r\n                root.detachEvent('onclick', this._clickHandler);\r\n                root.detachEvent('dblclick', this._dblclickHandler);\r\n                root.detachEvent('onmousewheel', this._mousewheelHandler);\r\n                root.detachEvent('onmousemove', this._mousemoveHandler);\r\n                root.detachEvent('onmouseout', this._mouseoutHandler);\r\n                root.detachEvent('onmousedown', this._mousedownHandler);\r\n                root.detachEvent('onmouseup', this._mouseupHandler);\r\n            }\r\n\r\n            this.root =\r\n            this._domHover =\r\n            this.storage =\r\n            this.painter = null;\r\n            \r\n            this.un();\r\n        };\r\n\r\n        /**\r\n         * 拖拽开始\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragStart = function (event) {\r\n            var _lastHover = this._lastHover;\r\n\r\n            if (this._isMouseDown\r\n                && _lastHover\r\n                && _lastHover.draggable\r\n                && !this._draggingTarget\r\n                && this._mouseDownTarget == _lastHover\r\n            ) {\r\n                // 拖拽点击生效时长阀门，某些场景需要降低拖拽敏感度\r\n                if (_lastHover.dragEnableTime && \r\n                    new Date() - this._lastMouseDownMoment < _lastHover.dragEnableTime\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                var _draggingTarget = _lastHover;\r\n                this._draggingTarget = _draggingTarget;\r\n                this._isDragging = 1;\r\n\r\n                _draggingTarget.invisible = true;\r\n                this.storage.mod(_draggingTarget.id);\r\n\r\n                // 分发config.EVENT.DRAGSTART事件\r\n                this._dispatchAgency(\r\n                    _draggingTarget,\r\n                    EVENT.DRAGSTART,\r\n                    event\r\n                );\r\n                this.painter.refresh();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽进入目标元素\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragEnter = function (event) {\r\n            if (this._draggingTarget) {\r\n                // 分发config.EVENT.DRAGENTER事件\r\n                this._dispatchAgency(\r\n                    this._lastHover,\r\n                    EVENT.DRAGENTER,\r\n                    event,\r\n                    this._draggingTarget\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽在目标元素上移动\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragOver = function (event) {\r\n            if (this._draggingTarget) {\r\n                // 分发config.EVENT.DRAGOVER事件\r\n                this._dispatchAgency(\r\n                    this._lastHover,\r\n                    EVENT.DRAGOVER,\r\n                    event,\r\n                    this._draggingTarget\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽离开目标元素\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragLeave = function (event) {\r\n            if (this._draggingTarget) {\r\n                // 分发config.EVENT.DRAGLEAVE事件\r\n                this._dispatchAgency(\r\n                    this._lastHover,\r\n                    EVENT.DRAGLEAVE,\r\n                    event,\r\n                    this._draggingTarget\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽在目标元素上完成\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDrop = function (event) {\r\n            if (this._draggingTarget) {\r\n                this._draggingTarget.invisible = false;\r\n                this.storage.mod(this._draggingTarget.id);\r\n                this.painter.refresh();\r\n\r\n                // 分发config.EVENT.DROP事件\r\n                this._dispatchAgency(\r\n                    this._lastHover,\r\n                    EVENT.DROP,\r\n                    event,\r\n                    this._draggingTarget\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 拖拽结束\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processDragEnd = function (event) {\r\n            if (this._draggingTarget) {\r\n                // 分发config.EVENT.DRAGEND事件\r\n                this._dispatchAgency(\r\n                    this._draggingTarget,\r\n                    EVENT.DRAGEND,\r\n                    event\r\n                );\r\n\r\n                this._lastHover = null;\r\n            }\r\n\r\n            this._isDragging = 0;\r\n            this._draggingTarget = null;\r\n        };\r\n\r\n        /**\r\n         * 鼠标在某个图形元素上移动\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processOverShape = function (event) {\r\n            // 分发config.EVENT.MOUSEOVER事件\r\n            this._dispatchAgency(this._lastHover, EVENT.MOUSEOVER, event);\r\n        };\r\n\r\n        /**\r\n         * 鼠标离开某个图形元素\r\n         * \r\n         * @private\r\n         * @param {Object} event 事件对象\r\n         */\r\n        Handler.prototype._processOutShape = function (event) {\r\n            // 分发config.EVENT.MOUSEOUT事件\r\n            this._dispatchAgency(this._lastHover, EVENT.MOUSEOUT, event);\r\n        };\r\n\r\n        /**\r\n         * 事件分发代理\r\n         * \r\n         * @private\r\n         * @param {Object} targetShape 目标图形元素\r\n         * @param {string} eventName 事件名称\r\n         * @param {Object} event 事件对象\r\n         * @param {Object=} draggedShape 拖拽事件特有，当前被拖拽图形元素\r\n         */\r\n        Handler.prototype._dispatchAgency = function (targetShape, eventName, event, draggedShape) {\r\n            var eventHandler = 'on' + eventName;\r\n            var eventPacket = {\r\n                type : eventName,\r\n                event : event,\r\n                target : targetShape,\r\n                cancelBubble: false\r\n            };\r\n\r\n            var el = targetShape;\r\n\r\n            if (draggedShape) {\r\n                eventPacket.dragged = draggedShape;\r\n            }\r\n\r\n            while (el) {\r\n                el[eventHandler] \r\n                && (eventPacket.cancelBubble = el[eventHandler](eventPacket));\r\n                el.dispatch(eventName, eventPacket);\r\n\r\n                el = el.parent;\r\n                \r\n                if (eventPacket.cancelBubble) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (targetShape) {\r\n                // 冒泡到顶级 zrender 对象\r\n                if (!eventPacket.cancelBubble) {\r\n                    this.dispatch(eventName, eventPacket);\r\n                }\r\n            }\r\n            else if (!draggedShape) {\r\n                // 无hover目标，无拖拽对象，原生事件分发\r\n                var eveObj = {\r\n                    type: eventName,\r\n                    event: event\r\n                };\r\n                this.dispatch(eventName, eveObj);\r\n                // 分发事件到用户自定义层\r\n                this.painter.eachOtherLayer(function (layer) {\r\n                    if (typeof(layer[eventHandler]) == 'function') {\r\n                        layer[eventHandler](eveObj);\r\n                    }\r\n                    if (layer.dispatch) {\r\n                        layer.dispatch(eventName, eveObj);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 迭代寻找hover shape\r\n         * @private\r\n         * @method\r\n         */\r\n        Handler.prototype._iterateAndFindHover = (function() {\r\n            var invTransform = mat2d.create();\r\n            return function() {\r\n                var list = this.storage.getShapeList();\r\n                var currentZLevel;\r\n                var currentLayer;\r\n                var tmp = [ 0, 0 ];\r\n                for (var i = list.length - 1; i >= 0 ; i--) {\r\n                    var shape = list[i];\r\n\r\n                    if (currentZLevel !== shape.zlevel) {\r\n                        currentLayer = this.painter.getLayer(shape.zlevel, currentLayer);\r\n                        tmp[0] = this._mouseX;\r\n                        tmp[1] = this._mouseY;\r\n\r\n                        if (currentLayer.needTransform) {\r\n                            mat2d.invert(invTransform, currentLayer.transform);\r\n                            vec2.applyTransform(tmp, tmp, invTransform);\r\n                        }\r\n                    }\r\n\r\n                    if (this._findHover(shape, tmp[0], tmp[1])) {\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        })();\r\n        \r\n        // touch指尖错觉的尝试偏移量配置\r\n        var MOBILE_TOUCH_OFFSETS = [\r\n            { x: 10 },\r\n            { x: -20 },\r\n            { x: 10, y: 10 },\r\n            { y: -20 }\r\n        ];\r\n\r\n        // touch有指尖错觉，四向尝试，让touch上的点击更好触发事件\r\n        Handler.prototype._mobileFindFixed = function (event) {\r\n            this._lastHover = null;\r\n            this._mouseX = event.zrenderX;\r\n            this._mouseY = event.zrenderY;\r\n\r\n            this._event = event;\r\n\r\n            this._iterateAndFindHover();\r\n            for (var i = 0; !this._lastHover && i < MOBILE_TOUCH_OFFSETS.length ; i++) {\r\n                var offset = MOBILE_TOUCH_OFFSETS[ i ];\r\n                offset.x && (this._mouseX += offset.x);\r\n                offset.y && (this._mouseY += offset.y);\r\n\r\n                this._iterateAndFindHover();\r\n            }\r\n\r\n            if (this._lastHover) {\r\n                event.zrenderX = this._mouseX;\r\n                event.zrenderY = this._mouseY;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 迭代函数，查找hover到的图形元素并即时做些事件分发\r\n         * \r\n         * @inner\r\n         * @param {Object} shape 图形元素\r\n         * @param {number} x\r\n         * @param {number} y\r\n         */\r\n        function findHover(shape, x, y) {\r\n            if (\r\n                (this._draggingTarget && this._draggingTarget.id == shape.id) // 迭代到当前拖拽的图形上\r\n                || shape.isSilent() // 打酱油的路过，啥都不响应的shape~\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            var event = this._event;\r\n            if (shape.isCover(x, y)) {\r\n                if (shape.hoverable) {\r\n                    this.storage.addHover(shape);\r\n                }\r\n                // 查找是否在 clipShape 中\r\n                var p = shape.parent;\r\n                while (p) {\r\n                    if (p.clipShape && !p.clipShape.isCover(this._mouseX, this._mouseY))  {\r\n                        // 已经被祖先 clip 掉了\r\n                        return false;\r\n                    }\r\n                    p = p.parent;\r\n                }\r\n\r\n                if (this._lastHover != shape) {\r\n                    this._processOutShape(event);\r\n\r\n                    // 可能出现config.EVENT.DRAGLEAVE事件\r\n                    this._processDragLeave(event);\r\n\r\n                    this._lastHover = shape;\r\n\r\n                    // 可能出现config.EVENT.DRAGENTER事件\r\n                    this._processDragEnter(event);\r\n                }\r\n\r\n                this._processOverShape(event);\r\n\r\n                // 可能出现config.EVENT.DRAGOVER\r\n                this._processDragOver(event);\r\n\r\n                this._hasfound = 1;\r\n\r\n                return true;    // 找到则中断迭代查找\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标\r\n         * \r\n         * @private\r\n         */\r\n        Handler.prototype._zrenderEventFixed = function (event, isTouch) {\r\n            if (event.zrenderFixed) {\r\n                return event;\r\n            }\r\n\r\n            if (!isTouch) {\r\n                event = event || window.event;\r\n                // 进入对象优先~\r\n                var target = event.toElement\r\n                              || event.relatedTarget\r\n                              || event.srcElement\r\n                              || event.target;\r\n\r\n                if (target && target != this._domHover) {\r\n                    event.zrenderX = (typeof event.offsetX != 'undefined'\r\n                                        ? event.offsetX\r\n                                        : event.layerX)\r\n                                      + target.offsetLeft;\r\n                    event.zrenderY = (typeof event.offsetY != 'undefined'\r\n                                        ? event.offsetY\r\n                                        : event.layerY)\r\n                                      + target.offsetTop;\r\n                }\r\n            }\r\n            else {\r\n                var touch = event.type != 'touchend'\r\n                                ? event.targetTouches[0]\r\n                                : event.changedTouches[0];\r\n                if (touch) {\r\n                    var rBounding = this.painter._domRoot.getBoundingClientRect();\r\n                    // touch事件坐标是全屏的~\r\n                    event.zrenderX = touch.clientX - rBounding.left;\r\n                    event.zrenderY = touch.clientY - rBounding.top;\r\n                }\r\n            }\r\n\r\n            event.zrenderFixed = 1;\r\n            return event;\r\n        };\r\n\r\n        util.merge(Handler.prototype, Eventful.prototype, true);\r\n\r\n        return Handler;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/Handler.js\n// module id = 53\n// module chunks = 0","/**\r\n * Painter绘图模块\r\n * @module zrender/Painter\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\r\n define(\r\n    function (require) {\r\n        'use strict';\r\n\r\n        var config = require('./config');\r\n        var util = require('./tool/util');\r\n        // var vec2 = require('./tool/vector');\r\n        var log = require('./tool/log');\r\n        // var matrix = require('./tool/matrix');\r\n        var BaseLoadingEffect = require('./loadingEffect/Base');\r\n\r\n        var Layer = require('./Layer');\r\n\r\n        // 返回false的方法，用于避免页面被选中\r\n        function returnFalse() {\r\n            return false;\r\n        }\r\n\r\n        // 什么都不干的空方法\r\n        function doNothing() {}\r\n\r\n        function isLayerValid(layer) {\r\n            if (!layer) {\r\n                return false;\r\n            }\r\n            \r\n            if (layer.isBuildin) {\r\n                return true;\r\n            }\r\n\r\n            if (typeof(layer.resize) !== 'function'\r\n                || typeof(layer.refresh) !== 'function'\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/Painter\r\n         * @constructor\r\n         * @param {HTMLElement} root 绘图容器\r\n         * @param {module:zrender/Storage} storage\r\n         */\r\n        var Painter = function (root, storage) {\r\n            /**\r\n             * 绘图容器\r\n             * @type {HTMLElement}\r\n             */\r\n            this.root = root;\r\n            root.style['-webkit-tap-highlight-color'] = 'transparent';\r\n            root.style['-webkit-user-select'] = 'none';\r\n            root.style['user-select'] = 'none';\r\n            root.style['-webkit-touch-callout'] = 'none';\r\n\r\n            /**\r\n             * @type {module:zrender/Storage}\r\n             */\r\n            this.storage = storage;\r\n\r\n            root.innerHTML = '';\r\n            this._width = this._getWidth(); // 宽，缓存记录\r\n            this._height = this._getHeight(); // 高，缓存记录\r\n\r\n            var domRoot = document.createElement('div');\r\n            this._domRoot = domRoot;\r\n\r\n            // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n            domRoot.style.position = 'relative';\r\n            domRoot.style.overflow = 'hidden';\r\n            domRoot.style.width = this._width + 'px';\r\n            domRoot.style.height = this._height + 'px';\r\n            root.appendChild(domRoot);\r\n\r\n            this._layers = {};\r\n\r\n            this._zlevelList = [];\r\n\r\n            this._layerConfig = {};\r\n\r\n            this._loadingEffect = new BaseLoadingEffect({});\r\n            this.shapeToImage = this._createShapeToImageProcessor();\r\n\r\n            // 创建各层canvas\r\n            // 背景\r\n            this._bgDom = document.createElement('div');\r\n            this._bgDom.style.cssText = [\r\n                'position:absolute;left:0px;top:0px;width:',\r\n                this._width, 'px;height:', this._height + 'px;', \r\n                '-webkit-user-select:none;user-select;none;',\r\n                '-webkit-touch-callout:none;'\r\n            ].join('');\r\n            this._bgDom.setAttribute('data-zr-dom-id', 'bg');\r\n            this._bgDom.className = config.elementClassName;\r\n\r\n            domRoot.appendChild(this._bgDom);\r\n            this._bgDom.onselectstart = returnFalse;\r\n\r\n            // 高亮\r\n            var hoverLayer = new Layer('_zrender_hover_', this);\r\n            this._layers['hover'] = hoverLayer;\r\n            domRoot.appendChild(hoverLayer.dom);\r\n            hoverLayer.initContext();\r\n\r\n            hoverLayer.dom.onselectstart = returnFalse;\r\n            hoverLayer.dom.style['-webkit-user-select'] = 'none';\r\n            hoverLayer.dom.style['user-select'] = 'none';\r\n            hoverLayer.dom.style['-webkit-touch-callout'] = 'none';\r\n\r\n            // Will be injected by zrender instance\r\n            this.refreshNextFrame = null;\r\n        };\r\n\r\n        /**\r\n         * 首次绘图，创建各种dom和context\r\n         * \r\n         * @param {Function} callback 绘画结束后的回调函数\r\n         */\r\n        Painter.prototype.render = function (callback) {\r\n            if (this.isLoading()) {\r\n                this.hideLoading();\r\n            }\r\n            // TODO\r\n            this.refresh(callback, true);\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 刷新\r\n         * @param {Function} callback 刷新结束后的回调函数\r\n         * @param {boolean} paintAll 强制绘制所有shape\r\n         */\r\n        Painter.prototype.refresh = function (callback, paintAll) {\r\n            var list = this.storage.getShapeList(true);\r\n            this._paintList(list, paintAll);\r\n\r\n            // Paint custum layers\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var z = this._zlevelList[i];\r\n                var layer = this._layers[z];\r\n                if (! layer.isBuildin && layer.refresh) {\r\n                    layer.refresh();\r\n                }\r\n            }\r\n\r\n            if (typeof callback == 'function') {\r\n                callback();\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        Painter.prototype._preProcessLayer = function (layer) {\r\n            layer.unusedCount++;\r\n            layer.updateTransform();\r\n        };\r\n\r\n        Painter.prototype._postProcessLayer = function (layer) {\r\n            layer.dirty = false;\r\n            // 删除过期的层\r\n            // PENDING\r\n            // if (layer.unusedCount >= 500) {\r\n            //     this.delLayer(z);\r\n            // }\r\n            if (layer.unusedCount == 1) {\r\n                layer.clear();\r\n            }\r\n        };\r\n \r\n        Painter.prototype._paintList = function (list, paintAll) {\r\n\r\n            if (typeof(paintAll) == 'undefined') {\r\n                paintAll = false;\r\n            }\r\n\r\n            this._updateLayerStatus(list);\r\n\r\n            var currentLayer;\r\n            var currentZLevel;\r\n            var ctx;\r\n\r\n            this.eachBuildinLayer(this._preProcessLayer);\r\n\r\n            // var invTransform = [];\r\n\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                var shape = list[i];\r\n\r\n                // Change draw layer\r\n                if (currentZLevel !== shape.zlevel) {\r\n                    if (currentLayer) {\r\n                        if (currentLayer.needTransform) {\r\n                            ctx.restore();\r\n                        }\r\n                        ctx.flush && ctx.flush();\r\n                    }\r\n\r\n                    currentZLevel = shape.zlevel;\r\n                    currentLayer = this.getLayer(currentZLevel);\r\n\r\n                    if (!currentLayer.isBuildin) {\r\n                        log(\r\n                            'ZLevel ' + currentZLevel\r\n                            + ' has been used by unkown layer ' + currentLayer.id\r\n                        );\r\n                    }\r\n\r\n                    ctx = currentLayer.ctx;\r\n\r\n                    // Reset the count\r\n                    currentLayer.unusedCount = 0;\r\n\r\n                    if (currentLayer.dirty || paintAll) {\r\n                        currentLayer.clear();\r\n                    }\r\n\r\n                    if (currentLayer.needTransform) {\r\n                        ctx.save();\r\n                        currentLayer.setTransform(ctx);\r\n                    }\r\n                }\r\n\r\n                if ((currentLayer.dirty || paintAll) && !shape.invisible) {\r\n                    if (\r\n                        !shape.onbrush\r\n                        || (shape.onbrush && !shape.onbrush(ctx, false))\r\n                    ) {\r\n                        if (config.catchBrushException) {\r\n                            try {\r\n                                shape.brush(ctx, false, this.refreshNextFrame);\r\n                            }\r\n                            catch (error) {\r\n                                log(\r\n                                    error,\r\n                                    'brush error of ' + shape.type,\r\n                                    shape\r\n                                );\r\n                            }\r\n                        }\r\n                        else {\r\n                            shape.brush(ctx, false, this.refreshNextFrame);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                shape.__dirty = false;\r\n            }\r\n\r\n            if (currentLayer) {\r\n                if (currentLayer.needTransform) {\r\n                    ctx.restore();\r\n                }\r\n                ctx.flush && ctx.flush();\r\n            }\r\n\r\n            this.eachBuildinLayer(this._postProcessLayer);\r\n        };\r\n\r\n        /**\r\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\r\n         * @param {number} zlevel\r\n         * @return {module:zrender/Layer}\r\n         */\r\n        Painter.prototype.getLayer = function (zlevel) {\r\n            var layer = this._layers[zlevel];\r\n            if (!layer) {\r\n                // Create a new layer\r\n                layer = new Layer(zlevel, this);\r\n                layer.isBuildin = true;\r\n\r\n                if (this._layerConfig[zlevel]) {\r\n                    util.merge(layer, this._layerConfig[zlevel], true);\r\n                }\r\n\r\n                layer.updateTransform();\r\n\r\n                this.insertLayer(zlevel, layer);\r\n\r\n                // Context is created after dom inserted to document\r\n                // Or excanvas will get 0px clientWidth and clientHeight\r\n                layer.initContext();\r\n            }\r\n\r\n            return layer;\r\n        };\r\n\r\n        Painter.prototype.insertLayer = function (zlevel, layer) {\r\n            if (this._layers[zlevel]) {\r\n                log('ZLevel ' + zlevel + ' has been used already');\r\n                return;\r\n            }\r\n            // Check if is a valid layer\r\n            if (!isLayerValid(layer)) {\r\n                log('Layer of zlevel ' + zlevel + ' is not valid');\r\n                return;\r\n            }\r\n\r\n            var len = this._zlevelList.length;\r\n            var prevLayer = null;\r\n            var i = -1;\r\n            if (len > 0 && zlevel > this._zlevelList[0]) {\r\n                for (i = 0; i < len - 1; i++) {\r\n                    if (\r\n                        this._zlevelList[i] < zlevel\r\n                        && this._zlevelList[i + 1] > zlevel\r\n                    ) {\r\n                        break;\r\n                    }\r\n                }\r\n                prevLayer = this._layers[this._zlevelList[i]];\r\n            }\r\n            this._zlevelList.splice(i + 1, 0, zlevel);\r\n\r\n            var prevDom = prevLayer ? prevLayer.dom : this._bgDom;\r\n            if (prevDom.nextSibling) {\r\n                prevDom.parentNode.insertBefore(\r\n                    layer.dom,\r\n                    prevDom.nextSibling\r\n                );\r\n            }\r\n            else {\r\n                prevDom.parentNode.appendChild(layer.dom);\r\n            }\r\n\r\n            this._layers[zlevel] = layer;\r\n        };\r\n\r\n        // Iterate each layer\r\n        Painter.prototype.eachLayer = function (cb, context) {\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var z = this._zlevelList[i];\r\n                cb.call(context, this._layers[z], z);\r\n            }\r\n        };\r\n\r\n        // Iterate each buildin layer\r\n        Painter.prototype.eachBuildinLayer = function (cb, context) {\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var z = this._zlevelList[i];\r\n                var layer = this._layers[z];\r\n                if (layer.isBuildin) {\r\n                    cb.call(context, layer, z);\r\n                }\r\n            }\r\n        };\r\n\r\n        // Iterate each other layer except buildin layer\r\n        Painter.prototype.eachOtherLayer = function (cb, context) {\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var z = this._zlevelList[i];\r\n                var layer = this._layers[z];\r\n                if (! layer.isBuildin) {\r\n                    cb.call(context, layer, z);\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 获取所有已创建的层\r\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\r\n         */\r\n        Painter.prototype.getLayers = function () {\r\n            return this._layers;\r\n        };\r\n\r\n        Painter.prototype._updateLayerStatus = function (list) {\r\n            \r\n            var layers = this._layers;\r\n\r\n            var elCounts = {};\r\n\r\n            this.eachBuildinLayer(function (layer, z) {\r\n                elCounts[z] = layer.elCount;\r\n                layer.elCount = 0;\r\n            });\r\n\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                var shape = list[i];\r\n                var zlevel = shape.zlevel;\r\n                var layer = layers[zlevel];\r\n                if (layer) {\r\n                    layer.elCount++;\r\n                    // 已经被标记为需要刷新\r\n                    if (layer.dirty) {\r\n                        continue;\r\n                    }\r\n                    layer.dirty = shape.__dirty;\r\n                }\r\n            }\r\n\r\n            // 层中的元素数量有发生变化\r\n            this.eachBuildinLayer(function (layer, z) {\r\n                if (elCounts[z] !== layer.elCount) {\r\n                    layer.dirty = true;\r\n                }\r\n            });\r\n        };\r\n\r\n        /**\r\n         * 指定的图形列表\r\n         * @param {Array.<module:zrender/shape/Base>} shapeList 需要更新的图形元素列表\r\n         * @param {Function} [callback] 视图更新后回调函数\r\n         */\r\n        Painter.prototype.refreshShapes = function (shapeList, callback) {\r\n            for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                var shape = shapeList[i];\r\n                shape.modSelf();\r\n            }\r\n\r\n            this.refresh(callback);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 设置loading特效\r\n         * \r\n         * @param {Object} loadingEffect loading特效\r\n         * @return {Painter}\r\n         */\r\n        Painter.prototype.setLoadingEffect = function (loadingEffect) {\r\n            this._loadingEffect = loadingEffect;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清除hover层外所有内容\r\n         */\r\n        Painter.prototype.clear = function () {\r\n            this.eachBuildinLayer(this._clearLayer);\r\n            return this;\r\n        };\r\n\r\n        Painter.prototype._clearLayer = function (layer) {\r\n            layer.clear();\r\n        };\r\n\r\n        /**\r\n         * 修改指定zlevel的绘制参数\r\n         * \r\n         * @param {string} zlevel\r\n         * @param {Object} config 配置对象\r\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\r\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\r\n         * @param {number} [config.lastFrameAlpha=0.7]\r\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n         * @param {Array.<number>} [position] 层的平移\r\n         * @param {Array.<number>} [rotation] 层的旋转\r\n         * @param {Array.<number>} [scale] 层的缩放\r\n         * @param {boolean} [zoomable=false] 层是否支持鼠标缩放操作\r\n         * @param {boolean} [panable=false] 层是否支持鼠标平移操作\r\n         */\r\n        Painter.prototype.modLayer = function (zlevel, config) {\r\n            if (config) {\r\n                if (!this._layerConfig[zlevel]) {\r\n                    this._layerConfig[zlevel] = config;\r\n                }\r\n                else {\r\n                    util.merge(this._layerConfig[zlevel], config, true);\r\n                }\r\n\r\n                var layer = this._layers[zlevel];\r\n\r\n                if (layer) {\r\n                    util.merge(layer, this._layerConfig[zlevel], true);\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 删除指定层\r\n         * @param {number} zlevel 层所在的zlevel\r\n         */\r\n        Painter.prototype.delLayer = function (zlevel) {\r\n            var layer = this._layers[zlevel];\r\n            if (!layer) {\r\n                return;\r\n            }\r\n            // Save config\r\n            this.modLayer(zlevel, {\r\n                position: layer.position,\r\n                rotation: layer.rotation,\r\n                scale: layer.scale\r\n            });\r\n            layer.dom.parentNode.removeChild(layer.dom);\r\n            delete this._layers[zlevel];\r\n\r\n            this._zlevelList.splice(util.indexOf(this._zlevelList, zlevel), 1);\r\n        };\r\n\r\n        /**\r\n         * 刷新hover层\r\n         */\r\n        Painter.prototype.refreshHover = function () {\r\n            this.clearHover();\r\n            var list = this.storage.getHoverShapes(true);\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                this._brushHover(list[i]);\r\n            }\r\n            var ctx = this._layers.hover.ctx;\r\n            ctx.flush && ctx.flush();\r\n\r\n            this.storage.delHover();\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清除hover层所有内容\r\n         */\r\n        Painter.prototype.clearHover = function () {\r\n            var hover = this._layers.hover;\r\n            hover && hover.clear();\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 显示loading\r\n         * \r\n         * @param {Object=} loadingEffect loading效果对象\r\n         */\r\n        Painter.prototype.showLoading = function (loadingEffect) {\r\n            this._loadingEffect && this._loadingEffect.stop();\r\n            loadingEffect && this.setLoadingEffect(loadingEffect);\r\n            this._loadingEffect.start(this);\r\n            this.loading = true;\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * loading结束\r\n         */\r\n        Painter.prototype.hideLoading = function () {\r\n            this._loadingEffect.stop();\r\n\r\n            this.clearHover();\r\n            this.loading = false;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * loading结束判断\r\n         */\r\n        Painter.prototype.isLoading = function () {\r\n            return this.loading;\r\n        };\r\n\r\n        /**\r\n         * 区域大小变化后重绘\r\n         */\r\n        Painter.prototype.resize = function () {\r\n            var domRoot = this._domRoot;\r\n            domRoot.style.display = 'none';\r\n\r\n            var width = this._getWidth();\r\n            var height = this._getHeight();\r\n\r\n            domRoot.style.display = '';\r\n\r\n            // 优化没有实际改变的resize\r\n            if (this._width != width || height != this._height) {\r\n                this._width = width;\r\n                this._height = height;\r\n\r\n                domRoot.style.width = width + 'px';\r\n                domRoot.style.height = height + 'px';\r\n\r\n                for (var id in this._layers) {\r\n\r\n                    this._layers[id].resize(width, height);\r\n                }\r\n\r\n                this.refresh(null, true);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清除单独的一个层\r\n         * @param {number} zLevel\r\n         */\r\n        Painter.prototype.clearLayer = function (zLevel) {\r\n            var layer = this._layers[zLevel];\r\n            if (layer) {\r\n                layer.clear();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 释放\r\n         */\r\n        Painter.prototype.dispose = function () {\r\n            if (this.isLoading()) {\r\n                this.hideLoading();\r\n            }\r\n\r\n            this.root.innerHTML = '';\r\n\r\n            this.root =\r\n            this.storage =\r\n\r\n            this._domRoot = \r\n            this._layers = null;\r\n        };\r\n\r\n        Painter.prototype.getDomHover = function () {\r\n            return this._layers.hover.dom;\r\n        };\r\n\r\n        /**\r\n         * 图像导出\r\n         * @param {string} type\r\n         * @param {string} [backgroundColor='#fff'] 背景色\r\n         * @return {string} 图片的Base64 url\r\n         */\r\n        Painter.prototype.toDataURL = function (type, backgroundColor, args) {\r\n            if (window['G_vmlCanvasManager']) {\r\n                return null;\r\n            }\r\n\r\n            var imageLayer = new Layer('image', this);\r\n            this._bgDom.appendChild(imageLayer.dom);\r\n            imageLayer.initContext();\r\n            \r\n            var ctx = imageLayer.ctx;\r\n            imageLayer.clearColor = backgroundColor || '#fff';\r\n            imageLayer.clear();\r\n            \r\n            var self = this;\r\n            // 升序遍历，shape上的zlevel指定绘画图层的z轴层叠\r\n\r\n            this.storage.iterShape(\r\n                function (shape) {\r\n                    if (!shape.invisible) {\r\n                        if (!shape.onbrush // 没有onbrush\r\n                            // 有onbrush并且调用执行返回false或undefined则继续粉刷\r\n                            || (shape.onbrush && !shape.onbrush(ctx, false))\r\n                        ) {\r\n                            if (config.catchBrushException) {\r\n                                try {\r\n                                    shape.brush(ctx, false, self.refreshNextFrame);\r\n                                }\r\n                                catch (error) {\r\n                                    log(\r\n                                        error,\r\n                                        'brush error of ' + shape.type,\r\n                                        shape\r\n                                    );\r\n                                }\r\n                            }\r\n                            else {\r\n                                shape.brush(ctx, false, self.refreshNextFrame);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                { normal: 'up', update: true }\r\n            );\r\n            var image = imageLayer.dom.toDataURL(type, args); \r\n            ctx = null;\r\n            this._bgDom.removeChild(imageLayer.dom);\r\n            return image;\r\n        };\r\n\r\n        /**\r\n         * 获取绘图区域宽度\r\n         */\r\n        Painter.prototype.getWidth = function () {\r\n            return this._width;\r\n        };\r\n\r\n        /**\r\n         * 获取绘图区域高度\r\n         */\r\n        Painter.prototype.getHeight = function () {\r\n            return this._height;\r\n        };\r\n\r\n        Painter.prototype._getWidth = function () {\r\n            var root = this.root;\r\n            var stl = root.currentStyle\r\n                      || document.defaultView.getComputedStyle(root);\r\n\r\n            return ((root.clientWidth || parseInt(stl.width, 10))\r\n                    - parseInt(stl.paddingLeft, 10) // 请原谅我这比较粗暴\r\n                    - parseInt(stl.paddingRight, 10)).toFixed(0) - 0;\r\n        };\r\n\r\n        Painter.prototype._getHeight = function () {\r\n            var root = this.root;\r\n            var stl = root.currentStyle\r\n                      || document.defaultView.getComputedStyle(root);\r\n\r\n            return ((root.clientHeight || parseInt(stl.height, 10))\r\n                    - parseInt(stl.paddingTop, 10) // 请原谅我这比较粗暴\r\n                    - parseInt(stl.paddingBottom, 10)).toFixed(0) - 0;\r\n        };\r\n\r\n        Painter.prototype._brushHover = function (shape) {\r\n            var ctx = this._layers.hover.ctx;\r\n\r\n            if (!shape.onbrush // 没有onbrush\r\n                // 有onbrush并且调用执行返回false或undefined则继续粉刷\r\n                || (shape.onbrush && !shape.onbrush(ctx, true))\r\n            ) {\r\n                var layer = this.getLayer(shape.zlevel);\r\n                if (layer.needTransform) {\r\n                    ctx.save();\r\n                    layer.setTransform(ctx);\r\n                }\r\n                // Retina 优化\r\n                if (config.catchBrushException) {\r\n                    try {\r\n                        shape.brush(ctx, true, this.refreshNextFrame);\r\n                    }\r\n                    catch (error) {\r\n                        log(\r\n                            error, 'hoverBrush error of ' + shape.type, shape\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    shape.brush(ctx, true, this.refreshNextFrame);\r\n                }\r\n                if (layer.needTransform) {\r\n                    ctx.restore();\r\n                }\r\n            }\r\n        };\r\n\r\n        Painter.prototype._shapeToImage = function (\r\n            id, shape, width, height, devicePixelRatio\r\n        ) {\r\n            var canvas = document.createElement('canvas');\r\n            var ctx = canvas.getContext('2d');\r\n            \r\n            canvas.style.width = width + 'px';\r\n            canvas.style.height = height + 'px';\r\n            canvas.setAttribute('width', width * devicePixelRatio);\r\n            canvas.setAttribute('height', height * devicePixelRatio);\r\n\r\n            ctx.clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);\r\n\r\n            var shapeTransform = {\r\n                position : shape.position,\r\n                rotation : shape.rotation,\r\n                scale : shape.scale\r\n            };\r\n            shape.position = [ 0, 0, 0 ];\r\n            shape.rotation = 0;\r\n            shape.scale = [ 1, 1 ];\r\n            if (shape) {\r\n                shape.brush(ctx, false);\r\n            }\r\n\r\n            var ImageShape = require('./shape/Image');\r\n            var imgShape = new ImageShape({\r\n                id : id,\r\n                style : {\r\n                    x : 0,\r\n                    y : 0,\r\n                    image : canvas\r\n                }\r\n            });\r\n\r\n            if (shapeTransform.position != null) {\r\n                imgShape.position = shape.position = shapeTransform.position;\r\n            }\r\n\r\n            if (shapeTransform.rotation != null) {\r\n                imgShape.rotation = shape.rotation = shapeTransform.rotation;\r\n            }\r\n\r\n            if (shapeTransform.scale != null) {\r\n                imgShape.scale = shape.scale = shapeTransform.scale;\r\n            }\r\n\r\n            return imgShape;\r\n        };\r\n\r\n        Painter.prototype._createShapeToImageProcessor = function () {\r\n            if (window['G_vmlCanvasManager']) {\r\n                return doNothing;\r\n            }\r\n\r\n            var me = this;\r\n\r\n            return function (id, e, width, height) {\r\n                return me._shapeToImage(\r\n                    id, e, width, height, config.devicePixelRatio\r\n                );\r\n            };\r\n        };\r\n\r\n        return Painter;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/Painter.js\n// module id = 54\n// module chunks = 0","/**\r\n * @module zrender/Layer\r\n * @author pissang(https://www.github.com/pissang)\r\n */\r\ndefine(function (require) {\r\n\r\n    var Transformable = require('./mixin/Transformable');\r\n    var util = require('./tool/util');\r\n    var vmlCanvasManager = window['G_vmlCanvasManager'];\r\n    var config = require('./config');\r\n\r\n    function returnFalse() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 创建dom\r\n     * \r\n     * @inner\r\n     * @param {string} id dom id 待用\r\n     * @param {string} type dom type，such as canvas, div etc.\r\n     * @param {Painter} painter painter instance\r\n     */\r\n    function createDom(id, type, painter) {\r\n        var newDom = document.createElement(type);\r\n        var width = painter.getWidth();\r\n        var height = painter.getHeight();\r\n\r\n        // 没append呢，请原谅我这样写，清晰~\r\n        newDom.style.position = 'absolute';\r\n        newDom.style.left = 0;\r\n        newDom.style.top = 0;\r\n        newDom.style.width = width + 'px';\r\n        newDom.style.height = height + 'px';\r\n        newDom.width = width * config.devicePixelRatio;\r\n        newDom.height = height * config.devicePixelRatio;\r\n\r\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\r\n        newDom.setAttribute('data-zr-dom-id', id);\r\n        return newDom;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/Layer\r\n     * @constructor\r\n     * @extends module:zrender/mixin/Transformable\r\n     * @param {string} id\r\n     * @param {module:zrender/Painter} painter\r\n     */\r\n    var Layer = function(id, painter) {\r\n\r\n        this.id = id;\r\n\r\n        this.dom = createDom(id, 'canvas', painter);\r\n        this.dom.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n        this.dom.style['-webkit-user-select'] = 'none';\r\n        this.dom.style['user-select'] = 'none';\r\n        this.dom.style['-webkit-touch-callout'] = 'none';\r\n        this.dom.style['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\r\n\r\n        this.dom.className = config.elementClassName;\r\n\r\n        vmlCanvasManager && vmlCanvasManager.initElement(this.dom);\r\n\r\n        this.domBack = null;\r\n        this.ctxBack = null;\r\n\r\n        this.painter = painter;\r\n\r\n        this.unusedCount = 0;\r\n\r\n        this.config = null;\r\n\r\n        this.dirty = true;\r\n\r\n        this.elCount = 0;\r\n\r\n        // Configs\r\n        /**\r\n         * 每次清空画布的颜色\r\n         * @type {string}\r\n         * @default 0\r\n         */\r\n        this.clearColor = 0;\r\n        /**\r\n         * 是否开启动态模糊\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.motionBlur = false;\r\n        /**\r\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n         * @type {number}\r\n         * @default 0.7\r\n         */\r\n        this.lastFrameAlpha = 0.7;\r\n        /**\r\n         * 层是否支持鼠标平移操作\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.zoomable = false;\r\n        /**\r\n         * 层是否支持鼠标缩放操作\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.panable = false;\r\n\r\n        this.maxZoom = Infinity;\r\n        this.minZoom = 0;\r\n\r\n        Transformable.call(this);\r\n    };\r\n\r\n    Layer.prototype.initContext = function () {\r\n        this.ctx = this.dom.getContext('2d');\r\n\r\n        var dpr = config.devicePixelRatio;\r\n        if (dpr != 1) { \r\n            this.ctx.scale(dpr, dpr);\r\n        }\r\n    };\r\n\r\n    Layer.prototype.createBackBuffer = function () {\r\n        if (vmlCanvasManager) { // IE 8- should not support back buffer\r\n            return;\r\n        }\r\n        this.domBack = createDom('back-' + this.id, 'canvas', this.painter);\r\n        this.ctxBack = this.domBack.getContext('2d');\r\n\r\n        var dpr = config.devicePixelRatio;\r\n\r\n        if (dpr != 1) { \r\n            this.ctxBack.scale(dpr, dpr);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param  {number} width\r\n     * @param  {number} height\r\n     */\r\n    Layer.prototype.resize = function (width, height) {\r\n        var dpr = config.devicePixelRatio;\r\n\r\n        this.dom.style.width = width + 'px';\r\n        this.dom.style.height = height + 'px';\r\n\r\n        this.dom.setAttribute('width', width * dpr);\r\n        this.dom.setAttribute('height', height * dpr);\r\n\r\n        if (dpr != 1) { \r\n            this.ctx.scale(dpr, dpr);\r\n        }\r\n\r\n        if (this.domBack) {\r\n            this.domBack.setAttribute('width', width * dpr);\r\n            this.domBack.setAttribute('height', height * dpr);\r\n\r\n            if (dpr != 1) { \r\n                this.ctxBack.scale(dpr, dpr);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 清空该层画布\r\n     */\r\n    Layer.prototype.clear = function () {\r\n        var dom = this.dom;\r\n        var ctx = this.ctx;\r\n        var width = dom.width;\r\n        var height = dom.height;\r\n\r\n        var haveClearColor = this.clearColor && !vmlCanvasManager;\r\n        var haveMotionBLur = this.motionBlur && !vmlCanvasManager;\r\n        var lastFrameAlpha = this.lastFrameAlpha;\r\n        \r\n        var dpr = config.devicePixelRatio;\r\n\r\n        if (haveMotionBLur) {\r\n            if (!this.domBack) {\r\n                this.createBackBuffer();\r\n            } \r\n\r\n            this.ctxBack.globalCompositeOperation = 'copy';\r\n            this.ctxBack.drawImage(\r\n                dom, 0, 0,\r\n                width / dpr,\r\n                height / dpr\r\n            );\r\n        }\r\n\r\n        ctx.clearRect(0, 0, width / dpr, height / dpr);\r\n        if (haveClearColor) {\r\n            ctx.save();\r\n            ctx.fillStyle = this.clearColor;\r\n            ctx.fillRect(0, 0, width / dpr, height / dpr);\r\n            ctx.restore();\r\n        }\r\n\r\n        if (haveMotionBLur) {\r\n            var domBack = this.domBack;\r\n            ctx.save();\r\n            ctx.globalAlpha = lastFrameAlpha;\r\n            ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);\r\n            ctx.restore();\r\n        }\r\n    };\r\n\r\n    util.merge(Layer.prototype, Transformable.prototype);\r\n\r\n    return Layer;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/Layer.js\n// module id = 55\n// module chunks = 0","/**\r\n * Storage内容仓库模块\r\n * @module zrender/Storage\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @author errorrik (errorrik@gmail.com)\r\n * @author pissang (https://github.com/pissang/)\r\n */\r\ndefine(\r\n    function (require) {\r\n\r\n        'use strict';\r\n\r\n        var util = require('./tool/util');\r\n\r\n        var Group = require('./Group');\r\n\r\n        var defaultIterateOption = {\r\n            hover: false,\r\n            normal: 'down',\r\n            update: false\r\n        };\r\n\r\n        function shapeCompareFunc(a, b) {\r\n            if (a.zlevel == b.zlevel) {\r\n                if (a.z == b.z) {\r\n                    return a.__renderidx - b.__renderidx;\r\n                }\r\n                return a.z - b.z;\r\n            }\r\n            return a.zlevel - b.zlevel;\r\n        }\r\n        /**\r\n         * 内容仓库 (M)\r\n         * @alias module:zrender/Storage\r\n         * @constructor\r\n         */\r\n        var Storage = function () {\r\n            // 所有常规形状，id索引的map\r\n            this._elements = {};\r\n\r\n            // 高亮层形状，不稳定，动态增删，数组位置也是z轴方向，靠前显示在下方\r\n            this._hoverElements = [];\r\n\r\n            this._roots = [];\r\n\r\n            this._shapeList = [];\r\n\r\n            this._shapeListOffset = 0;\r\n        };\r\n\r\n        /**\r\n         * 遍历迭代器\r\n         * \r\n         * @param {Function} fun 迭代回调函数，return true终止迭代\r\n         * @param {Object} [option] 迭代参数，缺省为仅降序遍历普通层图形\r\n         * @param {boolean} [option.hover=true] 是否是高亮层图形\r\n         * @param {string} [option.normal='up'] 是否是普通层图形，迭代时是否指定及z轴顺序\r\n         * @param {boolean} [option.update=false] 是否在迭代前更新形状列表\r\n         * \r\n         */\r\n        Storage.prototype.iterShape = function (fun, option) {\r\n            if (!option) {\r\n                option = defaultIterateOption;\r\n            }\r\n\r\n            if (option.hover) {\r\n                // 高亮层数据遍历\r\n                for (var i = 0, l = this._hoverElements.length; i < l; i++) {\r\n                    var el = this._hoverElements[i];\r\n                    el.updateTransform();\r\n                    if (fun(el)) {\r\n                        return this;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (option.update) {\r\n                this.updateShapeList();\r\n            }\r\n\r\n            // 遍历: 'down' | 'up'\r\n            switch (option.normal) {\r\n                case 'down':\r\n                    // 降序遍历，高层优先\r\n                    var l = this._shapeList.length;\r\n                    while (l--) {\r\n                        if (fun(this._shapeList[l])) {\r\n                            return this;\r\n                        }\r\n                    }\r\n                    break;\r\n                // case 'up':\r\n                default:\r\n                    // 升序遍历，底层优先\r\n                    for (var i = 0, l = this._shapeList.length; i < l; i++) {\r\n                        if (fun(this._shapeList[i])) {\r\n                            return this;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 返回hover层的形状数组\r\n         * @param  {boolean} [update=false] 是否在返回前更新图形的变换\r\n         * @return {Array.<module:zrender/shape/Base>}\r\n         */\r\n        Storage.prototype.getHoverShapes = function (update) {\r\n            // hoverConnect\r\n            var hoverElements = [];\r\n            for (var i = 0, l = this._hoverElements.length; i < l; i++) {\r\n                hoverElements.push(this._hoverElements[i]);\r\n                var target = this._hoverElements[i].hoverConnect;\r\n                if (target) {\r\n                    var shape;\r\n                    target = target instanceof Array ? target : [target];\r\n                    for (var j = 0, k = target.length; j < k; j++) {\r\n                        shape = target[j].id ? target[j] : this.get(target[j]);\r\n                        if (shape) {\r\n                            hoverElements.push(shape);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            hoverElements.sort(shapeCompareFunc);\r\n            if (update) {\r\n                for (var i = 0, l = hoverElements.length; i < l; i++) {\r\n                    hoverElements[i].updateTransform();\r\n                }\r\n            }\r\n            return hoverElements;\r\n        };\r\n\r\n        /**\r\n         * 返回所有图形的绘制队列\r\n         * @param  {boolean} [update=false] 是否在返回前更新该数组\r\n         * 详见{@link module:zrender/shape/Base.prototype.updateShapeList}\r\n         * @return {Array.<module:zrender/shape/Base>}\r\n         */\r\n        Storage.prototype.getShapeList = function (update) {\r\n            if (update) {\r\n                this.updateShapeList();\r\n            }\r\n            return this._shapeList;\r\n        };\r\n\r\n        /**\r\n         * 更新图形的绘制队列。\r\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\r\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\r\n         */\r\n        Storage.prototype.updateShapeList = function () {\r\n            this._shapeListOffset = 0;\r\n            for (var i = 0, len = this._roots.length; i < len; i++) {\r\n                var root = this._roots[i];\r\n                this._updateAndAddShape(root);\r\n            }\r\n            this._shapeList.length = this._shapeListOffset;\r\n\r\n            for (var i = 0, len = this._shapeList.length; i < len; i++) {\r\n                this._shapeList[i].__renderidx = i;\r\n            }\r\n\r\n            this._shapeList.sort(shapeCompareFunc);\r\n        };\r\n\r\n        Storage.prototype._updateAndAddShape = function (el, clipShapes) {\r\n            \r\n            if (el.ignore) {\r\n                return;\r\n            }\r\n\r\n            el.updateTransform();\r\n\r\n            if (el.clipShape) {\r\n                // clipShape 的变换是基于 group 的变换\r\n                el.clipShape.parent = el;\r\n                el.clipShape.updateTransform();\r\n\r\n                // PENDING 效率影响\r\n                if (clipShapes) {\r\n                    clipShapes = clipShapes.slice();\r\n                    clipShapes.push(el.clipShape);\r\n                } else {\r\n                    clipShapes = [el.clipShape];\r\n                }\r\n            }\r\n\r\n            if (el.type == 'group') {\r\n                \r\n                for (var i = 0; i < el._children.length; i++) {\r\n                    var child = el._children[i];\r\n\r\n                    // Force to mark as dirty if group is dirty\r\n                    child.__dirty = el.__dirty || child.__dirty;\r\n\r\n                    this._updateAndAddShape(child, clipShapes);\r\n                }\r\n\r\n                // Mark group clean here\r\n                el.__dirty = false;\r\n                \r\n            }\r\n            else {\r\n                el.__clipShapes = clipShapes;\r\n\r\n                this._shapeList[this._shapeListOffset++] = el;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 修改图形(Shape)或者组(Group)\r\n         * \r\n         * @param {string|module:zrender/shape/Base|module:zrender/Group} el\r\n         * @param {Object} [params] 参数\r\n         */\r\n        Storage.prototype.mod = function (el, params) {\r\n            if (typeof (el) === 'string') {\r\n                el = this._elements[el];\r\n            }\r\n            if (el) {\r\n\r\n                el.modSelf();\r\n\r\n                if (params) {\r\n                    // 如果第二个参数直接使用 shape\r\n                    // parent, _storage, __clipShapes 三个属性会有循环引用\r\n                    // 主要为了向 1.x 版本兼容，2.x 版本不建议使用第二个参数\r\n                    if (params.parent || params._storage || params.__clipShapes) {\r\n                        var target = {};\r\n                        for (var name in params) {\r\n                            if (\r\n                                name === 'parent'\r\n                                || name === '_storage'\r\n                                || name === '__clipShapes'\r\n                            ) {\r\n                                continue;\r\n                            }\r\n                            if (params.hasOwnProperty(name)) {\r\n                                target[name] = params[name];\r\n                            }\r\n                        }\r\n                        util.merge(el, target, true);\r\n                    }\r\n                    else {\r\n                        util.merge(el, params, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 移动指定的图形(Shape)或者组(Group)的位置\r\n         * @param {string} shapeId 形状唯一标识\r\n         * @param {number} dx\r\n         * @param {number} dy\r\n         */\r\n        Storage.prototype.drift = function (shapeId, dx, dy) {\r\n            var shape = this._elements[shapeId];\r\n            if (shape) {\r\n                shape.needTransform = true;\r\n                if (shape.draggable === 'horizontal') {\r\n                    dy = 0;\r\n                }\r\n                else if (shape.draggable === 'vertical') {\r\n                    dx = 0;\r\n                }\r\n                if (!shape.ondrift // ondrift\r\n                    // 有onbrush并且调用执行返回false或undefined则继续\r\n                    || (shape.ondrift && !shape.ondrift(dx, dy))\r\n                ) {\r\n                    shape.drift(dx, dy);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 添加高亮层数据\r\n         * \r\n         * @param {module:zrender/shape/Base} shape\r\n         */\r\n        Storage.prototype.addHover = function (shape) {\r\n            shape.updateNeedTransform();\r\n            this._hoverElements.push(shape);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清空高亮层数据\r\n         */\r\n        Storage.prototype.delHover = function () {\r\n            this._hoverElements = [];\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 是否有图形在高亮层里\r\n         * @return {boolean}\r\n         */\r\n        Storage.prototype.hasHoverShape = function () {\r\n            return this._hoverElements.length > 0;\r\n        };\r\n\r\n        /**\r\n         * 添加图形(Shape)或者组(Group)到根节点\r\n         * @param {module:zrender/shape/Shape|module:zrender/Group} el\r\n         */\r\n        Storage.prototype.addRoot = function (el) {\r\n            // Element has been added\r\n            if (this._elements[el.id]) {\r\n                return;\r\n            }\r\n\r\n            if (el instanceof Group) {\r\n                el.addChildrenToStorage(this);\r\n            }\r\n\r\n            this.addToMap(el);\r\n            this._roots.push(el);\r\n        };\r\n\r\n        /**\r\n         * 删除指定的图形(Shape)或者组(Group)\r\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\r\n         */\r\n        Storage.prototype.delRoot = function (elId) {\r\n            if (typeof(elId) == 'undefined') {\r\n                // 不指定elId清空\r\n                for (var i = 0; i < this._roots.length; i++) {\r\n                    var root = this._roots[i];\r\n                    if (root instanceof Group) {\r\n                        root.delChildrenFromStorage(this);\r\n                    }\r\n                }\r\n\r\n                this._elements = {};\r\n                this._hoverElements = [];\r\n                this._roots = [];\r\n                this._shapeList = [];\r\n                this._shapeListOffset = 0;\r\n\r\n                return;\r\n            }\r\n\r\n            if (elId instanceof Array) {\r\n                for (var i = 0, l = elId.length; i < l; i++) {\r\n                    this.delRoot(elId[i]);\r\n                }\r\n                return;\r\n            }\r\n\r\n            var el;\r\n            if (typeof(elId) == 'string') {\r\n                el = this._elements[elId];\r\n            }\r\n            else {\r\n                el = elId;\r\n            }\r\n\r\n            var idx = util.indexOf(this._roots, el);\r\n            if (idx >= 0) {\r\n                this.delFromMap(el.id);\r\n                this._roots.splice(idx, 1);\r\n                if (el instanceof Group) {\r\n                    el.delChildrenFromStorage(this);\r\n                }\r\n            }\r\n        };\r\n\r\n        Storage.prototype.addToMap = function (el) {\r\n            if (el instanceof Group) {\r\n                el._storage = this;\r\n            }\r\n            el.modSelf();\r\n\r\n            this._elements[el.id] = el;\r\n\r\n            return this;\r\n        };\r\n\r\n        Storage.prototype.get = function (elId) {\r\n            return this._elements[elId];\r\n        };\r\n\r\n        Storage.prototype.delFromMap = function (elId) {\r\n            var el = this._elements[elId];\r\n            if (el) {\r\n                delete this._elements[elId];\r\n\r\n                if (el instanceof Group) {\r\n                    el._storage = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 清空并且释放Storage\r\n         */\r\n        Storage.prototype.dispose = function () {\r\n            this._elements = \r\n            this._renderList = \r\n            this._roots =\r\n            this._hoverElements = null;\r\n        };\r\n\r\n        return Storage;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/Storage.js\n// module id = 56\n// module chunks = 0","/**\r\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\r\n * @module zrender/Group\r\n * @example\r\n *     var Group = require('zrender/Group');\r\n *     var Circle = require('zrender/shape/Circle');\r\n *     var g = new Group();\r\n *     g.position[0] = 100;\r\n *     g.position[1] = 100;\r\n *     g.addChild(new Circle({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r: 20,\r\n *             brushType: 'fill'\r\n *         }\r\n *     }));\r\n *     zr.addGroup(g);\r\n */\r\ndefine(function(require) {\r\n\r\n    var guid = require('./tool/guid');\r\n    var util = require('./tool/util');\r\n\r\n    var Transformable = require('./mixin/Transformable');\r\n    var Eventful = require('./mixin/Eventful');\r\n\r\n    /**\r\n     * @alias module:zrender/Group\r\n     * @constructor\r\n     * @extends module:zrender/mixin/Transformable\r\n     * @extends module:zrender/mixin/Eventful\r\n     */\r\n    var Group = function(options) {\r\n\r\n        options = options || {};\r\n\r\n        /**\r\n         * Group id\r\n         * @type {string}\r\n         */\r\n        this.id = options.id || guid();\r\n\r\n        for (var key in options) {\r\n            this[key] = options[key];\r\n        }\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        this.type = 'group';\r\n\r\n        /**\r\n         * 用于裁剪的图形(shape)，所有 Group 内的图形在绘制时都会被这个图形裁剪\r\n         * 该图形会继承Group的变换\r\n         * @type {module:zrender/shape/Base}\r\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\r\n         */\r\n        this.clipShape = null;\r\n\r\n        this._children = [];\r\n\r\n        this._storage = null;\r\n\r\n        this.__dirty = true;\r\n\r\n        // Mixin\r\n        Transformable.call(this);\r\n        Eventful.call(this);\r\n    };\r\n\r\n    /**\r\n     * 是否忽略该 Group 及其所有子节点\r\n     * @type {boolean}\r\n     * @default false\r\n     */\r\n    Group.prototype.ignore = false;\r\n\r\n    /**\r\n     * 复制并返回一份新的包含所有儿子节点的数组\r\n     * @return {Array.<module:zrender/Group|module:zrender/shape/Base>}\r\n     */\r\n    Group.prototype.children = function() {\r\n        return this._children.slice();\r\n    };\r\n\r\n    /**\r\n     * 获取指定 index 的儿子节点\r\n     * @param  {number} idx\r\n     * @return {module:zrender/Group|module:zrender/shape/Base}\r\n     */\r\n    Group.prototype.childAt = function(idx) {\r\n        return this._children[idx];\r\n    };\r\n\r\n    /**\r\n     * 添加子节点，可以是Shape或者Group\r\n     * @param {module:zrender/Group|module:zrender/shape/Base} child\r\n     */\r\n    // TODO Type Check\r\n    Group.prototype.addChild = function(child) {\r\n        if (child == this) {\r\n            return;\r\n        }\r\n        \r\n        if (child.parent == this) {\r\n            return;\r\n        }\r\n        if (child.parent) {\r\n            child.parent.removeChild(child);\r\n        }\r\n\r\n        this._children.push(child);\r\n        child.parent = this;\r\n\r\n        if (this._storage && this._storage !== child._storage) {\r\n            \r\n            this._storage.addToMap(child);\r\n\r\n            if (child instanceof Group) {\r\n                child.addChildrenToStorage(this._storage);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 移除子节点\r\n     * @param {module:zrender/Group|module:zrender/shape/Base} child\r\n     */\r\n    // TODO Type Check\r\n    Group.prototype.removeChild = function(child) {\r\n        var idx = util.indexOf(this._children, child);\r\n\r\n        if (idx >= 0) {\r\n            this._children.splice(idx, 1);\r\n        }\r\n        child.parent = null;\r\n\r\n        if (this._storage) {\r\n            \r\n            this._storage.delFromMap(child.id);\r\n\r\n            if (child instanceof Group) {\r\n                child.delChildrenFromStorage(this._storage);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 移除所有子节点\r\n     */\r\n    Group.prototype.clearChildren = function () {\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            if (this._storage) {\r\n                this._storage.delFromMap(child.id);\r\n                if (child instanceof Group) {\r\n                    child.delChildrenFromStorage(this._storage);\r\n                }\r\n            }\r\n        }\r\n        this._children.length = 0;\r\n    };\r\n\r\n    /**\r\n     * 遍历所有子节点\r\n     * @param  {Function} cb\r\n     * @param  {}   context\r\n     */\r\n    Group.prototype.eachChild = function(cb, context) {\r\n        var haveContext = !!context;\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            if (haveContext) {\r\n                cb.call(context, child);\r\n            } else {\r\n                cb(child);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 深度优先遍历所有子孙节点\r\n     * @param  {Function} cb\r\n     * @param  {}   context\r\n     */\r\n    Group.prototype.traverse = function(cb, context) {\r\n        var haveContext = !!context;\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            if (haveContext) {\r\n                cb.call(context, child);\r\n            } else {\r\n                cb(child);\r\n            }\r\n\r\n            if (child.type === 'group') {\r\n                child.traverse(cb, context);\r\n            }\r\n        }\r\n    };\r\n\r\n    Group.prototype.addChildrenToStorage = function(storage) {\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            storage.addToMap(child);\r\n            if (child instanceof Group) {\r\n                child.addChildrenToStorage(storage);\r\n            }\r\n        }\r\n    };\r\n\r\n    Group.prototype.delChildrenFromStorage = function(storage) {\r\n        for (var i = 0; i < this._children.length; i++) {\r\n            var child = this._children[i];\r\n            storage.delFromMap(child.id);\r\n            if (child instanceof Group) {\r\n                child.delChildrenFromStorage(storage);\r\n            }\r\n        }\r\n    };\r\n\r\n    Group.prototype.modSelf = function() {\r\n        this.__dirty = true;\r\n    };\r\n\r\n    util.merge(Group.prototype, Transformable.prototype, true);\r\n    util.merge(Group.prototype, Eventful.prototype, true);\r\n\r\n    return Group;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/Group.js\n// module id = 57\n// module chunks = 0","/**\r\n * 动画主类, 调度和管理所有动画控制器\r\n * \r\n * @module zrender/animation/Animation\r\n * @author pissang(https://github.com/pissang)\r\n */\r\ndefine(\r\n    function(require) {\r\n        \r\n        'use strict';\r\n\r\n        var Clip = require('./Clip');\r\n        var color = require('../tool/color');\r\n        var util = require('../tool/util');\r\n        var Dispatcher = require('../tool/event').Dispatcher;\r\n\r\n        var requestAnimationFrame = window.requestAnimationFrame\r\n                                    || window.msRequestAnimationFrame\r\n                                    || window.mozRequestAnimationFrame\r\n                                    || window.webkitRequestAnimationFrame\r\n                                    || function (func) {\r\n                                        setTimeout(func, 16);\r\n                                    };\r\n\r\n        var arraySlice = Array.prototype.slice;\r\n\r\n        /**\r\n         * @typedef {Object} IZRenderStage\r\n         * @property {Function} update\r\n         */\r\n        \r\n        /** \r\n         * @alias module:zrender/animation/Animation\r\n         * @constructor\r\n         * @param {Object} [options]\r\n         * @param {Function} [options.onframe]\r\n         * @param {IZRenderStage} [options.stage]\r\n         * @example\r\n         *     var animation = new Animation();\r\n         *     var obj = {\r\n         *         x: 100,\r\n         *         y: 100\r\n         *     };\r\n         *     animation.animate(node.position)\r\n         *         .when(1000, {\r\n         *             x: 500,\r\n         *             y: 500\r\n         *         })\r\n         *         .when(2000, {\r\n         *             x: 100,\r\n         *             y: 100\r\n         *         })\r\n         *         .start('spline');\r\n         */\r\n        var Animation = function (options) {\r\n\r\n            options = options || {};\r\n\r\n            this.stage = options.stage || {};\r\n\r\n            this.onframe = options.onframe || function() {};\r\n\r\n            // private properties\r\n            this._clips = [];\r\n\r\n            this._running = false;\r\n\r\n            this._time = 0;\r\n\r\n            Dispatcher.call(this);\r\n        };\r\n\r\n        Animation.prototype = {\r\n            /**\r\n             * 添加动画片段\r\n             * @param {module:zrender/animation/Clip} clip\r\n             */\r\n            add: function(clip) {\r\n                this._clips.push(clip);\r\n            },\r\n            /**\r\n             * 删除动画片段\r\n             * @param {module:zrender/animation/Clip} clip\r\n             */\r\n            remove: function(clip) {\r\n                if (clip.__inStep) {\r\n                    // 如果是在 step 中，不能直接移除\r\n                    // 需要标记为 needsRemove 然后在所有 clip step 完成后移除\r\n                    clip.__needsRemove = true;\r\n                }\r\n                else {\r\n                    var idx = util.indexOf(this._clips, clip);\r\n                    if (idx >= 0) {\r\n                        this._clips.splice(idx, 1);\r\n                    }\r\n                }\r\n            },\r\n            _update: function() {\r\n\r\n                var time = new Date().getTime();\r\n                var delta = time - this._time;\r\n                var clips = this._clips;\r\n                var len = clips.length;\r\n\r\n                var deferredEvents = [];\r\n                var deferredClips = [];\r\n                for (var i = 0; i < len; i++) {\r\n                    var clip = clips[i];\r\n                    clip.__inStep = true;\r\n                    var e = clip.step(time);\r\n                    clip.__inStep = false;\r\n                    // Throw out the events need to be called after\r\n                    // stage.update, like destroy\r\n                    if (e) {\r\n                        deferredEvents.push(e);\r\n                        deferredClips.push(clip);\r\n                    }\r\n                }\r\n\r\n                // Remove the finished clip\r\n                for (var i = 0; i < len;) {\r\n                    if (clips[i].__needsRemove) {\r\n                        clips[i] = clips[len - 1];\r\n                        clips.pop();\r\n                        len--;\r\n                    }\r\n                    else {\r\n                        i++;\r\n                    }\r\n                }\r\n\r\n                len = deferredEvents.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    deferredClips[i].fire(deferredEvents[i]);\r\n                }\r\n\r\n                this._time = time;\r\n\r\n                this.onframe(delta);\r\n\r\n                this.dispatch('frame', delta);\r\n\r\n                if (this.stage.update) {\r\n                    this.stage.update();\r\n                }\r\n            },\r\n            /**\r\n             * 开始运行动画\r\n             */\r\n            start: function () {\r\n                var self = this;\r\n\r\n                this._running = true;\r\n\r\n                function step() {\r\n                    if (self._running) {\r\n                        \r\n                        requestAnimationFrame(step);\r\n\r\n                        self._update();\r\n                    }\r\n                }\r\n\r\n                this._time = new Date().getTime();\r\n                requestAnimationFrame(step);\r\n            },\r\n            /**\r\n             * 停止运行动画\r\n             */\r\n            stop: function () {\r\n                this._running = false;\r\n            },\r\n            /**\r\n             * 清除所有动画片段\r\n             */\r\n            clear : function () {\r\n                this._clips = [];\r\n            },\r\n            /**\r\n             * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\r\n             * @param  {Object} target\r\n             * @param  {Object} options\r\n             * @param  {boolean} [options.loop=false] 是否循环播放动画\r\n             * @param  {Function} [options.getter=null]\r\n             *         如果指定getter函数，会通过getter函数取属性值\r\n             * @param  {Function} [options.setter=null]\r\n             *         如果指定setter函数，会通过setter函数设置属性值\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            animate : function (target, options) {\r\n                options = options || {};\r\n                var deferred = new Animator(\r\n                    target,\r\n                    options.loop,\r\n                    options.getter, \r\n                    options.setter\r\n                );\r\n                deferred.animation = this;\r\n                return deferred;\r\n            },\r\n            constructor: Animation\r\n        };\r\n\r\n        util.merge(Animation.prototype, Dispatcher.prototype, true);\r\n\r\n        function _defaultGetter(target, key) {\r\n            return target[key];\r\n        }\r\n\r\n        function _defaultSetter(target, key, value) {\r\n            target[key] = value;\r\n        }\r\n\r\n        function _interpolateNumber(p0, p1, percent) {\r\n            return (p1 - p0) * percent + p0;\r\n        }\r\n\r\n        function _interpolateArray(p0, p1, percent, out, arrDim) {\r\n            var len = p0.length;\r\n            if (arrDim == 1) {\r\n                for (var i = 0; i < len; i++) {\r\n                    out[i] = _interpolateNumber(p0[i], p1[i], percent); \r\n                }\r\n            }\r\n            else {\r\n                var len2 = p0[0].length;\r\n                for (var i = 0; i < len; i++) {\r\n                    for (var j = 0; j < len2; j++) {\r\n                        out[i][j] = _interpolateNumber(\r\n                            p0[i][j], p1[i][j], percent\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function _isArrayLike(data) {\r\n            switch (typeof data) {\r\n                case 'undefined':\r\n                case 'string':\r\n                    return false;\r\n            }\r\n            \r\n            return typeof data.length !== 'undefined';\r\n        }\r\n\r\n        function _catmullRomInterpolateArray(\r\n            p0, p1, p2, p3, t, t2, t3, out, arrDim\r\n        ) {\r\n            var len = p0.length;\r\n            if (arrDim == 1) {\r\n                for (var i = 0; i < len; i++) {\r\n                    out[i] = _catmullRomInterpolate(\r\n                        p0[i], p1[i], p2[i], p3[i], t, t2, t3\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                var len2 = p0[0].length;\r\n                for (var i = 0; i < len; i++) {\r\n                    for (var j = 0; j < len2; j++) {\r\n                        out[i][j] = _catmullRomInterpolate(\r\n                            p0[i][j], p1[i][j], p2[i][j], p3[i][j],\r\n                            t, t2, t3\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function _catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\r\n            var v0 = (p2 - p0) * 0.5;\r\n            var v1 = (p3 - p1) * 0.5;\r\n            return (2 * (p1 - p2) + v0 + v1) * t3 \r\n                    + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\r\n                    + v0 * t + p1;\r\n        }\r\n\r\n        function _cloneValue(value) {\r\n            if (_isArrayLike(value)) {\r\n                var len = value.length;\r\n                if (_isArrayLike(value[0])) {\r\n                    var ret = [];\r\n                    for (var i = 0; i < len; i++) {\r\n                        ret.push(arraySlice.call(value[i]));\r\n                    }\r\n                    return ret;\r\n                }\r\n                else {\r\n                    return arraySlice.call(value);\r\n                }\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n\r\n        function rgba2String(rgba) {\r\n            rgba[0] = Math.floor(rgba[0]);\r\n            rgba[1] = Math.floor(rgba[1]);\r\n            rgba[2] = Math.floor(rgba[2]);\r\n\r\n            return 'rgba(' + rgba.join(',') + ')';\r\n        }\r\n\r\n        /**\r\n         * @alias module:zrender/animation/Animation~Animator\r\n         * @constructor\r\n         * @param {Object} target\r\n         * @param {boolean} loop\r\n         * @param {Function} getter\r\n         * @param {Function} setter\r\n         */\r\n        var Animator = function(target, loop, getter, setter) {\r\n            this._tracks = {};\r\n            this._target = target;\r\n\r\n            this._loop = loop || false;\r\n\r\n            this._getter = getter || _defaultGetter;\r\n            this._setter = setter || _defaultSetter;\r\n\r\n            this._clipCount = 0;\r\n\r\n            this._delay = 0;\r\n\r\n            this._doneList = [];\r\n\r\n            this._onframeList = [];\r\n\r\n            this._clipList = [];\r\n        };\r\n\r\n        Animator.prototype = {\r\n            /**\r\n             * 设置动画关键帧\r\n             * @param  {number} time 关键帧时间，单位是ms\r\n             * @param  {Object} props 关键帧的属性值，key-value表示\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            when : function(time /* ms */, props) {\r\n                for (var propName in props) {\r\n                    if (!this._tracks[propName]) {\r\n                        this._tracks[propName] = [];\r\n                        // If time is 0 \r\n                        //  Then props is given initialize value\r\n                        // Else\r\n                        //  Initialize value from current prop value\r\n                        if (time !== 0) {\r\n                            this._tracks[propName].push({\r\n                                time : 0,\r\n                                value : _cloneValue(\r\n                                    this._getter(this._target, propName)\r\n                                )\r\n                            });\r\n                        }\r\n                    }\r\n                    this._tracks[propName].push({\r\n                        time : parseInt(time, 10),\r\n                        value : props[propName]\r\n                    });\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * 添加动画每一帧的回调函数\r\n             * @param  {Function} callback\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            during: function (callback) {\r\n                this._onframeList.push(callback);\r\n                return this;\r\n            },\r\n            /**\r\n             * 开始执行动画\r\n             * @param  {string|Function} easing \r\n             *         动画缓动函数，详见{@link module:zrender/animation/easing}\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            start: function (easing) {\r\n\r\n                var self = this;\r\n                var setter = this._setter;\r\n                var getter = this._getter;\r\n                var useSpline = easing === 'spline';\r\n\r\n                var ondestroy = function() {\r\n                    self._clipCount--;\r\n                    if (self._clipCount === 0) {\r\n                        // Clear all tracks\r\n                        self._tracks = {};\r\n\r\n                        var len = self._doneList.length;\r\n                        for (var i = 0; i < len; i++) {\r\n                            self._doneList[i].call(self);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                var createTrackClip = function (keyframes, propName) {\r\n                    var trackLen = keyframes.length;\r\n                    if (!trackLen) {\r\n                        return;\r\n                    }\r\n                    // Guess data type\r\n                    var firstVal = keyframes[0].value;\r\n                    var isValueArray = _isArrayLike(firstVal);\r\n                    var isValueColor = false;\r\n\r\n                    // For vertices morphing\r\n                    var arrDim = (\r\n                            isValueArray \r\n                            && _isArrayLike(firstVal[0])\r\n                        )\r\n                        ? 2 : 1;\r\n                    // Sort keyframe as ascending\r\n                    keyframes.sort(function(a, b) {\r\n                        return a.time - b.time;\r\n                    });\r\n                    var trackMaxTime;\r\n                    if (trackLen) {\r\n                        trackMaxTime = keyframes[trackLen - 1].time;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    // Percents of each keyframe\r\n                    var kfPercents = [];\r\n                    // Value of each keyframe\r\n                    var kfValues = [];\r\n                    for (var i = 0; i < trackLen; i++) {\r\n                        kfPercents.push(keyframes[i].time / trackMaxTime);\r\n                        // Assume value is a color when it is a string\r\n                        var value = keyframes[i].value;\r\n                        if (typeof(value) == 'string') {\r\n                            value = color.toArray(value);\r\n                            if (value.length === 0) {    // Invalid color\r\n                                value[0] = value[1] = value[2] = 0;\r\n                                value[3] = 1;\r\n                            }\r\n                            isValueColor = true;\r\n                        }\r\n                        kfValues.push(value);\r\n                    }\r\n\r\n                    // Cache the key of last frame to speed up when \r\n                    // animation playback is sequency\r\n                    var cacheKey = 0;\r\n                    var cachePercent = 0;\r\n                    var start;\r\n                    var i;\r\n                    var w;\r\n                    var p0;\r\n                    var p1;\r\n                    var p2;\r\n                    var p3;\r\n\r\n\r\n                    if (isValueColor) {\r\n                        var rgba = [ 0, 0, 0, 0 ];\r\n                    }\r\n\r\n                    var onframe = function (target, percent) {\r\n                        // Find the range keyframes\r\n                        // kf1-----kf2---------current--------kf3\r\n                        // find kf2 and kf3 and do interpolation\r\n                        if (percent < cachePercent) {\r\n                            // Start from next key\r\n                            start = Math.min(cacheKey + 1, trackLen - 1);\r\n                            for (i = start; i >= 0; i--) {\r\n                                if (kfPercents[i] <= percent) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            i = Math.min(i, trackLen - 2);\r\n                        }\r\n                        else {\r\n                            for (i = cacheKey; i < trackLen; i++) {\r\n                                if (kfPercents[i] > percent) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            i = Math.min(i - 1, trackLen - 2);\r\n                        }\r\n                        cacheKey = i;\r\n                        cachePercent = percent;\r\n\r\n                        var range = (kfPercents[i + 1] - kfPercents[i]);\r\n                        if (range === 0) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            w = (percent - kfPercents[i]) / range;\r\n                        }\r\n                        if (useSpline) {\r\n                            p1 = kfValues[i];\r\n                            p0 = kfValues[i === 0 ? i : i - 1];\r\n                            p2 = kfValues[i > trackLen - 2 ? trackLen - 1 : i + 1];\r\n                            p3 = kfValues[i > trackLen - 3 ? trackLen - 1 : i + 2];\r\n                            if (isValueArray) {\r\n                                _catmullRomInterpolateArray(\r\n                                    p0, p1, p2, p3, w, w * w, w * w * w,\r\n                                    getter(target, propName),\r\n                                    arrDim\r\n                                );\r\n                            }\r\n                            else {\r\n                                var value;\r\n                                if (isValueColor) {\r\n                                    value = _catmullRomInterpolateArray(\r\n                                        p0, p1, p2, p3, w, w * w, w * w * w,\r\n                                        rgba, 1\r\n                                    );\r\n                                    value = rgba2String(rgba);\r\n                                }\r\n                                else {\r\n                                    value = _catmullRomInterpolate(\r\n                                        p0, p1, p2, p3, w, w * w, w * w * w\r\n                                    );\r\n                                }\r\n                                setter(\r\n                                    target,\r\n                                    propName,\r\n                                    value\r\n                                );\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (isValueArray) {\r\n                                _interpolateArray(\r\n                                    kfValues[i], kfValues[i + 1], w,\r\n                                    getter(target, propName),\r\n                                    arrDim\r\n                                );\r\n                            }\r\n                            else {\r\n                                var value;\r\n                                if (isValueColor) {\r\n                                    _interpolateArray(\r\n                                        kfValues[i], kfValues[i + 1], w,\r\n                                        rgba, 1\r\n                                    );\r\n                                    value = rgba2String(rgba);\r\n                                }\r\n                                else {\r\n                                    value = _interpolateNumber(kfValues[i], kfValues[i + 1], w);\r\n                                }\r\n                                setter(\r\n                                    target,\r\n                                    propName,\r\n                                    value\r\n                                );\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < self._onframeList.length; i++) {\r\n                            self._onframeList[i](target, percent);\r\n                        }\r\n                    };\r\n\r\n                    var clip = new Clip({\r\n                        target : self._target,\r\n                        life : trackMaxTime,\r\n                        loop : self._loop,\r\n                        delay : self._delay,\r\n                        onframe : onframe,\r\n                        ondestroy : ondestroy\r\n                    });\r\n\r\n                    if (easing && easing !== 'spline') {\r\n                        clip.easing = easing;\r\n                    }\r\n                    self._clipList.push(clip);\r\n                    self._clipCount++;\r\n                    self.animation.add(clip);\r\n                };\r\n\r\n                for (var propName in this._tracks) {\r\n                    createTrackClip(this._tracks[propName], propName);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * 停止动画\r\n             */\r\n            stop : function() {\r\n                for (var i = 0; i < this._clipList.length; i++) {\r\n                    var clip = this._clipList[i];\r\n                    this.animation.remove(clip);\r\n                }\r\n                this._clipList = [];\r\n            },\r\n            /**\r\n             * 设置动画延迟开始的时间\r\n             * @param  {number} time 单位ms\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            delay : function (time) {\r\n                this._delay = time;\r\n                return this;\r\n            },\r\n            /**\r\n             * 添加动画结束的回调\r\n             * @param  {Function} cb\r\n             * @return {module:zrender/animation/Animation~Animator}\r\n             */\r\n            done : function(cb) {\r\n                if (cb) {\r\n                    this._doneList.push(cb);\r\n                }\r\n                return this;\r\n            }\r\n        };\r\n\r\n        return Animation;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/animation/Animation.js\n// module id = 58\n// module chunks = 0","/**\r\n * 动画主控制器\r\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\r\n * @config life(1000) 动画时长\r\n * @config delay(0) 动画延迟时间\r\n * @config loop(true)\r\n * @config gap(0) 循环的间隔时间\r\n * @config onframe\r\n * @config easing(optional)\r\n * @config ondestroy(optional)\r\n * @config onrestart(optional)\r\n */\r\ndefine(\r\n    function(require) {\r\n\r\n        var Easing = require('./easing');\r\n\r\n        function Clip(options) {\r\n\r\n            this._targetPool = options.target || {};\r\n            if (!(this._targetPool instanceof Array)) {\r\n                this._targetPool = [ this._targetPool ];\r\n            }\r\n\r\n            // 生命周期\r\n            this._life = options.life || 1000;\r\n            // 延时\r\n            this._delay = options.delay || 0;\r\n            // 开始时间\r\n            this._startTime = new Date().getTime() + this._delay;// 单位毫秒\r\n\r\n            // 结束时间\r\n            this._endTime = this._startTime + this._life * 1000;\r\n\r\n            // 是否循环\r\n            this.loop = typeof options.loop == 'undefined'\r\n                        ? false : options.loop;\r\n\r\n            this.gap = options.gap || 0;\r\n\r\n            this.easing = options.easing || 'Linear';\r\n\r\n            this.onframe = options.onframe;\r\n            this.ondestroy = options.ondestroy;\r\n            this.onrestart = options.onrestart;\r\n        }\r\n\r\n        Clip.prototype = {\r\n            step : function (time) {\r\n                var percent = (time - this._startTime) / this._life;\r\n\r\n                // 还没开始\r\n                if (percent < 0) {\r\n                    return;\r\n                }\r\n\r\n                percent = Math.min(percent, 1);\r\n\r\n                var easingFunc = typeof this.easing == 'string'\r\n                                 ? Easing[this.easing]\r\n                                 : this.easing;\r\n                var schedule = typeof easingFunc === 'function'\r\n                    ? easingFunc(percent)\r\n                    : percent;\r\n\r\n                this.fire('frame', schedule);\r\n\r\n                // 结束\r\n                if (percent == 1) {\r\n                    if (this.loop) {\r\n                        this.restart();\r\n                        // 重新开始周期\r\n                        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\r\n                        return 'restart';\r\n                    }\r\n                    \r\n                    // 动画完成将这个控制器标识为待删除\r\n                    // 在Animation.update中进行批量删除\r\n                    this.__needsRemove = true;\r\n                    return 'destroy';\r\n                }\r\n                \r\n                return null;\r\n            },\r\n            restart : function() {\r\n                var time = new Date().getTime();\r\n                var remainder = (time - this._startTime) % this._life;\r\n                this._startTime = new Date().getTime() - remainder + this.gap;\r\n\r\n                this.__needsRemove = false;\r\n            },\r\n            fire : function(eventType, arg) {\r\n                for (var i = 0, len = this._targetPool.length; i < len; i++) {\r\n                    if (this['on' + eventType]) {\r\n                        this['on' + eventType](this._targetPool[i], arg);\r\n                    }\r\n                }\r\n            },\r\n            constructor: Clip\r\n        };\r\n\r\n        return Clip;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/animation/Clip.js\n// module id = 59\n// module chunks = 0","define(\r\n    function() {\r\n        /**\r\n         * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\r\n         * @see http://sole.github.io/tween.js/examples/03_graphs.html\r\n         * @exports zrender/animation/easing\r\n         */\r\n        var easing = {\r\n            // 线性\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            Linear: function (k) {\r\n                return k;\r\n            },\r\n\r\n            // 二次方的缓动（t^2）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuadraticIn: function (k) {\r\n                return k * k;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuadraticOut: function (k) {\r\n                return k * (2 - k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuadraticInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * k * k;\r\n                }\r\n                return -0.5 * (--k * (k - 2) - 1);\r\n            },\r\n\r\n            // 三次方的缓动（t^3）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CubicIn: function (k) {\r\n                return k * k * k;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CubicOut: function (k) {\r\n                return --k * k * k + 1;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CubicInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * k * k * k;\r\n                }\r\n                return 0.5 * ((k -= 2) * k * k + 2);\r\n            },\r\n\r\n            // 四次方的缓动（t^4）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuarticIn: function (k) {\r\n                return k * k * k * k;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuarticOut: function (k) {\r\n                return 1 - (--k * k * k * k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuarticInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * k * k * k * k;\r\n                }\r\n                return -0.5 * ((k -= 2) * k * k * k - 2);\r\n            },\r\n\r\n            // 五次方的缓动（t^5）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuinticIn: function (k) {\r\n                return k * k * k * k * k;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuinticOut: function (k) {\r\n                return --k * k * k * k * k + 1;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            QuinticInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * k * k * k * k * k;\r\n                }\r\n                return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n            },\r\n\r\n            // 正弦曲线的缓动（sin(t)）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            SinusoidalIn: function (k) {\r\n                return 1 - Math.cos(k * Math.PI / 2);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            SinusoidalOut: function (k) {\r\n                return Math.sin(k * Math.PI / 2);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            SinusoidalInOut: function (k) {\r\n                return 0.5 * (1 - Math.cos(Math.PI * k));\r\n            },\r\n\r\n            // 指数曲线的缓动（2^t）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ExponentialIn: function (k) {\r\n                return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ExponentialOut: function (k) {\r\n                return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ExponentialInOut: function (k) {\r\n                if (k === 0) {\r\n                    return 0;\r\n                }\r\n                if (k === 1) {\r\n                    return 1;\r\n                }\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * Math.pow(1024, k - 1);\r\n                }\r\n                return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n            },\r\n\r\n            // 圆形曲线的缓动（sqrt(1-t^2)）\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CircularIn: function (k) {\r\n                return 1 - Math.sqrt(1 - k * k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CircularOut: function (k) {\r\n                return Math.sqrt(1 - (--k * k));\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            CircularInOut: function (k) {\r\n                if ((k *= 2) < 1) {\r\n                    return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n                }\r\n                return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n            },\r\n\r\n            // 创建类似于弹簧在停止前来回振荡的动画\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ElasticIn: function (k) {\r\n                var s; \r\n                var a = 0.1;\r\n                var p = 0.4;\r\n                if (k === 0) {\r\n                    return 0;\r\n                }\r\n                if (k === 1) {\r\n                    return 1;\r\n                }\r\n                if (!a || a < 1) {\r\n                    a = 1; s = p / 4;\r\n                }\r\n                else {\r\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n                }\r\n                return -(a * Math.pow(2, 10 * (k -= 1)) *\r\n                            Math.sin((k - s) * (2 * Math.PI) / p));\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ElasticOut: function (k) {\r\n                var s;\r\n                var a = 0.1;\r\n                var p = 0.4;\r\n                if (k === 0) {\r\n                    return 0;\r\n                }\r\n                if (k === 1) {\r\n                    return 1;\r\n                }\r\n                if (!a || a < 1) {\r\n                    a = 1; s = p / 4;\r\n                }\r\n                else {\r\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n                }\r\n                return (a * Math.pow(2, -10 * k) *\r\n                        Math.sin((k - s) * (2 * Math.PI) / p) + 1);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            ElasticInOut: function (k) {\r\n                var s;\r\n                var a = 0.1;\r\n                var p = 0.4;\r\n                if (k === 0) {\r\n                    return 0;\r\n                }\r\n                if (k === 1) {\r\n                    return 1;\r\n                }\r\n                if (!a || a < 1) {\r\n                    a = 1; s = p / 4;\r\n                }\r\n                else {\r\n                    s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n                }\r\n                if ((k *= 2) < 1) {\r\n                    return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\r\n                        * Math.sin((k - s) * (2 * Math.PI) / p));\r\n                }\r\n                return a * Math.pow(2, -10 * (k -= 1))\r\n                        * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\r\n            },\r\n\r\n            // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BackIn: function (k) {\r\n                var s = 1.70158;\r\n                return k * k * ((s + 1) * k - s);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BackOut: function (k) {\r\n                var s = 1.70158;\r\n                return --k * k * ((s + 1) * k + s) + 1;\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BackInOut: function (k) {\r\n                var s = 1.70158 * 1.525;\r\n                if ((k *= 2) < 1) {\r\n                    return 0.5 * (k * k * ((s + 1) * k - s));\r\n                }\r\n                return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n            },\r\n\r\n            // 创建弹跳效果\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BounceIn: function (k) {\r\n                return 1 - easing.BounceOut(1 - k);\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BounceOut: function (k) {\r\n                if (k < (1 / 2.75)) {\r\n                    return 7.5625 * k * k;\r\n                }\r\n                else if (k < (2 / 2.75)) {\r\n                    return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n                }\r\n                else if (k < (2.5 / 2.75)) {\r\n                    return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n                }\r\n                else {\r\n                    return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n                }\r\n            },\r\n            /**\r\n             * @param {number} k\r\n             * @return {number}\r\n             */\r\n            BounceInOut: function (k) {\r\n                if (k < 0.5) {\r\n                    return easing.BounceIn(k * 2) * 0.5;\r\n                }\r\n                return easing.BounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n            }\r\n        };\r\n\r\n        return easing;\r\n    }\r\n);\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/animation/easing.js\n// module id = 60\n// module chunks = 0","/**\r\n * echarts组件：孤岛数据\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ChartBase = require('./base');\r\n    \r\n    // 图形依赖\r\n    var CircleShape = require('zrenderjs/shape/Circle');\r\n    \r\n    var ecConfig = require('../config');\r\n    ecConfig.island = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 5,                       // 二级层叠\r\n        r: 15,\r\n        calculateStep: 0.1  // 滚轮可计算步长 0.1 = 10%\r\n    };\r\n\r\n    var ecData = require('../util/ecData');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrEvent = require('zrenderjs/tool/event');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表选项\r\n     */\r\n    function Island(ecTheme, messageCenter, zr, option, myChart) {\r\n        // 图表基类\r\n        ChartBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this._nameConnector;\r\n        this._valueConnector;\r\n        this._zrHeight = this.zr.getHeight();\r\n        this._zrWidth = this.zr.getWidth();\r\n\r\n        var self = this;\r\n        /**\r\n         * 滚轮改变孤岛数据值\r\n         */\r\n        self.shapeHandler.onmousewheel = function (param) {\r\n            var shape = param.target;\r\n\r\n            var event = param.event;\r\n            var delta = zrEvent.getDelta(event);\r\n            delta = delta > 0 ? (-1) : 1;\r\n            shape.style.r -= delta;\r\n            shape.style.r = shape.style.r < 5 ? 5 : shape.style.r;\r\n\r\n            var value = ecData.get(shape, 'value');\r\n            var dvalue = value * self.option.island.calculateStep;\r\n            value = dvalue > 1\r\n                    ? (Math.round(value - dvalue * delta))\r\n                    : +(value - dvalue * delta).toFixed(2);\r\n\r\n            var name = ecData.get(shape, 'name');\r\n            shape.style.text = name + ':' + value;\r\n\r\n            ecData.set(shape, 'value', value);\r\n            ecData.set(shape, 'name', name);\r\n\r\n            self.zr.modShape(shape.id);\r\n            self.zr.refreshNextFrame();\r\n            zrEvent.stop(event);\r\n        };\r\n    }\r\n    \r\n    Island.prototype = {\r\n        type: ecConfig.CHART_TYPE_ISLAND,\r\n        /**\r\n         * 孤岛合并\r\n         *\r\n         * @param {string} tarShapeIndex 目标索引\r\n         * @param {Object} srcShape 源目标，合入目标后删除\r\n         */\r\n        _combine: function (tarShape, srcShape) {\r\n            var zrColor = require('zrenderjs/tool/color');\r\n            var accMath = require('../util/accMath');\r\n            var value = accMath.accAdd(\r\n                            ecData.get(tarShape, 'value'),\r\n                            ecData.get(srcShape, 'value')\r\n                        );\r\n            var name = ecData.get(tarShape, 'name')\r\n                       + this._nameConnector\r\n                       + ecData.get(srcShape, 'name');\r\n\r\n            tarShape.style.text = name + this._valueConnector + value;\r\n\r\n            ecData.set(tarShape, 'value', value);\r\n            ecData.set(tarShape, 'name', name);\r\n            tarShape.style.r = this.option.island.r;\r\n            tarShape.style.color = zrColor.mix(\r\n                tarShape.style.color,\r\n                srcShape.style.color\r\n            );\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                newOption.island = this.reformOption(newOption.island);\r\n                this.option = newOption;\r\n    \r\n                this._nameConnector = this.option.nameConnector;\r\n                this._valueConnector = this.option.valueConnector;\r\n            }\r\n        },\r\n        \r\n        getOption: function () {\r\n            return this.option;\r\n        },\r\n\r\n        resize: function () {\r\n            var newWidth = this.zr.getWidth();\r\n            var newHieght = this.zr.getHeight();\r\n            var xScale = newWidth / (this._zrWidth || newWidth);\r\n            var yScale = newHieght / (this._zrHeight || newHieght);\r\n            if (xScale === 1 && yScale === 1) {\r\n                return;\r\n            }\r\n            this._zrWidth = newWidth;\r\n            this._zrHeight = newHieght;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.modShape(\r\n                    this.shapeList[i].id,\r\n                    {\r\n                        style: {\r\n                            x: Math.round(this.shapeList[i].style.x * xScale),\r\n                            y: Math.round(this.shapeList[i].style.y * yScale)\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        add: function (shape) {\r\n            var name = ecData.get(shape, 'name');\r\n            var value = ecData.get(shape, 'value');\r\n            var seriesName = ecData.get(shape, 'series') != null\r\n                             ? ecData.get(shape, 'series').name\r\n                             : '';\r\n            var font = this.getFont(this.option.island.textStyle);\r\n            var islandOption = this.option.island;\r\n            var islandShape = {\r\n                zlevel: islandOption.zlevel,\r\n                z: islandOption.z,\r\n                style: {\r\n                    x: shape.style.x,\r\n                    y: shape.style.y,\r\n                    r: this.option.island.r,\r\n                    color: shape.style.color || shape.style.strokeColor,\r\n                    text: name + this._valueConnector + value,\r\n                    textFont: font\r\n                },\r\n                draggable: true,\r\n                hoverable: true,\r\n                onmousewheel: this.shapeHandler.onmousewheel,\r\n                _type: 'island'\r\n            };\r\n            if (islandShape.style.color === '#fff') {\r\n                islandShape.style.color = shape.style.strokeColor;\r\n            }\r\n            this.setCalculable(islandShape);\r\n            islandShape.dragEnableTime = 0;\r\n            ecData.pack(\r\n                islandShape,\r\n                {name:seriesName}, -1,\r\n                value, -1,\r\n                name\r\n            );\r\n            islandShape = new CircleShape(islandShape);\r\n            this.shapeList.push(islandShape);\r\n            this.zr.addShape(islandShape);\r\n        },\r\n\r\n        del: function (shape) {\r\n            this.zr.delShape(shape.id);\r\n            var newShapeList = [];\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].id != shape.id) {\r\n                    newShapeList.push(this.shapeList[i]);\r\n                }\r\n            }\r\n            this.shapeList = newShapeList;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽进来， 重载基类方法\r\n         */\r\n        ondrop: function (param, status) {\r\n            if (!this.isDrop || !param.target) {\r\n                // 没有在当前实例上发生拖拽行为则直接返回\r\n                return;\r\n            }\r\n            // 拖拽产生孤岛数据合并\r\n            var target = param.target;      // 拖拽安放目标\r\n            var dragged = param.dragged;    // 当前被拖拽的图形对象\r\n\r\n            this._combine(target, dragged);\r\n            this.zr.modShape(target.id);\r\n\r\n            status.dragIn = true;\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDrop = false;\r\n\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽出去， 重载基类方法\r\n         */\r\n        ondragend: function (param, status) {\r\n            var target = param.target;      // 拖拽安放目标\r\n            if (!this.isDragend) {\r\n                // 拖拽的不是孤岛数据，如果没有图表接受孤岛数据，需要新增孤岛数据\r\n                if (!status.dragIn) {\r\n                    target.style.x = zrEvent.getX(param.event);\r\n                    target.style.y = zrEvent.getY(param.event);\r\n                    this.add(target);\r\n                    status.needRefresh = true;\r\n                }\r\n            }\r\n            else {\r\n                // 拖拽的是孤岛数据，如果有图表接受了孤岛数据，需要删除孤岛数据\r\n                if (status.dragIn) {\r\n                    this.del(target);\r\n                    status.needRefresh = true;\r\n                }\r\n            }\r\n\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n\r\n            return;\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Island, ChartBase);\r\n    \r\n    // 图表注册\r\n    require('../chart').define('island', Island);\r\n    \r\n    return Island;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/chart/island.js\n// module id = 61\n// module chunks = 0","/**\r\n * n角星（n>3）\r\n * @module zrender/shape/Star\r\n * @author sushuang (宿爽, sushuang0322@gmail.com)\r\n * @example\r\n *     var Star = require('zrender/shape/Star');\r\n *     var shape = new Star({\r\n *         style: {\r\n *             x: 200,\r\n *             y: 100,\r\n *             r: 150,\r\n *             n: 5,\r\n *             text: '五角星'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IStarStyle\r\n * @property {number} x n角星外接圆心x坐标\r\n * @property {number} y n角星外接圆心y坐标\r\n * @property {number} r n角星外接圆半径\r\n * @property {number} [r0] n角星内部顶点（凹点）的外接圆半径。\r\n *                         如果不指定此参数，则自动计算：取相隔外部顶点连线的交点作内部顶点。\r\n * @property {number} n 指明几角星\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n\r\ndefine(\r\n    function (require) {\r\n\r\n        var math = require('../tool/math');\r\n        var sin = math.sin;\r\n        var cos = math.cos;\r\n        var PI = Math.PI;\r\n\r\n        var Base = require('./Base');\r\n\r\n        /**\r\n         * @alias module:zrender/shape/Star\r\n         * @param {Object} options\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         */\r\n        var Star = function(options) {\r\n            Base.call(this, options);\r\n            /**\r\n             * n角星绘制样式\r\n             * @name module:zrender/shape/Star#style\r\n             * @type {module:zrender/shape/Star~IStarStyle}\r\n             */\r\n            /**\r\n             * n角星高亮绘制样式\r\n             * @name module:zrender/shape/Star#highlightStyle\r\n             * @type {module:zrender/shape/Star~IStarStyle}\r\n             */\r\n        };\r\n\r\n        Star.prototype = {\r\n            type: 'star',\r\n\r\n            /**\r\n             * 创建n角星（n>3）路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Star~IStarStyle} style\r\n             */\r\n            buildPath : function(ctx, style) {\r\n                var n = style.n;\r\n                if (!n || n < 2) {\r\n                    return;\r\n                }\r\n\r\n                var x = style.x;\r\n                var y = style.y;\r\n                var r = style.r;\r\n                var r0 = style.r0;\r\n\r\n                // 如果未指定内部顶点外接圆半径，则自动计算\r\n                if (r0 == null) {\r\n                    r0 = n > 4\r\n                        // 相隔的外部顶点的连线的交点，\r\n                        // 被取为内部交点，以此计算r0\r\n                        ? r * cos(2 * PI / n) / cos(PI / n)\r\n                        // 二三四角星的特殊处理\r\n                        : r / 3;\r\n                }\r\n\r\n                var dStep = PI / n;\r\n                var deg = -PI / 2;\r\n                var xStart = x + r * cos(deg);\r\n                var yStart = y + r * sin(deg);\r\n                deg += dStep;\r\n\r\n                // 记录边界点，用于判断inside\r\n                var pointList = style.pointList = [];\r\n                pointList.push([ xStart, yStart ]);\r\n                for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\r\n                    ri = i % 2 === 0 ? r0 : r;\r\n                    pointList.push([ x + ri * cos(deg), y + ri * sin(deg) ]);\r\n                    deg += dStep;\r\n                }\r\n                pointList.push([ xStart, yStart ]);\r\n\r\n                // 绘制\r\n                ctx.moveTo(pointList[0][0], pointList[0][1]);\r\n                for (var i = 0; i < pointList.length; i++) {\r\n                    ctx.lineTo(pointList[i][0], pointList[i][1]);\r\n                }\r\n                \r\n                ctx.closePath();\r\n\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 返回n角星包围盒矩形\r\n             * @param {module:zrender/shape/Star~IStarStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function(style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var lineWidth;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n                else {\r\n                    lineWidth = 0;\r\n                }\r\n                style.__rect = {\r\n                    x : Math.round(style.x - style.r - lineWidth / 2),\r\n                    y : Math.round(style.y - style.r - lineWidth / 2),\r\n                    width : style.r * 2 + lineWidth,\r\n                    height : style.r * 2 + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Star, Base);\r\n        return Star;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Star.js\n// module id = 62\n// module chunks = 0","/**\r\n * @module zrender/shape/Heart\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @example\r\n *   var Heart = require('zrender/shape/Heart');\r\n *   var shape = new Heart({\r\n *       style: {\r\n *           x: 100,\r\n *           y: 100,\r\n *           a: 40,\r\n *           b: 40,\r\n *           brushType: 'both',\r\n *           color: 'blue',\r\n *           strokeColor: 'red',\r\n *           lineWidth: 3,\r\n *           text: 'Heart'\r\n *       }    \r\n *   });\r\n *   zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IHeartStyle\r\n * @property {number} x 心形内部尖端横坐标\r\n * @property {number} y 心形内部尖端纵坐标\r\n * @property {number} a 心形横宽（中轴线到水平边缘最宽处距离）\r\n * @property {number} b 心形纵高（内尖到外尖距离）\r\n * @property {string} [brushType='fill']\r\n * @property {string} [color='#000000'] 填充颜色\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\ndefine(\r\n    function (require) {\r\n        'use strict';\r\n        \r\n        var Base = require('./Base');\r\n        var PathProxy = require('./util/PathProxy');\r\n        var area = require('../tool/area');\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/Heart\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var Heart = function (options) {\r\n            Base.call(this, options);\r\n\r\n            this._pathProxy = new PathProxy();\r\n            /**\r\n             * 心形绘制样式\r\n             * @name module:zrender/shape/Heart#style\r\n             * @type {module:zrender/shape/Heart~IHeartStyle}\r\n             */\r\n            /**\r\n             * 心形高亮绘制样式\r\n             * @name module:zrender/shape/Heart#highlightStyle\r\n             * @type {module:zrender/shape/Heart~IHeartStyle}\r\n             */\r\n        };\r\n\r\n        Heart.prototype = {\r\n            type: 'heart',\r\n\r\n            /**\r\n             * 创建扇形路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/Heart~IHeartStyle} style\r\n             */\r\n            buildPath : function (ctx, style) {\r\n                var path = this._pathProxy || new PathProxy();\r\n                path.begin(ctx);\r\n\r\n                path.moveTo(style.x, style.y);\r\n                path.bezierCurveTo(\r\n                    style.x + style.a / 2,\r\n                    style.y - style.b * 2 / 3,\r\n                    style.x + style.a * 2,\r\n                    style.y + style.b / 3,\r\n                    style.x,\r\n                    style.y + style.b\r\n                );\r\n                path.bezierCurveTo(\r\n                    style.x - style.a *  2,\r\n                    style.y + style.b / 3,\r\n                    style.x - style.a / 2,\r\n                    style.y - style.b * 2 / 3,\r\n                    style.x,\r\n                    style.y\r\n                );\r\n                path.closePath();\r\n                return;\r\n            },\r\n\r\n            /**\r\n             * 计算返回心形的包围盒矩形\r\n             * @param {module:zrender/shape/Heart~IHeartStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function (style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                if (!this._pathProxy.isEmpty()) {\r\n                    this.buildPath(null, style);\r\n                }\r\n                return this._pathProxy.fastBoundingRect();\r\n            },\r\n\r\n            isCover: function (x, y) {\r\n                var originPos = this.transformCoordToLocal(x, y);\r\n                x = originPos[0];\r\n                y = originPos[1];\r\n                \r\n                if (this.isCoverRect(x, y)) {\r\n                    return area.isInsidePath(\r\n                        this._pathProxy.pathCommands, this.style.lineWidth, this.style.brushType, x, y\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(Heart, Base);\r\n        return Heart;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/Heart.js\n// module id = 63\n// module chunks = 0","/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         Yi Shen(https://github.com/pissang)\r\n *\r\n * shape类：标线\r\n */\r\n\r\n/**\r\n * @typedef {Object} IMarkLineStyle\r\n * @property {number} xStart 起点x坐标\r\n * @property {number} yStart 起点y坐标\r\n * @property {number} xEnd 终止点x坐标\r\n * @property {number} yEnd 终止点y坐标\r\n * @property {number} cpX1 控制点x坐标，可以使用updatePoints自动根据curveness计算\r\n * @property {number} cpY1 控制点y坐标，可以使用updatePoints自动根据curveness计算\r\n * @property {number} curveness 曲度\r\n * @property {Array.<string>} symbol\r\n * @property {Array.<number>} symbolRotate\r\n */\r\ndefine(function (require) {\r\n    var Base = require('zrenderjs/shape/Base');\r\n    var IconShape = require('./Icon');\r\n    var LineShape = require('zrenderjs/shape/Line');\r\n    var lineInstance = new LineShape({});\r\n    var CurveShape = require('zrenderjs/shape/BezierCurve');\r\n    var curveInstance = new CurveShape({});\r\n\r\n    var area = require('zrenderjs/tool/area');\r\n    var dashedLineTo = require('zrenderjs/shape/util/dashedLineTo');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var curveTool = require('zrenderjs/tool/curve');\r\n\r\n    function MarkLine(options) {\r\n        Base.call(this, options);\r\n\r\n        if (this.style.curveness > 0) {\r\n            this.updatePoints(this.style);\r\n        }\r\n        if (this.highlightStyle.curveness > 0) {\r\n            this.updatePoints(this.highlightStyle);\r\n        }\r\n    }\r\n\r\n    MarkLine.prototype =  {\r\n        type : 'mark-line',\r\n        /**\r\n         * 画刷\r\n         * @param ctx 画布句柄\r\n         * @param isHighlight   是否为高亮状态\r\n         * @param updateCallback 让painter更新视图，base.brush没用，需要的话重载brush\r\n         */\r\n        brush : function (ctx, isHighlight) {\r\n            var style = this.style;\r\n\r\n            if (isHighlight) {\r\n                // 根据style扩展默认高亮样式\r\n                style = this.getHighlightStyle(\r\n                    style,\r\n                    this.highlightStyle || {}\r\n                );\r\n            }\r\n\r\n            ctx.save();\r\n            this.setContext(ctx, style);\r\n\r\n            // 设置transform\r\n            this.setTransform(ctx);\r\n\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            this.buildPath(ctx, style);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            this.brushSymbol(ctx, style, 0);\r\n            this.brushSymbol(ctx, style, 1);\r\n\r\n            this.drawText(ctx, style, this.style);\r\n\r\n            ctx.restore();\r\n        },\r\n\r\n        /**\r\n         * 创建线条路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            var lineType = style.lineType || 'solid';\r\n\r\n            ctx.moveTo(style.xStart, style.yStart);\r\n            if (style.curveness > 0) {\r\n                // FIXME Bezier 在少部分浏览器上暂时不支持虚线\r\n                var lineDash = null;\r\n                switch (lineType) {\r\n                    case 'dashed':\r\n                        lineDash = [5, 5];\r\n                        break;\r\n                    case'dotted':\r\n                        lineDash = [1, 1];\r\n                        break;\r\n                }\r\n                if (lineDash && ctx.setLineDash) {\r\n                    ctx.setLineDash(lineDash);\r\n                }\r\n                \r\n                ctx.quadraticCurveTo(\r\n                    style.cpX1, style.cpY1, style.xEnd, style.yEnd\r\n                );\r\n            }\r\n            else {\r\n                if (lineType == 'solid') {\r\n                    ctx.lineTo(style.xEnd, style.yEnd);\r\n                }\r\n                else {\r\n                    var dashLength = (style.lineWidth || 1) \r\n                        * (style.lineType == 'dashed' ? 5 : 1);\r\n                    dashedLineTo(\r\n                        ctx, style.xStart, style.yStart,\r\n                        style.xEnd, style.yEnd, dashLength\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update cpX1 and cpY1 according to curveniss\r\n         * @param  {Object} style\r\n         */\r\n        updatePoints: function (style) {\r\n            var curveness = style.curveness || 0;\r\n            var inv = 1;\r\n\r\n            var x0 = style.xStart;\r\n            var y0 = style.yStart;\r\n            var x2 = style.xEnd;\r\n            var y2 = style.yEnd;\r\n            var x1 = (x0 + x2) / 2 - inv * (y0 - y2) * curveness;\r\n            var y1 =(y0 + y2) / 2 - inv * (x2 - x0) * curveness;\r\n\r\n            style.cpX1 = x1;\r\n            style.cpY1 = y1;\r\n        },\r\n\r\n        /**\r\n         * 标线始末标注\r\n         */\r\n        brushSymbol : function (ctx, style, idx) {\r\n            if (style.symbol[idx] == 'none') {\r\n                return;\r\n            }\r\n            ctx.save();\r\n            ctx.beginPath();\r\n\r\n            ctx.lineWidth = style.symbolBorder;\r\n            ctx.strokeStyle = style.symbolBorderColor;\r\n            // symbol\r\n            var symbol = style.symbol[idx].replace('empty', '')\r\n                                              .toLowerCase();\r\n            if (style.symbol[idx].match('empty')) {\r\n                ctx.fillStyle = '#fff'; //'rgba(0, 0, 0, 0)';\r\n            }\r\n\r\n            // symbolRotate\r\n            var x0 = style.xStart;\r\n            var y0 = style.yStart;\r\n            var x2 = style.xEnd;\r\n            var y2 = style.yEnd;\r\n            var x = idx === 0 ? x0 : x2;\r\n            var y = idx === 0 ? y0 : y2;\r\n            var curveness = style.curveness || 0;\r\n            var rotate = style.symbolRotate[idx] != null ? (style.symbolRotate[idx] - 0) : 0;\r\n            rotate = rotate / 180 * Math.PI;\r\n\r\n            if (symbol == 'arrow' && rotate === 0) {\r\n                if (curveness === 0) {\r\n                    var sign = idx === 0 ? -1 : 1; \r\n                    rotate = Math.PI / 2 + Math.atan2(\r\n                        sign * (y2 - y0), sign * (x2 - x0)\r\n                    );\r\n                }\r\n                else {\r\n                    var x1 = style.cpX1;\r\n                    var y1 = style.cpY1;\r\n\r\n                    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\r\n                    var dx = quadraticDerivativeAt(x0, x1, x2, idx);\r\n                    var dy = quadraticDerivativeAt(y0, y1, y2, idx);\r\n\r\n                    rotate = Math.PI / 2 + Math.atan2(dy, dx);\r\n                }\r\n            }\r\n            \r\n            ctx.translate(x, y);\r\n\r\n            if (rotate !== 0) {\r\n                ctx.rotate(rotate);\r\n            }\r\n\r\n            // symbolSize\r\n            var symbolSize = style.symbolSize[idx];\r\n            IconShape.prototype.buildPath(ctx, {\r\n                x: -symbolSize,\r\n                y: -symbolSize,\r\n                width: symbolSize * 2,\r\n                height: symbolSize * 2,\r\n                iconType: symbol\r\n            });\r\n\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        },\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            style.curveness > 0 ? curveInstance.getRect(style)\r\n                : lineInstance.getRect(style);\r\n            return style.__rect;\r\n        },\r\n\r\n        isCover : function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n\r\n            // 快速预判并保留判断矩形\r\n            if (this.isCoverRect(x, y)) {\r\n                // 矩形内\r\n                return this.style.curveness > 0\r\n                       ? area.isInside(curveInstance, this.style, x, y)\r\n                       : area.isInside(lineInstance, this.style, x, y);\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(MarkLine, Base);\r\n\r\n    return MarkLine;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/shape/MarkLine.js\n// module id = 64\n// module chunks = 0","/**\r\n * 贝塞尔曲线\r\n * @module zrender/shape/BezierCurve\r\n * @author Neil (杨骥, 511415343@qq.com)\r\n * @example\r\n *     var BezierCurve = require('zrender/shape/BezierCurve');\r\n *     var shape = new BezierCurve({\r\n *         style: {\r\n *             xStart: 0,\r\n *             yStart: 0,\r\n *             cpX1: 100,\r\n *             cpY1: 0,\r\n *             cpX2: 0,\r\n *             cpY2: 100,\r\n *             xEnd: 100,\r\n *             yEnd: 100,\r\n *             strokeColor: 'red'\r\n *         }\r\n *     });\r\n *     zr.addShape(shape);\r\n */\r\n\r\n/**\r\n * @typedef {Object} IBezierCurveStyle\r\n * @property {number} xStart 起点x坐标\r\n * @property {number} yStart 起点y坐标\r\n * @property {number} cpX1 第一个控制点x坐标\r\n * @property {number} cpY1 第一个控制点y坐标\r\n * @property {number} [cpX2] 第二个控制点x坐标，如果不给则为二次贝塞尔曲线\r\n * @property {number} [cpY2] 第二个控制点y坐标，如果不给则为二次贝塞尔曲线\r\n * @property {number} xEnd 终止点x坐标\r\n * @property {number} yEnd 终止点y坐标\r\n * @property {string} [strokeColor='#000000'] 描边颜色\r\n * @property {string} [lineCape='butt'] 线帽样式，可以是 butt, round, square\r\n * @property {number} [lineWidth=1] 描边宽度\r\n * @property {number} [opacity=1] 绘制透明度\r\n * @property {number} [shadowBlur=0] 阴影模糊度，大于0有效\r\n * @property {string} [shadowColor='#000000'] 阴影颜色\r\n * @property {number} [shadowOffsetX=0] 阴影横向偏移\r\n * @property {number} [shadowOffsetY=0] 阴影纵向偏移\r\n * @property {string} [text] 图形中的附加文本\r\n * @property {string} [textColor='#000000'] 文本颜色\r\n * @property {string} [textFont] 附加文本样式，eg:'bold 18px verdana'\r\n * @property {string} [textPosition='end'] 附加文本位置, 可以是 inside, left, right, top, bottom\r\n * @property {string} [textAlign] 默认根据textPosition自动设置，附加文本水平对齐。\r\n *                                可以是start, end, left, right, center\r\n * @property {string} [textBaseline] 默认根据textPosition自动设置，附加文本垂直对齐。\r\n *                                可以是top, bottom, middle, alphabetic, hanging, ideographic\r\n */\r\n\r\ndefine(\r\n    function (require) {\r\n        'use strict';\r\n\r\n        var Base = require('./Base');\r\n        \r\n        /**\r\n         * @alias module:zrender/shape/BezierCurve\r\n         * @constructor\r\n         * @extends module:zrender/shape/Base\r\n         * @param {Object} options\r\n         */\r\n        var BezierCurve = function(options) {\r\n            this.brushTypeOnly = 'stroke';  // 线条只能描边，填充后果自负\r\n            this.textPosition = 'end';\r\n            Base.call(this, options);\r\n            /**\r\n             * 贝赛尔曲线绘制样式\r\n             * @name module:zrender/shape/BezierCurve#style\r\n             * @type {module:zrender/shape/BezierCurve~IBezierCurveStyle}\r\n             */\r\n            /**\r\n             * 贝赛尔曲线高亮绘制样式\r\n             * @name module:zrender/shape/BezierCurve#highlightStyle\r\n             * @type {module:zrender/shape/BezierCurve~IBezierCurveStyle}\r\n             */\r\n        };\r\n\r\n        BezierCurve.prototype = {\r\n            type: 'bezier-curve',\r\n\r\n            /**\r\n             * 创建贝塞尔曲线路径\r\n             * @param {CanvasRenderingContext2D} ctx\r\n             * @param {module:zrender/shape/BezierCurve~IBezierCurveStyle} style\r\n             */\r\n            buildPath : function(ctx, style) {\r\n                ctx.moveTo(style.xStart, style.yStart);\r\n                if (typeof style.cpX2 != 'undefined'\r\n                    && typeof style.cpY2 != 'undefined'\r\n                ) {\r\n                    ctx.bezierCurveTo(\r\n                        style.cpX1, style.cpY1,\r\n                        style.cpX2, style.cpY2,\r\n                        style.xEnd, style.yEnd\r\n                    );\r\n                }\r\n                else {\r\n                    ctx.quadraticCurveTo(\r\n                        style.cpX1, style.cpY1,\r\n                        style.xEnd, style.yEnd\r\n                    );\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 计算返回贝赛尔曲线包围盒矩形。\r\n             * 该包围盒是直接从四个控制点计算，并非最小包围盒。\r\n             * @param {module:zrender/shape/BezierCurve~IBezierCurveStyle} style\r\n             * @return {module:zrender/shape/Base~IBoundingRect}\r\n             */\r\n            getRect : function(style) {\r\n                if (style.__rect) {\r\n                    return style.__rect;\r\n                }\r\n                \r\n                var _minX = Math.min(style.xStart, style.xEnd, style.cpX1);\r\n                var _minY = Math.min(style.yStart, style.yEnd, style.cpY1);\r\n                var _maxX = Math.max(style.xStart, style.xEnd, style.cpX1);\r\n                var _maxY = Math.max(style.yStart, style.yEnd, style.cpY1);\r\n                var _x2 = style.cpX2;\r\n                var _y2 = style.cpY2;\r\n\r\n                if (typeof _x2 != 'undefined'\r\n                    && typeof _y2 != 'undefined'\r\n                ) {\r\n                    _minX = Math.min(_minX, _x2);\r\n                    _minY = Math.min(_minY, _y2);\r\n                    _maxX = Math.max(_maxX, _x2);\r\n                    _maxY = Math.max(_maxY, _y2);\r\n                }\r\n\r\n                var lineWidth = style.lineWidth || 1;\r\n                style.__rect = {\r\n                    x : _minX - lineWidth,\r\n                    y : _minY - lineWidth,\r\n                    width : _maxX - _minX + lineWidth,\r\n                    height : _maxY - _minY + lineWidth\r\n                };\r\n                \r\n                return style.__rect;\r\n            }\r\n        };\r\n\r\n        require('../tool/util').inherits(BezierCurve, Base);\r\n        return BezierCurve;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/shape/BezierCurve.js\n// module id = 65\n// module chunks = 0","/**\r\n * echarts图表动画基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var curveTool = require('zrenderjs/tool/curve');\r\n    \r\n    /**\r\n     * 折线型动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function pointList(zr, oldShape, newShape, duration, easing) {\r\n        var newPointList = newShape.style.pointList;\r\n        var newPointListLen = newPointList.length;\r\n        var oldPointList;\r\n\r\n        if (!oldShape) {        // add\r\n            oldPointList = [];\r\n            if (newShape._orient != 'vertical') {\r\n                var y = newPointList[0][1];\r\n                for (var i = 0; i < newPointListLen; i++) {\r\n                    oldPointList[i] = [newPointList[i][0], y];\r\n                }\r\n            }\r\n            else {\r\n                var x = newPointList[0][0];\r\n                for (var i = 0; i < newPointListLen; i++) {\r\n                    oldPointList[i] = [x, newPointList[i][1]];\r\n                }\r\n            }\r\n\r\n            if (newShape.type == 'half-smooth-polygon') {\r\n                oldPointList[newPointListLen - 1] = zrUtil.clone(newPointList[newPointListLen - 1]);\r\n                oldPointList[newPointListLen - 2] = zrUtil.clone(newPointList[newPointListLen - 2]);\r\n            }\r\n            oldShape = {style : {pointList : oldPointList}};\r\n        }\r\n        \r\n        oldPointList = oldShape.style.pointList;\r\n        var oldPointListLen = oldPointList.length;\r\n        if (oldPointListLen == newPointListLen) {\r\n            newShape.style.pointList = oldPointList;\r\n        }\r\n        else if (oldPointListLen < newPointListLen) {\r\n            // 原来短，新的长，补全\r\n            newShape.style.pointList = oldPointList.concat(newPointList.slice(oldPointListLen));\r\n        }\r\n        else {\r\n            // 原来长，新的短，截断\r\n            newShape.style.pointList = oldPointList.slice(0, newPointListLen);\r\n        }\r\n\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                { pointList: newPointList }\r\n            )\r\n            .during(function () {\r\n                // Updating bezier points\r\n                if (newShape.updateControlPoints) {\r\n                    newShape.updateControlPoints(newShape.style);\r\n                }\r\n            })\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 复制样式\r\n     * \r\n     * @inner\r\n     * @param {Object} target 目标对象\r\n     * @param {Object} source 源对象\r\n     * @param {...string} props 复制的属性列表\r\n     */\r\n    function cloneStyle(target, source) {\r\n        var len = arguments.length;\r\n        for (var i = 2; i < len; i++) {\r\n            var prop = arguments[i];\r\n            target.style[prop] = source.style[prop];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 方型动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function rectangle(zr, oldShape, newShape, duration, easing) {\r\n        var newShapeStyle = newShape.style;\r\n        if (!oldShape) {        // add\r\n            oldShape = {\r\n                position : newShape.position,\r\n                style : {\r\n                    x : newShapeStyle.x,\r\n                    y : newShape._orient == 'vertical'\r\n                        ? newShapeStyle.y + newShapeStyle.height\r\n                        : newShapeStyle.y,\r\n                    width: newShape._orient == 'vertical' \r\n                           ? newShapeStyle.width : 0,\r\n                    height: newShape._orient != 'vertical' \r\n                           ? newShapeStyle.height : 0\r\n                }\r\n            };\r\n        }\r\n        \r\n        var newX = newShapeStyle.x;\r\n        var newY = newShapeStyle.y;\r\n        var newWidth = newShapeStyle.width;\r\n        var newHeight = newShapeStyle.height;\r\n        var newPosition = [newShape.position[0], newShape.position[1]];\r\n        cloneStyle(\r\n            newShape, oldShape,\r\n            'x', 'y', 'width', 'height'\r\n        );\r\n        newShape.position = oldShape.position;\r\n\r\n        zr.addShape(newShape);\r\n        if (newPosition[0] != oldShape.position[0] || newPosition[1] != oldShape.position[1]) {\r\n            zr.animate(newShape.id, '')\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        position: newPosition\r\n                    }\r\n                )\r\n                .start(easing);\r\n        }\r\n        \r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    x: newX,\r\n                    y: newY,\r\n                    width: newWidth,\r\n                    height: newHeight\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 蜡烛动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function candle(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            var y = newShape.style.y;\r\n            oldShape = {style : {y : [y[0], y[0], y[0], y[0]]}};\r\n        }\r\n        \r\n        var newY = newShape.style.y;\r\n        newShape.style.y = oldShape.style.y;\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                { y: newY }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n\r\n    /**\r\n     * 环型动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function ring(zr, oldShape, newShape, duration, easing) {\r\n        var x = newShape.style.x;\r\n        var y = newShape.style.y;\r\n        var r0 = newShape.style.r0;\r\n        var r = newShape.style.r;\r\n        \r\n        newShape.__animating = true;\r\n\r\n        if (newShape._animationAdd != 'r') {\r\n            newShape.style.r0 = 0;\r\n            newShape.style.r = 0;\r\n            newShape.rotation = [Math.PI*2, x, y];\r\n            \r\n            zr.addShape(newShape);\r\n            zr.animate(newShape.id, 'style')\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        r0 : r0,\r\n                        r : r\r\n                    }\r\n                )\r\n                .done(function() {\r\n                    newShape.__animating = false;\r\n                })\r\n                .start(easing);\r\n            zr.animate(newShape.id, '')\r\n                .when(\r\n                    duration,\r\n                    { rotation : [0, x, y] }\r\n                )\r\n                .start(easing);\r\n        }\r\n        else {\r\n            newShape.style.r0 = newShape.style.r;\r\n            \r\n            zr.addShape(newShape);\r\n            zr.animate(newShape.id, 'style')\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        r0 : r0\r\n                    }\r\n                )\r\n                .done(function() {\r\n                    newShape.__animating = false;\r\n                })\r\n                .start(easing);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 扇形动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function sector(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            if (newShape._animationAdd != 'r') {\r\n                oldShape = {\r\n                    style : {\r\n                        startAngle : newShape.style.startAngle,\r\n                        endAngle : newShape.style.startAngle\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                oldShape = {style : {r0 : newShape.style.r}};\r\n            }\r\n        }\r\n        \r\n        var startAngle = newShape.style.startAngle;\r\n        var endAngle = newShape.style.endAngle;\r\n        \r\n        cloneStyle(\r\n            newShape, oldShape,\r\n            'startAngle', 'endAngle'\r\n        );\r\n        \r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    startAngle : startAngle,\r\n                    endAngle : endAngle\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 文本动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function text(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            oldShape = {\r\n                style : {\r\n                    x : newShape.style.textAlign == 'left' \r\n                        ? newShape.style.x + 100\r\n                        : newShape.style.x - 100,\r\n                    y : newShape.style.y\r\n                }\r\n            };\r\n        }\r\n        \r\n        var x = newShape.style.x;\r\n        var y = newShape.style.y;\r\n        \r\n        cloneStyle(\r\n            newShape, oldShape,\r\n            'x', 'y'\r\n        );\r\n        \r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    x : x,\r\n                    y : y\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 多边形动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function polygon(zr, oldShape, newShape, duration, easing) {\r\n        var rect = require('zrenderjs/shape/Polygon').prototype.getRect(newShape.style);\r\n        var x = rect.x + rect.width / 2;\r\n        var y = rect.y + rect.height / 2;\r\n        \r\n        newShape.scale = [0.1, 0.1, x, y];\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, '')\r\n            .when(\r\n                duration,\r\n                {\r\n                    scale : [1, 1, x, y]\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * 和弦动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function ribbon(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            oldShape = {\r\n                style : {\r\n                    source0 : 0,\r\n                    source1 : newShape.style.source1 > 0 ? 360 : -360,\r\n                    target0 : 0,\r\n                    target1 : newShape.style.target1 > 0 ? 360 : -360\r\n                }\r\n            };\r\n        }\r\n        \r\n        var source0 = newShape.style.source0;\r\n        var source1 = newShape.style.source1;\r\n        var target0 = newShape.style.target0;\r\n        var target1 = newShape.style.target1;\r\n        \r\n        if (oldShape.style) {\r\n            cloneStyle(\r\n                newShape, oldShape,\r\n                'source0', 'source1', 'target0', 'target1'\r\n            );\r\n        }\r\n        \r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    source0 : source0,\r\n                    source1 : source1,\r\n                    target0 : target0,\r\n                    target1 : target1\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * gaugePointer动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function gaugePointer(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {        // add\r\n            oldShape = {\r\n                style : {\r\n                    angle : newShape.style.startAngle\r\n                }\r\n            };\r\n        }\r\n        \r\n        var angle = newShape.style.angle;\r\n        newShape.style.angle = oldShape.style.angle;\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    angle : angle\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * icon动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function icon(zr, oldShape, newShape, duration, easing, delay) {\r\n        // 避免markPoint特效取值在动画帧上\r\n        newShape.style._x = newShape.style.x;\r\n        newShape.style._y = newShape.style.y;\r\n        newShape.style._width = newShape.style.width;\r\n        newShape.style._height = newShape.style.height;\r\n\r\n        if (!oldShape) {    // add\r\n            var x = newShape._x || 0;\r\n            var y = newShape._y || 0;\r\n            newShape.scale = [0.01, 0.01, x, y];\r\n            zr.addShape(newShape);\r\n            newShape.__animating = true;\r\n            zr.animate(newShape.id, '')\r\n                .delay(delay)\r\n                .when(\r\n                    duration,\r\n                    {scale : [1, 1, x, y]}\r\n                )\r\n                .done(function() {\r\n                    newShape.__animating = false;\r\n                })\r\n                .start(easing || 'QuinticOut');\r\n        }\r\n        else {              // mod\r\n            rectangle(zr, oldShape, newShape, duration, easing);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * line动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function line(zr, oldShape, newShape, duration, easing) {\r\n        if (!oldShape) {\r\n            oldShape = {\r\n                style : {\r\n                    xStart : newShape.style.xStart,\r\n                    yStart : newShape.style.yStart,\r\n                    xEnd : newShape.style.xStart,\r\n                    yEnd : newShape.style.yStart\r\n                }\r\n            };\r\n        }\r\n        \r\n        var xStart = newShape.style.xStart;\r\n        var xEnd = newShape.style.xEnd;\r\n        var yStart = newShape.style.yStart;\r\n        var yEnd = newShape.style.yEnd;\r\n\r\n        cloneStyle(\r\n            newShape, oldShape,\r\n            'xStart', 'xEnd', 'yStart', 'yEnd'\r\n        );\r\n\r\n        zr.addShape(newShape);\r\n        newShape.__animating = true;\r\n        zr.animate(newShape.id, 'style')\r\n            .when(\r\n                duration,\r\n                {\r\n                    xStart: xStart,\r\n                    xEnd: xEnd,\r\n                    yStart: yStart,\r\n                    yEnd: yEnd\r\n                }\r\n            )\r\n            .done(function() {\r\n                newShape.__animating = false;\r\n            })\r\n            .start(easing);\r\n    }\r\n    \r\n    /**\r\n     * markline动画\r\n     * \r\n     * @param {ZRender} zr\r\n     * @param {shape} oldShape\r\n     * @param {shape} newShape\r\n     * @param {number} duration\r\n     * @param {tring} easing\r\n     */\r\n    function markline(zr, oldShape, newShape, duration, easing) {\r\n        easing = easing || 'QuinticOut';\r\n        newShape.__animating = true;\r\n        zr.addShape(newShape);\r\n        var newShapeStyle = newShape.style;\r\n\r\n        var animationDone = function () {\r\n            newShape.__animating = false;\r\n        };\r\n        var x0 = newShapeStyle.xStart;\r\n        var y0 = newShapeStyle.yStart;\r\n        var x2 = newShapeStyle.xEnd;\r\n        var y2 = newShapeStyle.yEnd;\r\n        if (newShapeStyle.curveness > 0) {\r\n            newShape.updatePoints(newShapeStyle);\r\n            var obj = { p: 0 };\r\n            var x1 = newShapeStyle.cpX1;\r\n            var y1 = newShapeStyle.cpY1;\r\n            var newXArr = [];\r\n            var newYArr = [];\r\n            var subdivide = curveTool.quadraticSubdivide;\r\n            zr.animation.animate(obj)\r\n                .when(duration, { p: 1 })\r\n                .during(function () {\r\n                    // Calculate subdivided curve\r\n                    subdivide(x0, x1, x2, obj.p, newXArr);\r\n                    subdivide(y0, y1, y2, obj.p, newYArr);\r\n                    newShapeStyle.cpX1 = newXArr[1];\r\n                    newShapeStyle.cpY1 = newYArr[1];\r\n                    newShapeStyle.xEnd = newXArr[2];\r\n                    newShapeStyle.yEnd = newYArr[2];\r\n                    zr.modShape(newShape);\r\n                })\r\n                .done(animationDone)\r\n                .start(easing);\r\n        }\r\n        else {\r\n            zr.animate(newShape.id, 'style')\r\n                .when(0, {\r\n                    xEnd: x0,\r\n                    yEnd: y0\r\n                })\r\n                .when(duration, {\r\n                    xEnd: x2,\r\n                    yEnd: y2\r\n                })\r\n                .done(animationDone)\r\n                .start(easing);\r\n        }\r\n    }\r\n\r\n    return {\r\n        pointList : pointList,\r\n        rectangle : rectangle,\r\n        candle : candle,\r\n        ring : ring,\r\n        sector : sector,\r\n        text : text,\r\n        polygon : polygon,\r\n        ribbon : ribbon,\r\n        gaugePointer : gaugePointer,\r\n        icon : icon,\r\n        line : line,\r\n        markline : markline\r\n    };\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/ecAnimation.js\n// module id = 66\n// module chunks = 0","/**\r\n * echarts图表特效基类\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var ecData = require('../util/ecData');\r\n    \r\n    var CircleShape = require('zrenderjs/shape/Circle');\r\n    var ImageShape = require('zrenderjs/shape/Image');\r\n    var curveTool = require('zrenderjs/tool/curve');\r\n    var IconShape = require('../util/shape/Icon');\r\n    var SymbolShape = require('../util/shape/Symbol');\r\n    var ShapeBundle = require('zrenderjs/shape/ShapeBundle');\r\n    var Polyline = require('zrenderjs/shape/Polyline');\r\n    var vec2 = require('zrenderjs/tool/vector');\r\n\r\n    var canvasSupported = require('zrenderjs/tool/env').canvasSupported;\r\n    \r\n    function point(zr, effectList, shape, zlevel) {\r\n        var effect = shape.effect;\r\n        var color = effect.color || shape.style.strokeColor || shape.style.color;\r\n        var shadowColor = effect.shadowColor || color;\r\n        var size = effect.scaleSize;\r\n        var distance = effect.bounceDistance;\r\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\r\n                         ? effect.shadowBlur : size;\r\n\r\n        var effectShape;\r\n        if (shape.type !== 'image') {\r\n            effectShape = new IconShape({\r\n                zlevel : zlevel,\r\n                style : {\r\n                    brushType : 'stroke',\r\n                    iconType : shape.style.iconType != 'droplet'\r\n                               ? shape.style.iconType\r\n                               : 'circle',\r\n                    x : shadowBlur + 1, // 线宽\r\n                    y : shadowBlur + 1,\r\n                    n : shape.style.n,\r\n                    width : shape.style._width * size,\r\n                    height : shape.style._height * size,\r\n                    lineWidth : 1,\r\n                    strokeColor : color,\r\n                    shadowColor : shadowColor,\r\n                    shadowBlur : shadowBlur\r\n                },\r\n                draggable : false,\r\n                hoverable : false\r\n            });\r\n            if (shape.style.iconType == 'pin') {\r\n                effectShape.style.y += effectShape.style.height / 2 * 1.5;\r\n            }\r\n\r\n            if (canvasSupported) {  // 提高性能，换成image\r\n                effectShape.style.image = zr.shapeToImage(\r\n                    effectShape, \r\n                    effectShape.style.width + shadowBlur * 2 + 2, \r\n                    effectShape.style.height + shadowBlur * 2 + 2\r\n                ).style.image;\r\n                \r\n                effectShape = new ImageShape({\r\n                    zlevel : effectShape.zlevel,\r\n                    style : effectShape.style,\r\n                    draggable : false,\r\n                    hoverable : false\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            effectShape = new ImageShape({\r\n                zlevel : zlevel,\r\n                style : shape.style,\r\n                draggable : false,\r\n                hoverable : false\r\n            });\r\n        }\r\n        \r\n        ecData.clone(shape, effectShape);\r\n        \r\n        // 改变坐标，不能移到前面\r\n        effectShape.position = shape.position;\r\n        effectList.push(effectShape);\r\n        zr.addShape(effectShape);\r\n        \r\n        var devicePixelRatio = shape.type !== 'image' ? (window.devicePixelRatio || 1) : 1;\r\n        var offset = (effectShape.style.width / devicePixelRatio - shape.style._width) / 2;\r\n        effectShape.style.x = shape.style._x - offset;\r\n        effectShape.style.y = shape.style._y - offset;\r\n\r\n        if (shape.style.iconType == 'pin') {\r\n            effectShape.style.y -= shape.style.height / 2 * 1.5;\r\n        }\r\n\r\n        var duration = (effect.period + Math.random() * 10) * 100;\r\n        \r\n        zr.modShape(\r\n            shape.id, \r\n            { invisible : true}\r\n        );\r\n        \r\n        var centerX = effectShape.style.x + (effectShape.style.width) / 2 / devicePixelRatio;\r\n        var centerY = effectShape.style.y + (effectShape.style.height) / 2 / devicePixelRatio;\r\n\r\n        if (effect.type === 'scale') {\r\n            // 放大效果\r\n            zr.modShape(\r\n                effectShape.id, \r\n                {\r\n                    scale : [0.1, 0.1, centerX, centerY]\r\n                }\r\n            );\r\n            \r\n            zr.animate(effectShape.id, '', effect.loop)\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        scale : [1, 1, centerX, centerY]\r\n                    }\r\n                )\r\n                .done(function() {\r\n                    shape.effect.show = false;\r\n                    zr.delShape(effectShape.id);\r\n                })\r\n                .start();\r\n        }\r\n        else {\r\n            zr.animate(effectShape.id, 'style', effect.loop)\r\n                .when(\r\n                    duration,\r\n                    {\r\n                        y : effectShape.style.y - distance\r\n                    }\r\n                )\r\n                .when(\r\n                    duration * 2,\r\n                    {\r\n                        y : effectShape.style.y\r\n                    }\r\n                )\r\n                .done(function() {\r\n                    shape.effect.show = false;\r\n                    zr.delShape(effectShape.id);\r\n                })\r\n                .start();\r\n        }\r\n        \r\n    }\r\n    \r\n    function largePoint(zr, effectList, shape, zlevel) {\r\n        var effect = shape.effect;\r\n        var color = effect.color || shape.style.strokeColor || shape.style.color;\r\n        var size = effect.scaleSize;\r\n        var shadowColor = effect.shadowColor || color;\r\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\r\n                         ? effect.shadowBlur : (size * 2);\r\n        var devicePixelRatio = window.devicePixelRatio || 1;\r\n        var effectShape = new SymbolShape({\r\n            zlevel : zlevel,\r\n            position : shape.position,\r\n            scale : shape.scale,\r\n            style : {\r\n                pointList : shape.style.pointList,\r\n                iconType : shape.style.iconType,\r\n                color : color,\r\n                strokeColor : color,\r\n                shadowColor : shadowColor,\r\n                shadowBlur : shadowBlur * devicePixelRatio,\r\n                random : true,\r\n                brushType: 'fill',\r\n                lineWidth:1,\r\n                size : shape.style.size\r\n            },\r\n            draggable : false,\r\n            hoverable : false\r\n        });\r\n        \r\n        effectList.push(effectShape);\r\n        zr.addShape(effectShape);\r\n        zr.modShape(\r\n            shape.id, \r\n            { invisible : true}\r\n        );\r\n        \r\n        var duration = Math.round(effect.period * 100);\r\n        var clip1 = {};\r\n        var clip2 = {};\r\n        for (var i = 0; i < 20; i++) {\r\n            effectShape.style['randomMap' + i] = 0;\r\n            clip1 = {};\r\n            clip1['randomMap' + i] = 100;\r\n            clip2 = {};\r\n            clip2['randomMap' + i] = 0;\r\n            effectShape.style['randomMap' + i] = Math.random() * 100;\r\n            zr.animate(effectShape.id, 'style', true)\r\n                .when(duration, clip1)\r\n                .when(duration * 2, clip2)\r\n                .when(duration * 3, clip1)\r\n                .when(duration * 4, clip1)\r\n                .delay(Math.random() * duration * i)\r\n                //.delay(duration / 15 * (15 - i + 1))\r\n                .start();\r\n            \r\n        }\r\n    }\r\n    \r\n    function line(zr, effectList, shape, zlevel, isLarge) {\r\n        var effect = shape.effect;\r\n        var shapeStyle = shape.style;\r\n        var color = effect.color || shapeStyle.strokeColor || shapeStyle.color;\r\n        var shadowColor = effect.shadowColor || shapeStyle.strokeColor || color;\r\n        var size = shapeStyle.lineWidth * effect.scaleSize;\r\n        var shadowBlur = typeof effect.shadowBlur != 'undefined'\r\n                         ? effect.shadowBlur : size;\r\n\r\n        var effectShape = new CircleShape({\r\n            zlevel : zlevel,\r\n            style : {\r\n                x : shadowBlur,\r\n                y : shadowBlur,\r\n                r : size,\r\n                color : color,\r\n                shadowColor : shadowColor,\r\n                shadowBlur : shadowBlur\r\n            },\r\n            hoverable : false\r\n        });\r\n\r\n        var offset = 0;\r\n        if (canvasSupported && ! isLarge) {  // 提高性能，换成image\r\n            var zlevel = effectShape.zlevel;\r\n            effectShape = zr.shapeToImage(\r\n                effectShape,\r\n                (size + shadowBlur) * 2,\r\n                (size + shadowBlur) * 2\r\n            );\r\n            effectShape.zlevel = zlevel;\r\n            effectShape.hoverable = false;\r\n\r\n            offset = shadowBlur;\r\n        }\r\n\r\n        if (! isLarge) {\r\n            ecData.clone(shape, effectShape);\r\n            // 改变坐标， 不能移到前面\r\n            effectShape.position = shape.position;\r\n            effectList.push(effectShape);\r\n            zr.addShape(effectShape);\r\n        }\r\n\r\n        var effectDone = function () {\r\n            if (! isLarge) {\r\n                shape.effect.show = false;\r\n                zr.delShape(effectShape.id);   \r\n            }\r\n            effectShape.effectAnimator = null;\r\n        };\r\n\r\n        if (shape instanceof Polyline) {\r\n            var distanceList = [0];\r\n            var totalDist = 0;\r\n            var pointList = shapeStyle.pointList;\r\n            var controlPointList = shapeStyle.controlPointList;\r\n            for (var i = 1; i < pointList.length; i++) {\r\n                if (controlPointList) {\r\n                    var cp1 = controlPointList[(i - 1) * 2];\r\n                    var cp2 = controlPointList[(i - 1) * 2 + 1];\r\n                    totalDist += vec2.dist(pointList[i - 1], cp1)\r\n                         + vec2.dist(cp1, cp2)\r\n                         + vec2.dist(cp2, pointList[i]);\r\n                }\r\n                else {\r\n                    totalDist += vec2.dist(pointList[i - 1], pointList[i]);\r\n                }\r\n                distanceList.push(totalDist);\r\n            }\r\n            var obj = { p: 0 };\r\n            var animator = zr.animation.animate(obj, { loop: effect.loop });\r\n\r\n            for (var i = 0; i < distanceList.length; i++) {\r\n                animator.when(distanceList[i] * effect.period, { p: i });\r\n            }\r\n            animator.during(function () {\r\n                var i = Math.floor(obj.p);\r\n                var x, y;\r\n                if (i == pointList.length - 1) {\r\n                    x = pointList[i][0];\r\n                    y = pointList[i][1];\r\n                }\r\n                else {\r\n                    var t = obj.p - i;\r\n                    var p0 = pointList[i];\r\n                    var p1 = pointList[i + 1];\r\n                    if (controlPointList) {\r\n                        var cp1 = controlPointList[i * 2];\r\n                        var cp2 = controlPointList[i * 2 + 1];\r\n                        x = curveTool.cubicAt(\r\n                            p0[0], cp1[0], cp2[0], p1[0], t\r\n                        );\r\n                        y = curveTool.cubicAt(\r\n                            p0[1], cp1[1], cp2[1], p1[1], t\r\n                        );\r\n                    }\r\n                    else {\r\n                        x = (p1[0] - p0[0]) * t + p0[0];\r\n                        y = (p1[1] - p0[1]) * t + p0[1];   \r\n                    }\r\n                }\r\n                effectShape.style.x = x;\r\n                effectShape.style.y = y;\r\n                if (! isLarge) {\r\n                    zr.modShape(effectShape);\r\n                }\r\n            })\r\n            .done(effectDone)\r\n            .start();\r\n\r\n            animator.duration = totalDist * effect.period;\r\n\r\n            effectShape.effectAnimator = animator;\r\n        }\r\n        else {\r\n            var x0 = shapeStyle.xStart - offset;\r\n            var y0 = shapeStyle.yStart - offset;\r\n            var x2 = shapeStyle.xEnd - offset;\r\n            var y2 = shapeStyle.yEnd - offset;\r\n            effectShape.style.x = x0;\r\n            effectShape.style.y = y0;\r\n\r\n            var distance = (x2 - x0) * (x2 - x0) + (y2 - y0) * (y2 - y0);\r\n            var duration = Math.round(Math.sqrt(Math.round(\r\n                distance * effect.period * effect.period\r\n            )));\r\n\r\n            if (shape.style.curveness > 0) {\r\n                var x1 = shapeStyle.cpX1 - offset;\r\n                var y1 = shapeStyle.cpY1 - offset;\r\n                effectShape.effectAnimator = zr.animation.animate(effectShape, { loop: effect.loop })\r\n                    .when(duration, { p: 1 })\r\n                    .during(function (target, t) {\r\n                        effectShape.style.x = curveTool.quadraticAt(\r\n                            x0, x1, x2, t\r\n                        );\r\n                        effectShape.style.y = curveTool.quadraticAt(\r\n                            y0, y1, y2, t\r\n                        );\r\n                        if (! isLarge) {\r\n                            zr.modShape(effectShape);\r\n                        }\r\n                    })\r\n                    .done(effectDone)\r\n                    .start();\r\n            }\r\n            else {\r\n                // 不用 zr.animate，因为在用 ShapeBundle 的时候单个 effectShape 不会\r\n                // 被加到 zrender 中\r\n                effectShape.effectAnimator = zr.animation.animate(effectShape.style, { loop: effect.loop })\r\n                    .when(duration, {\r\n                        x: x2,\r\n                        y: y2\r\n                    })\r\n                    .during(function () {\r\n                        if (! isLarge) {\r\n                            zr.modShape(effectShape);\r\n                        }\r\n                    })\r\n                    .done(effectDone)\r\n                    .start();\r\n            }\r\n            effectShape.effectAnimator.duration = duration;\r\n        }\r\n        return effectShape;\r\n    }\r\n\r\n    function largeLine(zr, effectList, shape, zlevel) {\r\n        var effectShape = new ShapeBundle({\r\n            style: {\r\n                shapeList: []\r\n            },\r\n            zlevel: zlevel,\r\n            hoverable: false\r\n        });\r\n        var shapeList = shape.style.shapeList;\r\n        var effect = shape.effect;\r\n        effectShape.position = shape.position;\r\n\r\n        var maxDuration = 0;\r\n        var subEffectAnimators = [];\r\n        for (var i = 0; i < shapeList.length; i++) {\r\n            shapeList[i].effect = effect;\r\n            var subEffectShape = line(zr, null, shapeList[i], zlevel, true);\r\n            var subEffectAnimator = subEffectShape.effectAnimator;\r\n            effectShape.style.shapeList.push(subEffectShape);\r\n            if (subEffectAnimator.duration > maxDuration) {\r\n                maxDuration = subEffectAnimator.duration;\r\n            }\r\n            if (i === 0) {\r\n                effectShape.style.color = subEffectShape.style.color;\r\n                effectShape.style.shadowBlur = subEffectShape.style.shadowBlur;\r\n                effectShape.style.shadowColor = subEffectShape.style.shadowColor;\r\n            }\r\n            subEffectAnimators.push(subEffectAnimator);\r\n        }\r\n        effectList.push(effectShape);\r\n        zr.addShape(effectShape);\r\n\r\n        var clearAllAnimators = function () {\r\n            for (var i = 0; i < subEffectAnimators.length; i++) {\r\n                subEffectAnimators[i].stop();\r\n            }\r\n        };\r\n        if (maxDuration) {\r\n            effectShape.__dummy = 0;\r\n            // Proxy animator\r\n            var animator = zr.animate(effectShape.id, '', effect.loop)\r\n                .when(maxDuration, {\r\n                    __dummy: 1\r\n                })\r\n                .during(function () {\r\n                    zr.modShape(effectShape);\r\n                })\r\n                .done(function () {\r\n                    shape.effect.show = false;\r\n                    zr.delShape(effectShape.id);\r\n                })\r\n                .start();\r\n            var oldStop = animator.stop;\r\n\r\n            animator.stop = function () {\r\n                clearAllAnimators();\r\n                oldStop.call(this);\r\n            };\r\n        }\r\n    }\r\n\r\n    return {\r\n        point : point,\r\n        largePoint : largePoint,\r\n        line : line,\r\n        largeLine: largeLine\r\n    };\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/ecEffect.js\n// module id = 67\n// module chunks = 0","/**\r\n * echarts层级查找方法\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function(require) {\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    \r\n    /**\r\n     * 获取嵌套选项的基础方法\r\n     * 返回optionTarget中位于optionLocation上的值，如果没有定义，则返回undefined\r\n     */\r\n    function query(optionTarget, optionLocation) {\r\n        if (typeof optionTarget == 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!optionLocation) {\r\n            return optionTarget;\r\n        }\r\n\r\n        optionLocation = optionLocation.split('.');\r\n        var length = optionLocation.length;\r\n        var curIdx = 0;\r\n        while (curIdx < length) {\r\n            optionTarget = optionTarget[optionLocation[curIdx]];\r\n            if (typeof optionTarget == 'undefined') {\r\n                return;\r\n            }\r\n            curIdx++;\r\n        }\r\n\r\n        return optionTarget;\r\n    }\r\n        \r\n    /**\r\n     * 获取多级控制嵌套属性的基础方法\r\n     * 返回ctrList中优先级最高（最靠前）的非undefined属性，ctrList中均无定义则返回undefined\r\n     */\r\n    function deepQuery(ctrList, optionLocation) {\r\n        var finalOption;\r\n        for (var i = 0, l = ctrList.length; i < l; i++) {\r\n            finalOption = query(ctrList[i], optionLocation);\r\n            if (typeof finalOption != 'undefined') {\r\n                return finalOption;\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 获取多级控制嵌套属性的基础方法\r\n     * 根据ctrList中优先级合并产出目标属性\r\n     */\r\n    function deepMerge(ctrList, optionLocation) {\r\n        var finalOption;\r\n        var len = ctrList.length;\r\n        while (len--) {\r\n            var tempOption = query(ctrList[len], optionLocation);\r\n            if (typeof tempOption != 'undefined') {\r\n                if (typeof finalOption == 'undefined') {\r\n                    finalOption = zrUtil.clone(tempOption);\r\n                }\r\n                else {\r\n                    zrUtil.merge(\r\n                        finalOption, tempOption, true\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        \r\n        return finalOption;\r\n    }\r\n    \r\n    return {\r\n        query : query,\r\n        deepQuery : deepQuery,\r\n        deepMerge : deepMerge\r\n    };\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/ecQuery.js\n// module id = 68\n// module chunks = 0","/**\r\n * echarts数字运算相关\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function() {\r\n    function _trim(str) {\r\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n    }\r\n    \r\n    /**\r\n     * 百分比计算\r\n     */\r\n    function parsePercent(value, maxValue) {\r\n        if (typeof value === 'string') {\r\n            if (_trim(value).match(/%$/)) {\r\n                return parseFloat(value) / 100 * maxValue;\r\n            }\r\n\r\n            return parseFloat(value);\r\n        }\r\n\r\n        return value;\r\n    }\r\n    \r\n    /**\r\n     * 获取中心坐标\r\n     */ \r\n    function parseCenter(zr, center) {\r\n        return [\r\n            parsePercent(center[0], zr.getWidth()),\r\n            parsePercent(center[1], zr.getHeight())\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * 获取自适应半径\r\n     */ \r\n    function parseRadius(zr, radius) {\r\n        // 传数组实现环形图，[内半径，外半径]，传单个则默认为外半径为\r\n        if (!(radius instanceof Array)) {\r\n            radius = [0, radius];\r\n        }\r\n        var zrSize = Math.min(zr.getWidth(), zr.getHeight()) / 2;\r\n        return [\r\n            parsePercent(radius[0], zrSize),\r\n            parsePercent(radius[1], zrSize)\r\n        ];\r\n    }\r\n    \r\n    /**\r\n     * 每三位默认加,格式化\r\n     */\r\n    function addCommas(x) {\r\n        if (isNaN(x)) {\r\n            return '-';\r\n        }\r\n        x = (x + '').split('.');\r\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,') \r\n               + (x.length > 1 ? ('.' + x[1]) : '');\r\n    }\r\n\r\n    /**\r\n     * 获取数字的小数位数\r\n     * @param {number} val\r\n     */\r\n    \r\n    // It is much faster than methods converting number to string as follows \r\n    //      var tmp = val.toString();\r\n    //      return tmp.length - 1 - tmp.indexOf('.');\r\n    // especially when precision is low\r\n    function getPrecision(val) {\r\n        var e = 1;\r\n        var count = 0;\r\n        while (Math.round(val * e) / e !== val) {\r\n            e *= 10;\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n    \r\n    return {\r\n        parsePercent: parsePercent,\r\n        parseCenter: parseCenter,\r\n        parseRadius: parseRadius,\r\n        addCommas: addCommas,\r\n        getPrecision: getPrecision\r\n    };\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/number.js\n// module id = 69\n// module chunks = 0","/**\r\n * Edge bundling laytout\r\n *\r\n * Use MINGLE algorithm\r\n * Multilevel agglomerative edge bundling for visualizing large graphs\r\n *\r\n * @module echarts/layout/EdgeBundling\r\n */\r\ndefine(function (require) {\r\n\r\n    var KDTree = require('../data/KDTree');\r\n    var vec2 = require('zrenderjs/tool/vector');\r\n    var v2Create = vec2.create;\r\n    var v2DistSquare = vec2.distSquare;\r\n    var v2Dist = vec2.dist;\r\n    var v2Copy = vec2.copy;\r\n    var v2Clone = vec2.clone;\r\n\r\n    function squaredDistance(a, b) {\r\n        a = a.array;\r\n        b = b.array;\r\n\r\n        var x = b[0] - a[0];\r\n        var y = b[1] - a[1];\r\n        var z = b[2] - a[2];\r\n        var w = b[3] - a[3];\r\n\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    function CoarsenedEdge(group) {\r\n        this.points = [\r\n            group.mp0, group.mp1\r\n        ];\r\n\r\n        this.group = group;\r\n    }\r\n\r\n    function Edge(edge) {\r\n        var points = edge.points;\r\n        // Sort on y\r\n        if (\r\n            points[0][1] < points[1][1]\r\n            // If coarsened edge is flipped, the final composition of meet point\r\n            // will be unordered\r\n            || edge instanceof CoarsenedEdge\r\n        ) {\r\n            this.array = [points[0][0], points[0][1], points[1][0], points[1][1]];\r\n            this._startPoint = points[0];\r\n            this._endPoint = points[1];\r\n        }\r\n        else {\r\n            this.array = [points[1][0], points[1][1], points[0][0], points[0][1]];\r\n            this._startPoint = points[1];\r\n            this._endPoint = points[0];\r\n        }\r\n\r\n        this.ink = v2Dist(points[0], points[1]);\r\n\r\n        this.edge = edge;\r\n\r\n        this.group = null;\r\n    }\r\n\r\n    Edge.prototype.getStartPoint = function () {\r\n        return this._startPoint;\r\n    };\r\n\r\n    Edge.prototype.getEndPoint = function () {\r\n        return this._endPoint;\r\n    };\r\n\r\n    function BundledEdgeGroup() {\r\n\r\n        this.edgeList = [];\r\n\r\n        this.mp0 = v2Create();\r\n        this.mp1 = v2Create();\r\n\r\n        this.ink = 0;\r\n    }\r\n\r\n    BundledEdgeGroup.prototype.addEdge = function (edge) {\r\n        edge.group = this;\r\n        this.edgeList.push(edge);\r\n    };\r\n\r\n    BundledEdgeGroup.prototype.removeEdge = function (edge) {\r\n        edge.group = null;\r\n        this.edgeList.splice(this.edgeList.indexOf(edge), 1);\r\n    };\r\n\r\n    /**\r\n     * @constructor\r\n     * @alias module:echarts/layout/EdgeBundling\r\n     */\r\n    function EdgeBundling() {\r\n        this.maxNearestEdge = 6;\r\n        this.maxTurningAngle = Math.PI / 4;\r\n        this.maxIteration = 20;\r\n    }\r\n\r\n    EdgeBundling.prototype = {\r\n        \r\n        constructor: EdgeBundling,\r\n\r\n        run: function (rawEdges) {\r\n            var res = this._iterate(rawEdges);\r\n            var nIterate = 0;\r\n            while (nIterate++ < this.maxIteration) {\r\n                var coarsenedEdges = [];\r\n                for (var i = 0; i < res.groups.length; i++) {\r\n                    coarsenedEdges.push(new CoarsenedEdge(res.groups[i]));\r\n                }\r\n                var newRes = this._iterate(coarsenedEdges);\r\n                if (newRes.savedInk <= 0) {\r\n                    break;\r\n                } else {\r\n                    res = newRes;\r\n                }\r\n            }\r\n\r\n            // Get new edges\r\n            var newEdges = [];\r\n\r\n            function pointApproxEqual(p0, p1) {\r\n                // Use Float32Array may affect the precision\r\n                return v2DistSquare(p0, p1) < 1e-10;\r\n            }\r\n            // Clone all points to make sure all points in edge will not reference to the same array\r\n            // And clean the duplicate points\r\n            function cleanEdgePoints(edgePoints, rawEdgePoints) {\r\n                var res = [];\r\n                var off = 0;\r\n                for (var i = 0; i < edgePoints.length; i++) {\r\n                    if (! (off > 0 && pointApproxEqual(edgePoints[i], res[off - 1]))) {\r\n                        res[off++] = v2Clone(edgePoints[i]);\r\n                    }\r\n                }\r\n                // Edge has been reversed\r\n                if (rawEdgePoints[0] && !pointApproxEqual(res[0], rawEdgePoints[0])) {\r\n                    res = res.reverse();\r\n                }\r\n                return res;\r\n            }\r\n\r\n            var buildNewEdges = function (groups, fromEdgePoints) {\r\n                var newEdgePoints;\r\n                for (var i = 0; i < groups.length; i++) {\r\n                    var group = groups[i];\r\n                    if (\r\n                        group.edgeList[0]\r\n                        && (group.edgeList[0].edge instanceof CoarsenedEdge)\r\n                    ) {\r\n                        var newGroups = [];\r\n                        for (var j = 0; j < group.edgeList.length; j++) {\r\n                            newGroups.push(group.edgeList[j].edge.group);\r\n                        }\r\n                        if (! fromEdgePoints) {\r\n                            newEdgePoints = [];\r\n                        } else {\r\n                            newEdgePoints = fromEdgePoints.slice();\r\n                        }\r\n                        newEdgePoints.unshift(group.mp0);\r\n                        newEdgePoints.push(group.mp1);\r\n                        buildNewEdges(newGroups, newEdgePoints);\r\n                    } else {\r\n                        // console.log(group.edgeList.length);\r\n                        for (var j = 0; j < group.edgeList.length; j++) {\r\n                            var edge = group.edgeList[j];\r\n                            if (! fromEdgePoints) {\r\n                                newEdgePoints = [];\r\n                            } else {\r\n                                newEdgePoints = fromEdgePoints.slice();\r\n                            }\r\n                            newEdgePoints.unshift(group.mp0);\r\n                            newEdgePoints.push(group.mp1);\r\n                            newEdgePoints.unshift(edge.getStartPoint());\r\n                            newEdgePoints.push(edge.getEndPoint());\r\n                            newEdges.push({\r\n                                points: cleanEdgePoints(newEdgePoints, edge.edge.points),\r\n                                rawEdge: edge.edge\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            buildNewEdges(res.groups);\r\n\r\n            return newEdges;\r\n        },\r\n\r\n        _iterate: function (rawEdges) {\r\n            var edges = [];\r\n            var groups = [];\r\n            var totalSavedInk = 0;\r\n            for (var i = 0; i < rawEdges.length; i++) {\r\n                var edge = new Edge(rawEdges[i]);\r\n                edges.push(edge);\r\n            }\r\n\r\n            var tree = new KDTree(edges, 4);\r\n\r\n            var nearests = [];\r\n\r\n            var _mp0 = v2Create();\r\n            var _mp1 = v2Create();\r\n            var _newGroupInk = 0;\r\n            var mp0 = v2Create();\r\n            var mp1 = v2Create();\r\n            var newGroupInk = 0;\r\n            for (var i = 0; i < edges.length; i++) {\r\n                var edge = edges[i];\r\n                if (edge.group) {\r\n                    // Edge have been groupped\r\n                    continue;\r\n                }\r\n                tree.nearestN(\r\n                    edge, this.maxNearestEdge,\r\n                    squaredDistance, nearests\r\n                );\r\n                var maxSavedInk = 0;\r\n                var mostSavingInkEdge = null;\r\n                var lastCheckedGroup = null;\r\n                for (var j = 0; j < nearests.length; j++) {\r\n                    var nearest = nearests[j];\r\n                    var savedInk = 0;\r\n                    if (nearest.group) {\r\n                        if (nearest.group !== lastCheckedGroup) {\r\n                            lastCheckedGroup = nearest.group;\r\n                            _newGroupInk = this._calculateGroupEdgeInk(\r\n                                nearest.group, edge, _mp0, _mp1\r\n                            );\r\n                            savedInk = nearest.group.ink + edge.ink - _newGroupInk;\r\n                        }\r\n                    }\r\n                    else {\r\n                        _newGroupInk = this._calculateEdgeEdgeInk(\r\n                            edge, nearest, _mp0, _mp1\r\n                        );\r\n                        savedInk = nearest.ink + edge.ink - _newGroupInk;\r\n                    }\r\n                    if (savedInk > maxSavedInk) {\r\n                        maxSavedInk = savedInk;\r\n                        mostSavingInkEdge = nearest;\r\n                        v2Copy(mp1, _mp1);\r\n                        v2Copy(mp0, _mp0);\r\n                        newGroupInk = _newGroupInk;\r\n                    }\r\n                }\r\n                if (mostSavingInkEdge) {\r\n                    totalSavedInk += maxSavedInk;\r\n                    var group;\r\n                    if (! mostSavingInkEdge.group) {\r\n                        group = new BundledEdgeGroup();\r\n                        groups.push(group);\r\n                        group.addEdge(mostSavingInkEdge);\r\n                    }\r\n                    group = mostSavingInkEdge.group;\r\n                    // Use the meet point and group ink calculated before\r\n                    v2Copy(group.mp0, mp0);\r\n                    v2Copy(group.mp1, mp1);\r\n                    group.ink = newGroupInk;\r\n                    mostSavingInkEdge.group.addEdge(edge);\r\n                }\r\n                else {\r\n                    var group = new BundledEdgeGroup();\r\n                    groups.push(group);\r\n                    v2Copy(group.mp0, edge.getStartPoint());\r\n                    v2Copy(group.mp1, edge.getEndPoint());\r\n                    group.ink = edge.ink;\r\n                    group.addEdge(edge);\r\n                }\r\n            }\r\n\r\n            return {\r\n                groups: groups,\r\n                edges: edges,\r\n                savedInk: totalSavedInk\r\n            };\r\n        },\r\n\r\n        _calculateEdgeEdgeInk: (function () {\r\n            var startPointSet = [];\r\n            var endPointSet = [];\r\n            return function (e0, e1, mp0, mp1) {\r\n                startPointSet[0] = e0.getStartPoint();\r\n                startPointSet[1] = e1.getStartPoint();\r\n                endPointSet[0] = e0.getEndPoint();\r\n                endPointSet[1] = e1.getEndPoint();\r\n\r\n                this._calculateMeetPoints(\r\n                    startPointSet, endPointSet, mp0, mp1\r\n                );\r\n                var ink = v2Dist(startPointSet[0], mp0)\r\n                    + v2Dist(mp0, mp1)\r\n                    + v2Dist(mp1, endPointSet[0])\r\n                    + v2Dist(startPointSet[1], mp0)\r\n                    + v2Dist(mp1, endPointSet[1]);\r\n\r\n                return ink;\r\n            };\r\n        })(),\r\n\r\n        _calculateGroupEdgeInk: function (group, edgeTryAdd, mp0, mp1) {\r\n            var startPointSet = [];\r\n            var endPointSet = [];\r\n            for (var i = 0; i < group.edgeList.length; i++) {\r\n                var edge = group.edgeList[i];\r\n                startPointSet.push(edge.getStartPoint());\r\n                endPointSet.push(edge.getEndPoint());\r\n            }\r\n            startPointSet.push(edgeTryAdd.getStartPoint());\r\n            endPointSet.push(edgeTryAdd.getEndPoint());\r\n\r\n            this._calculateMeetPoints(\r\n                startPointSet, endPointSet, mp0, mp1\r\n            );\r\n\r\n            var ink = v2Dist(mp0, mp1);\r\n            for (var i = 0; i < startPointSet.length; i++) {\r\n                ink += v2Dist(startPointSet[i], mp0)\r\n                    + v2Dist(endPointSet[i], mp1);\r\n            }\r\n\r\n            return ink;\r\n        },\r\n\r\n        /**\r\n         * Calculating the meet points\r\n         * @method\r\n         * @param {Array} startPointSet Start points set of bundled edges\r\n         * @param {Array} endPointSet End points set of bundled edges\r\n         * @param {Array.<number>} mp0 Output meet point 0\r\n         * @param {Array.<number>} mp1 Output meet point 1\r\n         */\r\n        _calculateMeetPoints: (function () {\r\n            var cp0 = v2Create();\r\n            var cp1 = v2Create();\r\n            return function (startPointSet, endPointSet, mp0, mp1) {\r\n                vec2.set(cp0, 0, 0);\r\n                vec2.set(cp1, 0, 0);\r\n                var len = startPointSet.length;\r\n                // Calculate the centroid of start points set\r\n                for (var i = 0; i < len; i++) {\r\n                    vec2.add(cp0, cp0, startPointSet[i]);\r\n                }\r\n                vec2.scale(cp0, cp0, 1 / len);\r\n\r\n                // Calculate the centroid of end points set\r\n                len = endPointSet.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    vec2.add(cp1, cp1, endPointSet[i]);\r\n                }\r\n                vec2.scale(cp1, cp1, 1 / len);\r\n\r\n                this._limitTurningAngle(\r\n                    startPointSet, cp0, cp1, mp0\r\n                );\r\n                this._limitTurningAngle(\r\n                    endPointSet, cp1, cp0, mp1\r\n                );\r\n            };\r\n        })(),\r\n\r\n        _limitTurningAngle: (function () {\r\n            var v10 = v2Create();\r\n            var vTmp = v2Create();\r\n            var project = v2Create();\r\n            var tmpOut = v2Create();\r\n            return function (pointSet, p0, p1, out) {\r\n                // Limit the max turning angle\r\n                var maxTurningAngleCos = Math.cos(this.maxTurningAngle);\r\n                var maxTurningAngleTan = Math.tan(this.maxTurningAngle);\r\n\r\n                vec2.sub(v10, p0, p1);\r\n                vec2.normalize(v10, v10);\r\n\r\n                // Simply copy the centroid point if no need to turn the angle\r\n                vec2.copy(out, p0);\r\n\r\n                var maxMovement = 0;\r\n                for (var i = 0; i < pointSet.length; i++) {\r\n                    var p = pointSet[i];\r\n                    vec2.sub(vTmp, p, p0);\r\n                    var len = vec2.len(vTmp);\r\n                    vec2.scale(vTmp, vTmp, 1 / len);\r\n                    var turningAngleCos = vec2.dot(vTmp, v10);\r\n                    // Turning angle is to large\r\n                    if (turningAngleCos < maxTurningAngleCos) {\r\n                        // Calculat p's project point on vector p1-p0 \r\n                        // and distance to the vector\r\n                        vec2.scaleAndAdd(\r\n                            project, p0, v10, len * turningAngleCos\r\n                        );\r\n                        var distance = v2Dist(project, p);\r\n\r\n                        // Use the max turning angle to calculate the new meet point\r\n                        var d = distance / maxTurningAngleTan;\r\n                        vec2.scaleAndAdd(tmpOut, project, v10, -d);\r\n\r\n                        var movement = v2DistSquare(tmpOut, p0);\r\n                        if (movement > maxMovement) {\r\n                            maxMovement = movement;\r\n                            vec2.copy(out, tmpOut);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        })()\r\n    };\r\n\r\n    return EdgeBundling;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/layout/EdgeBundling.js\n// module id = 70\n// module chunks = 0","/**\r\n * K-Dimension Tree\r\n *\r\n * @module echarts/data/KDTree\r\n * @author Yi Shen(https://github.com/pissang)\r\n */\r\ndefine(function (require) {\r\n\r\n    var quickSelect = require('./quickSelect');\r\n\r\n    function Node(axis, data) {\r\n        this.left = null;\r\n        this.right = null;\r\n        this.axis = axis;\r\n\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     * @alias module:echarts/data/KDTree\r\n     * @param {Array} points List of points.\r\n     * each point needs an array property to repesent the actual data\r\n     * @param {Number} [dimension]\r\n     *        Point dimension.\r\n     *        Default will use the first point's length as dimensiont\r\n     */\r\n    var KDTree = function (points, dimension) {\r\n        if (!points.length) {\r\n            return;\r\n        }\r\n\r\n        if (!dimension) {\r\n            dimension = points[0].array.length;\r\n        }\r\n        this.dimension = dimension;\r\n        this.root = this._buildTree(points, 0, points.length - 1, 0);\r\n\r\n        // Use one stack to avoid allocation \r\n        // each time searching the nearest point\r\n        this._stack = [];\r\n        // Again avoid allocating a new array\r\n        // each time searching nearest N points\r\n        this._nearstNList = [];\r\n    };\r\n\r\n    /**\r\n     * Resursively build the tree\r\n     */\r\n    KDTree.prototype._buildTree = function (points, left, right, axis) {\r\n        if (right < left) {\r\n            return null;\r\n        }\r\n\r\n        var medianIndex = Math.floor((left + right) / 2);\r\n        medianIndex = quickSelect(\r\n            points, left, right, medianIndex,\r\n            function (a, b) {\r\n                return a.array[axis] - b.array[axis];\r\n            }\r\n        );\r\n        var median = points[medianIndex];\r\n\r\n        var node = new Node(axis, median);\r\n\r\n        axis = (axis + 1) % this.dimension;\r\n        if (right > left) {\r\n            node.left = this._buildTree(points, left, medianIndex - 1, axis);\r\n            node.right = this._buildTree(points, medianIndex + 1, right, axis);   \r\n        }\r\n\r\n        return node;\r\n    };\r\n\r\n    /**\r\n     * Find nearest point\r\n     * @param  {Array} target Target point\r\n     * @param  {Function} squaredDistance Squared distance function\r\n     * @return {Array} Nearest point\r\n     */\r\n    KDTree.prototype.nearest = function (target, squaredDistance) {\r\n        var curr = this.root;\r\n        var stack = this._stack;\r\n        var idx = 0;\r\n        var minDist = Infinity;\r\n        var nearestNode = null;\r\n        if (curr.data !== target) {\r\n            minDist = squaredDistance(curr.data, target);\r\n            nearestNode = curr;\r\n        }\r\n\r\n        if (target.array[curr.axis] < curr.data.array[curr.axis]) {\r\n            // Left first\r\n            curr.right && (stack[idx++] = curr.right);\r\n            curr.left && (stack[idx++] = curr.left);\r\n        }\r\n        else {\r\n            // Right first\r\n            curr.left && (stack[idx++] = curr.left);\r\n            curr.right && (stack[idx++] = curr.right);\r\n        }\r\n\r\n        while (idx--) {\r\n            curr = stack[idx];\r\n            var currDist = target.array[curr.axis] - curr.data.array[curr.axis];\r\n            var isLeft = currDist < 0;\r\n            var needsCheckOtherSide = false;\r\n            currDist = currDist * currDist;\r\n            // Intersecting right hyperplane with minDist hypersphere\r\n            if (currDist < minDist) {\r\n                currDist = squaredDistance(curr.data, target);\r\n                if (currDist < minDist && curr.data !== target) {\r\n                    minDist = currDist;\r\n                    nearestNode = curr;\r\n                }\r\n                needsCheckOtherSide = true;\r\n            }\r\n            if (isLeft) {\r\n                if (needsCheckOtherSide) {\r\n                    curr.right && (stack[idx++] = curr.right);\r\n                }\r\n                // Search in the left area\r\n                curr.left && (stack[idx++] = curr.left);\r\n            }\r\n            else {\r\n                if (needsCheckOtherSide) {\r\n                    curr.left && (stack[idx++] = curr.left);\r\n                }\r\n                // Search the right area\r\n                curr.right && (stack[idx++] = curr.right);\r\n            }\r\n        }\r\n\r\n        return nearestNode.data;\r\n    };\r\n\r\n    KDTree.prototype._addNearest = function (found, dist, node) {\r\n        var nearestNList = this._nearstNList;\r\n\r\n        // Insert to the right position\r\n        // Sort from small to large\r\n        for (var i = found - 1; i > 0; i--) {\r\n            if (dist >= nearestNList[i - 1].dist) {                \r\n                break;\r\n            }\r\n            else {\r\n                nearestNList[i].dist = nearestNList[i - 1].dist;\r\n                nearestNList[i].node = nearestNList[i - 1].node;\r\n            }\r\n        }\r\n\r\n        nearestNList[i].dist = dist;\r\n        nearestNList[i].node = node;\r\n    };\r\n\r\n    /**\r\n     * Find nearest N points\r\n     * @param  {Array} target Target point\r\n     * @param  {number} N\r\n     * @param  {Function} squaredDistance Squared distance function\r\n     * @param  {Array} [output] Output nearest N points\r\n     */\r\n    KDTree.prototype.nearestN = function (target, N, squaredDistance, output) {\r\n        if (N <= 0) {\r\n            output.length = 0;\r\n            return output;\r\n        }\r\n\r\n        var curr = this.root;\r\n        var stack = this._stack;\r\n        var idx = 0;\r\n\r\n        var nearestNList = this._nearstNList;\r\n        for (var i = 0; i < N; i++) {\r\n            // Allocate\r\n            if (!nearestNList[i]) {\r\n                nearestNList[i] = {};\r\n            }\r\n            nearestNList[i].dist = 0;\r\n            nearestNList[i].node = null;\r\n        }\r\n        var currDist = squaredDistance(curr.data, target);\r\n\r\n        var found = 0;\r\n        if (curr.data !== target) {\r\n            found++;\r\n            this._addNearest(found, currDist, curr);\r\n        }\r\n\r\n        if (target.array[curr.axis] < curr.data.array[curr.axis]) {\r\n            // Left first\r\n            curr.right && (stack[idx++] = curr.right);\r\n            curr.left && (stack[idx++] = curr.left);\r\n        }\r\n        else {\r\n            // Right first\r\n            curr.left && (stack[idx++] = curr.left);\r\n            curr.right && (stack[idx++] = curr.right);\r\n        }\r\n\r\n        while (idx--) {\r\n            curr = stack[idx];\r\n            var currDist = target.array[curr.axis] - curr.data.array[curr.axis];\r\n            var isLeft = currDist < 0;\r\n            var needsCheckOtherSide = false;\r\n            currDist = currDist * currDist;\r\n            // Intersecting right hyperplane with minDist hypersphere\r\n            if (found < N || currDist < nearestNList[found - 1].dist) {\r\n                currDist = squaredDistance(curr.data, target);\r\n                if (\r\n                    (found < N || currDist < nearestNList[found - 1].dist)\r\n                    && curr.data !== target\r\n                ) {\r\n                    if (found < N) {\r\n                        found++;\r\n                    }\r\n                    this._addNearest(found, currDist, curr);\r\n                }\r\n                needsCheckOtherSide = true;\r\n            }\r\n            if (isLeft) {\r\n                if (needsCheckOtherSide) {\r\n                    curr.right && (stack[idx++] = curr.right);\r\n                }\r\n                // Search in the left area\r\n                curr.left && (stack[idx++] = curr.left);\r\n            }\r\n            else {\r\n                if (needsCheckOtherSide) {\r\n                    curr.left && (stack[idx++] = curr.left);\r\n                }\r\n                // Search the right area\r\n                curr.right && (stack[idx++] = curr.right);\r\n            }\r\n        }\r\n\r\n        // Copy to output\r\n        for (var i = 0; i < found; i++) {\r\n            output[i] = nearestNList[i].node.data;\r\n        }\r\n        output.length = found;\r\n\r\n        return output;\r\n    };\r\n\r\n    return KDTree;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/data/KDTree.js\n// module id = 71\n// module chunks = 0","/**\r\n * Quick select n-th element in an array.\r\n *\r\n * Note: it will change the elements placement in array.\r\n *\r\n * @module echarts/data/quickSelect\r\n * @author Yi Shen(https://github.com/pissang)\r\n */\r\ndefine(function (require) {\r\n\r\n    function defaultCompareFunc(a, b) {\r\n        return a - b;\r\n    }\r\n\r\n    function swapElement(list, idx0, idx1) {\r\n        var tmp = list[idx0];\r\n        list[idx0] = list[idx1];\r\n        list[idx1] = tmp;\r\n    }\r\n\r\n    function select(list, left, right, nth, compareFunc) {\r\n        var pivotIdx = left;\r\n        while (right > left) {\r\n            var pivotIdx = Math.round((right + left) / 2);\r\n            var pivotValue = list[pivotIdx];\r\n            // Swap pivot to the end\r\n            swapElement(list, pivotIdx, right);\r\n            pivotIdx = left;\r\n            for (var i = left; i <= right - 1; i++) {\r\n                if (compareFunc(pivotValue, list[i]) >= 0) {\r\n                    swapElement(list, i, pivotIdx);\r\n                    pivotIdx++;\r\n                }\r\n            }\r\n            swapElement(list, right, pivotIdx);\r\n\r\n            if (pivotIdx === nth) {\r\n                return pivotIdx;\r\n            } else if (pivotIdx < nth) {\r\n                left = pivotIdx + 1;\r\n            } else {\r\n                right = pivotIdx - 1;\r\n            }\r\n        }\r\n        // Left == right\r\n        return left;\r\n    }\r\n\r\n    /**\r\n     * @alias module:echarts/data/quickSelect\r\n     * @param {Array} list\r\n     * @param {number} [left]\r\n     * @param {number} [right]\r\n     * @param {number} nth\r\n     * @param {Function} [compareFunc]\r\n     * @example\r\n     *     var quickSelect = require('echarts/data/quickSelect');\r\n     *     var list = [5, 2, 1, 4, 3]\r\n     *     quickSelect(list, 3);\r\n     *     quickSelect(list, 0, 3, 1, function (a, b) {return a - b});\r\n     *\r\n     * @return {number}\r\n     */\r\n    function quickSelect(list, left, right, nth, compareFunc) {\r\n        if (arguments.length <= 3) {\r\n            nth = left;\r\n            if (arguments.length == 2) {\r\n                compareFunc = defaultCompareFunc;\r\n            } else {\r\n                compareFunc = right;\r\n            }\r\n            left = 0;\r\n            right = list.length - 1;\r\n        }\r\n        return select(list, left, right, nth, compareFunc);\r\n    }\r\n    \r\n    return quickSelect;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/data/quickSelect.js\n// module id = 72\n// module chunks = 0","/**\r\n * echarts组件：工具箱\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var LineShape = require('zrenderjs/shape/Line');\r\n    var ImageShape = require('zrenderjs/shape/Image');\r\n    var RectangleShape = require('zrenderjs/shape/Rectangle');\r\n    var IconShape = require('../util/shape/Icon');\r\n    \r\n    var ecConfig = require('../config');\r\n    ecConfig.toolbox = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 6,                       // 二级层叠\r\n        show: false,\r\n        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：\r\n                                   // 'horizontal' ¦ 'vertical'\r\n        x: 'right',                // 水平安放位置，默认为全图右对齐，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        color: ['#1e90ff','#22bb22','#4b0082','#d2691e'],\r\n        disableColor: '#ddd',\r\n        effectiveColor: 'red',\r\n        backgroundColor: 'rgba(0,0,0,0)', // 工具箱背景颜色\r\n        borderColor: '#ccc',       // 工具箱边框颜色\r\n        borderWidth: 0,            // 工具箱边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 工具箱内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，\r\n                                   // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n        itemSize: 16,              // 工具箱图形宽度\r\n        showTitle: true,\r\n        // textStyle: {},\r\n        feature: {\r\n            mark: {\r\n                show: false,\r\n                title: {\r\n                    mark: '辅助线开关',\r\n                    markUndo: '删除辅助线',\r\n                    markClear: '清空辅助线'\r\n                },\r\n                lineStyle: {\r\n                    width: 1,\r\n                    color: '#1e90ff',\r\n                    type: 'dashed'\r\n                }\r\n            },\r\n            dataZoom: {\r\n                show: false,\r\n                title: {\r\n                    dataZoom: '区域缩放',\r\n                    dataZoomReset: '区域缩放后退'\r\n                }\r\n            },\r\n            dataView: {\r\n                show: false,\r\n                title: '数据视图',\r\n                readOnly: false,\r\n                lang: ['数据视图', '关闭', '刷新']\r\n            },\r\n            magicType: {\r\n                show: false,\r\n                title: {\r\n                    line: '折线图切换',\r\n                    bar: '柱形图切换',\r\n                    stack: '堆积',\r\n                    tiled: '平铺',\r\n                    force: '力导向布局图切换',\r\n                    chord: '和弦图切换',\r\n                    pie: '饼图切换',\r\n                    funnel: '漏斗图切换'\r\n                },\r\n                /*\r\n                option: {\r\n                    line: {},\r\n                    bar: {},\r\n                    stack: {},\r\n                    tiled: {},\r\n                    force: {},\r\n                    chord: {},\r\n                    pie: {},\r\n                    funnel: {}\r\n                },\r\n                */\r\n                type: [] // 'line', 'bar', 'stack', 'tiled', 'force', 'chord', 'pie', 'funnel'\r\n            },\r\n            restore: {\r\n                show: false,\r\n                title: '还原'\r\n            },\r\n            saveAsImage: {\r\n                show: false,\r\n                title: '保存为图片',\r\n                type: 'png',\r\n                lang: ['点击保存'] \r\n            }\r\n        }\r\n    };\r\n\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrConfig = require('zrenderjs/config');\r\n    var zrEvent = require('zrenderjs/tool/event');\r\n    \r\n    var _MAGICTYPE_STACK = 'stack';\r\n    var _MAGICTYPE_TILED = 'tiled';\r\n        \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {HtmlElement} dom 目标对象\r\n     * @param {ECharts} myChart 当前图表实例\r\n     */\r\n    function Toolbox(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.dom = myChart.dom;\r\n        \r\n        this._magicType = {};\r\n        this._magicMap = {};\r\n        this._isSilence = false;\r\n        \r\n        this._iconList;\r\n        this._iconShapeMap = {};\r\n        //this._itemGroupLocation;\r\n        this._featureTitle = {};             // 文字\r\n        this._featureIcon = {};              // 图标\r\n        this._featureColor = {};             // 颜色\r\n        this._featureOption = {};\r\n        this._enableColor = 'red';\r\n        this._disableColor = '#ccc';\r\n        // this._markStart;\r\n        // this._marking;\r\n        // this._markShape;\r\n        // this._zoomStart;\r\n        // this._zooming;\r\n        // this._zoomShape;\r\n        // this._zoomQueue;\r\n        // this._dataView;\r\n        this._markShapeList = [];\r\n        var self = this;\r\n        self._onMark = function (param) {\r\n            self.__onMark(param);\r\n        };\r\n        self._onMarkUndo = function (param) {\r\n            self.__onMarkUndo(param);\r\n        };\r\n        self._onMarkClear = function (param) {\r\n            self.__onMarkClear(param);\r\n        };\r\n        self._onDataZoom = function (param) {\r\n            self.__onDataZoom(param);\r\n        };\r\n        self._onDataZoomReset = function (param) {\r\n            self.__onDataZoomReset(param);\r\n        };\r\n        self._onDataView = function (param) {\r\n            self.__onDataView(param);\r\n        };\r\n        self._onRestore = function (param) {\r\n            self.__onRestore(param);\r\n        };\r\n        self._onSaveAsImage = function (param) {\r\n            self.__onSaveAsImage(param);\r\n        };\r\n        self._onMagicType = function (param) {\r\n            self.__onMagicType(param);\r\n        };\r\n        self._onCustomHandler = function (param) {\r\n            self.__onCustomHandler(param);\r\n        };\r\n        self._onmousemove = function (param) {\r\n            return self.__onmousemove(param);\r\n        };\r\n\r\n        self._onmousedown = function (param) {\r\n            return self.__onmousedown(param);\r\n        };\r\n        \r\n        self._onmouseup = function (param) {\r\n            return self.__onmouseup(param);\r\n        };\r\n        \r\n        self._onclick = function (param) {\r\n            return self.__onclick(param);\r\n        };\r\n    }\r\n\r\n    Toolbox.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TOOLBOX,\r\n        _buildShape: function () {\r\n            this._iconList = [];\r\n            var toolboxOption = this.option.toolbox;\r\n            this._enableColor = toolboxOption.effectiveColor;\r\n            this._disableColor = toolboxOption.disableColor;\r\n            var feature = toolboxOption.feature;\r\n            var iconName = [];\r\n            for (var key in feature){\r\n                if (feature[key].show) {\r\n                    switch (key) {\r\n                        case 'mark' :\r\n                            iconName.push({ key: key, name: 'mark' });\r\n                            iconName.push({ key: key, name: 'markUndo' });\r\n                            iconName.push({ key: key, name: 'markClear' });\r\n                            break;\r\n                        case 'magicType' :\r\n                            for (var i = 0, l = feature[key].type.length; i < l; i++) {\r\n                                feature[key].title[feature[key].type[i] + 'Chart']\r\n                                    = feature[key].title[feature[key].type[i]];\r\n                                if (feature[key].option) {\r\n                                    feature[key].option[feature[key].type[i] + 'Chart']\r\n                                        = feature[key].option[feature[key].type[i]];\r\n                                }\r\n                                iconName.push({ key: key, name: feature[key].type[i] + 'Chart' });\r\n                            }\r\n                            break;\r\n                        case 'dataZoom' :\r\n                            iconName.push({ key: key, name: 'dataZoom' });\r\n                            iconName.push({ key: key, name: 'dataZoomReset' });\r\n                            break;\r\n                        case 'saveAsImage' :\r\n                            if (this.canvasSupported) {\r\n                                iconName.push({ key: key, name: 'saveAsImage' });\r\n                            }\r\n                            break;\r\n                        default :\r\n                            iconName.push({ key: key, name: key });\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (iconName.length > 0) {\r\n                var name;\r\n                var key;\r\n                for (var i = 0, l = iconName.length; i < l; i++) {\r\n                    name = iconName[i].name;\r\n                    key = iconName[i].key;\r\n                    this._iconList.push(name);\r\n                    this._featureTitle[name] = feature[key].title[name] || feature[key].title;\r\n                    if (feature[key].icon) {\r\n                        this._featureIcon[name] = feature[key].icon[name] || feature[key].icon;\r\n                    }\r\n                    if (feature[key].color) {\r\n                        this._featureColor[name] = feature[key].color[name] || feature[key].color;\r\n                    }\r\n                    if (feature[key].option) {\r\n                        this._featureOption[name] = feature[key].option[name] \r\n                                                    || feature[key].option;\r\n                    }\r\n                }\r\n                this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n                this._buildBackground();\r\n                this._buildItem();\r\n\r\n                for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(this.shapeList[i]);\r\n                }\r\n                if (this._iconShapeMap['mark']) {\r\n                    this._iconDisable(this._iconShapeMap['markUndo']);\r\n                    this._iconDisable(this._iconShapeMap['markClear']);\r\n                }\r\n                if (this._iconShapeMap['dataZoomReset'] && this._zoomQueue.length === 0) {\r\n                    this._iconDisable(this._iconShapeMap['dataZoomReset']);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有图例元素\r\n         */\r\n        _buildItem: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var iconLength = this._iconList.length;\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemSize = toolboxOption.itemSize;\r\n            var itemGap = toolboxOption.itemGap;\r\n            var itemShape;\r\n\r\n            var color = toolboxOption.color instanceof Array\r\n                        ? toolboxOption.color : [toolboxOption.color];\r\n            \r\n            var textFont = this.getFont(toolboxOption.textStyle);\r\n            var textPosition;\r\n            var textAlign;\r\n            var textBaseline;\r\n            if (toolboxOption.orient === 'horizontal') {\r\n                textPosition = this._itemGroupLocation.y / this.zr.getHeight() < 0.5\r\n                               ? 'bottom' : 'top';\r\n                textAlign = this._itemGroupLocation.x / this.zr.getWidth() < 0.5\r\n                            ? 'left' : 'right';\r\n                textBaseline = this._itemGroupLocation.y / this.zr.getHeight() < 0.5\r\n                               ? 'top' : 'bottom';\r\n            }\r\n            else {\r\n                textPosition = this._itemGroupLocation.x / this.zr.getWidth() < 0.5\r\n                               ? 'right' : 'left';\r\n            }\r\n            \r\n           this._iconShapeMap = {};\r\n           var self = this;\r\n\r\n            for (var i = 0; i < iconLength; i++) {\r\n                // 图形\r\n                itemShape = {\r\n                    type: 'icon',\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        x: lastX,\r\n                        y: lastY,\r\n                        width: itemSize,\r\n                        height: itemSize,\r\n                        iconType: this._iconList[i],\r\n                        lineWidth: 1,\r\n                        strokeColor: this._featureColor[this._iconList[i]] \r\n                                     || color[i % color.length],\r\n                        brushType: 'stroke'\r\n                    },\r\n                    highlightStyle: {\r\n                        lineWidth: 1,\r\n                        text: toolboxOption.showTitle \r\n                              ? this._featureTitle[this._iconList[i]]\r\n                              : undefined,\r\n                        textFont: textFont,\r\n                        textPosition: textPosition,\r\n                        strokeColor: this._featureColor[this._iconList[i]] \r\n                                     || color[i % color.length]\r\n                    },\r\n                    hoverable: true,\r\n                    clickable: true\r\n                };\r\n                \r\n                if (this._featureIcon[this._iconList[i]]) {\r\n                    itemShape.style.image = this._featureIcon[this._iconList[i]].replace(\r\n                        new RegExp('^image:\\\\/\\\\/'), ''\r\n                    );\r\n                    itemShape.style.opacity = 0.8;\r\n                    itemShape.highlightStyle.opacity = 1;\r\n                    itemShape.type = 'image';\r\n                }\r\n                \r\n                if (toolboxOption.orient === 'horizontal') {\r\n                    // 修正左对齐第一个或右对齐最后一个\r\n                    if (i === 0 && textAlign === 'left') {\r\n                        itemShape.highlightStyle.textPosition = 'specific';\r\n                        itemShape.highlightStyle.textAlign = textAlign;\r\n                        itemShape.highlightStyle.textBaseline = textBaseline;\r\n                        itemShape.highlightStyle.textX = lastX;\r\n                        itemShape.highlightStyle.textY = textBaseline === 'top' \r\n                                                     ? lastY + itemSize + 10\r\n                                                     : lastY - 10;\r\n                    }\r\n                    if (i === iconLength - 1 && textAlign === 'right') {\r\n                        itemShape.highlightStyle.textPosition = 'specific';\r\n                        itemShape.highlightStyle.textAlign = textAlign;\r\n                        itemShape.highlightStyle.textBaseline = textBaseline;\r\n                        itemShape.highlightStyle.textX = lastX + itemSize;\r\n                        itemShape.highlightStyle.textY = textBaseline === 'top' \r\n                                                         ? lastY + itemSize + 10\r\n                                                         : lastY - 10;\r\n                    }\r\n                }\r\n                \r\n                switch(this._iconList[i]) {\r\n                    case 'mark':\r\n                        itemShape.onclick = self._onMark;\r\n                        break;\r\n                    case 'markUndo':\r\n                        itemShape.onclick = self._onMarkUndo;\r\n                        break;\r\n                    case 'markClear':\r\n                        itemShape.onclick = self._onMarkClear;\r\n                        break;\r\n                    case 'dataZoom':\r\n                        itemShape.onclick = self._onDataZoom;\r\n                        break;\r\n                    case 'dataZoomReset':\r\n                        itemShape.onclick = self._onDataZoomReset;\r\n                        break;\r\n                    case 'dataView' :\r\n                        if (!this._dataView) {\r\n                            var DataView = require('./dataView');\r\n                            this._dataView = new DataView(\r\n                                this.ecTheme, this.messageCenter, this.zr, this.option, this.myChart\r\n                            );\r\n                        }\r\n                        itemShape.onclick = self._onDataView;\r\n                        break;\r\n                    case 'restore':\r\n                        itemShape.onclick = self._onRestore;\r\n                        break;\r\n                    case 'saveAsImage':\r\n                        itemShape.onclick = self._onSaveAsImage;\r\n                        break;\r\n                    default:\r\n                        if (this._iconList[i].match('Chart')) {\r\n                            itemShape._name = this._iconList[i].replace('Chart', '');\r\n                            itemShape.onclick = self._onMagicType;\r\n                        }\r\n                        else {\r\n                            itemShape.onclick = self._onCustomHandler;\r\n                        }\r\n                        break;\r\n                }\r\n\r\n                if (itemShape.type === 'icon') {\r\n                    itemShape = new IconShape(itemShape);\r\n                }\r\n                else if (itemShape.type === 'image') {\r\n                    itemShape = new ImageShape(itemShape);\r\n                }\r\n                this.shapeList.push(itemShape);\r\n                this._iconShapeMap[this._iconList[i]] = itemShape;\r\n\r\n                if (toolboxOption.orient === 'horizontal') {\r\n                    lastX += itemSize + itemGap;\r\n                }\r\n                else {\r\n                    lastY += itemSize + itemGap;\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var padding = this.reformCssArray(this.option.toolbox.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: toolboxOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: toolboxOption.backgroundColor,\r\n                    strokeColor: toolboxOption.borderColor,\r\n                    lineWidth: toolboxOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算图例实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var toolboxOption = this.option.toolbox;\r\n            var padding = this.reformCssArray(this.option.toolbox.padding);\r\n            var iconLength = this._iconList.length;\r\n            var itemGap = toolboxOption.itemGap;\r\n            var itemSize = toolboxOption.itemSize;\r\n            var totalWidth = 0;\r\n            var totalHeight = 0;\r\n\r\n            if (toolboxOption.orient === 'horizontal') {\r\n                // 水平布局，计算总宽度，别忘减去最后一个的itemGap\r\n                totalWidth = (itemSize + itemGap) * iconLength - itemGap;\r\n                totalHeight = itemSize;\r\n            }\r\n            else {\r\n                // 垂直布局，计算总高度\r\n                totalHeight = (itemSize + itemGap) * iconLength - itemGap;\r\n                totalWidth = itemSize;\r\n            }\r\n\r\n            var x;\r\n            var zrWidth = this.zr.getWidth();\r\n            switch (toolboxOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + toolboxOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - toolboxOption.borderWidth;\r\n                    break;\r\n                default :\r\n                    x = toolboxOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    break;\r\n            }\r\n\r\n            var y;\r\n            var zrHeight = this.zr.getHeight();\r\n            switch (toolboxOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + toolboxOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[2]\r\n                        - toolboxOption.borderWidth;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = toolboxOption.y - 0;\r\n                    y = isNaN(y) ? 0 : y;\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight\r\n            };\r\n        },\r\n\r\n        __onmousemove: function (param) {\r\n            if (this._marking) {\r\n                this._markShape.style.xEnd = zrEvent.getX(param.event);\r\n                this._markShape.style.yEnd = zrEvent.getY(param.event);\r\n                this.zr.addHoverShape(this._markShape);\r\n            }\r\n            if (this._zooming) {\r\n                this._zoomShape.style.width = \r\n                    zrEvent.getX(param.event) - this._zoomShape.style.x;\r\n                this._zoomShape.style.height = \r\n                    zrEvent.getY(param.event) - this._zoomShape.style.y;\r\n                this.zr.addHoverShape(this._zoomShape);\r\n                this.dom.style.cursor = 'crosshair';\r\n                zrEvent.stop(param.event);\r\n            }\r\n            if (this._zoomStart\r\n                && (this.dom.style.cursor != 'pointer' && this.dom.style.cursor != 'move')\r\n            ) {\r\n                this.dom.style.cursor = 'crosshair';\r\n            }\r\n        },\r\n\r\n        __onmousedown: function (param) {\r\n            if (param.target) {\r\n                return;\r\n            }\r\n            this._zooming = true;\r\n            var x = zrEvent.getX(param.event);\r\n            var y = zrEvent.getY(param.event);\r\n            var zoomOption = this.option.dataZoom || {};\r\n            this._zoomShape = new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    x: x,\r\n                    y: y,\r\n                    width: 1,\r\n                    height: 1,\r\n                    brushType: 'both'\r\n                },\r\n                highlightStyle: {\r\n                    lineWidth: 2,\r\n                    color: zoomOption.fillerColor \r\n                           || ecConfig.dataZoom.fillerColor,\r\n                    strokeColor: zoomOption.handleColor \r\n                                  || ecConfig.dataZoom.handleColor,\r\n                    brushType: 'both'\r\n                }\r\n            });\r\n            this.zr.addHoverShape(this._zoomShape);\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onmouseup: function (/*param*/) {\r\n            if (!this._zoomShape \r\n                || Math.abs(this._zoomShape.style.width) < 10 \r\n                || Math.abs(this._zoomShape.style.height) < 10\r\n            ) {\r\n                this._zooming = false;\r\n                return true;\r\n            }\r\n            if (this._zooming && this.component.dataZoom) {\r\n                this._zooming = false;\r\n                \r\n                var zoom = this.component.dataZoom.rectZoom(this._zoomShape.style);\r\n                if (zoom) {\r\n                    this._zoomQueue.push({\r\n                        start: zoom.start,\r\n                        end: zoom.end,\r\n                        start2: zoom.start2,\r\n                        end2: zoom.end2\r\n                    });\r\n                    this._iconEnable(this._iconShapeMap['dataZoomReset']);\r\n                    this.zr.refreshNextFrame();\r\n                }\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onclick: function (param) {\r\n            if (param.target) {\r\n                return;\r\n            }\r\n            if (this._marking) {\r\n                this._marking = false;\r\n                this._markShapeList.push(this._markShape);\r\n                this._iconEnable(this._iconShapeMap['markUndo']);\r\n                this._iconEnable(this._iconShapeMap['markClear']);\r\n                this.zr.addShape(this._markShape);\r\n                this.zr.refreshNextFrame();\r\n            } \r\n            else if (this._markStart) {\r\n                this._marking = true;\r\n                var x = zrEvent.getX(param.event);\r\n                var y = zrEvent.getY(param.event);\r\n                this._markShape = new LineShape({\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        xStart: x,\r\n                        yStart: y,\r\n                        xEnd: x,\r\n                        yEnd: y,\r\n                        lineWidth: this.query(\r\n                                       this.option,\r\n                                       'toolbox.feature.mark.lineStyle.width'\r\n                                   ),\r\n                        strokeColor: this.query(\r\n                                         this.option,\r\n                                         'toolbox.feature.mark.lineStyle.color'\r\n                                     ),\r\n                        lineType: this.query(\r\n                                      this.option,\r\n                                      'toolbox.feature.mark.lineStyle.type'\r\n                                  )\r\n                    }\r\n                });\r\n                this.zr.addHoverShape(this._markShape);\r\n            }\r\n        },\r\n        \r\n        __onMark: function (param) {\r\n            var target = param.target;\r\n            if (this._marking || this._markStart) {\r\n                // 取消\r\n                this._resetMark();\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            else {\r\n                // 启用Mark\r\n                this._resetZoom();   // mark与dataZoom互斥\r\n                \r\n                this.zr.modShape(target.id, {style: {strokeColor: this._enableColor}});\r\n                this.zr.refreshNextFrame();\r\n                this._markStart = true;\r\n                var self = this;\r\n                setTimeout(function (){\r\n                    self.zr\r\n                    && self.zr.on(zrConfig.EVENT.CLICK, self._onclick)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n                }, 10);\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onMarkUndo: function () {\r\n            if (this._marking) {\r\n                this._marking = false;\r\n            } else {\r\n                var len = this._markShapeList.length;\r\n                if (len >= 1) {\r\n                    var target = this._markShapeList[len - 1];\r\n                    this.zr.delShape(target.id);\r\n                    this.zr.refreshNextFrame();\r\n                    this._markShapeList.pop();\r\n                    if (len === 1) {\r\n                        this._iconDisable(this._iconShapeMap['markUndo']);\r\n                        this._iconDisable(this._iconShapeMap['markClear']);\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        __onMarkClear: function () {\r\n            if (this._marking) {\r\n                this._marking = false;\r\n            }\r\n            var len = this._markShapeList.length;\r\n            if (len > 0) {\r\n                while(len--) {\r\n                    this.zr.delShape(this._markShapeList.pop().id);\r\n                }\r\n                this._iconDisable(this._iconShapeMap['markUndo']);\r\n                this._iconDisable(this._iconShapeMap['markClear']);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            return true;\r\n        },\r\n        \r\n        __onDataZoom: function (param) {\r\n            var target = param.target;\r\n            if (this._zooming || this._zoomStart) {\r\n                // 取消\r\n                this._resetZoom();\r\n                this.zr.refreshNextFrame();\r\n                this.dom.style.cursor = 'default';\r\n            }\r\n            else {\r\n                // 启用Zoom\r\n                this._resetMark();   // mark与dataZoom互斥\r\n                \r\n                this.zr.modShape(target.id, {style: {strokeColor: this._enableColor}});\r\n                this.zr.refreshNextFrame();\r\n                this._zoomStart = true;\r\n                var self = this;\r\n                setTimeout(function (){\r\n                    self.zr\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEDOWN, self._onmousedown)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEUP, self._onmouseup)\r\n                    && self.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n                }, 10);\r\n                \r\n                this.dom.style.cursor = 'crosshair';\r\n            }\r\n            return true; // 阻塞全局事件\r\n        },\r\n        \r\n        __onDataZoomReset: function () {\r\n            if (this._zooming) {\r\n                this._zooming = false;\r\n            }\r\n            this._zoomQueue.pop();\r\n            //console.log(this._zoomQueue)\r\n            if (this._zoomQueue.length > 0) {\r\n                this.component.dataZoom.absoluteZoom(\r\n                    this._zoomQueue[this._zoomQueue.length - 1]\r\n                );\r\n            }\r\n            else {\r\n                this.component.dataZoom.rectZoom();\r\n                this._iconDisable(this._iconShapeMap['dataZoomReset']);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            \r\n            return true;\r\n        },\r\n\r\n        _resetMark: function () {\r\n            this._marking = false;\r\n            if (this._markStart) {\r\n                this._markStart = false;\r\n                if (this._iconShapeMap['mark']) {\r\n                    // 还原图标为未生效状态\r\n                    this.zr.modShape(\r\n                        this._iconShapeMap['mark'].id,\r\n                        {\r\n                            style: {\r\n                                strokeColor: this._iconShapeMap['mark']\r\n                                                 .highlightStyle\r\n                                                 .strokeColor\r\n                            }\r\n                         }\r\n                    );\r\n                }\r\n                \r\n                this.zr.un(zrConfig.EVENT.CLICK, this._onclick);\r\n                this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            }\r\n        },\r\n        \r\n        _resetZoom: function () {\r\n            this._zooming = false;\r\n            if (this._zoomStart) {\r\n                this._zoomStart = false;\r\n                if (this._iconShapeMap['dataZoom']) {\r\n                    // 还原图标为未生效状态\r\n                    this.zr.modShape(\r\n                        this._iconShapeMap['dataZoom'].id,\r\n                        {\r\n                            style: {\r\n                                strokeColor: this._iconShapeMap['dataZoom']\r\n                                                 .highlightStyle\r\n                                                 .strokeColor\r\n                            }\r\n                         }\r\n                    );\r\n                }\r\n                \r\n                this.zr.un(zrConfig.EVENT.MOUSEDOWN, this._onmousedown);\r\n                this.zr.un(zrConfig.EVENT.MOUSEUP, this._onmouseup);\r\n                this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            }\r\n        },\r\n\r\n        _iconDisable: function (target) {\r\n            if (target.type != 'image') {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: false,\r\n                    clickable: false,\r\n                    style: {\r\n                        strokeColor: this._disableColor\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: false,\r\n                    clickable: false,\r\n                    style: {\r\n                        opacity: 0.3\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _iconEnable: function (target) {\r\n            if (target.type != 'image') {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: true,\r\n                    clickable: true,\r\n                    style: {\r\n                        strokeColor: target.highlightStyle.strokeColor\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.zr.modShape(target.id, {\r\n                    hoverable: true,\r\n                    clickable: true,\r\n                    style: {\r\n                        opacity: 0.8\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        __onDataView: function () {\r\n            this._dataView.show(this.option);\r\n            return true;\r\n        },\r\n\r\n        __onRestore: function (){\r\n            this._resetMark();\r\n            this._resetZoom();\r\n            this.messageCenter.dispatch(ecConfig.EVENT.RESTORE, null, null, this.myChart);\r\n            return true;\r\n        },\r\n        \r\n        __onSaveAsImage: function () {\r\n            var saveOption = this.option.toolbox.feature.saveAsImage;\r\n            var imgType = saveOption.type || 'png';\r\n            if (imgType != 'png' && imgType != 'jpeg') {\r\n                imgType = 'png';\r\n            }\r\n            \r\n            var image;\r\n            if (!this.myChart.isConnected()) {\r\n                image = this.zr.toDataURL(\r\n                    'image/' + imgType,\r\n                    this.option.backgroundColor \r\n                    && this.option.backgroundColor.replace(' ','') === 'rgba(0,0,0,0)'\r\n                        ? '#fff' : this.option.backgroundColor\r\n                );\r\n            }\r\n            else {\r\n                image = this.myChart.getConnectedDataURL(imgType);\r\n            }\r\n             \r\n            var downloadDiv = document.createElement('div');\r\n            downloadDiv.id = '__echarts_download_wrap__';\r\n            downloadDiv.style.cssText = 'position:fixed;'\r\n                + 'z-index:99999;'\r\n                + 'display:block;'\r\n                + 'top:0;left:0;'\r\n                + 'background-color:rgba(33,33,33,0.5);'\r\n                + 'text-align:center;'\r\n                + 'width:100%;'\r\n                + 'height:100%;'\r\n                + 'line-height:' \r\n                + document.documentElement.clientHeight + 'px;';\r\n                \r\n            var downloadLink = document.createElement('a');\r\n            //downloadLink.onclick = _saveImageForIE;\r\n            downloadLink.href = image;\r\n            downloadLink.setAttribute(\r\n                'download',\r\n                (saveOption.name \r\n                 ? saveOption.name \r\n                 : (this.option.title && (this.option.title.text || this.option.title.subtext))\r\n                   ? (this.option.title.text || this.option.title.subtext)\r\n                   : 'ECharts')\r\n                + '.' + imgType \r\n            );\r\n            downloadLink.innerHTML = '<img style=\"vertical-align:middle\" src=\"' + image \r\n                + '\" title=\"'\r\n                + ((!!window.ActiveXObject || 'ActiveXObject' in window)\r\n                  ? '右键->图片另存为'\r\n                  : (saveOption.lang ? saveOption.lang[0] : '点击保存'))\r\n                + '\"/>';\r\n            \r\n            downloadDiv.appendChild(downloadLink);\r\n            document.body.appendChild(downloadDiv);\r\n            downloadLink = null;\r\n            downloadDiv = null;\r\n            \r\n            setTimeout(function (){\r\n                var _d = document.getElementById('__echarts_download_wrap__');\r\n                if (_d) {\r\n                    _d.onclick = function () {\r\n                        var d = document.getElementById(\r\n                            '__echarts_download_wrap__'\r\n                        );\r\n                        d.onclick = null;\r\n                        d.innerHTML = '';\r\n                        document.body.removeChild(d);\r\n                        d = null;\r\n                    };\r\n                    _d = null;\r\n                }\r\n            }, 500);\r\n            \r\n            /*\r\n            function _saveImageForIE() {\r\n                window.win = window.open(image);\r\n                win.document.execCommand(\"SaveAs\");\r\n                win.close()\r\n            }\r\n            */\r\n            return;\r\n        },\r\n\r\n        __onMagicType: function (param) {\r\n            this._resetMark();\r\n            var itemName = param.target._name;\r\n            if (!this._magicType[itemName]) {\r\n                // 启用\r\n                this._magicType[itemName] = true;\r\n                // 折柱互斥\r\n                if (itemName === ecConfig.CHART_TYPE_LINE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_BAR] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_BAR) {\r\n                    this._magicType[ecConfig.CHART_TYPE_LINE] = false;\r\n                }\r\n                // 饼图漏斗互斥\r\n                if (itemName === ecConfig.CHART_TYPE_PIE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_FUNNEL] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_FUNNEL) {\r\n                    this._magicType[ecConfig.CHART_TYPE_PIE] = false;\r\n                }\r\n                // 力导和弦互斥\r\n                if (itemName === ecConfig.CHART_TYPE_FORCE) {\r\n                    this._magicType[ecConfig.CHART_TYPE_CHORD] = false;\r\n                }\r\n                else if (itemName === ecConfig.CHART_TYPE_CHORD) {\r\n                    this._magicType[ecConfig.CHART_TYPE_FORCE] = false;\r\n                }\r\n                // 堆积平铺互斥\r\n                if (itemName === _MAGICTYPE_STACK) {\r\n                    this._magicType[_MAGICTYPE_TILED] = false;\r\n                }\r\n                else if (itemName === _MAGICTYPE_TILED) {\r\n                    this._magicType[_MAGICTYPE_STACK] = false;\r\n                }\r\n                this.messageCenter.dispatch(\r\n                    ecConfig.EVENT.MAGIC_TYPE_CHANGED,\r\n                    param.event,\r\n                    { magicType: this._magicType },\r\n                    this.myChart\r\n                );\r\n            }\r\n            \r\n            return true;\r\n        },\r\n        \r\n        setMagicType: function (magicType) {\r\n            this._resetMark();\r\n            this._magicType = magicType;\r\n            \r\n            !this._isSilence && this.messageCenter.dispatch(\r\n                ecConfig.EVENT.MAGIC_TYPE_CHANGED,\r\n                null,\r\n                { magicType: this._magicType },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        // 用户自定义扩展toolbox方法\r\n        __onCustomHandler: function (param) {\r\n            var target = param.target.style.iconType;\r\n            var featureHandler = this.option.toolbox.feature[target].onclick;\r\n            if (typeof featureHandler === 'function') {\r\n                featureHandler.call(this, this.option);\r\n            }\r\n        },\r\n\r\n        // 重置备份还原状态等\r\n        reset: function (newOption, isRestore) {\r\n            isRestore && this.clear();\r\n            \r\n            if (this.query(newOption, 'toolbox.show')\r\n                && this.query(newOption, 'toolbox.feature.magicType.show')\r\n            ) {\r\n                var magicType = newOption.toolbox.feature.magicType.type;\r\n                var len = magicType.length;\r\n                this._magicMap = {};     // 标识可控类型\r\n                while (len--) {\r\n                    this._magicMap[magicType[len]] = true;\r\n                }\r\n\r\n                len = newOption.series.length;\r\n                var oriType;        // 备份还原可控类型\r\n                var axis;\r\n                while (len--) {\r\n                    oriType = newOption.series[len].type;\r\n                    if (this._magicMap[oriType]) {\r\n                        axis = newOption.xAxis instanceof Array\r\n                               ? newOption.xAxis[newOption.series[len].xAxisIndex || 0]\r\n                               : newOption.xAxis;\r\n                        if (axis && (axis.type || 'category') === 'category') {\r\n                            axis.__boundaryGap = axis.boundaryGap != null\r\n                                                 ? axis.boundaryGap : true;\r\n                        }\r\n                        axis = newOption.yAxis instanceof Array\r\n                               ? newOption.yAxis[newOption.series[len].yAxisIndex || 0]\r\n                               : newOption.yAxis;\r\n                        if (axis && axis.type === 'category') {\r\n                            axis.__boundaryGap = axis.boundaryGap != null\r\n                                                 ? axis.boundaryGap : true;\r\n                        }\r\n                        newOption.series[len].__type = oriType;\r\n                        // 避免不同类型图表类型的样式污染\r\n                        newOption.series[len].__itemStyle = zrUtil.clone(\r\n                            newOption.series[len].itemStyle || {}\r\n                        );\r\n                    }\r\n                    \r\n                    if (this._magicMap[_MAGICTYPE_STACK] || this._magicMap[_MAGICTYPE_TILED]) {\r\n                        newOption.series[len].__stack = newOption.series[len].stack;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            this._magicType = isRestore ? {} : (this._magicType || {});\r\n            for (var itemName in this._magicType) {\r\n                if (this._magicType[itemName]) {\r\n                    this.option = newOption;\r\n                    this.getMagicOption();\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            // 框选缩放\r\n            var zoomOption = newOption.dataZoom;\r\n            if (zoomOption && zoomOption.show) {\r\n                var start = zoomOption.start != null\r\n                            && zoomOption.start >= 0\r\n                            && zoomOption.start <= 100\r\n                            ? zoomOption.start : 0;\r\n                var end = zoomOption.end != null\r\n                          && zoomOption.end >= 0\r\n                          && zoomOption.end <= 100\r\n                          ? zoomOption.end : 100;\r\n                if (start > end) {\r\n                    // 大小颠倒自动翻转\r\n                    start = start + end;\r\n                    end = start - end;\r\n                    start = start - end;\r\n                }\r\n                this._zoomQueue = [{\r\n                    start: start,\r\n                    end: end,\r\n                    start2: 0,\r\n                    end2: 100\r\n                }];\r\n            }\r\n            else {\r\n                this._zoomQueue = [];\r\n            }\r\n        },\r\n        \r\n        getMagicOption: function (){\r\n            var axis;\r\n            var chartType;\r\n            if (this._magicType[ecConfig.CHART_TYPE_LINE] \r\n                || this._magicType[ecConfig.CHART_TYPE_BAR]\r\n            ) {\r\n                // 图表类型有折柱切换\r\n                var boundaryGap = this._magicType[ecConfig.CHART_TYPE_LINE] ? false : true;\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    chartType = this.option.series[i].type;\r\n                    if (chartType == ecConfig.CHART_TYPE_LINE\r\n                        || chartType == ecConfig.CHART_TYPE_BAR\r\n                    ) {\r\n                        axis = this.option.xAxis instanceof Array\r\n                               ? this.option.xAxis[this.option.series[i].xAxisIndex || 0]\r\n                               : this.option.xAxis;\r\n                        if (axis && (axis.type || 'category') === 'category') {\r\n                            axis.boundaryGap = boundaryGap ? true : axis.__boundaryGap;\r\n                        }\r\n                        axis = this.option.yAxis instanceof Array\r\n                               ? this.option.yAxis[this.option.series[i].yAxisIndex || 0]\r\n                               : this.option.yAxis;\r\n                        if (axis && axis.type === 'category') {\r\n                            axis.boundaryGap = boundaryGap ? true : axis.__boundaryGap;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                this._defaultMagic(ecConfig.CHART_TYPE_LINE, ecConfig.CHART_TYPE_BAR);\r\n            }\r\n            this._defaultMagic(ecConfig.CHART_TYPE_CHORD, ecConfig.CHART_TYPE_FORCE);\r\n            this._defaultMagic(ecConfig.CHART_TYPE_PIE, ecConfig.CHART_TYPE_FUNNEL);\r\n            \r\n            if (this._magicType[_MAGICTYPE_STACK] || this._magicType[_MAGICTYPE_TILED]) {\r\n                // 有堆积平铺切换\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    if (this._magicType[_MAGICTYPE_STACK]) {\r\n                        // 启用堆积\r\n                        this.option.series[i].stack = '_ECHARTS_STACK_KENER_2014_';\r\n                        chartType = _MAGICTYPE_STACK;\r\n                    }\r\n                    else if (this._magicType[_MAGICTYPE_TILED]) {\r\n                        // 启用平铺\r\n                        this.option.series[i].stack = null;\r\n                        chartType = _MAGICTYPE_TILED;\r\n                    }\r\n                    if (this._featureOption[chartType + 'Chart']) {\r\n                        zrUtil.merge(\r\n                            this.option.series[i],\r\n                            this._featureOption[chartType + 'Chart'] || {},\r\n                            true\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            return this.option;\r\n        },\r\n        \r\n        _defaultMagic : function(cType1, cType2) {\r\n            if (this._magicType[cType1] || this._magicType[cType2]) {\r\n                for (var i = 0, l = this.option.series.length; i < l; i++) {\r\n                    var chartType = this.option.series[i].type;\r\n                    if (chartType == cType1 || chartType == cType2) {\r\n                        this.option.series[i].type = this._magicType[cType1] ? cType1 : cType2;\r\n                        // 避免不同类型图表类型的样式污染\r\n                        this.option.series[i].itemStyle = zrUtil.clone(\r\n                            this.option.series[i].__itemStyle\r\n                        );\r\n                        chartType = this.option.series[i].type;\r\n                        if (this._featureOption[chartType + 'Chart']) {\r\n                            zrUtil.merge(\r\n                                this.option.series[i],\r\n                                this._featureOption[chartType + 'Chart'] || {},\r\n                                true\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        silence: function (s) {\r\n            this._isSilence = s;\r\n        },\r\n        \r\n        resize: function () {\r\n            this._resetMark();\r\n            this.clear();\r\n            if (this.option && this.option.toolbox && this.option.toolbox.show) {\r\n               this._buildShape();\r\n            }\r\n            if (this._dataView) {\r\n                this._dataView.resize();\r\n            }\r\n        },\r\n\r\n        hideDataView: function () {\r\n            if (this._dataView) {\r\n                this._dataView.hide();\r\n            }\r\n        },\r\n        \r\n        clear: function(notMark) {\r\n            if (this.zr) {\r\n                this.zr.delShape(this.shapeList);\r\n                this.shapeList = [];\r\n                \r\n                if (!notMark) {\r\n                    this.zr.delShape(this._markShapeList);\r\n                    this._markShapeList = [];\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 释放后实例不可用\r\n         */\r\n        onbeforDispose: function () {\r\n            if (this._dataView) {\r\n                this._dataView.dispose();\r\n                this._dataView = null;\r\n            }\r\n            this._markShapeList = null;\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this._resetMark();\r\n                this._resetZoom();\r\n                \r\n                newOption.toolbox = this.reformOption(newOption.toolbox);\r\n                this.option = newOption;\r\n                \r\n                this.clear(true);\r\n    \r\n                if (newOption.toolbox.show) {\r\n                    this._buildShape();\r\n                }\r\n    \r\n                this.hideDataView();\r\n            }\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Toolbox, Base);\r\n    \r\n    require('../component').define('toolbox', Toolbox);\r\n    \r\n    return Toolbox;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/toolbox.js\n// module id = 73\n// module chunks = 0","/**\r\n * echarts组件：提示框\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n\r\n    var ecConfig = require('../config');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 提示框参数\r\n     * @param {HtmlElement} dom 目标对象\r\n     */\r\n    function DataView(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.dom = myChart.dom;\r\n        \r\n        // dataview dom & css\r\n        this._tDom = document.createElement('div');\r\n        this._textArea = document.createElement('textArea');\r\n        this._buttonRefresh = document.createElement('button');\r\n        // 高级浏览器默认type为submit\r\n        // 如果图表出现在form表单时，点击button后会提交表单\r\n        // 设置为button，防止点击button后提交表单\r\n        this._buttonRefresh.setAttribute('type', 'button');\r\n        this._buttonClose = document.createElement('button');\r\n        this._buttonClose.setAttribute('type', 'button');\r\n        this._hasShow = false;\r\n\r\n        // 缓存一些高宽数据\r\n        this._zrHeight = zr.getHeight();\r\n        this._zrWidth = zr.getWidth();\r\n    \r\n        this._tDom.className = 'echarts-dataview';\r\n        this.hide();\r\n        this.dom.firstChild.appendChild(this._tDom);\r\n\r\n        if (window.addEventListener) {\r\n            this._tDom.addEventListener('click', this._stop);\r\n            this._tDom.addEventListener('mousewheel', this._stop);\r\n            this._tDom.addEventListener('mousemove', this._stop);\r\n            this._tDom.addEventListener('mousedown', this._stop);\r\n            this._tDom.addEventListener('mouseup', this._stop);\r\n\r\n            // mobile支持\r\n            this._tDom.addEventListener('touchstart', this._stop);\r\n            this._tDom.addEventListener('touchmove', this._stop);\r\n            this._tDom.addEventListener('touchend', this._stop);\r\n        }\r\n        else {\r\n            this._tDom.attachEvent('onclick', this._stop);\r\n            this._tDom.attachEvent('onmousewheel', this._stop);\r\n            this._tDom.attachEvent('onmousemove', this._stop);\r\n            this._tDom.attachEvent('onmousedown', this._stop);\r\n            this._tDom.attachEvent('onmouseup', this._stop);\r\n        }\r\n    }\r\n    \r\n    DataView.prototype = {\r\n        type : ecConfig.COMPONENT_TYPE_DATAVIEW,\r\n        _lang : ['Data View', 'close', 'refresh'],\r\n        // 通用样式\r\n        _gCssText : 'position:absolute;'\r\n                    + 'display:block;'\r\n                    + 'overflow:hidden;'\r\n                    + 'transition:height 0.8s,background-color 1s;'\r\n                    + '-moz-transition:height 0.8s,background-color 1s;'\r\n                    + '-webkit-transition:height 0.8s,background-color 1s;'\r\n                    + '-o-transition:height 0.8s,background-color 1s;'\r\n                    + 'z-index:1;'\r\n                    + 'left:0;'\r\n                    + 'top:0;',\r\n        hide : function () {\r\n            this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                           + 'height:' + 0 + 'px;'\r\n                           + 'background-color:#f0ffff;';\r\n            this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n            // 这是个很恶心的事情\r\n            /*\r\n            this.dom.onselectstart = function () {\r\n                return false;\r\n            };\r\n            */\r\n        },\r\n\r\n        show : function (newOption) {\r\n            this._hasShow = true;\r\n            var lang = this.query(this.option, 'toolbox.feature.dataView.lang')\r\n                       || this._lang;\r\n\r\n            this.option = newOption;\r\n\r\n            this._tDom.innerHTML = '<p style=\"padding:8px 0;margin:0 0 10px 0;'\r\n                              + 'border-bottom:1px solid #eee\">'\r\n                              + (lang[0] || this._lang[0])\r\n                              + '</p>';\r\n\r\n            var customContent = this.query(\r\n                this.option, 'toolbox.feature.dataView.optionToContent'\r\n            );\r\n            if (typeof customContent != 'function') {\r\n                this._textArea.value = this._optionToContent();\r\n            }\r\n            else {\r\n                // innerHTML the custom optionToContent;\r\n                this._textArea = document.createElement('div');\r\n                this._textArea.innerHTML = customContent(this.option);\r\n            }\r\n\r\n            this._textArea.style.cssText =\r\n                'display:block;margin:0 0 8px 0;padding:4px 6px;overflow:auto;'\r\n                + 'width:100%;'\r\n                + 'height:' + (this._zrHeight - 100) + 'px;';\r\n\r\n            this._tDom.appendChild(this._textArea);\r\n\r\n            this._buttonClose.style.cssText = 'float:right;padding:1px 6px;';\r\n            this._buttonClose.innerHTML = lang[1] || this._lang[1];\r\n            var self = this;\r\n            this._buttonClose.onclick = function (){\r\n                self.hide();\r\n            };\r\n            this._tDom.appendChild(this._buttonClose);\r\n\r\n            if (this.query(this.option, 'toolbox.feature.dataView.readOnly')\r\n                === false\r\n            ) {\r\n                this._buttonRefresh.style.cssText =\r\n                    'float:right;margin-right:10px;padding:1px 6px;';\r\n                this._buttonRefresh.innerHTML = lang[2] || this._lang[2];\r\n                this._buttonRefresh.onclick = function (){\r\n                    self._save();\r\n                };\r\n                this._textArea.readOnly = false;\r\n                this._textArea.style.cursor = 'default';\r\n            }\r\n            else {\r\n                this._buttonRefresh.style.cssText =\r\n                    'display:none';\r\n                this._textArea.readOnly = true;\r\n                this._textArea.style.cursor = 'text';\r\n            }\r\n            this._tDom.appendChild(this._buttonRefresh);\r\n\r\n            this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                           + 'height:' + this._zrHeight + 'px;'\r\n                           + 'background-color:#fff;';\r\n            this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n            // 这是个很恶心的事情\r\n            /*\r\n            this.dom.onselectstart = function () {\r\n                return true;\r\n            };\r\n            */\r\n        },\r\n\r\n        _optionToContent : function () {\r\n            var i;\r\n            var j;\r\n            var k;\r\n            var len;\r\n            var data;\r\n            var valueList;\r\n            var axisList = [];\r\n            var content = '';\r\n            if (this.option.xAxis) {\r\n                if (this.option.xAxis instanceof Array) {\r\n                    axisList = this.option.xAxis;\r\n                } else {\r\n                    axisList = [this.option.xAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    // 横纵默认为类目\r\n                    if ((axisList[i].type || 'category') == 'category') {\r\n                        valueList = [];\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            valueList.push(this.getDataFromOption(axisList[i].data[j]));\r\n                        }\r\n                        content += valueList.join(', ') + '\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.option.yAxis) {\r\n                if (this.option.yAxis instanceof Array) {\r\n                    axisList = this.option.yAxis;\r\n                } else {\r\n                    axisList = [this.option.yAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    if (axisList[i].type  == 'category') {\r\n                        valueList = [];\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            valueList.push(this.getDataFromOption(axisList[i].data[j]));\r\n                        }\r\n                        content += valueList.join(', ') + '\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n\r\n            var series = this.option.series;\r\n            var itemName;\r\n            for (i = 0, len = series.length; i < len; i++) {\r\n                valueList = [];\r\n                for (j = 0, k = series[i].data.length; j < k; j++) {\r\n                    data = series[i].data[j];\r\n                    if (series[i].type == ecConfig.CHART_TYPE_PIE\r\n                        || series[i].type == ecConfig.CHART_TYPE_MAP\r\n                    ) {\r\n                        itemName = (data.name || '-') + ':';\r\n                    }\r\n                    else {\r\n                        itemName = '';\r\n                    }\r\n                    \r\n                    if (series[i].type == ecConfig.CHART_TYPE_SCATTER) {\r\n                        data = this.getDataFromOption(data).join(', ');\r\n                    }\r\n                    valueList.push(itemName + this.getDataFromOption(data));\r\n                }\r\n                content += (series[i].name || '-') + ' : \\n';\r\n                content += valueList.join(\r\n                    series[i].type == ecConfig.CHART_TYPE_SCATTER ? '\\n': ', '\r\n                );\r\n                content += '\\n\\n';\r\n            }\r\n\r\n            return content;\r\n        },\r\n\r\n        _save : function () {\r\n            var customContent = this.query(\r\n                this.option, 'toolbox.feature.dataView.contentToOption'\r\n            );\r\n            if (typeof customContent != 'function') {\r\n                var text = this._textArea.value.split('\\n');\r\n                var content = [];\r\n                for (var i = 0, l = text.length; i < l; i++) {\r\n                    text[i] = this._trim(text[i]);\r\n                    if (text[i] !== '') {\r\n                        content.push(text[i]);\r\n                    }\r\n                }\r\n                this._contentToOption(content);\r\n            }\r\n            else {\r\n                // return the textArea dom for custom contentToOption\r\n                customContent(this._textArea, this.option);\r\n            }\r\n\r\n            this.hide();\r\n            \r\n            var self = this;\r\n            setTimeout(\r\n                function (){\r\n                    self.messageCenter && self.messageCenter.dispatch(\r\n                        ecConfig.EVENT.DATA_VIEW_CHANGED,\r\n                        null,\r\n                        {option : self.option},\r\n                        self.myChart\r\n                    );\r\n                },\r\n                // 有动画，所以高级浏览器时间更长点\r\n                self.canvasSupported ? 800 : 100\r\n            );\r\n        },\r\n\r\n        _contentToOption : function (content) {\r\n            var i;\r\n            var j;\r\n            var k;\r\n            var len;\r\n            var data;\r\n            var axisList = [];\r\n\r\n            var contentIdx = 0;\r\n            var contentValueList;\r\n            var value;\r\n\r\n            if (this.option.xAxis) {\r\n                if (this.option.xAxis instanceof Array) {\r\n                    axisList = this.option.xAxis;\r\n                } else {\r\n                    axisList = [this.option.xAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    // 横纵默认为类目\r\n                    if ((axisList[i].type || 'category') == 'category'\r\n                    ) {\r\n                        contentValueList = content[contentIdx].split(',');\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            value = this._trim(contentValueList[j] || '');\r\n                            data = axisList[i].data[j];\r\n                            if (typeof axisList[i].data[j].value != 'undefined'\r\n                            ) {\r\n                                axisList[i].data[j].value = value;\r\n                            }\r\n                            else {\r\n                                axisList[i].data[j] = value;\r\n                            }\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.option.yAxis) {\r\n                if (this.option.yAxis instanceof Array) {\r\n                    axisList = this.option.yAxis;\r\n                } else {\r\n                    axisList = [this.option.yAxis];\r\n                }\r\n                for (i = 0, len = axisList.length; i < len; i++) {\r\n                    if (axisList[i].type  == 'category') {\r\n                        contentValueList = content[contentIdx].split(',');\r\n                        for (j = 0, k = axisList[i].data.length; j < k; j++) {\r\n                            value = this._trim(contentValueList[j] || '');\r\n                            data = axisList[i].data[j];\r\n                            if (typeof axisList[i].data[j].value != 'undefined'\r\n                            ) {\r\n                                axisList[i].data[j].value = value;\r\n                            }\r\n                            else {\r\n                                axisList[i].data[j] = value;\r\n                            }\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            var series = this.option.series;\r\n            for (i = 0, len = series.length; i < len; i++) {\r\n                contentIdx++;\r\n                if (series[i].type == ecConfig.CHART_TYPE_SCATTER) {\r\n                    for (var j = 0, k = series[i].data.length; j < k; j++) {\r\n                        contentValueList = content[contentIdx];\r\n                        value = contentValueList.replace(' ','').split(',');\r\n                        if (typeof series[i].data[j].value != 'undefined'\r\n                        ) {\r\n                            series[i].data[j].value = value;\r\n                        }\r\n                        else {\r\n                            series[i].data[j] = value;\r\n                        }\r\n                        contentIdx++;\r\n                    }\r\n                }\r\n                else {\r\n                    contentValueList = content[contentIdx].split(',');\r\n                    for (var j = 0, k = series[i].data.length; j < k; j++) {\r\n                        value = (contentValueList[j] || '').replace(/.*:/,'');\r\n                        value = this._trim(value);\r\n                        value = (value != '-' && value !== '')\r\n                                ? (value - 0)\r\n                                : '-';\r\n                        if (typeof series[i].data[j].value != 'undefined'\r\n                        ) {\r\n                            series[i].data[j].value = value;\r\n                        }\r\n                        else {\r\n                            series[i].data[j] = value;\r\n                        }\r\n                    }\r\n                    contentIdx++;\r\n                }\r\n            }\r\n        },\r\n\r\n        _trim : function (str){\r\n            var trimer = new RegExp(\r\n                '(^[\\\\s\\\\t\\\\xa0\\\\u3000]+)|([\\\\u3000\\\\xa0\\\\s\\\\t]+\\x24)', 'g'\r\n            );\r\n            return str.replace(trimer, '');\r\n        },\r\n\r\n        // 阻塞zrender事件\r\n        _stop : function (e){\r\n            e = e || window.event;\r\n            if (e.stopPropagation) {\r\n                e.stopPropagation();\r\n            }\r\n            else {\r\n                e.cancelBubble = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * zrender事件响应：窗口大小改变\r\n         */\r\n        resize : function () {\r\n            this._zrHeight = this.zr.getHeight();\r\n            this._zrWidth = this.zr.getWidth();\r\n            if (this._tDom.offsetHeight > 10) {\r\n                this._sizeCssText = 'width:' + this._zrWidth + 'px;'\r\n                               + 'height:' + this._zrHeight + 'px;'\r\n                               + 'background-color:#fff;';\r\n                this._tDom.style.cssText = this._gCssText + this._sizeCssText;\r\n                this._textArea.style.cssText = 'display:block;margin:0 0 8px 0;'\r\n                                        + 'padding:4px 6px;overflow:auto;'\r\n                                        + 'width:100%;'\r\n                                        + 'height:' + (this._zrHeight - 100) + 'px;';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用，重载基类方法\r\n         */\r\n        dispose : function () {\r\n            if (window.removeEventListener) {\r\n                this._tDom.removeEventListener('click', this._stop);\r\n                this._tDom.removeEventListener('mousewheel', this._stop);\r\n                this._tDom.removeEventListener('mousemove', this._stop);\r\n                this._tDom.removeEventListener('mousedown', this._stop);\r\n                this._tDom.removeEventListener('mouseup', this._stop);\r\n\r\n                // mobile支持\r\n                this._tDom.removeEventListener('touchstart', this._stop);\r\n                this._tDom.removeEventListener('touchmove', this._stop);\r\n                this._tDom.removeEventListener('touchend', this._stop);\r\n            }\r\n            else {\r\n                this._tDom.detachEvent('onclick', this._stop);\r\n                this._tDom.detachEvent('onmousewheel', this._stop);\r\n                this._tDom.detachEvent('onmousemove', this._stop);\r\n                this._tDom.detachEvent('onmousedown', this._stop);\r\n                this._tDom.detachEvent('onmouseup', this._stop);\r\n            }\r\n\r\n            this._buttonRefresh.onclick = null;\r\n            this._buttonClose.onclick = null;\r\n\r\n            if (this._hasShow) {\r\n                this._tDom.removeChild(this._textArea);\r\n                this._tDom.removeChild(this._buttonRefresh);\r\n                this._tDom.removeChild(this._buttonClose);\r\n            }\r\n\r\n            this._textArea = null;\r\n            this._buttonRefresh = null;\r\n            this._buttonClose = null;\r\n\r\n            this.dom.firstChild.removeChild(this._tDom);\r\n            this._tDom = null;\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(DataView, Base);\r\n    \r\n    require('../component').define('dataView', DataView);\r\n    \r\n    return DataView;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/dataView.js\n// module id = 74\n// module chunks = 0","/**\r\n * echarts组件：图表标题\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var TextShape = require('zrenderjs/shape/Text');\r\n    var RectangleShape = require('zrenderjs/shape/Rectangle');\r\n    \r\n    var ecConfig = require('../config');\r\n    // 图表标题\r\n    ecConfig.title = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 6,                       // 二级层叠\r\n        show: true,\r\n        text: '',\r\n        // link: null,             // 超链接跳转\r\n        // target: null,           // 仅支持self | blank\r\n        subtext: '',\r\n        // sublink: null,          // 超链接跳转\r\n        // subtarget: null,        // 仅支持self | blank\r\n        x: 'left',                 // 水平安放位置，默认为左对齐，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        //textAlign: null          // 水平对齐方式，默认根据x设置自动调整\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: '#ccc',       // 标题边框颜色\r\n        borderWidth: 0,            // 标题边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 标题内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 5,                // 主副标题纵向间隔，单位px，默认为10，\r\n        textStyle: {\r\n            fontSize: 18,\r\n            fontWeight: 'bolder',\r\n            color: '#333'          // 主标题文字颜色\r\n        },\r\n        subtextStyle: {\r\n            color: '#aaa'          // 副标题文字颜色\r\n        }\r\n    };\r\n    \r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrArea = require('zrenderjs/tool/area');\r\n    var zrColor = require('zrenderjs/tool/color');\r\n    \r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     */\r\n    function Title(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        this.refresh(option);\r\n    }\r\n    \r\n    Title.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TITLE,\r\n        _buildShape: function () {\r\n            if (!this.titleOption.show) {\r\n                return;\r\n            }\r\n            // 标题元素组的位置参数，通过计算所得x, y, width, height\r\n            this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n            this._buildBackground();\r\n            this._buildItem();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有标题元素\r\n         */\r\n        _buildItem: function () {\r\n            var text = this.titleOption.text;\r\n            var link = this.titleOption.link;\r\n            var target = this.titleOption.target;\r\n            var subtext = this.titleOption.subtext;\r\n            var sublink = this.titleOption.sublink;\r\n            var subtarget = this.titleOption.subtarget;\r\n            var font = this.getFont(this.titleOption.textStyle);\r\n            var subfont = this.getFont(this.titleOption.subtextStyle);\r\n            \r\n            var x = this._itemGroupLocation.x;\r\n            var y = this._itemGroupLocation.y;\r\n            var width = this._itemGroupLocation.width;\r\n            var height = this._itemGroupLocation.height;\r\n            \r\n            var textShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    y: y,\r\n                    color: this.titleOption.textStyle.color,\r\n                    text: text,\r\n                    textFont: font,\r\n                    textBaseline: 'top'\r\n                },\r\n                highlightStyle: {\r\n                    color: zrColor.lift(this.titleOption.textStyle.color, 1),\r\n                    brushType: 'fill'\r\n                },\r\n                hoverable: false\r\n            };\r\n            if (link) {\r\n                textShape.hoverable = true;\r\n                textShape.clickable = true;\r\n                textShape.onclick = function (){\r\n                    if (!target || target != 'self') {\r\n                        window.open(link);\r\n                    }\r\n                    else {\r\n                        window.location = link;\r\n                    }\r\n                };\r\n            }\r\n            \r\n            var subtextShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    y: y + height,\r\n                    color: this.titleOption.subtextStyle.color,\r\n                    text: subtext,\r\n                    textFont: subfont,\r\n                    textBaseline: 'bottom'\r\n                },\r\n                highlightStyle: {\r\n                    color: zrColor.lift(this.titleOption.subtextStyle.color, 1),\r\n                    brushType: 'fill'\r\n                },\r\n                hoverable: false\r\n            };\r\n            if (sublink) {\r\n                subtextShape.hoverable = true;\r\n                subtextShape.clickable = true;\r\n                subtextShape.onclick = function (){\r\n                    if (!subtarget || subtarget != 'self') {\r\n                        window.open(sublink);\r\n                    }\r\n                    else {\r\n                        window.location = sublink;\r\n                    }\r\n                };\r\n            }\r\n\r\n            switch (this.titleOption.x) {\r\n                case 'center' :\r\n                    textShape.style.x = subtextShape.style.x = x + width / 2;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'center';\r\n                    break;\r\n                case 'left' :\r\n                    textShape.style.x = subtextShape.style.x = x;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'left';\r\n                    break;\r\n                case 'right' :\r\n                    textShape.style.x = subtextShape.style.x = x + width;\r\n                    textShape.style.textAlign = subtextShape.style.textAlign \r\n                                              = 'right';\r\n                    break;\r\n                default :\r\n                    x = this.titleOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    textShape.style.x = subtextShape.style.x = x;\r\n                    break;\r\n            }\r\n            \r\n            if (this.titleOption.textAlign) {\r\n                textShape.style.textAlign = subtextShape.style.textAlign \r\n                                          = this.titleOption.textAlign;\r\n            }\r\n\r\n            this.shapeList.push(new TextShape(textShape));\r\n            subtext !== '' && this.shapeList.push(new TextShape(subtextShape));\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var padding = this.reformCssArray(this.titleOption.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: this.titleOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: this.titleOption.backgroundColor,\r\n                    strokeColor: this.titleOption.borderColor,\r\n                    lineWidth: this.titleOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算标题实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var padding = this.reformCssArray(this.titleOption.padding);\r\n            var text = this.titleOption.text;\r\n            var subtext = this.titleOption.subtext;\r\n            var font = this.getFont(this.titleOption.textStyle);\r\n            var subfont = this.getFont(this.titleOption.subtextStyle);\r\n            \r\n            var totalWidth = Math.max(\r\n                    zrArea.getTextWidth(text, font),\r\n                    zrArea.getTextWidth(subtext, subfont)\r\n                );\r\n            var totalHeight = zrArea.getTextHeight(text, font)\r\n                              + (subtext === ''\r\n                                 ? 0\r\n                                 : (this.titleOption.itemGap\r\n                                    + zrArea.getTextHeight(subtext, subfont))\r\n                                );\r\n\r\n            var x;\r\n            var zrWidth = this.zr.getWidth();\r\n            switch (this.titleOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + this.titleOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - this.titleOption.borderWidth;\r\n                    break;\r\n                default :\r\n                    x = this.titleOption.x - 0;\r\n                    x = isNaN(x) ? 0 : x;\r\n                    break;\r\n            }\r\n\r\n            var y;\r\n            var zrHeight = this.zr.getHeight();\r\n            switch (this.titleOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + this.titleOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[2]\r\n                        - this.titleOption.borderWidth;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = this.titleOption.y - 0;\r\n                    y = isNaN(y) ? 0 : y;\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight\r\n            };\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n\r\n                this.option.title = this.reformOption(this.option.title);\r\n                this.titleOption = this.option.title;\r\n                this.titleOption.textStyle = this.getTextStyle(\r\n                    this.titleOption.textStyle\r\n                );\r\n                this.titleOption.subtextStyle = this.getTextStyle(\r\n                    this.titleOption.subtextStyle\r\n                );\r\n            }\r\n            \r\n            this.clear();\r\n            this._buildShape();\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Title, Base);\r\n    \r\n    require('../component').define('title', Title);\r\n    \r\n    return Title;\r\n});\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/title.js\n// module id = 75\n// module chunks = 0","/**\r\n * echarts组件：提示框\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var CrossShape = require('../util/shape/Cross');\r\n    var LineShape = require('zrenderjs/shape/Line');\r\n    var RectangleShape = require('zrenderjs/shape/Rectangle');\r\n    var rectangleInstance = new RectangleShape({});\r\n    \r\n    var ecConfig = require('../config');\r\n    // 提示框\r\n    ecConfig.tooltip = {\r\n        zlevel: 1,                  // 一级层叠，频繁变化的tooltip指示器在pc上独立一层\r\n        z: 8,                       // 二级层叠\r\n        show: true,\r\n        showContent: true,         // tooltip主体内容\r\n        trigger: 'item',           // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\r\n        // position: null          // 位置 {Array} | {Function}\r\n        // formatter: null         // 内容格式器：{string}（Template） ¦ {Function}\r\n        islandFormatter: '{a} <br/>{b} : {c}',  // 数据孤岛内容格式器\r\n        showDelay: 20,             // 显示延迟，添加显示延迟可以避免频繁切换，单位ms\r\n        hideDelay: 100,            // 隐藏延迟，单位ms\r\n        transitionDuration: 0.4,   // 动画变换时间，单位s\r\n        enterable: false,\r\n        backgroundColor: 'rgba(0,0,0,0.7)',     // 提示背景颜色，默认为透明度为0.7的黑色\r\n        borderColor: '#333',       // 提示边框颜色\r\n        borderRadius: 4,           // 提示边框圆角，单位px，默认为4\r\n        borderWidth: 0,            // 提示边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 提示内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        axisPointer: {             // 坐标轴指示器，坐标轴触发有效\r\n            type: 'line',          // 默认为直线，可选为：'line' | 'shadow' | 'cross'\r\n            lineStyle: {           // 直线指示器样式设置\r\n                color: '#48b',\r\n                width: 2,\r\n                type: 'solid'\r\n            },\r\n            crossStyle: {\r\n                color: '#1e90ff',\r\n                width: 1,\r\n                type: 'dashed'\r\n            },\r\n            shadowStyle: {                      // 阴影指示器样式设置\r\n                color: 'rgba(150,150,150,0.3)', // 阴影颜色\r\n                width: 'auto',                  // 阴影大小\r\n                type: 'default'\r\n            }\r\n        },\r\n        textStyle: {\r\n            color: '#fff'\r\n        }\r\n    };\r\n\r\n    var ecData = require('../util/ecData');\r\n    var zrConfig = require('zrenderjs/config');\r\n    var zrEvent = require('zrenderjs/tool/event');\r\n    var zrArea = require('zrenderjs/tool/area');\r\n    var zrColor = require('zrenderjs/tool/color');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrShapeBase = require('zrenderjs/shape/Base');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 提示框参数\r\n     * @param {HtmlElement} dom 目标对象\r\n     * @param {ECharts} myChart 当前图表实例\r\n     */\r\n    function Tooltip(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        this.dom = myChart.dom;\r\n        \r\n        var self = this;\r\n        self._onmousemove = function (param) {\r\n            return self.__onmousemove(param);\r\n        };\r\n        self._onglobalout = function (param) {\r\n            return self.__onglobalout(param);\r\n        };\r\n        \r\n        this.zr.on(zrConfig.EVENT.MOUSEMOVE, self._onmousemove);\r\n        this.zr.on(zrConfig.EVENT.GLOBALOUT, self._onglobalout);\r\n\r\n        self._hide = function (param) {\r\n            return self.__hide(param);\r\n        };\r\n        self._tryShow = function(param) {\r\n            return self.__tryShow(param);\r\n        };\r\n        self._refixed = function(param) {\r\n            return self.__refixed(param);\r\n        };\r\n        \r\n        self._setContent = function(ticket, res) {\r\n            return self.__setContent(ticket, res);\r\n        };\r\n        \r\n        this._tDom = this._tDom || document.createElement('div');\r\n        // 避免拖拽时页面选中的尴尬\r\n        this._tDom.onselectstart = function() {\r\n            return false;\r\n        };\r\n        this._tDom.onmouseover = function() {\r\n            self._mousein = true;\r\n        };\r\n        this._tDom.onmouseout = function() {\r\n            self._mousein = false;\r\n        };\r\n        this._tDom.className = 'echarts-tooltip';\r\n        this._tDom.style.position = 'absolute';  // 不是多余的，别删！\r\n        this.hasAppend = false;\r\n        \r\n        this._axisLineShape && this.zr.delShape(this._axisLineShape.id);\r\n        this._axisLineShape = new LineShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: this.getZBase(),\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisLineShape);\r\n        this.zr.addShape(this._axisLineShape);\r\n        \r\n        this._axisShadowShape && this.zr.delShape(this._axisShadowShape.id);\r\n        this._axisShadowShape = new LineShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: 1,                      // grid上，chart下\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisShadowShape);\r\n        this.zr.addShape(this._axisShadowShape);\r\n        \r\n        this._axisCrossShape && this.zr.delShape(this._axisCrossShape.id);\r\n        this._axisCrossShape = new CrossShape({\r\n            zlevel: this.getZlevelBase(),\r\n            z: this.getZBase(),\r\n            invisible: true,\r\n            hoverable: false\r\n        });\r\n        this.shapeList.push(this._axisCrossShape);\r\n        this.zr.addShape(this._axisCrossShape);\r\n        \r\n        this.showing = false;\r\n        this.refresh(option);\r\n    }\r\n    \r\n    Tooltip.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TOOLTIP,\r\n        // 通用样式\r\n        _gCssText: 'position:absolute;display:block;border-style:solid;white-space:nowrap;',\r\n        /**\r\n         * 根据配置设置dom样式\r\n         */\r\n        _style: function (opt) {\r\n            if (!opt) {\r\n                return '';\r\n            }\r\n            var cssText = [];\r\n            if (opt.transitionDuration) {\r\n                var transitionText = 'left ' + opt.transitionDuration + 's,'\r\n                                    + 'top ' + opt.transitionDuration + 's';\r\n                cssText.push(\r\n                    'transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-moz-transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-webkit-transition:' + transitionText\r\n                );\r\n                cssText.push(\r\n                    '-o-transition:' + transitionText\r\n                );\r\n            }\r\n\r\n            if (opt.backgroundColor) {\r\n                // for sb ie~\r\n                cssText.push(\r\n                    'background-Color:' + zrColor.toHex(\r\n                        opt.backgroundColor\r\n                    )\r\n                );\r\n                cssText.push('filter:alpha(opacity=70)');\r\n                cssText.push('background-Color:' + opt.backgroundColor);\r\n            }\r\n\r\n            if (opt.borderWidth != null) {\r\n                cssText.push('border-width:' + opt.borderWidth + 'px');\r\n            }\r\n\r\n            if (opt.borderColor != null) {\r\n                cssText.push('border-color:' + opt.borderColor);\r\n            }\r\n\r\n            if (opt.borderRadius != null) {\r\n                cssText.push(\r\n                    'border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-moz-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-webkit-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n                cssText.push(\r\n                    '-o-border-radius:' + opt.borderRadius + 'px'\r\n                );\r\n            }\r\n\r\n            var textStyle = opt.textStyle;\r\n            if (textStyle) {\r\n                textStyle.color && cssText.push('color:' + textStyle.color);\r\n                textStyle.decoration && cssText.push(\r\n                    'text-decoration:' + textStyle.decoration\r\n                );\r\n                textStyle.align && cssText.push(\r\n                    'text-align:' + textStyle.align\r\n                );\r\n                textStyle.fontFamily && cssText.push(\r\n                    'font-family:' + textStyle.fontFamily\r\n                );\r\n                textStyle.fontSize && cssText.push(\r\n                    'font-size:' + textStyle.fontSize + 'px'\r\n                );\r\n                textStyle.fontSize && cssText.push(\r\n                    'line-height:' + Math.round(textStyle.fontSize*3/2) + 'px'\r\n                );\r\n                textStyle.fontStyle && cssText.push(\r\n                    'font-style:' + textStyle.fontStyle\r\n                );\r\n                textStyle.fontWeight && cssText.push(\r\n                    'font-weight:' + textStyle.fontWeight\r\n                );\r\n            }\r\n\r\n\r\n            var padding = opt.padding;\r\n            if (padding != null) {\r\n                padding = this.reformCssArray(padding);\r\n                cssText.push(\r\n                    'padding:' + padding[0] + 'px '\r\n                               + padding[1] + 'px '\r\n                               + padding[2] + 'px '\r\n                               + padding[3] + 'px'\r\n                );\r\n            }\r\n\r\n            cssText = cssText.join(';') + ';';\r\n\r\n            return cssText;\r\n        },\r\n        \r\n        __hide: function () {\r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n            this._lastItemTriggerId = -1;\r\n            if (this._tDom) {\r\n                this._tDom.style.display = 'none';\r\n            }\r\n            var needRefresh = false;\r\n            if (!this._axisLineShape.invisible) {\r\n                this._axisLineShape.invisible = true;\r\n                this.zr.modShape(this._axisLineShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (!this._axisShadowShape.invisible) {\r\n                this._axisShadowShape.invisible = true;\r\n                this.zr.modShape(this._axisShadowShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (!this._axisCrossShape.invisible) {\r\n                this._axisCrossShape.invisible = true;\r\n                this.zr.modShape(this._axisCrossShape.id);\r\n                needRefresh = true;\r\n            }\r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n                this._lastTipShape = false;\r\n                this.shapeList.length = 2;\r\n            }\r\n            needRefresh && this.zr.refreshNextFrame();\r\n            this.showing = false;\r\n        },\r\n        \r\n        _show: function (position, x, y, specialCssText) {\r\n            var domHeight = this._tDom.offsetHeight;\r\n            var domWidth = this._tDom.offsetWidth;\r\n            if (position) {\r\n                if (typeof position === 'function') {\r\n                    position = position([x, y]);\r\n                }\r\n                if (position instanceof Array) {\r\n                    x = position[0];\r\n                    y = position[1];\r\n                }\r\n            }\r\n            if (x + domWidth > this._zrWidth) {\r\n                // 太靠右\r\n                //x = this._zrWidth - domWidth;\r\n                x -= (domWidth + 40);\r\n            }\r\n            if (y + domHeight > this._zrHeight) {\r\n                // 太靠下\r\n                //y = this._zrHeight - domHeight;\r\n                y -= (domHeight - 20);\r\n            }\r\n            if (y < 20) {\r\n                y = 0;\r\n            }\r\n            this._tDom.style.cssText = this._gCssText\r\n                                  + this._defaultCssText\r\n                                  + (specialCssText ? specialCssText : '')\r\n                                  + 'left:' + x + 'px;top:' + y + 'px;';\r\n            \r\n            if (domHeight < 10 || domWidth < 10) {\r\n                // this._zrWidth - x < 100 || this._zrHeight - y < 100\r\n                setTimeout(this._refixed, 20);\r\n            }\r\n            this.showing = true;\r\n        },\r\n        \r\n        __refixed: function () {\r\n            if (this._tDom) {\r\n                var cssText = '';\r\n                var domHeight = this._tDom.offsetHeight;\r\n                var domWidth = this._tDom.offsetWidth;\r\n                if (this._tDom.offsetLeft + domWidth > this._zrWidth) {\r\n                    cssText += 'left:' + (this._zrWidth - domWidth - 20) + 'px;';\r\n                }\r\n                if (this._tDom.offsetTop + domHeight > this._zrHeight) {\r\n                    cssText += 'top:' + (this._zrHeight - domHeight - 10) + 'px;';\r\n                }\r\n                if (cssText !== '') {\r\n                    this._tDom.style.cssText += cssText;\r\n                }\r\n            }\r\n        },\r\n        \r\n        __tryShow: function () {\r\n            var needShow;\r\n            var trigger;\r\n            if (!this._curTarget) {\r\n                // 坐标轴事件\r\n                this._findPolarTrigger() || this._findAxisTrigger();\r\n            }\r\n            else {\r\n                // 数据项事件\r\n                if (this._curTarget._type === 'island' && this.option.tooltip.show) {\r\n                    this._showItemTrigger();\r\n                    return;\r\n                }\r\n                var serie = ecData.get(this._curTarget, 'series');\r\n                var data = ecData.get(this._curTarget, 'data');\r\n                needShow = this.deepQuery(\r\n                    [data, serie, this.option],\r\n                    'tooltip.show'\r\n                );\r\n                if (serie == null || data == null || !needShow) {\r\n                    // 不响应tooltip的数据对象延时隐藏\r\n                    clearTimeout(this._hidingTicket);\r\n                    clearTimeout(this._showingTicket);\r\n                    this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                }\r\n                else {\r\n                    trigger = this.deepQuery(\r\n                        [data, serie, this.option],\r\n                        'tooltip.trigger'\r\n                    );\r\n                    \r\n                    trigger === 'axis'\r\n                                ? this._showAxisTrigger(\r\n                                      serie.xAxisIndex, serie.yAxisIndex,\r\n                                      ecData.get(this._curTarget, 'dataIndex')\r\n                                  )\r\n                                : this._showItemTrigger();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 直角系 \r\n         */\r\n        _findAxisTrigger: function () {\r\n            if (!this.component.xAxis || !this.component.yAxis) {\r\n                this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                return;\r\n            }\r\n            var series = this.option.series;\r\n            var xAxisIndex;\r\n            var yAxisIndex;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                // 找到第一个axis触发tooltip的系列\r\n                if (this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis') {\r\n                    xAxisIndex = series[i].xAxisIndex || 0;\r\n                    yAxisIndex = series[i].yAxisIndex || 0;\r\n                    if (this.component.xAxis.getAxis(xAxisIndex)\r\n                        && this.component.xAxis.getAxis(xAxisIndex).type\r\n                           === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                    ) {\r\n                        // 横轴为类目轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex,\r\n                            this._getNearestDataIndex(\r\n                                'x', this.component.xAxis.getAxis(xAxisIndex)\r\n                            )\r\n                        );\r\n                        return;\r\n                    } \r\n                    else if (this.component.yAxis.getAxis(yAxisIndex)\r\n                             && this.component.yAxis.getAxis(yAxisIndex).type\r\n                                === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                    ) {\r\n                        // 纵轴为类目轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex,\r\n                            this._getNearestDataIndex(\r\n                                'y', this.component.yAxis.getAxis(yAxisIndex)\r\n                            )\r\n                        );\r\n                        return;\r\n                    }\r\n                    else {\r\n                        // 双数值轴\r\n                        this._showAxisTrigger(xAxisIndex, yAxisIndex, -1);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.option.tooltip.axisPointer.type === 'cross') {\r\n                this._showAxisTrigger(-1, -1, -1);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 极坐标 \r\n         */\r\n        _findPolarTrigger: function () {\r\n            if (!this.component.polar) {\r\n                return false;\r\n            }\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            var polarIndex = this.component.polar.getNearestIndex([x, y]);\r\n            var valueIndex;\r\n            if (polarIndex) {\r\n                valueIndex = polarIndex.valueIndex;\r\n                polarIndex = polarIndex.polarIndex;\r\n            }\r\n            else {\r\n                polarIndex = -1;\r\n            }\r\n            \r\n            if (polarIndex != -1) {\r\n                return this._showPolarTrigger(polarIndex, valueIndex);\r\n            }\r\n            \r\n            return false;\r\n        },\r\n        \r\n        /**\r\n         * 根据坐标轴事件带的属性获取最近的axisDataIndex\r\n         */\r\n        _getNearestDataIndex: function (direction, categoryAxis) {\r\n            var dataIndex = -1;\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            if (direction === 'x') {\r\n                // 横轴为类目轴\r\n                var left;\r\n                var right;\r\n                var xEnd = this.component.grid.getXend();\r\n                var curCoord = categoryAxis.getCoordByIndex(dataIndex);\r\n                while (curCoord < xEnd) {\r\n                    right = curCoord;\r\n                    if (curCoord <= x) {\r\n                        left = curCoord;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                    curCoord = categoryAxis.getCoordByIndex(++dataIndex);\r\n                }\r\n                if (dataIndex <= 0) {\r\n                    dataIndex = 0;\r\n                }\r\n                else if (x - left <= right - x) {\r\n                    dataIndex -= 1;\r\n                }\r\n                else {\r\n                    // 离右边近，看是否为最后一个\r\n                    if (categoryAxis.getNameByIndex(dataIndex) == null) {\r\n                        dataIndex -= 1;\r\n                    }\r\n                }\r\n                return dataIndex;\r\n            }\r\n            else {\r\n                // 纵轴为类目轴\r\n                var top;\r\n                var bottom;\r\n                var yStart = this.component.grid.getY();\r\n                var curCoord = categoryAxis.getCoordByIndex(dataIndex);\r\n                while (curCoord > yStart) {\r\n                    top = curCoord;\r\n                    if (curCoord >= y) {\r\n                        bottom = curCoord;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                    curCoord = categoryAxis.getCoordByIndex(++dataIndex);\r\n                }\r\n\r\n                if (dataIndex <= 0) {\r\n                    dataIndex = 0;\r\n                }\r\n                else if (y - top >= bottom - y) {\r\n                    dataIndex -= 1;\r\n                }\r\n                else {\r\n                    // 离上方边近，看是否为最后一个\r\n                    if (categoryAxis.getNameByIndex(dataIndex) == null) {\r\n                        dataIndex -= 1;\r\n                    }\r\n                }\r\n                return dataIndex;\r\n            }\r\n            return -1;\r\n        },\r\n\r\n        /**\r\n         * 直角系 \r\n         */\r\n        _showAxisTrigger: function (xAxisIndex, yAxisIndex, dataIndex) {\r\n            !this._event.connectTrigger && this.messageCenter.dispatch(\r\n                ecConfig.EVENT.TOOLTIP_IN_GRID,\r\n                this._event,\r\n                null,\r\n                this.myChart\r\n            );\r\n            if (this.component.xAxis == null\r\n                || this.component.yAxis == null\r\n                || xAxisIndex == null\r\n                || yAxisIndex == null\r\n                // || dataIndex < 0\r\n            ) {\r\n                // 不响应tooltip的数据对象延时隐藏\r\n                clearTimeout(this._hidingTicket);\r\n                clearTimeout(this._showingTicket);\r\n                this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                return;\r\n            }\r\n            var series = this.option.series;\r\n            var seriesArray = [];\r\n            var seriesIndex = [];\r\n            var categoryAxis;\r\n\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this.option.tooltip.trigger === 'axis') {\r\n                if (!this.option.tooltip.show) {\r\n                    return;\r\n                }\r\n                formatter = this.option.tooltip.formatter;\r\n                position = this.option.tooltip.position;\r\n            }\r\n\r\n            var axisLayout = xAxisIndex != -1\r\n                             && this.component.xAxis.getAxis(xAxisIndex).type\r\n                                === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                             ? 'xAxis'      // 横轴为类目轴，找到所有用这条横轴并且axis触发的系列数据\r\n                             : yAxisIndex != -1\r\n                               && this.component.yAxis.getAxis(yAxisIndex).type\r\n                                  === ecConfig.COMPONENT_TYPE_AXIS_CATEGORY\r\n                               ? 'yAxis'    // 纵轴为类目轴，找到所有用这条纵轴并且axis触发的系列数据\r\n                               : false;\r\n            var x;\r\n            var y;\r\n            if (axisLayout) {\r\n                var axisIndex = axisLayout == 'xAxis' ? xAxisIndex : yAxisIndex;\r\n                categoryAxis = this.component[axisLayout].getAxis(axisIndex);\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (!this._isSelected(series[i].name)) {\r\n                        continue;\r\n                    }\r\n                    if (series[i][axisLayout + 'Index'] === axisIndex\r\n                        && this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis'\r\n                    ) {\r\n                        showContent = this.query(series[i], 'tooltip.showContent') \r\n                                      || showContent;\r\n                        formatter = this.query(series[i], 'tooltip.formatter') \r\n                                    || formatter;\r\n                        position = this.query(series[i], 'tooltip.position') \r\n                                   || position;\r\n                        \r\n                        specialCssText += this._style(this.query(series[i], 'tooltip'));\r\n                        if (series[i].stack != null && axisLayout == 'xAxis') {\r\n                            seriesArray.unshift(series[i]);\r\n                            seriesIndex.unshift(i);\r\n                        }\r\n                        else {\r\n                            seriesArray.push(series[i]);\r\n                            seriesIndex.push(i);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                // 寻找高亮元素\r\n                this.messageCenter.dispatch(\r\n                    ecConfig.EVENT.TOOLTIP_HOVER,\r\n                    this._event,\r\n                    {\r\n                        seriesIndex: seriesIndex,\r\n                        dataIndex: dataIndex\r\n                    },\r\n                    this.myChart\r\n                );\r\n                \r\n                var rect;\r\n                if (axisLayout == 'xAxis') {\r\n                    x = this.subPixelOptimize(\r\n                        categoryAxis.getCoordByIndex(dataIndex),\r\n                        this._axisLineWidth\r\n                    );\r\n                    y = zrEvent.getY(this._event);\r\n                    rect = [\r\n                        x, this.component.grid.getY(), \r\n                        x, this.component.grid.getYend()\r\n                    ];\r\n                }\r\n                else {\r\n                    x = zrEvent.getX(this._event);\r\n                    y = this.subPixelOptimize(\r\n                        categoryAxis.getCoordByIndex(dataIndex),\r\n                        this._axisLineWidth\r\n                    );\r\n                    rect = [\r\n                        this.component.grid.getX(), y, \r\n                        this.component.grid.getXend(), y\r\n                    ];\r\n                }\r\n                this._styleAxisPointer(\r\n                    seriesArray,\r\n                    rect[0], rect[1], rect[2], rect[3],\r\n                    categoryAxis.getGap(), x, y\r\n                );\r\n            }\r\n            else {\r\n                // 双数值轴\r\n                x = zrEvent.getX(this._event);\r\n                y = zrEvent.getY(this._event);\r\n                this._styleAxisPointer(\r\n                    series,\r\n                    this.component.grid.getX(), y, \r\n                    this.component.grid.getXend(), y,\r\n                    0, x, y\r\n                );\r\n                if (dataIndex >= 0) {\r\n                    this._showItemTrigger(true);\r\n                }\r\n                else {\r\n                    clearTimeout(this._hidingTicket);\r\n                    clearTimeout(this._showingTicket);\r\n                    this._tDom.style.display = 'none';\r\n                }\r\n            }\r\n\r\n            if (seriesArray.length > 0) {\r\n                // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n                this._lastItemTriggerId = -1;\r\n                // 相同dataIndex seriesIndex时不再触发内容更新\r\n                if (this._lastDataIndex != dataIndex || this._lastSeriesIndex != seriesIndex[0]) {\r\n                    this._lastDataIndex = dataIndex;\r\n                    this._lastSeriesIndex = seriesIndex[0];\r\n                    var data;\r\n                    var value;\r\n                    if (typeof formatter === 'function') {\r\n                        var params = [];\r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            value = this.getDataFromOption(data, '-');\r\n                            \r\n                            params.push({\r\n                                seriesIndex: seriesIndex[i],\r\n                                seriesName: seriesArray[i].name || '',\r\n                                series: seriesArray[i],\r\n                                dataIndex: dataIndex,\r\n                                data: data,\r\n                                name: categoryAxis.getNameByIndex(dataIndex),\r\n                                value: value,\r\n                                // 向下兼容\r\n                                0: seriesArray[i].name || '',\r\n                                1: categoryAxis.getNameByIndex(dataIndex),\r\n                                2: value,\r\n                                3: data\r\n                            });\r\n                        }\r\n                        this._curTicket = 'axis:' + dataIndex;\r\n                        this._tDom.innerHTML = formatter.call(\r\n                            this.myChart, params, this._curTicket, this._setContent\r\n                        );\r\n                    }\r\n                    else if (typeof formatter === 'string') {\r\n                        this._curTicket = NaN;\r\n                        formatter = formatter.replace('{a}','{a0}')\r\n                                             .replace('{b}','{b0}')\r\n                                             .replace('{c}','{c0}');\r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            formatter = formatter.replace(\r\n                                '{a' + i + '}',\r\n                                this._encodeHTML(seriesArray[i].name || '')\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{b' + i + '}',\r\n                                this._encodeHTML(categoryAxis.getNameByIndex(dataIndex))\r\n                            );\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            data = this.getDataFromOption(data, '-');\r\n                            formatter = formatter.replace(\r\n                                '{c' + i + '}',\r\n                                data instanceof Array \r\n                                ? data : this.numAddCommas(data)\r\n                            );\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                    else {\r\n                        this._curTicket = NaN;\r\n                        formatter = this._encodeHTML(\r\n                            categoryAxis.getNameByIndex(dataIndex)\r\n                        );\r\n    \r\n                        for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                            formatter += '<br/>' \r\n                                         + this._encodeHTML(seriesArray[i].name || '')\r\n                                         + ' : ';\r\n                            data = seriesArray[i].data[dataIndex];\r\n                            data = this.getDataFromOption(data, '-');\r\n                            formatter += data instanceof Array \r\n                                         ? data : this.numAddCommas(data);\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                }\r\n\r\n                // don't modify, just false, showContent == undefined == true\r\n                if (showContent === false || !this.option.tooltip.showContent) {\r\n                    // 只用tooltip的行为，不显示主体\r\n                    return;\r\n                }\r\n                \r\n                if (!this.hasAppend) {\r\n                    this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                    this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                    this.dom.firstChild.appendChild(this._tDom);\r\n                    this.hasAppend = true;\r\n                }\r\n                this._show(position, x + 10, y + 10, specialCssText);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 极坐标 \r\n         */\r\n        _showPolarTrigger: function (polarIndex, dataIndex) {\r\n            if (this.component.polar == null\r\n                || polarIndex == null\r\n                || dataIndex == null\r\n                || dataIndex < 0\r\n            ) {\r\n                return false;\r\n            }\r\n            var series = this.option.series;\r\n            var seriesArray = [];\r\n            var seriesIndex = [];\r\n\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this.option.tooltip.trigger === 'axis') {\r\n                if (!this.option.tooltip.show) {\r\n                    return false;\r\n                }\r\n                formatter = this.option.tooltip.formatter;\r\n                position = this.option.tooltip.position;\r\n            }\r\n            var indicatorName = this.option.polar[polarIndex].indicator[dataIndex].text;\r\n\r\n            // 找到所有用这个极坐标并且axis触发的系列数据\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (!this._isSelected(series[i].name)) {\r\n                    continue;\r\n                }\r\n                if (series[i].polarIndex === polarIndex\r\n                    && this.deepQuery([series[i], this.option], 'tooltip.trigger') === 'axis'\r\n                ) {\r\n                    showContent = this.query(series[i], 'tooltip.showContent') \r\n                                  || showContent;\r\n                    formatter = this.query(series[i], 'tooltip.formatter') \r\n                                || formatter;\r\n                    position = this.query(series[i], 'tooltip.position') \r\n                               || position;\r\n                    specialCssText += this._style(this.query(series[i], 'tooltip'));\r\n                    seriesArray.push(series[i]);\r\n                    seriesIndex.push(i);\r\n                }\r\n            }\r\n            if (seriesArray.length > 0) {\r\n                var polarData;\r\n                var data;\r\n                var value;\r\n                var params = [];\r\n\r\n                for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                    polarData = seriesArray[i].data;\r\n                    for (var j = 0, k = polarData.length; j < k; j++) {\r\n                        data = polarData[j];\r\n                        if (!this._isSelected(data.name)) {\r\n                            continue;\r\n                        }\r\n                        data = data != null\r\n                               ? data\r\n                               : {name:'', value: {dataIndex:'-'}};\r\n                        value = this.getDataFromOption(data.value[dataIndex]);\r\n                        params.push({\r\n                            seriesIndex: seriesIndex[i],\r\n                            seriesName: seriesArray[i].name || '',\r\n                            series: seriesArray[i],\r\n                            dataIndex: dataIndex,\r\n                            data: data,\r\n                            name: data.name,\r\n                            indicator: indicatorName,\r\n                            value: value,\r\n                            // 向下兼容\r\n                            0: seriesArray[i].name || '',\r\n                            1: data.name,\r\n                            2: value,\r\n                            3: indicatorName\r\n                        });\r\n                    }\r\n                }\r\n                if (params.length <= 0) {\r\n                    return;\r\n                }\r\n                // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n                this._lastItemTriggerId = -1;\r\n\r\n                // 相同dataIndex seriesIndex时不再触发内容更新\r\n                if (this._lastDataIndex != dataIndex || this._lastSeriesIndex != seriesIndex[0]) {\r\n                    this._lastDataIndex = dataIndex;\r\n                    this._lastSeriesIndex = seriesIndex[0];\r\n                    if (typeof formatter === 'function') {\r\n                        this._curTicket = 'axis:' + dataIndex;\r\n                        this._tDom.innerHTML = formatter.call(\r\n                            this.myChart, params, this._curTicket, this._setContent\r\n                        );\r\n                    }\r\n                    else if (typeof formatter === 'string') {\r\n                        formatter = formatter.replace('{a}','{a0}')\r\n                                             .replace('{b}','{b0}')\r\n                                             .replace('{c}','{c0}')\r\n                                             .replace('{d}','{d0}');\r\n                        for (var i = 0, l = params.length; i < l; i++) {\r\n                            formatter = formatter.replace(\r\n                                '{a' + i + '}',\r\n                                this._encodeHTML(params[i].seriesName)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{b' + i + '}',\r\n                                this._encodeHTML(params[i].name)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{c' + i + '}',\r\n                                this.numAddCommas(params[i].value)\r\n                            );\r\n                            formatter = formatter.replace(\r\n                                '{d' + i + '}',\r\n                                this._encodeHTML(params[i].indicator)\r\n                            );\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                    else {\r\n                        formatter = this._encodeHTML(params[0].name) + '<br/>' \r\n                                    + this._encodeHTML(params[0].indicator) + ' : ' \r\n                                    + this.numAddCommas(params[0].value);\r\n                        for (var i = 1, l = params.length; i < l; i++) {\r\n                            formatter += '<br/>' + this._encodeHTML(params[i].name) \r\n                                         + '<br/>';\r\n                            formatter += this._encodeHTML(params[i].indicator) + ' : ' \r\n                                         + this.numAddCommas(params[i].value);\r\n                        }\r\n                        this._tDom.innerHTML = formatter;\r\n                    }\r\n                }\r\n\r\n                // don't modify, just false, showContent == undefined == true\r\n                if (showContent === false || !this.option.tooltip.showContent) {\r\n                    // 只用tooltip的行为，不显示主体\r\n                    return;\r\n                }\r\n                \r\n                if (!this.hasAppend) {\r\n                    this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                    this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                    this.dom.firstChild.appendChild(this._tDom);\r\n                    this.hasAppend = true;\r\n                }\r\n                this._show(\r\n                    position,\r\n                    zrEvent.getX(this._event), \r\n                    zrEvent.getY(this._event), \r\n                    specialCssText\r\n                );\r\n                return true;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * @parma {boolean} axisTrigger \r\n         */\r\n        _showItemTrigger: function (axisTrigger) {\r\n            if (!this._curTarget) {\r\n                return;\r\n            }\r\n            var serie = ecData.get(this._curTarget, 'series');\r\n            var seriesIndex = ecData.get(this._curTarget, 'seriesIndex');\r\n            var data = ecData.get(this._curTarget, 'data');\r\n            var dataIndex = ecData.get(this._curTarget, 'dataIndex');\r\n            var name = ecData.get(this._curTarget, 'name');\r\n            var value = ecData.get(this._curTarget, 'value');\r\n            var special = ecData.get(this._curTarget, 'special');\r\n            var special2 = ecData.get(this._curTarget, 'special2');\r\n            var queryTarget = [data, serie, this.option];\r\n            // 从低优先级往上找到trigger为item的formatter和样式\r\n            var formatter;\r\n            var position;\r\n            var showContent;\r\n            var specialCssText = '';\r\n            if (this._curTarget._type != 'island') {\r\n                // 全局\r\n                var trigger = axisTrigger ? 'axis' : 'item';\r\n                if (this.option.tooltip.trigger === trigger) {\r\n                    formatter = this.option.tooltip.formatter;\r\n                    position = this.option.tooltip.position;\r\n                }\r\n                // 系列\r\n                if (this.query(serie, 'tooltip.trigger') === trigger) {\r\n                    showContent = this.query(serie, 'tooltip.showContent') || showContent;\r\n                    formatter = this.query(serie, 'tooltip.formatter') || formatter;\r\n                    position = this.query(serie, 'tooltip.position') || position;\r\n                    specialCssText += this._style(this.query(serie, 'tooltip'));\r\n                }\r\n                // 数据项\r\n                showContent = this.query(data, 'tooltip.showContent') || showContent;\r\n                formatter = this.query(data, 'tooltip.formatter') || formatter;\r\n                position = this.query(data, 'tooltip.position') || position;\r\n                specialCssText += this._style(this.query(data, 'tooltip'));\r\n            }\r\n            else {\r\n                this._lastItemTriggerId = NaN;\r\n                showContent = this.deepQuery(queryTarget, 'tooltip.showContent');\r\n                formatter = this.deepQuery(queryTarget, 'tooltip.islandFormatter');\r\n                position = this.deepQuery(queryTarget, 'tooltip.islandPosition');\r\n            }\r\n\r\n            // 复位item trigger和axis trigger间短距离来回变换时的不响应\r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n\r\n            // 相同dataIndex seriesIndex时不再触发内容更新\r\n            if (this._lastItemTriggerId !== this._curTarget.id) {\r\n                this._lastItemTriggerId = this._curTarget.id;\r\n                if (typeof formatter === 'function') {\r\n                    this._curTicket = (serie.name || '') + ':' + dataIndex;\r\n                    this._tDom.innerHTML = formatter.call(\r\n                        this.myChart,\r\n                        {\r\n                            seriesIndex: seriesIndex,\r\n                            seriesName: serie.name || '',\r\n                            series: serie,\r\n                            dataIndex: dataIndex,\r\n                            data: data,\r\n                            name: name,\r\n                            value: value,\r\n                            percent: special,   // 饼图\r\n                            indicator: special, // 雷达图\r\n                            value2: special2,\r\n                            indicator2: special2,\r\n                            // 向下兼容\r\n                            0: serie.name || '',\r\n                            1: name,\r\n                            2: value,\r\n                            3: special,\r\n                            4: special2,\r\n                            5: data,\r\n                            6: seriesIndex,\r\n                            7: dataIndex\r\n                        },\r\n                        this._curTicket,\r\n                        this._setContent\r\n                    );\r\n                }\r\n                else if (typeof formatter === 'string') {\r\n                    this._curTicket = NaN;\r\n                    formatter = formatter.replace('{a}', '{a0}')\r\n                                         .replace('{b}', '{b0}')\r\n                                         .replace('{c}', '{c0}');\r\n                    formatter = formatter.replace('{a0}', this._encodeHTML(serie.name || ''))\r\n                                         .replace('{b0}', this._encodeHTML(name))\r\n                                         .replace(\r\n                                             '{c0}',\r\n                                             value instanceof Array ? value : this.numAddCommas(value)\r\n                                         );\r\n    \r\n                    formatter = formatter.replace('{d}', '{d0}')\r\n                                         .replace('{d0}', special || '');\r\n                    formatter = formatter.replace('{e}', '{e0}')\r\n                                         .replace(\r\n                                             '{e0}',\r\n                                             ecData.get(this._curTarget, 'special2') || ''\r\n                                         );\r\n    \r\n                    this._tDom.innerHTML = formatter;\r\n                }\r\n                else {\r\n                    this._curTicket = NaN;\r\n                    if (serie.type === ecConfig.CHART_TYPE_RADAR && special) {\r\n                        this._tDom.innerHTML = this._itemFormatter.radar.call(\r\n                            this, serie, name, value, special\r\n                        );\r\n                    }\r\n                    // chord 处理暂时跟 force 一样\r\n                    // else if (serie.type === ecConfig.CHART_TYPE_CHORD) {\r\n                    //     this._tDom.innerHTML = this._itemFormatter.chord.call(\r\n                    //         this, serie, name, value, special, special2\r\n                    //     );\r\n                    // }\r\n                    else if (serie.type === ecConfig.CHART_TYPE_EVENTRIVER) {\r\n                        this._tDom.innerHTML = this._itemFormatter.eventRiver.call(\r\n                            this, serie, name, value, data\r\n                        );\r\n                    }\r\n                    else {\r\n                        this._tDom.innerHTML = ''\r\n                            + (serie.name != null ? (this._encodeHTML(serie.name) + '<br/>') : '')\r\n                            + (name === '' ? '' : (this._encodeHTML(name) + ' : '))\r\n                            + (value instanceof Array ? value : this.numAddCommas(value));\r\n                    }\r\n                }\r\n            }\r\n\r\n            var x = zrEvent.getX(this._event);\r\n            var y = zrEvent.getY(this._event);\r\n            if (this.deepQuery(queryTarget, 'tooltip.axisPointer.show') \r\n                && this.component.grid\r\n            ) {\r\n                this._styleAxisPointer(\r\n                    [serie],\r\n                    this.component.grid.getX(), y, \r\n                    this.component.grid.getXend(), y,\r\n                    0, x, y\r\n                );\r\n            }\r\n            else {\r\n                this._hide();\r\n            }\r\n            \r\n            // don't modify, just false, showContent == undefined == true\r\n            if (showContent === false || !this.option.tooltip.showContent) {\r\n                // 只用tooltip的行为，不显示主体\r\n                return;\r\n            }\r\n            \r\n            if (!this.hasAppend) {\r\n                this._tDom.style.left = this._zrWidth / 2 + 'px';\r\n                this._tDom.style.top = this._zrHeight / 2 + 'px';\r\n                this.dom.firstChild.appendChild(this._tDom);\r\n                this.hasAppend = true;\r\n            }\r\n            \r\n            this._show(position, x + 20, y - 20, specialCssText);\r\n        },\r\n\r\n        _itemFormatter: {\r\n            radar: function(serie, name, value, indicator){\r\n                var html = '';\r\n                html += this._encodeHTML(name === '' ? (serie.name || '') : name);\r\n                html += html === '' ? '' : '<br />';\r\n                for (var i = 0 ; i < indicator.length; i ++) {\r\n                    html += this._encodeHTML(indicator[i].text) + ' : ' \r\n                            + this.numAddCommas(value[i]) + '<br />';\r\n                }\r\n                return html;\r\n            },\r\n            chord: function(serie, name, value, special, special2) {\r\n                if (special2 == null) {\r\n                    // 外环上\r\n                    return this._encodeHTML(name) + ' (' + this.numAddCommas(value) + ')';\r\n                }\r\n                else {\r\n                    var name1 = this._encodeHTML(name);\r\n                    var name2 = this._encodeHTML(special);\r\n                    // 内部弦上\r\n                    return ''\r\n                        + (serie.name != null ? (this._encodeHTML(serie.name) + '<br/>') : '')\r\n                        + name1 + ' -> ' + name2 \r\n                        + ' (' + this.numAddCommas(value) + ')'\r\n                        + '<br />'\r\n                        + name2 + ' -> ' + name1\r\n                        + ' (' + this.numAddCommas(special2) + ')';\r\n                }\r\n            },\r\n            eventRiver: function(serie, name, value, data) {\r\n                var html = '';\r\n                html += this._encodeHTML(serie.name === '' ? '' : (serie.name + ' : ') );\r\n                html += this._encodeHTML(name);\r\n                html += html === '' ? '' : '<br />';\r\n                data = data.evolution;\r\n                for (var i = 0, l = data.length; i < l; i++) {\r\n                    html += '<div style=\"padding-top:5px;\">';\r\n                    if (!data[i].detail) {\r\n                        continue;\r\n                    }\r\n                    if (data[i].detail.img) {\r\n                        html += '<img src=\"' + data[i].detail.img \r\n                                + '\" style=\"float:left;width:40px;height:40px;\">';\r\n                    }\r\n                    html += '<div style=\"margin-left:45px;\">' + data[i].time + '<br/>';\r\n                    html += '<a href=\"' + data[i].detail.link + '\" target=\"_blank\">';\r\n                    html += data[i].detail.text + '</a></div>';\r\n                    html += '</div>';\r\n                }\r\n                return html;\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 设置坐标轴指示器样式 \r\n         */\r\n        _styleAxisPointer: function (seriesArray, xStart, yStart, xEnd, yEnd, gap, x, y) {\r\n            if (seriesArray.length > 0) {\r\n                var queryTarget;\r\n                var curType;\r\n                var axisPointer = this.option.tooltip.axisPointer;\r\n                var pointType = axisPointer.type;\r\n                var style = {\r\n                    line: {},\r\n                    cross: {},\r\n                    shadow: {}\r\n                };\r\n                for (var pType in style) {\r\n                    style[pType].color = axisPointer[pType + 'Style'].color;\r\n                    style[pType].width = axisPointer[pType + 'Style'].width;\r\n                    style[pType].type = axisPointer[pType + 'Style'].type;\r\n                }\r\n                for (var i = 0, l = seriesArray.length; i < l; i++) {\r\n                    //if (this.deepQuery([seriesArray[i], this.option], 'tooltip.trigger') === 'axis') {\r\n                        queryTarget = seriesArray[i];\r\n                        curType = this.query(queryTarget, 'tooltip.axisPointer.type');\r\n                        pointType = curType || pointType; \r\n                        if (curType) {\r\n                            style[curType].color = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.color'\r\n                            ) || style[curType].color;\r\n                            style[curType].width = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.width'\r\n                            ) || style[curType].width;\r\n                            style[curType].type = this.query(\r\n                                queryTarget,\r\n                                'tooltip.axisPointer.' + curType + 'Style.type'\r\n                            ) || style[curType].type;\r\n                        }\r\n                    //}\r\n                }\r\n                \r\n                if (pointType === 'line') {\r\n                    var lineWidth = style.line.width;\r\n                    var isVertical = xStart == xEnd;\r\n                    this._axisLineShape.style = {\r\n                        xStart: isVertical ? this.subPixelOptimize(xStart, lineWidth) : xStart,\r\n                        yStart: isVertical ? yStart : this.subPixelOptimize(yStart, lineWidth),\r\n                        xEnd: isVertical ? this.subPixelOptimize(xEnd, lineWidth) : xEnd,\r\n                        yEnd: isVertical ? yEnd : this.subPixelOptimize(yEnd, lineWidth),\r\n                        strokeColor: style.line.color,\r\n                        lineWidth: lineWidth,\r\n                        lineType: style.line.type\r\n                    };\r\n                    this._axisLineShape.invisible = false;\r\n                    this.zr.modShape(this._axisLineShape.id);\r\n                }\r\n                else if (pointType === 'cross') {\r\n                    var crossWidth = style.cross.width;\r\n                    this._axisCrossShape.style = {\r\n                        brushType: 'stroke',\r\n                        rect: this.component.grid.getArea(),\r\n                        x: this.subPixelOptimize(x, crossWidth),\r\n                        y: this.subPixelOptimize(y, crossWidth),\r\n                        text: ('( ' \r\n                               + this.component.xAxis.getAxis(0).getValueFromCoord(x)\r\n                               + ' , '\r\n                               + this.component.yAxis.getAxis(0).getValueFromCoord(y) \r\n                               + ' )'\r\n                              ).replace('  , ', ' ').replace(' ,  ', ' '),\r\n                        textPosition: 'specific',\r\n                        strokeColor: style.cross.color,\r\n                        lineWidth: crossWidth,\r\n                        lineType: style.cross.type\r\n                    };\r\n                    if (this.component.grid.getXend() - x > 100) {          // 右侧有空间\r\n                        this._axisCrossShape.style.textAlign = 'left';\r\n                        this._axisCrossShape.style.textX = x + 10;\r\n                    }\r\n                    else {\r\n                        this._axisCrossShape.style.textAlign = 'right';\r\n                        this._axisCrossShape.style.textX = x - 10;\r\n                    }\r\n                    if (y - this.component.grid.getY() > 50) {             // 上方有空间\r\n                        this._axisCrossShape.style.textBaseline = 'bottom';\r\n                        this._axisCrossShape.style.textY = y - 10;\r\n                    }\r\n                    else {\r\n                        this._axisCrossShape.style.textBaseline = 'top';\r\n                        this._axisCrossShape.style.textY = y + 10;\r\n                    }\r\n                    this._axisCrossShape.invisible = false;\r\n                    this.zr.modShape(this._axisCrossShape.id);\r\n                }\r\n                else if (pointType === 'shadow') {\r\n                    if (style.shadow.width == null \r\n                        || style.shadow.width === 'auto'\r\n                        || isNaN(style.shadow.width)\r\n                    ) {\r\n                        style.shadow.width = gap;\r\n                    }\r\n                    if (xStart === xEnd) {\r\n                        // 纵向\r\n                        if (Math.abs(this.component.grid.getX() - xStart) < 2) {\r\n                            // 最左边\r\n                            style.shadow.width /= 2;\r\n                            xStart = xEnd = xEnd + style.shadow.width / 2;\r\n                        }\r\n                        else if (Math.abs(this.component.grid.getXend() - xStart) < 2) {\r\n                            // 最右边\r\n                            style.shadow.width /= 2;\r\n                            xStart = xEnd = xEnd - style.shadow.width / 2;\r\n                        }\r\n                    }\r\n                    else if (yStart === yEnd) {\r\n                        // 横向\r\n                        if (Math.abs(this.component.grid.getY() - yStart) < 2) {\r\n                            // 最上边\r\n                            style.shadow.width /= 2;\r\n                            yStart = yEnd = yEnd + style.shadow.width / 2;\r\n                        }\r\n                        else if (Math.abs(this.component.grid.getYend() - yStart) < 2) {\r\n                            // 最右边\r\n                            style.shadow.width /= 2;\r\n                            yStart = yEnd = yEnd - style.shadow.width / 2;\r\n                        }\r\n                    }\r\n                    this._axisShadowShape.style = {\r\n                        xStart: xStart,\r\n                        yStart: yStart,\r\n                        xEnd: xEnd,\r\n                        yEnd: yEnd,\r\n                        strokeColor: style.shadow.color,\r\n                        lineWidth: style.shadow.width\r\n                    };\r\n                    this._axisShadowShape.invisible = false;\r\n                    this.zr.modShape(this._axisShadowShape.id);\r\n                }\r\n                this.zr.refreshNextFrame();\r\n            }\r\n        },\r\n\r\n        __onmousemove: function (param) {\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            if (this._mousein && this._enterable) {\r\n                return;\r\n            }\r\n            var target = param.target;\r\n            var mx = zrEvent.getX(param.event);\r\n            var my = zrEvent.getY(param.event);\r\n            if (!target) {\r\n                // 判断是否落到直角系里，axis触发的tooltip\r\n                this._curTarget = false;\r\n                this._event = param.event;\r\n                // this._event._target = this._event.target || this._event.toElement;\r\n                this._event.zrenderX = mx;\r\n                this._event.zrenderY = my;\r\n                if (this._needAxisTrigger \r\n                    && this.component.grid \r\n                    && zrArea.isInside(rectangleInstance, this.component.grid.getArea(), mx, my)\r\n                ) {\r\n                    this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n                }\r\n                else if (this._needAxisTrigger \r\n                        && this.component.polar \r\n                        && this.component.polar.isInside([mx, my]) != -1\r\n                ) {\r\n                    this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n                }\r\n                else {\r\n                    !this._event.connectTrigger && this.messageCenter.dispatch(\r\n                        ecConfig.EVENT.TOOLTIP_OUT_GRID,\r\n                        this._event,\r\n                        null,\r\n                        this.myChart\r\n                    );\r\n                    this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n                }\r\n            }\r\n            else {\r\n                this._curTarget = target;\r\n                this._event = param.event;\r\n                // this._event._target = this._event.target || this._event.toElement;\r\n                this._event.zrenderX = mx;\r\n                this._event.zrenderY = my;\r\n                var polarIndex;\r\n                if (this._needAxisTrigger \r\n                    && this.component.polar \r\n                    && (polarIndex = this.component.polar.isInside([mx, my])) != -1\r\n                ) {\r\n                    // 看用这个polar的系列数据是否是axis触发，如果是设置_curTarget为nul\r\n                    var series = this.option.series;\r\n                    for (var i = 0, l = series.length; i < l; i++) {\r\n                        if (series[i].polarIndex === polarIndex\r\n                            && this.deepQuery(\r\n                                   [series[i], this.option], 'tooltip.trigger'\r\n                               ) === 'axis'\r\n                        ) {\r\n                            this._curTarget = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                   \r\n                }\r\n                this._showingTicket = setTimeout(this._tryShow, this._showDelay);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * zrender事件响应：鼠标离开绘图区域\r\n         */\r\n        __onglobalout: function () {\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            this._hidingTicket = setTimeout(this._hide, this._hideDelay);\r\n        },\r\n        \r\n        /**\r\n         * 异步回调填充内容\r\n         */\r\n        __setContent: function (ticket, content) {\r\n            if (!this._tDom) {\r\n                return;\r\n            }\r\n            if (ticket === this._curTicket) {\r\n                this._tDom.innerHTML = content;\r\n            }\r\n            \r\n            setTimeout(this._refixed, 20);\r\n        },\r\n\r\n        ontooltipHover: function (param, tipShape) {\r\n            if (!this._lastTipShape // 不存在或者存在但dataIndex发生变化才需要重绘\r\n                || (this._lastTipShape && this._lastTipShape.dataIndex != param.dataIndex)\r\n            ) {\r\n                if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                    this.zr.delShape(this._lastTipShape.tipShape);\r\n                    this.shapeList.length = 2;\r\n                }\r\n                for (var i = 0, l = tipShape.length; i < l; i++) {\r\n                    tipShape[i].zlevel = this.getZlevelBase();\r\n                    tipShape[i].z = this.getZBase();\r\n                    \r\n                    tipShape[i].style = zrShapeBase.prototype.getHighlightStyle(\r\n                        tipShape[i].style,\r\n                        tipShape[i].highlightStyle\r\n                    );\r\n                    tipShape[i].draggable = false;\r\n                    tipShape[i].hoverable = false;\r\n                    tipShape[i].clickable = false;\r\n                    tipShape[i].ondragend = null;\r\n                    tipShape[i].ondragover = null;\r\n                    tipShape[i].ondrop = null;\r\n                    this.shapeList.push(tipShape[i]);\r\n                    this.zr.addShape(tipShape[i]);\r\n                }\r\n                this._lastTipShape = {\r\n                    dataIndex: param.dataIndex,\r\n                    tipShape: tipShape\r\n                };\r\n            }\r\n        },\r\n        \r\n        ondragend: function () {\r\n            this._hide();\r\n        },\r\n        \r\n        /**\r\n         * 图例选择\r\n         */\r\n        onlegendSelected: function (param) {\r\n            this._selectedMap = param.selected;\r\n        },\r\n        \r\n        _setSelectedMap: function () {\r\n            if (this.component.legend) {\r\n                this._selectedMap = zrUtil.clone(this.component.legend.getSelectedMap());\r\n            }\r\n            else {\r\n                this._selectedMap = {};\r\n            }\r\n        },\r\n        \r\n        _isSelected: function (itemName) {\r\n            if (this._selectedMap[itemName] != null) {\r\n                return this._selectedMap[itemName];\r\n            }\r\n            else {\r\n                return true; // 没在legend里定义的都为true啊~\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 模拟tooltip hover方法\r\n         * {object} params  参数\r\n         *          {seriesIndex: 0, seriesName:'', dataInex:0} line、bar、scatter、k、radar\r\n         *          {seriesIndex: 0, seriesName:'', name:''} map、pie、chord\r\n         */\r\n        showTip: function (params) {\r\n            if (!params) {\r\n                return;\r\n            }\r\n            \r\n            var seriesIndex;\r\n            var series = this.option.series;\r\n            if (params.seriesIndex != null) {\r\n                seriesIndex = params.seriesIndex;\r\n            }\r\n            else {\r\n                var seriesName = params.seriesName;\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (series[i].name === seriesName) {\r\n                        seriesIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            var serie = series[seriesIndex];\r\n            if (serie == null) {\r\n                return;\r\n            }\r\n            var chart = this.myChart.chart[serie.type];\r\n            var isAxisTrigger = this.deepQuery(\r\n                                    [serie, this.option], 'tooltip.trigger'\r\n                                ) === 'axis';\r\n            \r\n            if (!chart) {\r\n                return;\r\n            }\r\n            \r\n            if (isAxisTrigger) {\r\n                // axis trigger\r\n                var dataIndex = params.dataIndex;\r\n                switch (chart.type) {\r\n                    case ecConfig.CHART_TYPE_LINE :\r\n                    case ecConfig.CHART_TYPE_BAR :\r\n                    case ecConfig.CHART_TYPE_K :\r\n                    case ecConfig.CHART_TYPE_RADAR :\r\n                        if (this.component.polar == null \r\n                            || serie.data[0].value.length <= dataIndex\r\n                        ) {\r\n                            return;\r\n                        }\r\n                        var polarIndex = serie.polarIndex || 0;\r\n                        var vector = this.component.polar.getVector(\r\n                            polarIndex, dataIndex, 'max'\r\n                        );\r\n                        this._event = {\r\n                            zrenderX: vector[0],\r\n                            zrenderY: vector[1]\r\n                        };\r\n                        this._showPolarTrigger(\r\n                            polarIndex, \r\n                            dataIndex\r\n                        );\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                // item trigger\r\n                var shapeList = chart.shapeList;\r\n                var x;\r\n                var y;\r\n                switch (chart.type) {\r\n                    case ecConfig.CHART_TYPE_LINE :\r\n                    case ecConfig.CHART_TYPE_BAR :\r\n                    case ecConfig.CHART_TYPE_K :\r\n                    case ecConfig.CHART_TYPE_TREEMAP :\r\n                    case ecConfig.CHART_TYPE_SCATTER :\r\n                        var dataIndex = params.dataIndex;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i]._mark == null\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'dataIndex') == dataIndex\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = shapeList[i].style.x;\r\n                                y = chart.type != ecConfig.CHART_TYPE_K \r\n                                    ? shapeList[i].style.y : shapeList[i].style.y[0];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_RADAR :\r\n                        var dataIndex = params.dataIndex;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'polygon'\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'dataIndex') == dataIndex\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var vector = this.component.polar.getCenter(\r\n                                    serie.polarIndex || 0\r\n                                );\r\n                                x = vector[0];\r\n                                y = vector[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_PIE :\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'sector'\r\n                                && ecData.get(shapeList[i], 'seriesIndex') == seriesIndex\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var style = this._curTarget.style;\r\n                                var midAngle = (style.startAngle + style.endAngle) \r\n                                                / 2 * Math.PI / 180;\r\n                                x = this._curTarget.style.x + Math.cos(midAngle) * style.r / 1.5;\r\n                                y = this._curTarget.style.y - Math.sin(midAngle) * style.r / 1.5;\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_MAP :\r\n                        var name = params.name;\r\n                        var mapType = serie.mapType;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'text'\r\n                                && shapeList[i]._mapType === mapType\r\n                                && shapeList[i].style._name === name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = this._curTarget.style.x + this._curTarget.position[0];\r\n                                y = this._curTarget.style.y + this._curTarget.position[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_CHORD:\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'sector'\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                var style = this._curTarget.style;\r\n                                var midAngle = (style.startAngle + style.endAngle) \r\n                                                / 2 * Math.PI / 180;\r\n                                x = this._curTarget.style.x + Math.cos(midAngle) * (style.r - 2);\r\n                                y = this._curTarget.style.y - Math.sin(midAngle) * (style.r - 2);\r\n                                this.zr.trigger(\r\n                                    zrConfig.EVENT.MOUSEMOVE,\r\n                                    {\r\n                                        zrenderX: x,\r\n                                        zrenderY: y\r\n                                    }\r\n                                );\r\n                                return;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ecConfig.CHART_TYPE_FORCE:\r\n                        var name = params.name;\r\n                        for (var i = 0, l = shapeList.length; i < l; i++) {\r\n                            if (shapeList[i].type === 'circle'\r\n                                && ecData.get(shapeList[i], 'name') == name\r\n                            ) {\r\n                                this._curTarget = shapeList[i];\r\n                                x = this._curTarget.position[0];\r\n                                y = this._curTarget.position[1];\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                if (x != null && y != null) {\r\n                    this._event = {\r\n                        zrenderX: x,\r\n                        zrenderY: y\r\n                    };\r\n                    this.zr.addHoverShape(this._curTarget);\r\n                    this.zr.refreshHover();\r\n                    this._showItemTrigger();\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 关闭，公开接口 \r\n         */\r\n        hideTip: function () {\r\n            this._hide();\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            // this._selectedMap;\r\n            // this._defaultCssText;    // css样式缓存\r\n            // this._needAxisTrigger;   // 坐标轴触发\r\n            // this._curTarget;\r\n            // this._event;\r\n            // this._curTicket;         // 异步回调标识，用来区分多个请求\r\n            \r\n            // 缓存一些高宽数据\r\n            this._zrHeight = this.zr.getHeight();\r\n            this._zrWidth = this.zr.getWidth();\r\n            \r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n            }\r\n            this._lastTipShape = false;\r\n            this.shapeList.length = 2;\r\n            \r\n            this._lastDataIndex = -1;\r\n            this._lastSeriesIndex = -1;\r\n            this._lastItemTriggerId = -1;\r\n            \r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.option.tooltip = this.reformOption(this.option.tooltip);\r\n                \r\n                this.option.tooltip.textStyle = zrUtil.merge(\r\n                    this.option.tooltip.textStyle,\r\n                    this.ecTheme.textStyle\r\n                );\r\n                this._needAxisTrigger = false;\r\n                if (this.option.tooltip.trigger === 'axis') {\r\n                    this._needAxisTrigger = true;\r\n                }\r\n    \r\n                var series = this.option.series;\r\n                for (var i = 0, l = series.length; i < l; i++) {\r\n                    if (this.query(series[i], 'tooltip.trigger') === 'axis') {\r\n                        this._needAxisTrigger = true;\r\n                        break;\r\n                    }\r\n                }\r\n                // this._hidingTicket;\r\n                // this._showingTicket;\r\n                this._showDelay = this.option.tooltip.showDelay; // 显示延迟\r\n                this._hideDelay = this.option.tooltip.hideDelay; // 隐藏延迟\r\n                this._defaultCssText = this._style(this.option.tooltip);\r\n                \r\n                this._setSelectedMap();\r\n                this._axisLineWidth = this.option.tooltip.axisPointer.lineStyle.width;\r\n                this._enterable = this.option.tooltip.enterable;\r\n\r\n                if (! this._enterable && this._tDom.className.indexOf(zrConfig.elementClassName) < 0) {\r\n                    this._tDom.className += ' ' + zrConfig.elementClassName;\r\n                }\r\n            }\r\n            if (this.showing) {\r\n                var self = this;\r\n                setTimeout(function(){\r\n                    self.zr.trigger(zrConfig.EVENT.MOUSEMOVE, self.zr.handler._event);\r\n                },50);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用，重载基类方法\r\n         */\r\n        onbeforDispose: function () {\r\n            if (this._lastTipShape && this._lastTipShape.tipShape.length > 0) {\r\n                this.zr.delShape(this._lastTipShape.tipShape);\r\n            }\r\n            clearTimeout(this._hidingTicket);\r\n            clearTimeout(this._showingTicket);\r\n            this.zr.un(zrConfig.EVENT.MOUSEMOVE, this._onmousemove);\r\n            this.zr.un(zrConfig.EVENT.GLOBALOUT, this._onglobalout);\r\n            \r\n            if (this.hasAppend && !!this.dom.firstChild) {\r\n                this.dom.firstChild.removeChild(this._tDom);\r\n            }\r\n            this._tDom = null;\r\n        },\r\n        \r\n        /**\r\n         * html转码的方法\r\n         */\r\n        _encodeHTML: function (source) {\r\n            return String(source)\r\n                        .replace(/&/g, '&amp;')\r\n                        .replace(/</g, '&lt;')\r\n                        .replace(/>/g, '&gt;')\r\n                        .replace(/\"/g, '&quot;')\r\n                        .replace(/'/g, '&#39;');\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Tooltip, Base);\r\n    \r\n    require('../component').define('tooltip', Tooltip);\r\n\r\n    return Tooltip;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/tooltip.js\n// module id = 76\n// module chunks = 0","/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：十字准星\r\n * 可配图形属性：\r\n   {\r\n       // 基础属性\r\n       shape  : 'cross',       // 必须，shape类标识，需要显式指定\r\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\r\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\r\n       invisible : {boolean},   // 默认为false，是否可见\r\n\r\n       // 样式属性，默认状态样式样式属性\r\n       style  : {\r\n           rect      : {Object},  // 必须，对角框\r\n           x         : {number},  // 必须，横坐标\r\n           y         : {number},  // 必须，纵坐标\r\n       },\r\n\r\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\r\n       highlightStyle : {\r\n           // 同style\r\n       }\r\n\r\n       // 交互属性，详见shape.Base\r\n\r\n       // 事件属性，详见shape.Base\r\n   }\r\n */\r\ndefine(function (require) {\r\n    var Base = require('zrenderjs/shape/Base');\r\n    var LineShape = require('zrenderjs/shape/Line');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n\r\n    function Cross(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Cross.prototype =  {\r\n        type : 'cross',\r\n\r\n        /**\r\n         * 创建矩形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            var rect = style.rect;\r\n            style.xStart = rect.x;\r\n            style.xEnd = rect.x + rect.width;\r\n            style.yStart = style.yEnd = style.y;\r\n            LineShape.prototype.buildPath(ctx, style);\r\n            style.xStart = style.xEnd = style.x;\r\n            style.yStart = rect.y;\r\n            style.yEnd = rect.y + rect.height;\r\n            LineShape.prototype.buildPath(ctx, style);\r\n        },\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            return style.rect;\r\n        },\r\n\r\n        isCover : require('./normalIsCover')\r\n    };\r\n\r\n    zrUtil.inherits(Cross, Base);\r\n\r\n    return Cross;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/shape/Cross.js\n// module id = 77\n// module chunks = 0","/**\r\n * echarts组件：图例\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var TextShape = require('zrenderjs/shape/Text');\r\n    var RectangleShape = require('zrenderjs/shape/Rectangle');\r\n    var SectorShape = require('zrenderjs/shape/Sector');\r\n    //var BeziercurveShape = require('zrenderjs/shape/Beziercurve');\r\n    var IconShape = require('../util/shape/Icon');\r\n    var CandleShape = require('../util/shape/Candle');\r\n    \r\n    var ecConfig = require('../config');\r\n     // 图例\r\n    ecConfig.legend = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 4,                       // 二级层叠\r\n        show: true,\r\n        orient: 'horizontal',      // 布局方式，默认为水平布局，可选为：\r\n                                   // 'horizontal' ¦ 'vertical'\r\n        x: 'center',               // 水平安放位置，默认为全图居中，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'top',                  // 垂直安放位置，默认为全图顶端，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: '#ccc',       // 图例边框颜色\r\n        borderWidth: 0,            // 图例边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 图例内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，\r\n                                   // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n        itemWidth: 20,             // 图例图形宽度\r\n        itemHeight: 14,            // 图例图形高度\r\n        textStyle: {\r\n            color: '#333'          // 图例文字颜色\r\n        },\r\n        selectedMode: true         // 选择模式，默认开启图例开关\r\n        // selected: null,         // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\r\n        // data: [],               // 图例内容（详见legend.data，数组中每一项代表一个item\r\n    };\r\n\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrArea = require('zrenderjs/tool/area');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     */\r\n    function Legend(ecTheme, messageCenter, zr, option, myChart) {\r\n        if (!this.query(option, 'legend.data')) {\r\n            console.error('option.legend.data has not been defined.');\r\n            return;\r\n        }\r\n        \r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n        \r\n        var self = this;\r\n        self._legendSelected = function (param) {\r\n            self.__legendSelected(param);\r\n        };\r\n        self._dispatchHoverLink = function(param) {\r\n            return self.__dispatchHoverLink(param);\r\n        };\r\n        \r\n        this._colorIndex = 0;\r\n        this._colorMap = {};\r\n        this._selectedMap = {};\r\n        this._hasDataMap = {};\r\n        \r\n        this.refresh(option);\r\n    }\r\n    \r\n    Legend.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_LEGEND,\r\n        _buildShape: function () {\r\n            if (!this.legendOption.show) {\r\n                return;\r\n            }\r\n            // 图例元素组的位置参数，通过计算所得x, y, width, height\r\n            this._itemGroupLocation = this._getItemGroupLocation();\r\n\r\n            this._buildBackground();\r\n            this._buildItem();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建所有图例元素\r\n         */\r\n        _buildItem: function () {\r\n            var data = this.legendOption.data;\r\n            var dataLength = data.length;\r\n            var itemName;\r\n            var itemType;\r\n            var itemShape;\r\n            var textShape;\r\n            var textStyle  = this.legendOption.textStyle;\r\n            var dataTextStyle;\r\n            var dataFont;\r\n            var formattedName;\r\n\r\n            var zrWidth = this.zr.getWidth();\r\n            var zrHeight = this.zr.getHeight();\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemWidth = this.legendOption.itemWidth;\r\n            var itemHeight = this.legendOption.itemHeight;\r\n            var itemGap = this.legendOption.itemGap;\r\n            var color;\r\n\r\n            if (this.legendOption.orient === 'vertical' && this.legendOption.x === 'right') {\r\n                lastX = this._itemGroupLocation.x\r\n                        + this._itemGroupLocation.width\r\n                        - itemWidth;\r\n            }\r\n\r\n            for (var i = 0; i < dataLength; i++) {\r\n                dataTextStyle = zrUtil.merge(\r\n                    data[i].textStyle || {},\r\n                    textStyle\r\n                );\r\n                dataFont = this.getFont(dataTextStyle);\r\n                \r\n                itemName = this._getName(data[i]);\r\n                formattedName = this._getFormatterName(itemName);\r\n                if (itemName === '') { // 别帮我代码优化\r\n                    if (this.legendOption.orient === 'horizontal') {\r\n                        lastX = this._itemGroupLocation.x;\r\n                        lastY += itemHeight + itemGap;\r\n                    }\r\n                    else {\r\n                        this.legendOption.x === 'right'\r\n                            ? lastX -= this._itemGroupLocation.maxWidth + itemGap\r\n                            : lastX += this._itemGroupLocation.maxWidth + itemGap;\r\n                        lastY = this._itemGroupLocation.y;\r\n                    }\r\n                    continue;\r\n                }\r\n                itemType = data[i].icon || this._getSomethingByName(itemName).type;\r\n                \r\n                color = this.getColor(itemName);\r\n\r\n                if (this.legendOption.orient === 'horizontal') {\r\n                    if (zrWidth - lastX < 200   // 最后200px做分行预判\r\n                        && (itemWidth + 5 + zrArea.getTextWidth(formattedName, dataFont)\r\n                            // 分行的最后一个不用算itemGap\r\n                            + (i === dataLength - 1 || data[i + 1] === '' ? 0 : itemGap)\r\n                           ) >= zrWidth - lastX\r\n                    ) {\r\n                        lastX = this._itemGroupLocation.x;\r\n                        lastY += itemHeight + itemGap;\r\n                    }\r\n                }\r\n                else {\r\n                    if (zrHeight - lastY < 200   // 最后200px做分行预判\r\n                        && (itemHeight\r\n                            // 分行的最后一个不用算itemGap\r\n                            + (i === dataLength - 1 || data[i + 1] === '' ? 0 : itemGap)\r\n                           ) \r\n                           >= zrHeight - lastY\r\n                    ) {\r\n                        this.legendOption.x === 'right'\r\n                        ? lastX -= this._itemGroupLocation.maxWidth + itemGap\r\n                        : lastX += this._itemGroupLocation.maxWidth + itemGap;\r\n                        lastY = this._itemGroupLocation.y;\r\n                    }\r\n                }\r\n\r\n                // 图形\r\n                itemShape = this._getItemShapeByType(\r\n                    lastX, lastY,\r\n                    itemWidth, itemHeight,\r\n                    (this._selectedMap[itemName] && this._hasDataMap[itemName] ? color : '#ccc'),\r\n                    itemType,\r\n                    color\r\n                );\r\n                itemShape._name = itemName;\r\n                itemShape = new IconShape(itemShape);\r\n\r\n                // 文字\r\n                textShape = {\r\n                    // shape: 'text',\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style: {\r\n                        x: lastX + itemWidth + 5,\r\n                        y: lastY + itemHeight / 2,\r\n                        color: this._selectedMap[itemName]\r\n                                ? (dataTextStyle.color === 'auto' ? color : dataTextStyle.color)\r\n                                : '#ccc',\r\n                        text: formattedName,\r\n                        textFont: dataFont,\r\n                        textBaseline: 'middle'\r\n                    },\r\n                    highlightStyle: {\r\n                        color: color,\r\n                        brushType: 'fill'\r\n                    },\r\n                    hoverable: !!this.legendOption.selectedMode,\r\n                    clickable: !!this.legendOption.selectedMode\r\n                };\r\n\r\n                if (this.legendOption.orient === 'vertical'\r\n                    && this.legendOption.x === 'right'\r\n                ) {\r\n                    textShape.style.x -= (itemWidth + 10);\r\n                    textShape.style.textAlign = 'right';\r\n                }\r\n\r\n                textShape._name = itemName;\r\n                textShape = new TextShape(textShape);\r\n                \r\n                if (this.legendOption.selectedMode) {\r\n                    itemShape.onclick = textShape.onclick = this._legendSelected;\r\n                    itemShape.onmouseover =  textShape.onmouseover = this._dispatchHoverLink;\r\n                    itemShape.hoverConnect = textShape.id;\r\n                    textShape.hoverConnect = itemShape.id;\r\n                }\r\n                this.shapeList.push(itemShape);\r\n                this.shapeList.push(textShape);\r\n\r\n                if (this.legendOption.orient === 'horizontal') {\r\n                    lastX += itemWidth + 5\r\n                             + zrArea.getTextWidth(formattedName, dataFont)\r\n                             + itemGap;\r\n                }\r\n                else {\r\n                    lastY += itemHeight + itemGap;\r\n                }\r\n            }\r\n        \r\n            if (this.legendOption.orient === 'horizontal'\r\n                && this.legendOption.x === 'center'\r\n                && lastY != this._itemGroupLocation.y\r\n            ) {\r\n                // 多行橫排居中优化\r\n                this._mLineOptimize();\r\n            }\r\n        },\r\n        \r\n        _getName: function(data) {\r\n            return typeof data.name != 'undefined' ? data.name : data;\r\n        },\r\n\r\n        _getFormatterName: function(itemName) {\r\n            var formatter = this.legendOption.formatter;\r\n            var formattedName;\r\n            if (typeof formatter === 'function') {\r\n                formattedName = formatter.call(this.myChart, itemName);\r\n            }\r\n            else if (typeof formatter === 'string') {\r\n                formattedName = formatter.replace('{name}', itemName);\r\n            }\r\n            else {\r\n                formattedName = itemName;\r\n            }\r\n            return formattedName;\r\n        },\r\n\r\n        _getFormatterNameFromData: function(data) {\r\n            var itemName = this._getName(data);\r\n            return this._getFormatterName(itemName);\r\n        },\r\n        \r\n        // 多行橫排居中优化\r\n        _mLineOptimize: function () {\r\n            var lineOffsetArray = []; // 每行宽度\r\n            var lastX = this._itemGroupLocation.x;\r\n            for (var i = 2, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].style.x === lastX) {\r\n                    lineOffsetArray.push(\r\n                        (\r\n                            this._itemGroupLocation.width \r\n                            - (\r\n                                this.shapeList[i - 1].style.x\r\n                                + zrArea.getTextWidth(\r\n                                      this.shapeList[i - 1].style.text,\r\n                                      this.shapeList[i - 1].style.textFont\r\n                                  )\r\n                                - lastX\r\n                            )\r\n                        ) / 2\r\n                    );\r\n                }\r\n                else if (i === l - 1) {\r\n                    lineOffsetArray.push(\r\n                        (\r\n                            this._itemGroupLocation.width \r\n                            - (\r\n                                this.shapeList[i].style.x\r\n                                + zrArea.getTextWidth(\r\n                                      this.shapeList[i].style.text,\r\n                                      this.shapeList[i].style.textFont\r\n                                  )\r\n                                - lastX\r\n                            )\r\n                        ) / 2\r\n                    );\r\n                }\r\n            }\r\n            var curLineIndex = -1;\r\n            for (var i = 1, l = this.shapeList.length; i < l; i++) {\r\n                if (this.shapeList[i].style.x === lastX) {\r\n                    curLineIndex++;\r\n                }\r\n                if (lineOffsetArray[curLineIndex] === 0) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    this.shapeList[i].style.x += lineOffsetArray[curLineIndex];\r\n                }\r\n            }\r\n        },\r\n\r\n        _buildBackground: function () {\r\n            var padding = this.reformCssArray(this.legendOption.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style: {\r\n                    x: this._itemGroupLocation.x - padding[3],\r\n                    y: this._itemGroupLocation.y - padding[0],\r\n                    width: this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height: this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType: this.legendOption.borderWidth === 0 ? 'fill' : 'both',\r\n                    color: this.legendOption.backgroundColor,\r\n                    strokeColor: this.legendOption.borderColor,\r\n                    lineWidth: this.legendOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算图例实体的位置坐标\r\n         */\r\n        _getItemGroupLocation: function () {\r\n            var data = this.legendOption.data;\r\n            var dataLength = data.length;\r\n            var itemGap = this.legendOption.itemGap;\r\n            var itemWidth = this.legendOption.itemWidth + 5; // 5px是图形和文字的间隔，不可配\r\n            var itemHeight = this.legendOption.itemHeight;\r\n            var textStyle  = this.legendOption.textStyle;\r\n            var font = this.getFont(textStyle);\r\n            var totalWidth = 0;\r\n            var totalHeight = 0;\r\n            var padding = this.reformCssArray(this.legendOption.padding);\r\n            var zrWidth = this.zr.getWidth() - padding[1] - padding[3];\r\n            var zrHeight = this.zr.getHeight() - padding[0] - padding[2];\r\n            \r\n            var temp = 0; // 宽高计算，用于多行判断\r\n            var maxWidth = 0; // 垂直布局有用\r\n            if (this.legendOption.orient === 'horizontal') {\r\n                // 水平布局，计算总宽度\r\n                totalHeight = itemHeight;\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    if (this._getName(data[i]) === '') {\r\n                        temp -= itemGap;\r\n                        totalWidth = Math.max(totalWidth, temp);\r\n                        totalHeight += itemHeight + itemGap;\r\n                        temp = 0;\r\n                        continue;\r\n                    }\r\n                    var tempTextWidth = zrArea.getTextWidth(\r\n                        this._getFormatterNameFromData(data[i]),\r\n                        data[i].textStyle \r\n                        ? this.getFont(zrUtil.merge(\r\n                            data[i].textStyle || {},\r\n                            textStyle\r\n                          ))\r\n                        : font\r\n                    );\r\n                    if (temp + itemWidth + tempTextWidth + itemGap > zrWidth) {\r\n                        // new line\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalWidth = Math.max(totalWidth, temp);\r\n                        totalHeight += itemHeight + itemGap;\r\n                        temp = 0;\r\n                    }\r\n                    else {\r\n                        temp += itemWidth + tempTextWidth + itemGap;\r\n                        totalWidth = Math.max(totalWidth, temp - itemGap);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // 垂直布局，计算总高度\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    maxWidth = Math.max(\r\n                        maxWidth,\r\n                        zrArea.getTextWidth(\r\n                            this._getFormatterNameFromData(data[i]),\r\n                            data[i].textStyle \r\n                            ? this.getFont(zrUtil.merge(\r\n                                  data[i].textStyle || {},\r\n                                  textStyle\r\n                              ))\r\n                            : font\r\n                        )\r\n                    );\r\n                }\r\n                maxWidth += itemWidth;\r\n                totalWidth = maxWidth;\r\n                for (var i = 0; i < dataLength; i++) {\r\n                    if (this._getName(data[i]) === '') {\r\n                        totalWidth += maxWidth + itemGap;\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalHeight = Math.max(totalHeight, temp);\r\n                        temp = 0;\r\n                        continue;\r\n                    }\r\n                    if (temp + itemHeight + itemGap > zrHeight) {\r\n                        // new line\r\n                        totalWidth += maxWidth + itemGap;\r\n                        temp -= itemGap;  // 减去最后一个的itemGap\r\n                        totalHeight = Math.max(totalHeight, temp);\r\n                        temp = 0;\r\n                    }\r\n                    else {\r\n                        temp += itemHeight + itemGap;\r\n                        totalHeight = Math.max(totalHeight, temp - itemGap);\r\n                    }\r\n                }\r\n            }\r\n\r\n            zrWidth = this.zr.getWidth();\r\n            zrHeight = this.zr.getHeight();\r\n            var x;\r\n            switch (this.legendOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + this.legendOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - padding[3]\r\n                        - this.legendOption.borderWidth * 2;\r\n                    break;\r\n                default :\r\n                    x = this.parsePercent(this.legendOption.x, zrWidth);\r\n                    break;\r\n            }\r\n            \r\n            var y;\r\n            switch (this.legendOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + this.legendOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[0]\r\n                        - padding[2]\r\n                        - this.legendOption.borderWidth * 2;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = this.parsePercent(this.legendOption.y, zrHeight);\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                x: x,\r\n                y: y,\r\n                width: totalWidth,\r\n                height: totalHeight,\r\n                maxWidth: maxWidth\r\n            };\r\n        },\r\n\r\n        /**\r\n         * 根据名称返回series数据或data\r\n         */\r\n        _getSomethingByName: function (name) {\r\n            var series = this.option.series;\r\n            var data;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].name === name) {\r\n                    // 系列名称优先\r\n                    return {\r\n                        type: series[i].type,\r\n                        series: series[i],\r\n                        seriesIndex: i,\r\n                        data: null,\r\n                        dataIndex: -1\r\n                    };\r\n                }\r\n\r\n                if (\r\n                    series[i].type === ecConfig.CHART_TYPE_PIE \r\n                    || series[i].type === ecConfig.CHART_TYPE_RADAR\r\n                    || series[i].type === ecConfig.CHART_TYPE_CHORD\r\n                    || series[i].type === ecConfig.CHART_TYPE_FORCE\r\n                    || series[i].type === ecConfig.CHART_TYPE_FUNNEL\r\n                    || series[i].type === ecConfig.CHART_TYPE_TREEMAP\r\n                ) {\r\n                    data = series[i].categories || series[i].data || series[i].nodes;\r\n\r\n                    for (var j = 0, k = data.length; j < k; j++) {\r\n                        if (data[j].name === name) {\r\n                            return {\r\n                                type: series[i].type,\r\n                                series: series[i],\r\n                                seriesIndex: i,\r\n                                data: data[j],\r\n                                dataIndex: j\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                type: 'bar',\r\n                series: null,\r\n                seriesIndex: -1,\r\n                data: null,\r\n                dataIndex: -1\r\n            };\r\n        },\r\n        \r\n        _getItemShapeByType: function (x, y, width, height, color, itemType, defaultColor) {\r\n            var highlightColor = color === '#ccc' ? defaultColor : color;\r\n            var itemShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    iconType: 'legendicon' + itemType,\r\n                    x: x,\r\n                    y: y,\r\n                    width: width,\r\n                    height: height,\r\n                    color: color,\r\n                    strokeColor: color,\r\n                    lineWidth: 2\r\n                },\r\n                highlightStyle: {\r\n                    color: highlightColor,\r\n                    strokeColor: highlightColor,\r\n                    lineWidth: 1\r\n                },\r\n                hoverable: this.legendOption.selectedMode,\r\n                clickable: this.legendOption.selectedMode\r\n            };\r\n            \r\n            var imageLocation;\r\n            if (itemType.match('image')) {\r\n                var imageLocation = itemType.replace(\r\n                    new RegExp('^image:\\\\/\\\\/'), ''\r\n                );\r\n                itemType = 'image';\r\n            }\r\n            // 特殊设置\r\n            switch (itemType) {\r\n                case 'line':\r\n                    itemShape.style.brushType = 'stroke';\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    break;\r\n                case 'radar':\r\n                case 'venn':\r\n                case 'tree':\r\n                case 'treemap':\r\n                case 'scatter':\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    break;\r\n                case 'k':\r\n                    itemShape.style.brushType = 'both';\r\n                    itemShape.highlightStyle.lineWidth = 3;\r\n                    itemShape.highlightStyle.color =\r\n                    itemShape.style.color = this.deepQuery(\r\n                        [this.ecTheme, ecConfig], 'k.itemStyle.normal.color'\r\n                    ) || '#fff';\r\n                    itemShape.style.strokeColor = color != '#ccc' \r\n                        ? (\r\n                            this.deepQuery(\r\n                                [this.ecTheme, ecConfig], 'k.itemStyle.normal.lineStyle.color'\r\n                            ) || '#ff3200'\r\n                        )\r\n                        : color;\r\n                    break;\r\n                case 'image':\r\n                    itemShape.style.iconType = 'image';\r\n                    itemShape.style.image = imageLocation;\r\n                    if (color === '#ccc') {\r\n                        itemShape.style.opacity = 0.5;\r\n                    }\r\n                    break;\r\n            }\r\n            return itemShape;\r\n        },\r\n\r\n        __legendSelected: function (param) {\r\n            var itemName = param.target._name;\r\n            if (this.legendOption.selectedMode === 'single') {\r\n                for (var k in this._selectedMap) {\r\n                    this._selectedMap[k] = false;\r\n                }\r\n            }\r\n            this._selectedMap[itemName] = !this._selectedMap[itemName];\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_SELECTED,\r\n                param.event,\r\n                {\r\n                    selected: this._selectedMap,\r\n                    target: itemName\r\n                },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        /**\r\n         * 产生hover link事件 \r\n         */\r\n        __dispatchHoverLink : function(param) {\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_HOVERLINK,\r\n                param.event,\r\n                {\r\n                    target: param.target._name\r\n                },\r\n                this.myChart\r\n            );\r\n            return;\r\n        },\r\n        \r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption || this.option;\r\n                this.option.legend = this.reformOption(this.option.legend);\r\n                this.legendOption = this.option.legend;\r\n                \r\n                var data = this.legendOption.data || [];\r\n                var itemName;\r\n                var something;\r\n                var color;\r\n                var queryTarget;\r\n                if (this.legendOption.selected) {\r\n                    for (var k in this.legendOption.selected) {\r\n                        this._selectedMap[k] = typeof this._selectedMap[k] != 'undefined'\r\n                                               ? this._selectedMap[k]\r\n                                               : this.legendOption.selected[k];\r\n                    }\r\n                }\r\n                for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                    itemName = this._getName(data[i]);\r\n                    if (itemName === '') {\r\n                        continue;\r\n                    }\r\n                    something = this._getSomethingByName(itemName);\r\n                    if (!something.series) {\r\n                        this._hasDataMap[itemName] = false;\r\n                    } \r\n                    else {\r\n                        this._hasDataMap[itemName] = true;\r\n                        if (something.data\r\n                            && (something.type === ecConfig.CHART_TYPE_PIE\r\n                                || something.type === ecConfig.CHART_TYPE_FORCE\r\n                                || something.type === ecConfig.CHART_TYPE_FUNNEL)\r\n                        ) {\r\n                            queryTarget = [something.data, something.series];\r\n                        }\r\n                        else {\r\n                            queryTarget = [something.series];\r\n                        }\r\n                        \r\n                        color = this.getItemStyleColor(\r\n                            this.deepQuery(queryTarget, 'itemStyle.normal.color'),\r\n                            something.seriesIndex,\r\n                            something.dataIndex,\r\n                            something.data\r\n                        );\r\n                        if (color && something.type != ecConfig.CHART_TYPE_K) {\r\n                            this.setColor(itemName, color);\r\n                        }\r\n                        this._selectedMap[itemName] = \r\n                            this._selectedMap[itemName] != null\r\n                            ? this._selectedMap[itemName] : true; \r\n                    }\r\n                }\r\n            }\r\n            this.clear();\r\n            this._buildShape();\r\n        },\r\n        \r\n        getRelatedAmount: function(name) {\r\n            var amount = 0;\r\n            var series = this.option.series;\r\n            var data;\r\n            for (var i = 0, l = series.length; i < l; i++) {\r\n                if (series[i].name === name) {\r\n                    // 系列名称优先\r\n                    amount++;\r\n                }\r\n\r\n                if (\r\n                    series[i].type === ecConfig.CHART_TYPE_PIE \r\n                    || series[i].type === ecConfig.CHART_TYPE_RADAR\r\n                    || series[i].type === ecConfig.CHART_TYPE_CHORD\r\n                    || series[i].type === ecConfig.CHART_TYPE_FORCE\r\n                    || series[i].type === ecConfig.CHART_TYPE_FUNNEL\r\n                ) {\r\n                    data = series[i].type != ecConfig.CHART_TYPE_FORCE\r\n                           ? series[i].data         // 饼图、雷达图、和弦图得查找里面的数据名字\r\n                           : series[i].categories;  // 力导布局查找categories配置\r\n                    for (var j = 0, k = data.length; j < k; j++) {\r\n                        if (data[j].name === name && data[j].value != '-') {\r\n                            amount++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return amount;\r\n        },\r\n\r\n        setColor: function (legendName, color) {\r\n            this._colorMap[legendName] = color;\r\n        },\r\n\r\n        getColor: function (legendName) {\r\n            if (!this._colorMap[legendName]) {\r\n                this._colorMap[legendName] = this.zr.getColor(this._colorIndex++);\r\n            }\r\n            return this._colorMap[legendName];\r\n        },\r\n        \r\n        hasColor: function (legendName) {\r\n            return this._colorMap[legendName] ? this._colorMap[legendName] : false;\r\n        },\r\n\r\n        add: function (name, color){\r\n            var data = this.legendOption.data;\r\n            for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                if (this._getName(data[i]) === name) {\r\n                    // 已有就不重复加了\r\n                    return;\r\n                }\r\n            }\r\n            this.legendOption.data.push(name);\r\n            this.setColor(name,color);\r\n            this._selectedMap[name] = true;\r\n            this._hasDataMap[name] = true;\r\n        },\r\n\r\n        del: function (name){\r\n            var data = this.legendOption.data;\r\n            for (var i = 0, dataLength = data.length; i < dataLength; i++) {\r\n                if (this._getName(data[i]) === name) {\r\n                    return this.legendOption.data.splice(i, 1);\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 特殊图形元素回调设置\r\n         * @param {Object} name\r\n         * @param {Object} itemShape\r\n         */\r\n        getItemShape: function (name) {\r\n            if (name == null) {\r\n                return;\r\n            }\r\n            var shape;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                shape = this.shapeList[i];\r\n                if (shape._name === name && shape.type != 'text') {\r\n                    return shape;\r\n                }\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 特殊图形元素回调设置\r\n         * @param {Object} name\r\n         * @param {Object} itemShape\r\n         */\r\n        setItemShape: function (name, itemShape) {\r\n            var shape;\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                shape = this.shapeList[i];\r\n                if (shape._name === name && shape.type != 'text') {\r\n                    if (!this._selectedMap[name]) {\r\n                        itemShape.style.color = '#ccc';\r\n                        itemShape.style.strokeColor = '#ccc';\r\n                    }\r\n                    this.zr.modShape(shape.id, itemShape);\r\n                }\r\n            }\r\n        },\r\n\r\n        isSelected: function (itemName) {\r\n            if (typeof this._selectedMap[itemName] != 'undefined') {\r\n                return this._selectedMap[itemName];\r\n            }\r\n            else {\r\n                // 没在legend里定义的都为true啊~\r\n                return true;\r\n            }\r\n        },\r\n        \r\n        getSelectedMap: function () {\r\n            return this._selectedMap;\r\n        },\r\n        \r\n        setSelected: function(itemName, selectStatus) {\r\n            if (this.legendOption.selectedMode === 'single') {\r\n                for (var k in this._selectedMap) {\r\n                    this._selectedMap[k] = false;\r\n                }\r\n            }\r\n            this._selectedMap[itemName] = selectStatus;\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.LEGEND_SELECTED,\r\n                null,\r\n                {\r\n                    selected: this._selectedMap,\r\n                    target: itemName\r\n                },\r\n                this.myChart\r\n            );\r\n        },\r\n        \r\n        /**\r\n         * 图例选择\r\n         */\r\n        onlegendSelected: function (param, status) {\r\n            var legendSelected = param.selected;\r\n            for (var itemName in legendSelected) {\r\n                if (this._selectedMap[itemName] != legendSelected[itemName]) {\r\n                    // 有一项不一致都需要重绘\r\n                    status.needRefresh = true;\r\n                }\r\n                this._selectedMap[itemName] = legendSelected[itemName];\r\n            }\r\n            return;\r\n        }\r\n    };\r\n    \r\n    var legendIcon = {\r\n        line: function (ctx, style) {\r\n            var dy = style.height / 2;\r\n            ctx.moveTo(style.x,     style.y + dy);\r\n            ctx.lineTo(style.x + style.width,style.y + dy);\r\n        },\r\n        \r\n        pie: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            SectorShape.prototype.buildPath(ctx, {\r\n                x: x + width / 2,\r\n                y: y + height + 2,\r\n                r: height,\r\n                r0: 6,\r\n                startAngle: 45,\r\n                endAngle: 135\r\n            });\r\n        },\r\n        \r\n        eventRiver: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            ctx.moveTo(x, y + height);\r\n            ctx.bezierCurveTo(\r\n                x + width, y + height, x, y + 4, x + width, y + 4\r\n            );\r\n            ctx.lineTo(x + width, y);\r\n            ctx.bezierCurveTo(\r\n                x, y, x + width, y + height - 4, x, y + height - 4\r\n            );\r\n            ctx.lineTo(x, y + height);\r\n        },\r\n        \r\n        k: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y;\r\n            var width = style.width;\r\n            var height = style.height;\r\n            CandleShape.prototype.buildPath(ctx, {\r\n                x: x + width / 2,\r\n                y: [y + 1, y + 1, y + height - 6, y + height],\r\n                width: width - 6\r\n            });\r\n        },\r\n        \r\n        bar: function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y +1;\r\n            var width = style.width;\r\n            var height = style.height - 2;\r\n            var r = 3;\r\n            \r\n            ctx.moveTo(x + r, y);\r\n            ctx.lineTo(x + width - r, y);\r\n            ctx.quadraticCurveTo(\r\n                x + width, y, x + width, y + r\r\n            );\r\n            ctx.lineTo(x + width, y + height - r);\r\n            ctx.quadraticCurveTo(\r\n                x + width, y + height, x + width - r, y + height\r\n            );\r\n            ctx.lineTo(x + r, y + height);\r\n            ctx.quadraticCurveTo(\r\n                x, y + height, x, y + height - r\r\n            );\r\n            ctx.lineTo(x, y + r);\r\n            ctx.quadraticCurveTo(x, y, x + r, y);\r\n        },\r\n        \r\n        force: function (ctx, style) {\r\n            IconShape.prototype.iconLibrary.circle(ctx, style);\r\n        },\r\n        \r\n        radar: function (ctx, style) {\r\n            var n = 6;\r\n            var x = style.x + style.width / 2;\r\n            var y = style.y + style.height / 2;\r\n            var r = style.height / 2;\r\n\r\n            var dStep = 2 * Math.PI / n;\r\n            var deg = -Math.PI / 2;\r\n            var xStart = x + r * Math.cos(deg);\r\n            var yStart = y + r * Math.sin(deg);\r\n            \r\n            ctx.moveTo(xStart, yStart);\r\n            deg += dStep;\r\n            for (var i = 0, end = n - 1; i < end; i ++) {\r\n                ctx.lineTo(x + r * Math.cos(deg), y + r * Math.sin(deg));\r\n                deg += dStep;\r\n            }\r\n            ctx.lineTo(xStart, yStart);\r\n        }\r\n    };\r\n    legendIcon.chord = legendIcon.pie;\r\n    legendIcon.map = legendIcon.bar;\r\n    \r\n    for (var k in legendIcon) {\r\n        IconShape.prototype.iconLibrary['legendicon' + k] = legendIcon[k];\r\n    }\r\n    \r\n    zrUtil.inherits(Legend, Base);\r\n    \r\n    require('../component').define('legend', Legend);\r\n    \r\n    return Legend;\r\n});\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/legend.js\n// module id = 78\n// module chunks = 0","/**\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang(https://github.com/pissang)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\ndefine(\r\n    function (require) {\r\n        var vec2 = require('./vector');\r\n        var curve = require('./curve');\r\n\r\n        /**\r\n         * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\r\n         * @module zrender/tool/computeBoundingBox\r\n         * @param {Array<Object>} points 顶点数组\r\n         * @param {number} min\r\n         * @param {number} max\r\n         */\r\n        function computeBoundingBox(points, min, max) {\r\n            if (points.length === 0) {\r\n                return;\r\n            }\r\n            var left = points[0][0];\r\n            var right = points[0][0];\r\n            var top = points[0][1];\r\n            var bottom = points[0][1];\r\n            \r\n            for (var i = 1; i < points.length; i++) {\r\n                var p = points[i];\r\n                if (p[0] < left) {\r\n                    left = p[0];\r\n                }\r\n                if (p[0] > right) {\r\n                    right = p[0];\r\n                }\r\n                if (p[1] < top) {\r\n                    top = p[1];\r\n                }\r\n                if (p[1] > bottom) {\r\n                    bottom = p[1];\r\n                }\r\n            }\r\n\r\n            min[0] = left;\r\n            min[1] = top;\r\n            max[0] = right;\r\n            max[1] = bottom;\r\n        }\r\n\r\n        /**\r\n         * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\r\n         * @memberOf module:zrender/tool/computeBoundingBox\r\n         * @param {Array.<number>} p0\r\n         * @param {Array.<number>} p1\r\n         * @param {Array.<number>} p2\r\n         * @param {Array.<number>} p3\r\n         * @param {Array.<number>} min\r\n         * @param {Array.<number>} max\r\n         */\r\n        function computeCubeBezierBoundingBox(p0, p1, p2, p3, min, max) {\r\n            var xDim = [];\r\n            curve.cubicExtrema(p0[0], p1[0], p2[0], p3[0], xDim);\r\n            for (var i = 0; i < xDim.length; i++) {\r\n                xDim[i] = curve.cubicAt(p0[0], p1[0], p2[0], p3[0], xDim[i]);\r\n            }\r\n            var yDim = [];\r\n            curve.cubicExtrema(p0[1], p1[1], p2[1], p3[1], yDim);\r\n            for (var i = 0; i < yDim.length; i++) {\r\n                yDim[i] = curve.cubicAt(p0[1], p1[1], p2[1], p3[1], yDim[i]);\r\n            }\r\n\r\n            xDim.push(p0[0], p3[0]);\r\n            yDim.push(p0[1], p3[1]);\r\n\r\n            var left = Math.min.apply(null, xDim);\r\n            var right = Math.max.apply(null, xDim);\r\n            var top = Math.min.apply(null, yDim);\r\n            var bottom = Math.max.apply(null, yDim);\r\n\r\n            min[0] = left;\r\n            min[1] = top;\r\n            max[0] = right;\r\n            max[1] = bottom;\r\n        }\r\n\r\n        /**\r\n         * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\r\n         * @memberOf module:zrender/tool/computeBoundingBox\r\n         * @param {Array.<number>} p0\r\n         * @param {Array.<number>} p1\r\n         * @param {Array.<number>} p2\r\n         * @param {Array.<number>} min\r\n         * @param {Array.<number>} max\r\n         */\r\n        function computeQuadraticBezierBoundingBox(p0, p1, p2, min, max) {\r\n            // Find extremities, where derivative in x dim or y dim is zero\r\n            var t1 = curve.quadraticExtremum(p0[0], p1[0], p2[0]);\r\n            var t2 = curve.quadraticExtremum(p0[1], p1[1], p2[1]);\r\n\r\n            t1 = Math.max(Math.min(t1, 1), 0);\r\n            t2 = Math.max(Math.min(t2, 1), 0);\r\n\r\n            var ct1 = 1 - t1;\r\n            var ct2 = 1 - t2;\r\n\r\n            var x1 = ct1 * ct1 * p0[0] \r\n                     + 2 * ct1 * t1 * p1[0] \r\n                     + t1 * t1 * p2[0];\r\n            var y1 = ct1 * ct1 * p0[1] \r\n                     + 2 * ct1 * t1 * p1[1] \r\n                     + t1 * t1 * p2[1];\r\n\r\n            var x2 = ct2 * ct2 * p0[0] \r\n                     + 2 * ct2 * t2 * p1[0] \r\n                     + t2 * t2 * p2[0];\r\n            var y2 = ct2 * ct2 * p0[1] \r\n                     + 2 * ct2 * t2 * p1[1] \r\n                     + t2 * t2 * p2[1];\r\n            min[0] = Math.min(p0[0], p2[0], x1, x2);\r\n            min[1] = Math.min(p0[1], p2[1], y1, y2);\r\n            max[0] = Math.max(p0[0], p2[0], x1, x2);\r\n            max[1] = Math.max(p0[1], p2[1], y1, y2);\r\n        }\r\n\r\n        var start = vec2.create();\r\n        var end = vec2.create();\r\n        var extremity = vec2.create();\r\n        /**\r\n         * 从圆弧中计算出最小包围盒，写入`min`和`max`中\r\n         * @method\r\n         * @memberOf module:zrender/tool/computeBoundingBox\r\n         * @param {Array.<number>} center 圆弧中心点\r\n         * @param {number} radius 圆弧半径\r\n         * @param {number} startAngle 圆弧开始角度\r\n         * @param {number} endAngle 圆弧结束角度\r\n         * @param {number} anticlockwise 是否是顺时针\r\n         * @param {Array.<number>} min\r\n         * @param {Array.<number>} max\r\n         */\r\n        var computeArcBoundingBox = function (\r\n            x, y, r, startAngle, endAngle, anticlockwise, min, max\r\n        ) { \r\n            if (Math.abs(startAngle - endAngle) >= Math.PI * 2) {\r\n                // Is a circle\r\n                min[0] = x - r;\r\n                min[1] = y - r;\r\n                max[0] = x + r;\r\n                max[1] = y + r;\r\n                return;\r\n            }\r\n\r\n            start[0] = Math.cos(startAngle) * r + x;\r\n            start[1] = Math.sin(startAngle) * r + y;\r\n\r\n            end[0] = Math.cos(endAngle) * r + x;\r\n            end[1] = Math.sin(endAngle) * r + y;\r\n\r\n            vec2.min(min, start, end);\r\n            vec2.max(max, start, end);\r\n            \r\n            // Thresh to [0, Math.PI * 2]\r\n            startAngle = startAngle % (Math.PI * 2);\r\n            if (startAngle < 0) {\r\n                startAngle = startAngle + Math.PI * 2;\r\n            }\r\n            endAngle = endAngle % (Math.PI * 2);\r\n            if (endAngle < 0) {\r\n                endAngle = endAngle + Math.PI * 2;\r\n            }\r\n\r\n            if (startAngle > endAngle && !anticlockwise) {\r\n                endAngle += Math.PI * 2;\r\n            } else if (startAngle < endAngle && anticlockwise) {\r\n                startAngle += Math.PI * 2;\r\n            }\r\n            if (anticlockwise) {\r\n                var tmp = endAngle;\r\n                endAngle = startAngle;\r\n                startAngle = tmp;\r\n            }\r\n\r\n            // var number = 0;\r\n            // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\r\n            for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\r\n                if (angle > startAngle) {\r\n                    extremity[0] = Math.cos(angle) * r + x;\r\n                    extremity[1] = Math.sin(angle) * r + y;\r\n\r\n                    vec2.min(min, extremity, min);\r\n                    vec2.max(max, extremity, max);\r\n                }\r\n            }\r\n        };\r\n\r\n        computeBoundingBox.cubeBezier = computeCubeBezierBoundingBox;\r\n        computeBoundingBox.quadraticBezier = computeQuadraticBezierBoundingBox;\r\n        computeBoundingBox.arc = computeArcBoundingBox;\r\n\r\n        return computeBoundingBox;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/tool/computeBoundingBox.js\n// module id = 79\n// module chunks = 0","/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：蜡烛\r\n * 可配图形属性：\r\n   {\r\n       // 基础属性\r\n       shape  : 'candle',       // 必须，shape类标识，需要显式指定\r\n       id     : {string},       // 必须，图形唯一标识，可通过'zrender/tool/guid'方法生成\r\n       zlevel : {number},       // 默认为0，z层level，决定绘画在哪层canvas中\r\n       invisible : {boolean},   // 默认为false，是否可见\r\n\r\n       // 样式属性，默认状态样式样式属性\r\n       style  : {\r\n           x             : {number},  // 必须，横坐标\r\n           y             : {Array},   // 必须，纵坐标数组\r\n       },\r\n\r\n       // 样式属性，高亮样式属性，当不存在highlightStyle时使用基于默认样式扩展显示\r\n       highlightStyle : {\r\n           // 同style\r\n       }\r\n\r\n       // 交互属性，详见shape.Base\r\n\r\n       // 事件属性，详见shape.Base\r\n   }\r\n         例子：\r\n   {\r\n       shape  : 'candle',\r\n       id     : '123456',\r\n       zlevel : 1,\r\n       style  : {\r\n           x : 200,\r\n           y : [100,123,90,125],\r\n           width : 150,\r\n           color : '#eee',\r\n           text : 'Baidu'\r\n       },\r\n       myName : 'kener',  // 可自带任何有效自定义属性\r\n\r\n       clickable : true,\r\n       onClick : function (eventPacket) {\r\n           alert(eventPacket.target.myName);\r\n       }\r\n   }\r\n */\r\ndefine(function (require) {\r\n    var Base = require('zrenderjs/shape/Base');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n\r\n    function Candle(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Candle.prototype =  {\r\n        type: 'candle',\r\n        _numberOrder : function (a, b) {\r\n            return b - a;\r\n        },\r\n\r\n        /**\r\n         * 创建矩形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            var yList = zrUtil.clone(style.y).sort(this._numberOrder);\r\n\r\n            ctx.moveTo(style.x, yList[3]);\r\n            ctx.lineTo(style.x, yList[2]);\r\n            ctx.moveTo(style.x - style.width / 2, yList[2]);\r\n            ctx.rect(\r\n                style.x - style.width / 2,\r\n                yList[2],\r\n                style.width,\r\n                yList[1] - yList[2]\r\n            );\r\n            ctx.moveTo(style.x, yList[1]);\r\n            ctx.lineTo(style.x, yList[0]);\r\n        },\r\n\r\n        /**\r\n         * 返回矩形区域，用于局部刷新和文字定位\r\n         * @param {Object} style\r\n         */\r\n        getRect : function (style) {\r\n            if (!style.__rect) {\r\n                var lineWidth = 0;\r\n                if (style.brushType == 'stroke' || style.brushType == 'fill') {\r\n                    lineWidth = style.lineWidth || 1;\r\n                }\r\n\r\n                var yList = zrUtil.clone(style.y).sort(this._numberOrder);\r\n                style.__rect = {\r\n                    x : Math.round(style.x - style.width / 2 - lineWidth / 2),\r\n                    y : Math.round(yList[3] - lineWidth / 2),\r\n                    width : style.width + lineWidth,\r\n                    height : yList[0] - yList[3] + lineWidth\r\n                };\r\n            }\r\n\r\n            return style.__rect;\r\n        },\r\n\r\n\r\n        isCover : require('./normalIsCover')\r\n    };\r\n\r\n    zrUtil.inherits(Candle, Base);\r\n\r\n    return Candle;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/shape/Candle.js\n// module id = 80\n// module chunks = 0","/**\r\n * echarts组件：时间轴组件\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var RectangleShape = require('zrenderjs/shape/Rectangle');\r\n    var IconShape = require('../util/shape/Icon');\r\n    var ChainShape = require('../util/shape/Chain');\r\n    \r\n    var ecConfig = require('../config');\r\n    ecConfig.timeline = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 4,                       // 二级层叠\r\n        show: true,\r\n        type: 'time',  // 模式是时间类型，支持 number\r\n        notMerge: false,\r\n        realtime: true,\r\n        x: 80,\r\n        // y: {number},\r\n        x2: 80,\r\n        y2: 0,\r\n        // width: {totalWidth} - x - x2,\r\n        height: 50,\r\n        backgroundColor: 'rgba(0,0,0,0)',   // 时间轴背景颜色\r\n        borderColor: '#ccc',               // 时间轴边框颜色\r\n        borderWidth: 0,                    // 时间轴边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                        // 时间轴内边距，单位px，默认各方向内边距为5，\r\n        controlPosition: 'left',           // 'right' | 'none'\r\n        autoPlay: false,\r\n        loop: true,\r\n        playInterval: 2000,                // 播放时间间隔，单位ms\r\n        lineStyle: {\r\n            width: 1,\r\n            color: '#666',\r\n            type: 'dashed'\r\n        },\r\n        label: {                            // 文本标签\r\n            show: true,\r\n            interval: 'auto',\r\n            rotate: 0,\r\n            // formatter: null,\r\n            textStyle: {                    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                color: '#333'\r\n            }\r\n        },\r\n        checkpointStyle: {\r\n            symbol: 'auto',\r\n            symbolSize: 'auto',\r\n            color: 'auto',\r\n            borderColor: 'auto',\r\n            borderWidth: 'auto',\r\n            label: {                            // 文本标签\r\n                show: false,\r\n                textStyle: {                    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                    color: 'auto'\r\n                }\r\n            }\r\n        },\r\n        controlStyle: {\r\n            itemSize: 15,\r\n            itemGap: 5,\r\n            normal: { color: '#333'},\r\n            emphasis: { color: '#1e90ff'}\r\n        },\r\n        symbol: 'emptyDiamond',\r\n        symbolSize: 4,\r\n        currentIndex: 0\r\n        // data: []\r\n    };\r\n\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrArea = require('zrenderjs/tool/area');\r\n    var zrEvent = require('zrenderjs/tool/event');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     */\r\n    function Timeline(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        var self = this;\r\n        self._onclick = function(param) {\r\n            return self.__onclick(param);\r\n        };\r\n        self._ondrift = function (dx, dy) {\r\n            return self.__ondrift(this, dx, dy);\r\n        };\r\n        self._ondragend = function () {\r\n            return self.__ondragend();\r\n        };\r\n        self._setCurrentOption = function() {\r\n            var timelineOption = self.timelineOption;\r\n            self.currentIndex %= timelineOption.data.length;\r\n            // console.log(self.currentIndex);\r\n            var curOption = self.options[self.currentIndex] || {};\r\n            self.myChart._setOption(curOption, timelineOption.notMerge, true);\r\n            \r\n            self.messageCenter.dispatch(\r\n                ecConfig.EVENT.TIMELINE_CHANGED,\r\n                null,\r\n                {\r\n                    currentIndex: self.currentIndex,\r\n                    data: timelineOption.data[self.currentIndex].name != null\r\n                          ? timelineOption.data[self.currentIndex].name\r\n                          : timelineOption.data[self.currentIndex]\r\n                },\r\n                self.myChart\r\n            );\r\n        };\r\n        self._onFrame = function() {\r\n            self._setCurrentOption();\r\n            self._syncHandleShape();\r\n            \r\n            if (self.timelineOption.autoPlay) {\r\n                self.playTicket = setTimeout(\r\n                    function() {\r\n                        self.currentIndex += 1;\r\n                        if (!self.timelineOption.loop\r\n                            && self.currentIndex >= self.timelineOption.data.length\r\n                        ) {\r\n                            self.currentIndex = self.timelineOption.data.length - 1;\r\n                            self.stop();\r\n                            return;\r\n                        }\r\n                        self._onFrame();\r\n                    },\r\n                    self.timelineOption.playInterval\r\n                );\r\n            }\r\n        };\r\n\r\n        this.setTheme(false);\r\n        this.options = this.option.options;\r\n        this.currentIndex = this.timelineOption.currentIndex % this.timelineOption.data.length;\r\n        \r\n        if (!this.timelineOption.notMerge && this.currentIndex !== 0) {\r\n            /*\r\n            for (var i = 1, l = this.timelineOption.data.length; i < l; i++) {\r\n                this.options[i] = zrUtil.merge(\r\n                    this.options[i], this.options[i - 1]\r\n                );\r\n            }\r\n            */\r\n           this.options[this.currentIndex] = zrUtil.merge(\r\n               this.options[this.currentIndex], this.options[0]\r\n           );\r\n        }\r\n        \r\n        if (this.timelineOption.show) {\r\n            this._buildShape();\r\n            this._syncHandleShape();\r\n        }\r\n        \r\n        this._setCurrentOption();\r\n        \r\n        if (this.timelineOption.autoPlay) {\r\n            var self = this;\r\n            this.playTicket = setTimeout(\r\n                function() {\r\n                    self.play();\r\n                },\r\n                this.ecTheme.animationDuration != null\r\n                ? this.ecTheme.animationDuration\r\n                : ecConfig.animationDuration\r\n            );\r\n        }\r\n    }\r\n    \r\n    Timeline.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_TIMELINE,\r\n        _buildShape: function () {\r\n            // 位置参数，通过计算所得x, y, width, height\r\n            this._location = this._getLocation();\r\n            this._buildBackground();\r\n            this._buildControl();\r\n            this._chainPoint = this._getChainPoint();\r\n            if (this.timelineOption.label.show) {\r\n                // 标签显示的挑选间隔\r\n                var interval = this._getInterval();\r\n                for (var i = 0, len = this._chainPoint.length; i < len; i += interval) {\r\n                    this._chainPoint[i].showLabel = true;\r\n                }\r\n            }\r\n            this._buildChain();\r\n            this._buildHandle();\r\n\r\n            for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                this.zr.addShape(this.shapeList[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算实体的位置坐标\r\n         */\r\n        _getLocation: function () {\r\n            var timelineOption = this.timelineOption;\r\n            var padding = this.reformCssArray(this.timelineOption.padding);\r\n            \r\n            // 水平布局\r\n            var zrWidth = this.zr.getWidth();\r\n            var x = this.parsePercent(timelineOption.x, zrWidth);\r\n            var x2 = this.parsePercent(timelineOption.x2, zrWidth);\r\n            var width;\r\n            if (timelineOption.width == null) {\r\n                width = zrWidth - x - x2;\r\n                x2 = zrWidth - x2;\r\n            }\r\n            else {\r\n                width = this.parsePercent(timelineOption.width, zrWidth);\r\n                x2 = x + width;\r\n            }\r\n\r\n            var zrHeight = this.zr.getHeight();\r\n            var height = this.parsePercent(timelineOption.height, zrHeight);\r\n            var y;\r\n            var y2;\r\n            if (timelineOption.y != null) {\r\n                y = this.parsePercent(timelineOption.y, zrHeight);\r\n                y2 = y + height;\r\n            }\r\n            else {\r\n                y2 = zrHeight - this.parsePercent(timelineOption.y2, zrHeight);\r\n                y = y2 - height;\r\n            }\r\n\r\n            return {\r\n                x: x + padding[3],\r\n                y: y + padding[0],\r\n                x2: x2 - padding[1],\r\n                y2: y2 - padding[2],\r\n                width: width - padding[1] - padding[3],\r\n                height: height - padding[0] - padding[2]\r\n            };\r\n        },\r\n\r\n        _getReformedLabel: function (idx) {\r\n            var timelineOption = this.timelineOption;\r\n            var data = timelineOption.data[idx].name != null\r\n                       ? timelineOption.data[idx].name\r\n                       : timelineOption.data[idx];\r\n            var formatter = timelineOption.data[idx].formatter \r\n                            || timelineOption.label.formatter;\r\n            if (formatter) {\r\n                if (typeof formatter === 'function') {\r\n                    data = formatter.call(this.myChart, data);\r\n                }\r\n                else if (typeof formatter === 'string') {\r\n                    data = formatter.replace('{value}', data);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        \r\n        /**\r\n         * 计算标签显示挑选间隔\r\n         */\r\n        _getInterval: function () {\r\n            var chainPoint = this._chainPoint;\r\n            var timelineOption = this.timelineOption;\r\n            var interval   = timelineOption.label.interval;\r\n            if (interval === 'auto') {\r\n                // 麻烦的自适应计算\r\n                var fontSize = timelineOption.label.textStyle.fontSize;\r\n                var data = timelineOption.data;\r\n                var dataLength = timelineOption.data.length;\r\n\r\n                // 横向\r\n                if (dataLength > 3) {\r\n                    var isEnough = false;\r\n                    var labelSpace;\r\n                    var labelSize;\r\n                    interval = 0;\r\n                    while (!isEnough && interval < dataLength) {\r\n                        interval++;\r\n                        isEnough = true;\r\n                        for (var i = interval; i < dataLength; i += interval) {\r\n                            labelSpace = chainPoint[i].x - chainPoint[i - interval].x;\r\n                            if (timelineOption.label.rotate !== 0) {\r\n                                // 有旋转\r\n                                labelSize = fontSize;\r\n                            }\r\n                            else if (data[i].textStyle) {\r\n                                labelSize = zrArea.getTextWidth(\r\n                                    chainPoint[i].name,\r\n                                    chainPoint[i].textFont\r\n                                );\r\n                            }\r\n                            else {\r\n                                // 不定义data级特殊文本样式，用fontSize优化getTextWidth\r\n                                var label = chainPoint[i].name + '';\r\n                                var wLen = (label.match(/\\w/g) || '').length;\r\n                                var oLen = label.length - wLen;\r\n                                labelSize = wLen * fontSize * 2 / 3 + oLen * fontSize;\r\n                            }\r\n\r\n                            if (labelSpace < labelSize) {\r\n                                // 放不下，中断循环让interval++\r\n                                isEnough = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // 少于3个则全部显示\r\n                    interval = 1;\r\n                }\r\n            }\r\n            else {\r\n                // 用户自定义间隔\r\n                interval = interval - 0 + 1;\r\n            }\r\n\r\n            return interval;\r\n        },\r\n        \r\n        /**\r\n         * 根据选项计算时间链条上的坐标及symbolList\r\n         */\r\n        _getChainPoint: function() {\r\n            var timelineOption = this.timelineOption;\r\n            var symbol = timelineOption.symbol.toLowerCase();\r\n            var symbolSize = timelineOption.symbolSize;\r\n            var rotate = timelineOption.label.rotate;\r\n            var textStyle = timelineOption.label.textStyle;\r\n            var textFont = this.getFont(textStyle);\r\n            var dataTextStyle;\r\n            var data = timelineOption.data;\r\n            var x = this._location.x;\r\n            var y = this._location.y + this._location.height / 4 * 3;\r\n            var width = this._location.x2 - this._location.x;\r\n            var len = data.length;\r\n            \r\n            function _getName(i) {\r\n                return (data[i].name != null ? data[i].name : data[i] + '');\r\n            }\r\n            var xList = [];\r\n            if (len > 1) {\r\n                var boundaryGap = width / len;\r\n                boundaryGap = boundaryGap > 50 ? 50 : (boundaryGap < 20 ? 5 : boundaryGap);\r\n                width -= boundaryGap * 2;\r\n                if (timelineOption.type === 'number') {\r\n                    // 平均分布\r\n                    for (var i = 0; i < len; i++) {\r\n                        xList.push(x + boundaryGap + width / (len - 1) * i);\r\n                    }\r\n                }\r\n                else {\r\n                    // 时间比例\r\n                    xList[0] = new Date(_getName(0).replace(/-/g, '/'));\r\n                    xList[len - 1] = new Date(_getName(len - 1).replace(/-/g, '/')) - xList[0];\r\n                    for (var i = 1; i < len; i++) {\r\n                        xList[i] =  x + boundaryGap \r\n                                    + width \r\n                                      * (new Date(_getName(i).replace(/-/g, '/')) - xList[0]) \r\n                                      / xList[len - 1];\r\n                    }\r\n                    xList[0] = x + boundaryGap;\r\n                }\r\n            }\r\n            else {\r\n                xList.push(x + width / 2);\r\n            }\r\n            \r\n            var list = [];\r\n            var curSymbol;\r\n            var n;\r\n            var isEmpty;\r\n            var textAlign;\r\n            var rotation;\r\n            for (var i = 0; i < len; i++) {\r\n                x = xList[i];\r\n                curSymbol = (data[i].symbol && data[i].symbol.toLowerCase()) || symbol;\r\n                if (curSymbol.match('empty')) {\r\n                    curSymbol = curSymbol.replace('empty', '');\r\n                    isEmpty = true;\r\n                }\r\n                else {\r\n                    isEmpty = false;\r\n                }\r\n                if (curSymbol.match('star')) {\r\n                    n = (curSymbol.replace('star','') - 0) || 5;\r\n                    curSymbol = 'star';\r\n                }\r\n                \r\n                dataTextStyle = data[i].textStyle \r\n                                ? zrUtil.merge(data[i].textStyle || {}, textStyle)\r\n                                : textStyle;\r\n                \r\n                textAlign = dataTextStyle.align || 'center';\r\n                \r\n                if (rotate) {\r\n                    textAlign = rotate > 0 ? 'right' : 'left';\r\n                    rotation = [rotate * Math.PI / 180, x, y - 5];\r\n                }\r\n                else {\r\n                    rotation = false;\r\n                }\r\n                \r\n                list.push({\r\n                    x: x,\r\n                    n: n,\r\n                    isEmpty: isEmpty,\r\n                    symbol: curSymbol,\r\n                    symbolSize: data[i].symbolSize || symbolSize,\r\n                    color: data[i].color,\r\n                    borderColor: data[i].borderColor,\r\n                    borderWidth: data[i].borderWidth,\r\n                    name: this._getReformedLabel(i),\r\n                    textColor: dataTextStyle.color,\r\n                    textAlign: textAlign,\r\n                    textBaseline: dataTextStyle.baseline || 'middle',\r\n                    textX: x,\r\n                    textY: y - (rotate ? 5 : 0),\r\n                    textFont: data[i].textStyle ? this.getFont(dataTextStyle) : textFont,\r\n                    rotation: rotation,\r\n                    showLabel: false\r\n                });\r\n            }\r\n            \r\n            return list;\r\n        },\r\n        \r\n        _buildBackground: function () {\r\n            var timelineOption = this.timelineOption;\r\n            var padding = this.reformCssArray(this.timelineOption.padding);\r\n            var width = this._location.width;\r\n            var height = this._location.height;\r\n            \r\n            if (timelineOption.borderWidth !== 0 \r\n                || timelineOption.backgroundColor.replace(/\\s/g,'') != 'rgba(0,0,0,0)'\r\n            ) {\r\n                // 背景\r\n                this.shapeList.push(new RectangleShape({\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    hoverable :false,\r\n                    style: {\r\n                        x: this._location.x - padding[3],\r\n                        y: this._location.y - padding[0],\r\n                        width: width + padding[1] + padding[3],\r\n                        height: height + padding[0] + padding[2],\r\n                        brushType: timelineOption.borderWidth === 0 ? 'fill' : 'both',\r\n                        color: timelineOption.backgroundColor,\r\n                        strokeColor: timelineOption.borderColor,\r\n                        lineWidth: timelineOption.borderWidth\r\n                    }\r\n                }));\r\n            }\r\n        },\r\n\r\n        _buildControl: function() {\r\n            var self = this;\r\n            var timelineOption = this.timelineOption;\r\n            var lineStyle = timelineOption.lineStyle;\r\n            var controlStyle = timelineOption.controlStyle;\r\n            if (timelineOption.controlPosition === 'none') {\r\n                return;\r\n            }\r\n            var iconSize = controlStyle.itemSize;\r\n            var iconGap = controlStyle.itemGap;\r\n            var x;\r\n            if (timelineOption.controlPosition === 'left') {\r\n                x = this._location.x;\r\n                this._location.x += (iconSize + iconGap) * 3;\r\n            }\r\n            else {\r\n                x = this._location.x2 - ((iconSize + iconGap) * 3 - iconGap);\r\n                this._location.x2 -= (iconSize + iconGap) * 3;\r\n            }\r\n            \r\n            var y = this._location.y;\r\n            var iconStyle = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                style: {\r\n                    iconType: 'timelineControl',\r\n                    symbol: 'last',\r\n                    x: x,\r\n                    y: y,\r\n                    width: iconSize,\r\n                    height: iconSize,\r\n                    brushType: 'stroke',\r\n                    color: controlStyle.normal.color,\r\n                    strokeColor: controlStyle.normal.color,\r\n                    lineWidth: lineStyle.width\r\n                },\r\n                highlightStyle: {\r\n                    color: controlStyle.emphasis.color,\r\n                    strokeColor: controlStyle.emphasis.color,\r\n                    lineWidth: lineStyle.width + 1\r\n                },\r\n                clickable: true\r\n            };\r\n            \r\n            this._ctrLastShape = new IconShape(iconStyle);\r\n            this._ctrLastShape.onclick = function() {\r\n                self.last();\r\n            };\r\n            this.shapeList.push(this._ctrLastShape);\r\n            \r\n            x += iconSize + iconGap;\r\n            this._ctrPlayShape = new IconShape(zrUtil.clone(iconStyle));\r\n            this._ctrPlayShape.style.brushType = 'fill';\r\n            this._ctrPlayShape.style.symbol = 'play';\r\n            this._ctrPlayShape.style.status = this.timelineOption.autoPlay ? 'playing' : 'stop';\r\n            this._ctrPlayShape.style.x = x;\r\n            this._ctrPlayShape.onclick = function() {\r\n                if (self._ctrPlayShape.style.status === 'stop') {\r\n                    self.play();\r\n                }\r\n                else {\r\n                    self.stop();\r\n                }\r\n            };\r\n            this.shapeList.push(this._ctrPlayShape);\r\n            \r\n            x += iconSize + iconGap;\r\n            this._ctrNextShape = new IconShape(zrUtil.clone(iconStyle));\r\n            this._ctrNextShape.style.symbol = 'next';\r\n            this._ctrNextShape.style.x = x;\r\n            this._ctrNextShape.onclick = function() {\r\n                self.next();\r\n            };\r\n            this.shapeList.push(this._ctrNextShape);\r\n        },\r\n        \r\n        /**\r\n         * 构建时间轴\r\n         */\r\n        _buildChain: function () {\r\n            var timelineOption = this.timelineOption;\r\n            var lineStyle = timelineOption.lineStyle;\r\n            this._timelineShae = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style: {\r\n                    x: this._location.x,\r\n                    y: this.subPixelOptimize(this._location.y, lineStyle.width),\r\n                    width: this._location.x2 - this._location.x,\r\n                    height: this._location.height,\r\n                    chainPoint: this._chainPoint,\r\n                    brushType:'both',\r\n                    strokeColor: lineStyle.color,\r\n                    lineWidth: lineStyle.width,\r\n                    lineType: lineStyle.type\r\n                },\r\n                hoverable: false,\r\n                clickable: true,\r\n                onclick: this._onclick\r\n            };\r\n\r\n            this._timelineShae = new ChainShape(this._timelineShae);\r\n            this.shapeList.push(this._timelineShae);\r\n        },\r\n\r\n        /**\r\n         * 构建拖拽手柄\r\n         */\r\n        _buildHandle: function () {\r\n            var curPoint = this._chainPoint[this.currentIndex];\r\n            var symbolSize = curPoint.symbolSize + 1;\r\n            symbolSize = symbolSize < 5 ? 5 : symbolSize;\r\n            \r\n            this._handleShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                hoverable: false,\r\n                draggable: true,\r\n                style: {\r\n                    iconType: 'diamond',\r\n                    n: curPoint.n,\r\n                    x: curPoint.x - symbolSize,\r\n                    y: this._location.y + this._location.height / 4 - symbolSize,\r\n                    width: symbolSize * 2,\r\n                    height: symbolSize * 2,\r\n                    brushType:'both',\r\n                    textPosition: 'specific',\r\n                    textX: curPoint.x,\r\n                    textY: this._location.y - this._location.height / 4,\r\n                    textAlign: 'center',\r\n                    textBaseline: 'middle'\r\n                },\r\n                highlightStyle: {},\r\n                ondrift: this._ondrift,\r\n                ondragend: this._ondragend\r\n            };\r\n            \r\n            this._handleShape = new IconShape(this._handleShape);\r\n            this.shapeList.push(this._handleShape);\r\n        },\r\n        \r\n        /**\r\n         * 同步拖拽图形样式 \r\n         */\r\n        _syncHandleShape: function() {\r\n            if (!this.timelineOption.show) {\r\n                return;\r\n            }\r\n            \r\n            var timelineOption = this.timelineOption;\r\n            var cpStyle = timelineOption.checkpointStyle;\r\n            var curPoint = this._chainPoint[this.currentIndex];\r\n\r\n            this._handleShape.style.text = cpStyle.label.show ? curPoint.name : '';\r\n            this._handleShape.style.textFont = curPoint.textFont;\r\n            \r\n            this._handleShape.style.n = curPoint.n;\r\n            if (cpStyle.symbol === 'auto') {\r\n                this._handleShape.style.iconType = curPoint.symbol != 'none' \r\n                                                   ? curPoint.symbol : 'diamond';\r\n            }\r\n            else {\r\n                this._handleShape.style.iconType = cpStyle.symbol;\r\n                if (cpStyle.symbol.match('star')) {\r\n                    this._handleShape.style.n = (cpStyle.symbol.replace('star','') - 0) || 5;\r\n                    this._handleShape.style.iconType = 'star';\r\n                }\r\n            }\r\n            \r\n            var symbolSize;\r\n            if (cpStyle.symbolSize === 'auto') {\r\n                symbolSize = curPoint.symbolSize + 2;\r\n                symbolSize = symbolSize < 5 ? 5 : symbolSize;\r\n            }\r\n            else {\r\n                symbolSize = cpStyle.symbolSize - 0;\r\n            }\r\n            \r\n            this._handleShape.style.color = cpStyle.color === 'auto'\r\n                                            ? (curPoint.color \r\n                                               ? curPoint.color \r\n                                               : timelineOption.controlStyle.emphasis.color\r\n                                              )\r\n                                            : cpStyle.color;\r\n            this._handleShape.style.textColor = cpStyle.label.textStyle.color === 'auto'\r\n                                                ? this._handleShape.style.color\r\n                                                : cpStyle.label.textStyle.color;\r\n            this._handleShape.highlightStyle.strokeColor = \r\n            this._handleShape.style.strokeColor = cpStyle.borderColor === 'auto'\r\n                                ? (curPoint.borderColor ? curPoint.borderColor : '#fff')\r\n                                : cpStyle.borderColor;\r\n            this._handleShape.style.lineWidth = cpStyle.borderWidth === 'auto'\r\n                                ? (curPoint.borderWidth ? curPoint.borderWidth : 0)\r\n                                : (cpStyle.borderWidth - 0);\r\n            this._handleShape.highlightStyle.lineWidth = this._handleShape.style.lineWidth + 1;\r\n            \r\n            this.zr.animate(this._handleShape.id, 'style')\r\n                .when(\r\n                    500,\r\n                    {\r\n                        x: curPoint.x - symbolSize,\r\n                        textX: curPoint.x,\r\n                        y: this._location.y + this._location.height / 4 - symbolSize,\r\n                        width: symbolSize * 2,\r\n                        height: symbolSize * 2\r\n                    }\r\n                )\r\n                .start('ExponentialOut');\r\n        },\r\n\r\n        _findChainIndex: function(x) {\r\n            var chainPoint = this._chainPoint;\r\n            var len = chainPoint.length;\r\n            if (x <= chainPoint[0].x) {\r\n                return 0;\r\n            }\r\n            else if (x >= chainPoint[len - 1].x) {\r\n                return len - 1;\r\n            }\r\n            for (var i = 0; i < len - 1; i++) {\r\n                if (x >= chainPoint[i].x && x <= chainPoint[i + 1].x) {\r\n                    // catch you！\r\n                    return (Math.abs(x - chainPoint[i].x) < Math.abs(x - chainPoint[i + 1].x))\r\n                           ? i : (i + 1);\r\n                }\r\n            }\r\n        },\r\n        \r\n        __onclick: function(param) {\r\n            var x = zrEvent.getX(param.event);\r\n            var newIndex =  this._findChainIndex(x);\r\n            if (newIndex === this.currentIndex) {\r\n                return true; // 啥事都没发生\r\n            }\r\n            \r\n            this.currentIndex = newIndex;\r\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\r\n            clearTimeout(this.playTicket);\r\n            this._onFrame();\r\n        },\r\n        \r\n        /**\r\n         * 拖拽范围控制\r\n         */\r\n        __ondrift: function (shape, dx) {\r\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\r\n            \r\n            var chainPoint = this._chainPoint;\r\n            var len = chainPoint.length;\r\n            var newIndex;\r\n            if (shape.style.x + dx <= chainPoint[0].x - chainPoint[0].symbolSize) {\r\n                shape.style.x = chainPoint[0].x - chainPoint[0].symbolSize;\r\n                newIndex = 0;\r\n            }\r\n            else if (shape.style.x + dx >= chainPoint[len - 1].x - chainPoint[len - 1].symbolSize) {\r\n                shape.style.x = chainPoint[len - 1].x - chainPoint[len - 1].symbolSize;\r\n                newIndex = len - 1;\r\n            }\r\n            else {\r\n                shape.style.x += dx;\r\n                newIndex = this._findChainIndex(shape.style.x);\r\n            }\r\n            var curPoint = chainPoint[newIndex];\r\n            var symbolSize = curPoint.symbolSize + 2;\r\n            shape.style.iconType = curPoint.symbol;\r\n            shape.style.n = curPoint.n;\r\n            shape.style.textX = shape.style.x + symbolSize / 2;\r\n            shape.style.y = this._location.y + this._location.height / 4 - symbolSize;\r\n            shape.style.width = symbolSize * 2;\r\n            shape.style.height = symbolSize * 2;\r\n            shape.style.text = curPoint.name;\r\n            \r\n            //console.log(newIndex)\r\n            if (newIndex === this.currentIndex) {\r\n                return true; // 啥事都没发生\r\n            }\r\n            \r\n            this.currentIndex = newIndex;\r\n            if (this.timelineOption.realtime) {\r\n                clearTimeout(this.playTicket);\r\n                var self = this;\r\n                this.playTicket = setTimeout(function() {\r\n                    self._setCurrentOption();\r\n                },200);\r\n            }\r\n\r\n            return true;\r\n        },\r\n        \r\n        __ondragend: function () {\r\n            this.isDragend = true;\r\n        },\r\n        \r\n        /**\r\n         * 数据项被拖拽出去\r\n         */\r\n        ondragend: function (param, status) {\r\n            if (!this.isDragend || !param.target) {\r\n                // 没有在当前实例上发生拖拽行为则直接返回\r\n                return;\r\n            }\r\n            !this.timelineOption.realtime && this._setCurrentOption();\r\n            \r\n            // 别status = {}赋值啊！！\r\n            status.dragOut = true;\r\n            status.dragIn = true;\r\n            status.needRefresh = false; // 会有消息触发fresh，不用再刷一遍\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n            this._syncHandleShape();\r\n            return;\r\n        },\r\n        \r\n        last: function () {\r\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\r\n            \r\n            this.currentIndex -= 1;\r\n            if (this.currentIndex < 0) {\r\n                this.currentIndex = this.timelineOption.data.length - 1;\r\n            }\r\n            this._onFrame();\r\n            \r\n            return this.currentIndex;\r\n        },\r\n        \r\n        next: function () {\r\n            this.timelineOption.autoPlay && this.stop(); // 停止自动播放\r\n            \r\n            this.currentIndex += 1;\r\n            if (this.currentIndex >= this.timelineOption.data.length) {\r\n                this.currentIndex = 0;\r\n            }\r\n            this._onFrame();\r\n            \r\n            return this.currentIndex;\r\n        },\r\n        \r\n        play: function (targetIndex, autoPlay) {\r\n            if (this._ctrPlayShape && this._ctrPlayShape.style.status != 'playing') {\r\n                this._ctrPlayShape.style.status = 'playing';\r\n                this.zr.modShape(this._ctrPlayShape.id);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            \r\n            \r\n            this.timelineOption.autoPlay = autoPlay != null ? autoPlay : true;\r\n            \r\n            if (!this.timelineOption.autoPlay) {\r\n                clearTimeout(this.playTicket);\r\n            }\r\n            \r\n            this.currentIndex = targetIndex != null ? targetIndex : (this.currentIndex + 1);\r\n            if (this.currentIndex >= this.timelineOption.data.length) {\r\n                this.currentIndex = 0;\r\n            }\r\n            this._onFrame();\r\n            \r\n            return this.currentIndex;\r\n        },\r\n        \r\n        stop: function () {\r\n            if (this._ctrPlayShape && this._ctrPlayShape.style.status != 'stop') {\r\n                this._ctrPlayShape.style.status = 'stop';\r\n                this.zr.modShape(this._ctrPlayShape.id);\r\n                this.zr.refreshNextFrame();\r\n            }\r\n            \r\n            this.timelineOption.autoPlay = false;\r\n            \r\n            clearTimeout(this.playTicket);\r\n            \r\n            return this.currentIndex;\r\n        },\r\n        \r\n        /**\r\n         * 避免dataZoom带来两次refresh，不设refresh接口，resize重复一下buildshape逻辑 \r\n         */\r\n        resize: function () {\r\n            if (this.timelineOption.show) {\r\n                this.clear();\r\n                this._buildShape();\r\n                this._syncHandleShape();\r\n            }\r\n        },\r\n        \r\n        setTheme: function(needRefresh) {\r\n            this.timelineOption = this.reformOption(zrUtil.clone(this.option.timeline));\r\n            // 通用字体设置\r\n            this.timelineOption.label.textStyle = this.getTextStyle(\r\n                this.timelineOption.label.textStyle\r\n            );\r\n            this.timelineOption.checkpointStyle.label.textStyle = this.getTextStyle(\r\n                this.timelineOption.checkpointStyle.label.textStyle\r\n            );\r\n            if (!this.myChart.canvasSupported) {\r\n                // 不支持Canvas的强制关闭实时动画\r\n                this.timelineOption.realtime = false;\r\n            }\r\n            \r\n            if (this.timelineOption.show && needRefresh) {\r\n                this.clear();\r\n                this._buildShape();\r\n                this._syncHandleShape();\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * 释放后实例不可用，重载基类方法\r\n         */\r\n        onbeforDispose: function () {\r\n            clearTimeout(this.playTicket);\r\n        }\r\n    };\r\n    \r\n    function timelineControl(ctx, style) {\r\n        var lineWidth = 2;//style.lineWidth;\r\n        var x = style.x + lineWidth;\r\n        var y = style.y + lineWidth + 2;\r\n        var width = style.width - lineWidth;\r\n        var height = style.height - lineWidth;\r\n        \r\n        \r\n        var symbol = style.symbol;\r\n        if (symbol === 'last') {\r\n            ctx.moveTo(x + width - 2, y + height / 3);\r\n            ctx.lineTo(x + width - 2, y);\r\n            ctx.lineTo(x + 2, y + height / 2);\r\n            ctx.lineTo(x + width - 2, y + height);\r\n            ctx.lineTo(x + width - 2, y + height / 3 * 2);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x, y);\r\n        } \r\n        else if (symbol === 'next') {\r\n            ctx.moveTo(x + 2, y + height / 3);\r\n            ctx.lineTo(x + 2, y);\r\n            ctx.lineTo(x + width - 2, y + height / 2);\r\n            ctx.lineTo(x + 2, y + height);\r\n            ctx.lineTo(x + 2, y + height / 3 * 2);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x, y);\r\n        }\r\n        else if (symbol === 'play') {\r\n            if (style.status === 'stop') {\r\n                ctx.moveTo(x + 2, y);\r\n                ctx.lineTo(x + width - 2, y + height / 2);\r\n                ctx.lineTo(x + 2, y + height);\r\n                ctx.lineTo(x + 2, y);\r\n            }\r\n            else {\r\n                var delta = style.brushType === 'both' ? 2 : 3;\r\n                ctx.rect(x + 2, y, delta, height);\r\n                ctx.rect(x + width - delta - 2, y, delta, height);\r\n            }\r\n        }\r\n        else if (symbol.match('image')) {\r\n            var imageLocation = '';\r\n            imageLocation = symbol.replace(\r\n                    new RegExp('^image:\\\\/\\\\/'), ''\r\n                );\r\n            symbol = IconShape.prototype.iconLibrary.image;\r\n            symbol(ctx, {\r\n                x: x,\r\n                y: y,\r\n                width: width,\r\n                height: height,\r\n                image: imageLocation\r\n            });\r\n        }\r\n    }\r\n    IconShape.prototype.iconLibrary['timelineControl'] = timelineControl;\r\n    \r\n    zrUtil.inherits(Timeline, Base);\r\n    \r\n    require('../component').define('timeline', Timeline);\r\n    \r\n    return Timeline;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/timeline.js\n// module id = 81\n// module chunks = 0","/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：时间轴线\r\n */\r\ndefine(function (require) {\r\n    var Base = require('zrenderjs/shape/Base');\r\n    var IconShape = require('./Icon');\r\n\r\n    var dashedLineTo = require('zrenderjs/shape/util/dashedLineTo');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var matrix = require('zrenderjs/tool/matrix');\r\n\r\n    function Chain(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    Chain.prototype =  {\r\n        type : 'chain',\r\n\r\n        /**\r\n         * 画刷\r\n         * @param ctx       画布句柄\r\n         * @param e         形状实体\r\n         * @param isHighlight   是否为高亮状态\r\n         * @param updateCallback 需要异步加载资源的shape可以通过这个callback(e)\r\n         *                       让painter更新视图，base.brush没用，需要的话重载brush\r\n         */\r\n        brush : function (ctx, isHighlight) {\r\n            var style = this.style;\r\n\r\n            if (isHighlight) {\r\n                // 根据style扩展默认高亮样式\r\n                style = this.getHighlightStyle(\r\n                    style,\r\n                    this.highlightStyle || {}\r\n                );\r\n            }\r\n\r\n            ctx.save();\r\n            this.setContext(ctx, style);\r\n\r\n            // 设置transform\r\n            this.setTransform(ctx);\r\n\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            this.buildLinePath(ctx, style);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n            \r\n            this.brushSymbol(ctx, style);\r\n\r\n            ctx.restore();\r\n            return;\r\n        },\r\n\r\n        /**\r\n         * 创建线条路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildLinePath : function (ctx, style) {\r\n            var x = style.x;\r\n            var y = style.y + 5;\r\n            var width = style.width;\r\n            var height = style.height / 2 - 10;\r\n\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x, y + height);\r\n            ctx.moveTo(x + width, y);\r\n            ctx.lineTo(x + width, y + height);\r\n\r\n            ctx.moveTo(x, y + height / 2);\r\n            if (!style.lineType || style.lineType == 'solid') {\r\n                ctx.lineTo(x + width, y + height / 2);\r\n            }\r\n            else if (style.lineType == 'dashed' || style.lineType == 'dotted') {\r\n                var dashLength = (style.lineWidth || 1)\r\n                             * (style.lineType == 'dashed' ? 5 : 1);\r\n                dashedLineTo(ctx, x, y + height / 2, x + width, y + height / 2, dashLength);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 标线始末标注\r\n         */\r\n        brushSymbol : function (ctx, style) {\r\n            var y = style.y + style.height / 4;\r\n            ctx.save();\r\n\r\n            var chainPoint = style.chainPoint;\r\n            var curPoint;\r\n            for (var idx = 0, l = chainPoint.length; idx < l; idx++) {\r\n                curPoint = chainPoint[idx];\r\n                if (curPoint.symbol != 'none') {\r\n                    ctx.beginPath();\r\n                    var symbolSize = curPoint.symbolSize;\r\n                    IconShape.prototype.buildPath(\r\n                        ctx,\r\n                        {\r\n                            iconType : curPoint.symbol,\r\n                            x : curPoint.x - symbolSize,\r\n                            y : y - symbolSize,\r\n                            width : symbolSize * 2,\r\n                            height : symbolSize * 2,\r\n                            n : curPoint.n\r\n                        }\r\n                    );\r\n                    ctx.fillStyle = curPoint.isEmpty ? '#fff' : style.strokeColor;\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n                    ctx.stroke();\r\n                }\r\n\r\n                if (curPoint.showLabel) {\r\n                    ctx.font = curPoint.textFont;\r\n                    ctx.fillStyle = curPoint.textColor;\r\n                    ctx.textAlign = curPoint.textAlign;\r\n                    ctx.textBaseline = curPoint.textBaseline;\r\n                    if (curPoint.rotation) {\r\n                        ctx.save();\r\n                        this._updateTextTransform(ctx, curPoint.rotation);\r\n                        ctx.fillText(curPoint.name, curPoint.textX, curPoint.textY);\r\n                        ctx.restore();\r\n                    }\r\n                    else {\r\n                        ctx.fillText(curPoint.name, curPoint.textX, curPoint.textY);\r\n                    }\r\n                }\r\n            }\r\n\r\n            ctx.restore();\r\n        },\r\n\r\n        _updateTextTransform : function (ctx, rotation) {\r\n            var _transform = matrix.create();\r\n            matrix.identity(_transform);\r\n\r\n            if (rotation[0] !== 0) {\r\n                var originX = rotation[1] || 0;\r\n                var originY = rotation[2] || 0;\r\n                if (originX || originY) {\r\n                    matrix.translate(\r\n                        _transform, _transform, [-originX, -originY]\r\n                    );\r\n                }\r\n                matrix.rotate(_transform, _transform, rotation[0]);\r\n                if (originX || originY) {\r\n                    matrix.translate(\r\n                        _transform, _transform, [originX, originY]\r\n                    );\r\n                }\r\n            }\r\n\r\n            // 保存这个变换矩阵\r\n            ctx.transform.apply(ctx, _transform);\r\n        },\r\n\r\n        isCover : function (x, y) {\r\n            var rect = this.style;\r\n            if (x >= rect.x\r\n                && x <= (rect.x + rect.width)\r\n                && y >= rect.y\r\n                && y <= (rect.y + rect.height)\r\n            ) {\r\n                // 矩形内\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Chain, Base);\r\n\r\n    return Chain;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/shape/Chain.js\n// module id = 82\n// module chunks = 0","\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var util = require('../tool/util');\r\n        var zrColor = require('../tool/color');\r\n        var RectangleShape = require('../shape/Rectangle');\r\n\r\n        function Bar(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Bar, Base);\r\n\r\n        \r\n        /**\r\n         * 进度条\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Bar.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            // 特效默认配置\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#888'\r\n                    },\r\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\r\n                    effectOption : {\r\n                        x : 0,\r\n                        y : this.canvasHeight / 2 - 30,\r\n                        width : this.canvasWidth,\r\n                        height : 5,\r\n                        brushType : 'fill',\r\n                        timeInterval : 100\r\n                    }\r\n                }\r\n            );\r\n\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n\r\n            var effectOption = options.effectOption;\r\n\r\n            // 初始化动画元素\r\n            var barShape = new RectangleShape({\r\n                highlightStyle : util.clone(effectOption)\r\n            });\r\n\r\n            barShape.highlightStyle.color =\r\n                effectOption.color\r\n                || zrColor.getLinearGradient(\r\n                    effectOption.x,\r\n                    effectOption.y,\r\n                    effectOption.x + effectOption.width,\r\n                    effectOption.y + effectOption.height,\r\n                    [ [ 0, '#ff6400' ], [ 0.5, '#ffe100' ], [ 1, '#b1ff00' ] ]\r\n                );\r\n\r\n            if (options.progress != null) {\r\n                // 指定进度\r\n                addShapeHandle(background);\r\n\r\n                barShape.highlightStyle.width =\r\n                    this.adjust(options.progress, [ 0, 1 ])\r\n                    * options.effectOption.width;\r\n                    \r\n                addShapeHandle(barShape);\r\n                addShapeHandle(textShape);\r\n\r\n                refreshHandle();\r\n                return;\r\n            }\r\n            else {\r\n                // 循环显示\r\n                barShape.highlightStyle.width = 0;\r\n                return setInterval(\r\n                    function () {\r\n                        addShapeHandle(background);\r\n\r\n                        if (barShape.highlightStyle.width < effectOption.width) {\r\n                            barShape.highlightStyle.width += 8;\r\n                        }\r\n                        else {\r\n                            barShape.highlightStyle.width = 0;\r\n                        }\r\n                        addShapeHandle(barShape);\r\n                        addShapeHandle(textShape);\r\n                        refreshHandle();\r\n                    },\r\n                    effectOption.timeInterval\r\n                );\r\n            }\r\n        };\r\n\r\n        return Bar;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/loadingEffect/Bar.js\n// module id = 83\n// module chunks = 0","\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var util = require('../tool/util');\r\n        var zrColor = require('../tool/color');\r\n        var CircleShape = require('../shape/Circle');\r\n\r\n        function Bubble(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Bubble, Base);\r\n\r\n        /**\r\n         * 泡泡\r\n         *\r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Bubble.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            \r\n            // 特效默认配置\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#888'\r\n                    },\r\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\r\n                    effect : {\r\n                        n : 50,\r\n                        lineWidth : 2,\r\n                        brushType : 'stroke',\r\n                        color : 'random',\r\n                        timeInterval : 100\r\n                    }\r\n                }\r\n            );\r\n\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n\r\n            var effectOption = options.effect;\r\n            var n = effectOption.n;\r\n            var brushType = effectOption.brushType;\r\n            var lineWidth = effectOption.lineWidth;\r\n\r\n            var shapeList = [];\r\n            var canvasWidth = this.canvasWidth;\r\n            var canvasHeight = this.canvasHeight;\r\n            \r\n            // 初始化动画元素\r\n            for (var i = 0; i < n; i++) {\r\n                var color = effectOption.color == 'random'\r\n                    ? zrColor.alpha(zrColor.random(), 0.3)\r\n                    : effectOption.color;\r\n\r\n                shapeList[i] = new CircleShape({\r\n                    highlightStyle : {\r\n                        x : Math.ceil(Math.random() * canvasWidth),\r\n                        y : Math.ceil(Math.random() * canvasHeight),\r\n                        r : Math.ceil(Math.random() * 40),\r\n                        brushType : brushType,\r\n                        color : color,\r\n                        strokeColor : color,\r\n                        lineWidth : lineWidth\r\n                    },\r\n                    animationY : Math.ceil(Math.random() * 20)\r\n                });\r\n            }\r\n            \r\n            return setInterval(\r\n                function () {\r\n                    addShapeHandle(background);\r\n                    \r\n                    for (var i = 0; i < n; i++) {\r\n                        var style = shapeList[i].highlightStyle;\r\n\r\n                        if (style.y - shapeList[i].animationY + style.r <= 0) {\r\n                            shapeList[i].highlightStyle.y = canvasHeight + style.r;\r\n                            shapeList[i].highlightStyle.x = Math.ceil(\r\n                                Math.random() * canvasWidth\r\n                            );\r\n                        }\r\n                        shapeList[i].highlightStyle.y -=\r\n                            shapeList[i].animationY;\r\n\r\n                        addShapeHandle(shapeList[i]);\r\n                    }\r\n\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return Bubble;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/loadingEffect/Bubble.js\n// module id = 84\n// module chunks = 0","\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var util = require('../tool/util');\r\n        var zrColor = require('../tool/color');\r\n        var LineShape = require('../shape/Line');\r\n\r\n        function DynamicLine(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(DynamicLine, Base);\r\n\r\n\r\n        /**\r\n         * 动态线\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        DynamicLine.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            // 特效默认配置\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#fff'\r\n                    },\r\n                    backgroundColor : 'rgba(0, 0, 0, 0.8)',\r\n                    effectOption : {\r\n                        n : 30,\r\n                        lineWidth : 1,\r\n                        color : 'random',\r\n                        timeInterval : 100\r\n                    }\r\n                }\r\n            );\r\n\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n\r\n            var effectOption = options.effectOption;\r\n            var n = effectOption.n;\r\n            var lineWidth = effectOption.lineWidth;\r\n\r\n            var shapeList = [];\r\n            var canvasWidth = this.canvasWidth;\r\n            var canvasHeight = this.canvasHeight;\r\n            \r\n            // 初始化动画元素\r\n            for (var i = 0; i < n; i++) {\r\n                var xStart = -Math.ceil(Math.random() * 1000);\r\n                var len = Math.ceil(Math.random() * 400);\r\n                var pos = Math.ceil(Math.random() * canvasHeight);\r\n\r\n                var color = effectOption.color == 'random'\r\n                    ? zrColor.random()\r\n                    : effectOption.color;\r\n                \r\n                shapeList[i] = new LineShape({\r\n                    highlightStyle : {\r\n                        xStart : xStart,\r\n                        yStart : pos,\r\n                        xEnd : xStart + len,\r\n                        yEnd : pos,\r\n                        strokeColor : color,\r\n                        lineWidth : lineWidth\r\n                    },\r\n                    animationX : Math.ceil(Math.random() * 100),\r\n                    len : len\r\n                });\r\n            }\r\n            \r\n            return setInterval(\r\n                function() {\r\n                    addShapeHandle(background);\r\n                    \r\n                    for (var i = 0; i < n; i++) {\r\n                        var style = shapeList[i].highlightStyle;\r\n\r\n                        if (style.xStart >= canvasWidth) {\r\n                            \r\n                            shapeList[i].len = Math.ceil(Math.random() * 400);\r\n                            style.xStart = -400;\r\n                            style.xEnd = -400 + shapeList[i].len;\r\n                            style.yStart = Math.ceil(Math.random() * canvasHeight);\r\n                            style.yEnd = style.yStart;\r\n                        }\r\n\r\n                        style.xStart += shapeList[i].animationX;\r\n                        style.xEnd += shapeList[i].animationX;\r\n\r\n                        addShapeHandle(shapeList[i]);\r\n                    }\r\n\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return DynamicLine;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/loadingEffect/DynamicLine.js\n// module id = 85\n// module chunks = 0","\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var util = require('../tool/util');\r\n        var zrColor = require('../tool/color');\r\n        var RingShape = require('../shape/Ring');\r\n        var SectorShape = require('../shape/Sector');\r\n\r\n        function Ring(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Ring, Base);\r\n\r\n\r\n        /**\r\n         * 圆环\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Ring.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            \r\n            // 特效默认配置\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#07a'\r\n                    },\r\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)',\r\n                    effect : {\r\n                        x : this.canvasWidth / 2,\r\n                        y : this.canvasHeight / 2,\r\n                        r0 : 60,\r\n                        r : 100,\r\n                        color : '#bbdcff',\r\n                        brushType: 'fill',\r\n                        textPosition : 'inside',\r\n                        textFont : 'normal 30px verdana',\r\n                        textColor : 'rgba(30, 144, 255, 0.6)',\r\n                        timeInterval : 100\r\n                    }\r\n                }\r\n            );\r\n\r\n            var effectOption = options.effect;\r\n\r\n            var textStyle = options.textStyle;\r\n            if (textStyle.x == null) {\r\n                textStyle.x = effectOption.x;\r\n            }\r\n            if (textStyle.y == null) {\r\n                textStyle.y = (effectOption.y + (effectOption.r0 + effectOption.r) / 2 - 5);\r\n            }\r\n            \r\n            var textShape = this.createTextShape(options.textStyle);\r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n\r\n            var x = effectOption.x;\r\n            var y = effectOption.y;\r\n            var r0 = effectOption.r0 + 6;\r\n            var r = effectOption.r - 6;\r\n            var color = effectOption.color;\r\n            var darkColor = zrColor.lift(color, 0.1);\r\n\r\n            var shapeRing = new RingShape({\r\n                highlightStyle : util.clone(effectOption)\r\n            });\r\n\r\n            // 初始化动画元素\r\n            var shapeList = [];\r\n            var clolrList = zrColor.getGradientColors(\r\n                [ '#ff6400', '#ffe100', '#97ff00' ], 25\r\n            );\r\n            var preAngle = 15;\r\n            var endAngle = 240;\r\n\r\n            for (var i = 0; i < 16; i++) {\r\n                shapeList.push(new SectorShape({\r\n                    highlightStyle  : {\r\n                        x : x,\r\n                        y : y,\r\n                        r0 : r0,\r\n                        r : r,\r\n                        startAngle : endAngle - preAngle,\r\n                        endAngle : endAngle,\r\n                        brushType: 'fill',\r\n                        color : darkColor\r\n                    },\r\n                    _color : zrColor.getLinearGradient(\r\n                        x + r0 * Math.cos(endAngle, true),\r\n                        y - r0 * Math.sin(endAngle, true),\r\n                        x + r0 * Math.cos(endAngle - preAngle, true),\r\n                        y - r0 * Math.sin(endAngle - preAngle, true),\r\n                        [\r\n                            [ 0, clolrList[i * 2] ],\r\n                            [ 1, clolrList[i * 2 + 1] ]\r\n                        ]\r\n                    )\r\n                }));\r\n                endAngle -= preAngle;\r\n            }\r\n            endAngle = 360;\r\n            for (var i = 0; i < 4; i++) {\r\n                shapeList.push(new SectorShape({\r\n                    highlightStyle  : {\r\n                        x : x,\r\n                        y : y,\r\n                        r0 : r0,\r\n                        r : r,\r\n                        startAngle : endAngle - preAngle,\r\n                        endAngle : endAngle,\r\n                        brushType: 'fill',\r\n                        color : darkColor\r\n                    },\r\n                    _color : zrColor.getLinearGradient(\r\n                        x + r0 * Math.cos(endAngle, true),\r\n                        y - r0 * Math.sin(endAngle, true),\r\n                        x + r0 * Math.cos(endAngle - preAngle, true),\r\n                        y - r0 * Math.sin(endAngle - preAngle, true),\r\n                        [\r\n                            [ 0, clolrList[i * 2 + 32] ],\r\n                            [ 1, clolrList[i * 2 + 33] ]\r\n                        ]\r\n                    )\r\n                }));\r\n                endAngle -= preAngle;\r\n            }\r\n\r\n            var n = 0;\r\n            if (options.progress != null) {\r\n                // 指定进度\r\n                addShapeHandle(background);\r\n\r\n                n = this.adjust(options.progress, [ 0, 1 ]).toFixed(2) * 100 / 5;\r\n                shapeRing.highlightStyle.text = n * 5 + '%';\r\n                addShapeHandle(shapeRing);\r\n\r\n                for (var i = 0; i < 20; i++) {\r\n                    shapeList[i].highlightStyle.color = i < n\r\n                        ? shapeList[i]._color : darkColor;\r\n                    addShapeHandle(shapeList[i]);\r\n                }\r\n\r\n                addShapeHandle(textShape);\r\n                refreshHandle();\r\n                return;\r\n            }\r\n\r\n            // 循环显示\r\n            return setInterval(\r\n                function() {\r\n                    addShapeHandle(background);\r\n\r\n                    n += n >= 20 ? -20 : 1;\r\n\r\n                    // shapeRing.highlightStyle.text = n * 5 + '%';\r\n                    addShapeHandle(shapeRing);\r\n\r\n                    for (var i = 0; i < 20; i++) {\r\n                        shapeList[i].highlightStyle.color = i < n\r\n                            ? shapeList[i]._color : darkColor;\r\n                        addShapeHandle(shapeList[i]);\r\n                    }\r\n\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return Ring;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/loadingEffect/Ring.js\n// module id = 86\n// module chunks = 0","\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var util = require('../tool/util');\r\n        var zrColor = require('../tool/color');\r\n        var zrArea = require('../tool/area');\r\n        var SectorShape = require('../shape/Sector');\r\n\r\n        function Spin(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Spin, Base);\r\n\r\n        /**\r\n         * 旋转\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Spin.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#fff',\r\n                        textAlign : 'start'\r\n                    },\r\n                    backgroundColor : 'rgba(0, 0, 0, 0.8)'\r\n                }\r\n            );\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            \r\n            var textGap = 10;\r\n            var textWidth = zrArea.getTextWidth(\r\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\r\n            );\r\n            var textHeight = zrArea.getTextHeight(\r\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\r\n            );\r\n            \r\n            // 特效默认配置\r\n            var effectOption =  util.merge(\r\n                this.options.effect || {},\r\n                {\r\n                    r0 : 9,\r\n                    r : 15,\r\n                    n : 18,\r\n                    color : '#fff',\r\n                    timeInterval : 100\r\n                }\r\n            );\r\n            \r\n            var location = this.getLocation(\r\n                this.options.textStyle,\r\n                textWidth + textGap + effectOption.r * 2,\r\n                Math.max(effectOption.r * 2, textHeight)\r\n            );\r\n            effectOption.x = location.x + effectOption.r;\r\n            effectOption.y = textShape.highlightStyle.y = location.y + location.height / 2;\r\n            textShape.highlightStyle.x = effectOption.x + effectOption.r + textGap;\r\n            \r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n            var n = effectOption.n;\r\n            var x = effectOption.x;\r\n            var y = effectOption.y;\r\n            var r0 = effectOption.r0;\r\n            var r = effectOption.r;\r\n            var color = effectOption.color;\r\n\r\n            // 初始化动画元素\r\n            var shapeList = [];\r\n            var preAngle = Math.round(180 / n);\r\n            for (var i = 0; i < n; i++) {\r\n                shapeList[i] = new SectorShape({\r\n                    highlightStyle  : {\r\n                        x : x,\r\n                        y : y,\r\n                        r0 : r0,\r\n                        r : r,\r\n                        startAngle : preAngle * i * 2,\r\n                        endAngle : preAngle * i * 2 + preAngle,\r\n                        color : zrColor.alpha(color, (i + 1) / n),\r\n                        brushType: 'fill'\r\n                    }\r\n                });\r\n            }\r\n\r\n            var pos = [ 0, x, y ];\r\n\r\n            return setInterval(\r\n                function() {\r\n                    addShapeHandle(background);\r\n                    pos[0] -= 0.3;\r\n                    for (var i = 0; i < n; i++) {\r\n                        shapeList[i].rotation = pos;\r\n                        addShapeHandle(shapeList[i]);\r\n                    }\r\n\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return Spin;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/loadingEffect/Spin.js\n// module id = 87\n// module chunks = 0","\r\ndefine(\r\n    function (require) {\r\n        var Base = require('./Base');\r\n        var util = require('../tool/util');\r\n        var zrArea = require('../tool/area');\r\n        var RingShape = require('../shape/Ring');\r\n        var DropletShape = require('../shape/Droplet');\r\n        var CircleShape = require('../shape/Circle');\r\n\r\n        function Whirling(options) {\r\n            Base.call(this, options);\r\n        }\r\n        util.inherits(Whirling, Base);\r\n\r\n        /**\r\n         * 旋转水滴\r\n         * \r\n         * @param {Object} addShapeHandle\r\n         * @param {Object} refreshHandle\r\n         */\r\n        Whirling.prototype._start = function (addShapeHandle, refreshHandle) {\r\n            var options = util.merge(\r\n                this.options,\r\n                {\r\n                    textStyle : {\r\n                        color : '#888',\r\n                        textAlign : 'start'\r\n                    },\r\n                    backgroundColor : 'rgba(250, 250, 250, 0.8)'\r\n                }\r\n            );\r\n            var textShape = this.createTextShape(options.textStyle);\r\n            \r\n            var textGap = 10;\r\n            var textWidth = zrArea.getTextWidth(\r\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\r\n            );\r\n            var textHeight = zrArea.getTextHeight(\r\n                textShape.highlightStyle.text, textShape.highlightStyle.textFont\r\n            );\r\n            \r\n            // 特效默认配置\r\n            var effectOption = util.merge(\r\n                this.options.effect || {},\r\n                {\r\n                    r : 18,\r\n                    colorIn : '#fff',\r\n                    colorOut : '#555',\r\n                    colorWhirl : '#6cf',\r\n                    timeInterval : 50\r\n                }\r\n            );\r\n            \r\n            var location = this.getLocation(\r\n                this.options.textStyle,\r\n                textWidth + textGap + effectOption.r * 2,\r\n                Math.max(effectOption.r * 2, textHeight)\r\n            );\r\n            effectOption.x = location.x + effectOption.r;\r\n            effectOption.y = textShape.highlightStyle.y = location.y + location.height / 2;\r\n            textShape.highlightStyle.x = effectOption.x + effectOption.r + textGap;\r\n            \r\n            var background = this.createBackgroundShape(options.backgroundColor);\r\n            // 初始化动画元素\r\n            var droplet = new DropletShape({\r\n                highlightStyle : {\r\n                    a : Math.round(effectOption.r / 2),\r\n                    b : Math.round(effectOption.r - effectOption.r / 6),\r\n                    brushType : 'fill',\r\n                    color : effectOption.colorWhirl\r\n                }\r\n            });\r\n            var circleIn = new CircleShape({\r\n                highlightStyle : {\r\n                    r : Math.round(effectOption.r / 6),\r\n                    brushType : 'fill',\r\n                    color : effectOption.colorIn\r\n                }\r\n            });\r\n            var circleOut = new RingShape({\r\n                highlightStyle : {\r\n                    r0 : Math.round(effectOption.r - effectOption.r / 3),\r\n                    r : effectOption.r,\r\n                    brushType : 'fill',\r\n                    color : effectOption.colorOut\r\n                }\r\n            });\r\n\r\n            var pos = [ 0, effectOption.x, effectOption.y ];\r\n\r\n            droplet.highlightStyle.x\r\n                = circleIn.highlightStyle.x\r\n                = circleOut.highlightStyle.x\r\n                = pos[1];\r\n            droplet.highlightStyle.y\r\n                = circleIn.highlightStyle.y\r\n                = circleOut.highlightStyle.y\r\n                = pos[2];\r\n\r\n            return setInterval(\r\n                function() {\r\n                    addShapeHandle(background);\r\n                    addShapeHandle(circleOut);\r\n                    pos[0] -= 0.3;\r\n                    droplet.rotation = pos;\r\n                    addShapeHandle(droplet);\r\n                    addShapeHandle(circleIn);\r\n                    addShapeHandle(textShape);\r\n                    refreshHandle();\r\n                },\r\n                effectOption.timeInterval\r\n            );\r\n        };\r\n\r\n        return Whirling;\r\n    }\r\n);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrenderjs/loadingEffect/Whirling.js\n// module id = 88\n// module chunks = 0","define(function() {\r\n\r\nvar theme = {\r\n    // 默认色板\r\n    color: [\r\n        '#2ec7c9','#b6a2de','#5ab1ef','#ffb980','#d87a80',\r\n        '#8d98b3','#e5cf0d','#97b552','#95706d','#dc69aa',\r\n        '#07a2a4','#9a7fd1','#588dd5','#f5994e','#c05050',\r\n        '#59678c','#c9ab00','#7eb00a','#6f5553','#c14089'\r\n    ],\r\n\r\n    // 图表标题\r\n    title: {\r\n        textStyle: {\r\n            fontWeight: 'normal',\r\n            color: '#008acd'          // 主标题文字颜色\r\n        }\r\n    },\r\n    \r\n    // 值域\r\n    dataRange: {\r\n        itemWidth: 15,\r\n        color: ['#5ab1ef','#e0ffff']\r\n    },\r\n\r\n    // 工具箱\r\n    toolbox: {\r\n        color : ['#1e90ff', '#1e90ff', '#1e90ff', '#1e90ff'],\r\n        effectiveColor : '#ff4500'\r\n    },\r\n\r\n    // 提示框\r\n    tooltip: {\r\n        backgroundColor: 'rgba(50,50,50,0.5)',     // 提示背景颜色，默认为透明度为0.7的黑色\r\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n            type : 'line',         // 默认为直线，可选为：'line' | 'shadow'\r\n            lineStyle : {          // 直线指示器样式设置\r\n                color: '#008acd'\r\n            },\r\n            crossStyle: {\r\n                color: '#008acd'\r\n            },\r\n            shadowStyle : {                     // 阴影指示器样式设置\r\n                color: 'rgba(200,200,200,0.2)'\r\n            }\r\n        }\r\n    },\r\n\r\n    // 区域缩放控制器\r\n    dataZoom: {\r\n        dataBackgroundColor: '#efefff',            // 数据背景颜色\r\n        fillerColor: 'rgba(182,162,222,0.2)',   // 填充颜色\r\n        handleColor: '#008acd'    // 手柄颜色\r\n    },\r\n\r\n    // 网格\r\n    grid: {\r\n        borderColor: '#eee'\r\n    },\r\n\r\n    // 类目轴\r\n    categoryAxis: {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#008acd'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: ['#eee']\r\n            }\r\n        }\r\n    },\r\n\r\n    // 数值型坐标轴默认参数\r\n    valueAxis: {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#008acd'\r\n            }\r\n        },\r\n        splitArea : {\r\n            show : true,\r\n            areaStyle : {\r\n                color: ['rgba(250,250,250,0.1)','rgba(200,200,200,0.1)']\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: ['#eee']\r\n            }\r\n        }\r\n    },\r\n\r\n    polar : {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#ddd'\r\n            }\r\n        },\r\n        splitArea : {\r\n            show : true,\r\n            areaStyle : {\r\n                color: ['rgba(250,250,250,0.2)','rgba(200,200,200,0.2)']\r\n            }\r\n        },\r\n        splitLine : {\r\n            lineStyle : {\r\n                color : '#ddd'\r\n            }\r\n        }\r\n    },\r\n\r\n    timeline : {\r\n        lineStyle : {\r\n            color : '#008acd'\r\n        },\r\n        controlStyle : {\r\n            normal : { color : '#008acd'},\r\n            emphasis : { color : '#008acd'}\r\n        },\r\n        symbol : 'emptyCircle',\r\n        symbolSize : 3\r\n    },\r\n\r\n    // 柱形图默认参数\r\n    bar: {\r\n        itemStyle: {\r\n            normal: {\r\n                barBorderRadius: 5\r\n            },\r\n            emphasis: {\r\n                barBorderRadius: 5\r\n            }\r\n        }\r\n    },\r\n\r\n    // 折线图默认参数\r\n    line: {\r\n        smooth : true,\r\n        symbol: 'emptyCircle',  // 拐点图形类型\r\n        symbolSize: 3           // 拐点图形大小\r\n    },\r\n    \r\n    // K线图默认参数\r\n    k: {\r\n        itemStyle: {\r\n            normal: {\r\n                color: '#d87a80',       // 阳线填充颜色\r\n                color0: '#2ec7c9',      // 阴线填充颜色\r\n                lineStyle: {\r\n                    color: '#d87a80',   // 阳线边框颜色\r\n                    color0: '#2ec7c9'   // 阴线边框颜色\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    // 散点图默认参数\r\n    scatter: {\r\n        symbol: 'circle',    // 图形类型\r\n        symbolSize: 4        // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n    },\r\n\r\n    // 雷达图默认参数\r\n    radar : {\r\n        symbol: 'emptyCircle',    // 图形类型\r\n        symbolSize:3\r\n        //symbol: null,         // 拐点图形类型\r\n        //symbolRotate : null,  // 图形旋转控制\r\n    },\r\n\r\n    map: {\r\n        itemStyle: {\r\n            normal: {\r\n                areaStyle: {\r\n                    color: '#ddd'\r\n                },\r\n                label: {\r\n                    textStyle: {\r\n                        color: '#d87a80'\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {                 // 也是选中样式\r\n                areaStyle: {\r\n                    color: '#fe994e'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    force : {\r\n        itemStyle: {\r\n            normal: {\r\n                linkStyle : {\r\n                    color : '#1e90ff'\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    chord : {\r\n        itemStyle : {\r\n            normal : {\r\n                borderWidth: 1,\r\n                borderColor: 'rgba(128, 128, 128, 0.5)',\r\n                chordStyle : {\r\n                    lineStyle : {\r\n                        color : 'rgba(128, 128, 128, 0.5)'\r\n                    }\r\n                }\r\n            },\r\n            emphasis : {\r\n                borderWidth: 1,\r\n                borderColor: 'rgba(128, 128, 128, 0.5)',\r\n                chordStyle : {\r\n                    lineStyle : {\r\n                        color : 'rgba(128, 128, 128, 0.5)'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    gauge : {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: [[0.2, '#2ec7c9'],[0.8, '#5ab1ef'],[1, '#d87a80']], \r\n                width: 10\r\n            }\r\n        },\r\n        axisTick: {            // 坐标轴小标记\r\n            splitNumber: 10,   // 每份split细分多少段\r\n            length :15,        // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: 'auto'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            length :22,         // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: 'auto'\r\n            }\r\n        },\r\n        pointer : {\r\n            width : 5\r\n        }\r\n    },\r\n    \r\n    textStyle: {\r\n        fontFamily: '微软雅黑, Arial, Verdana, sans-serif'\r\n    }\r\n};\r\n\r\n    return theme;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/theme/macarons.js\n// module id = 89\n// module chunks = 0","define(function() {\r\n\r\nvar theme = {\r\n    // 默认色板\r\n    color: [\r\n        '#C1232B','#B5C334','#FCCE10','#E87C25','#27727B',\r\n        '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD',\r\n        '#D7504B','#C6E579','#F4E001','#F0805A','#26C0C0'\r\n    ],\r\n\r\n    // 图表标题\r\n    title: {\r\n        textStyle: {\r\n            fontWeight: 'normal',\r\n            color: '#27727B'          // 主标题文字颜色\r\n        }\r\n    },\r\n\r\n    // 值域\r\n    dataRange: {\r\n        x:'right',\r\n        y:'center',\r\n        itemWidth: 5,\r\n        itemHeight:25,\r\n        color:['#C1232B','#FCCE10']\r\n    },\r\n\r\n    toolbox: {\r\n        color : [\r\n            '#C1232B','#B5C334','#FCCE10','#E87C25','#27727B',\r\n            '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD'\r\n        ],\r\n        effectiveColor : '#ff4500'\r\n    },\r\n\r\n    // 提示框\r\n    tooltip: {\r\n        backgroundColor: 'rgba(50,50,50,0.5)',     // 提示背景颜色，默认为透明度为0.7的黑色\r\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n            type : 'line',         // 默认为直线，可选为：'line' | 'shadow'\r\n            lineStyle : {          // 直线指示器样式设置\r\n                color: '#27727B',\r\n                type: 'dashed'\r\n            },\r\n            crossStyle: {\r\n                color: '#27727B'\r\n            },\r\n            shadowStyle : {                     // 阴影指示器样式设置\r\n                color: 'rgba(200,200,200,0.3)'\r\n            }\r\n        }\r\n    },\r\n\r\n    // 区域缩放控制器\r\n    dataZoom: {\r\n        dataBackgroundColor: 'rgba(181,195,52,0.3)',            // 数据背景颜色\r\n        fillerColor: 'rgba(181,195,52,0.2)',   // 填充颜色\r\n        handleColor: '#27727B'    // 手柄颜色\r\n    },\r\n\r\n    // 网格\r\n    grid: {\r\n        borderWidth:0\r\n    },\r\n\r\n    // 类目轴\r\n    categoryAxis: {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#27727B'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            show: false\r\n        }\r\n    },\r\n\r\n    // 数值型坐标轴默认参数\r\n    valueAxis: {\r\n        axisLine: {            // 坐标轴线\r\n            show: false\r\n        },\r\n        splitArea : {\r\n            show: false\r\n        },\r\n        splitLine: {           // 分隔线\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: ['#ccc'],\r\n                type: 'dashed'\r\n            }\r\n        }\r\n    },\r\n\r\n    polar : {\r\n        axisLine: {            // 坐标轴线\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#ddd'\r\n            }\r\n        },\r\n        splitArea : {\r\n            show : true,\r\n            areaStyle : {\r\n                color: ['rgba(250,250,250,0.2)','rgba(200,200,200,0.2)']\r\n            }\r\n        },\r\n        splitLine : {\r\n            lineStyle : {\r\n                color : '#ddd'\r\n            }\r\n        }\r\n    },\r\n\r\n    timeline : {\r\n        lineStyle : {\r\n            color : '#27727B'\r\n        },\r\n        controlStyle : {\r\n            normal : { color : '#27727B'},\r\n            emphasis : { color : '#27727B'}\r\n        },\r\n        symbol : 'emptyCircle',\r\n        symbolSize : 3\r\n    },\r\n\r\n    // 折线图默认参数\r\n    line: {\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth:2,\r\n                borderColor:'#fff',\r\n                lineStyle: {\r\n                    width: 3\r\n                }\r\n            },\r\n            emphasis: {\r\n                borderWidth:0\r\n            }\r\n        },\r\n        symbol: 'circle',  // 拐点图形类型\r\n        symbolSize: 3.5           // 拐点图形大小\r\n    },\r\n\r\n    // K线图默认参数\r\n    k: {\r\n        itemStyle: {\r\n            normal: {\r\n                color: '#C1232B',       // 阳线填充颜色\r\n                color0: '#B5C334',      // 阴线填充颜色\r\n                lineStyle: {\r\n                    width: 1,\r\n                    color: '#C1232B',   // 阳线边框颜色\r\n                    color0: '#B5C334'   // 阴线边框颜色\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    // 散点图默认参数\r\n    scatter: {\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth:1,\r\n                borderColor:'rgba(200,200,200,0.5)'\r\n            },\r\n            emphasis: {\r\n                borderWidth:0\r\n            }\r\n        },\r\n        symbol: 'star4',    // 图形类型\r\n        symbolSize: 4        // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\r\n    },\r\n\r\n    // 雷达图默认参数\r\n    radar : {\r\n        symbol: 'emptyCircle',    // 图形类型\r\n        symbolSize:3\r\n        //symbol: null,         // 拐点图形类型\r\n        //symbolRotate : null,  // 图形旋转控制\r\n    },\r\n\r\n    map: {\r\n        itemStyle: {\r\n            normal: {\r\n                areaStyle: {\r\n                    color: '#ddd'\r\n                },\r\n                label: {\r\n                    textStyle: {\r\n                        color: '#C1232B'\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {                 // 也是选中样式\r\n                areaStyle: {\r\n                    color: '#fe994e'\r\n                },\r\n                label: {\r\n                    textStyle: {\r\n                        color: 'rgb(100,0,0)'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    force : {\r\n        itemStyle: {\r\n            normal: {\r\n                linkStyle : {\r\n                    color : '#27727B'\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    chord : {\r\n        itemStyle : {\r\n            normal : {\r\n                borderWidth: 1,\r\n                borderColor: 'rgba(128, 128, 128, 0.5)',\r\n                chordStyle : {\r\n                    lineStyle : {\r\n                        color : 'rgba(128, 128, 128, 0.5)'\r\n                    }\r\n                }\r\n            },\r\n            emphasis : {\r\n                borderWidth: 1,\r\n                borderColor: 'rgba(128, 128, 128, 0.5)',\r\n                chordStyle : {\r\n                    lineStyle : {\r\n                        color : 'rgba(128, 128, 128, 0.5)'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    gauge : {\r\n        center:['50%','80%'],\r\n        radius:'100%',\r\n        startAngle: 180,\r\n        endAngle : 0,\r\n        axisLine: {            // 坐标轴线\r\n            show: true,        // 默认显示，属性show控制显示与否\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: [[0.2, '#B5C334'],[0.8, '#27727B'],[1, '#C1232B']],\r\n                width: '40%'\r\n            }\r\n        },\r\n        axisTick: {            // 坐标轴小标记\r\n            splitNumber: 2,   // 每份split细分多少段\r\n            length: 5,        // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle控制线条样式\r\n                color: '#fff'\r\n            }\r\n        },\r\n        axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel\r\n            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                color: '#fff',\r\n                fontWeight:'bolder'\r\n            }\r\n        },\r\n        splitLine: {           // 分隔线\r\n            length: '5%',         // 属性length控制线长\r\n            lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                color: '#fff'\r\n            }\r\n        },\r\n        pointer : {\r\n            width : '40%',\r\n            length: '80%',\r\n            color: '#fff'\r\n        },\r\n        title : {\r\n          offsetCenter: [0, -20],       // x, y，单位px\r\n          textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n            color: 'auto',\r\n            fontSize: 20\r\n          }\r\n        },\r\n        detail : {\r\n            offsetCenter: [0, 0],       // x, y，单位px\r\n            textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                color: 'auto',\r\n                fontSize: 40\r\n            }\r\n        }\r\n    },\r\n\r\n    textStyle: {\r\n        fontFamily: '微软雅黑, Arial, Verdana, sans-serif'\r\n    }\r\n};\r\n\r\n    return theme;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/theme/infographic.js\n// module id = 90\n// module chunks = 0","/**\r\n * echarts图表类：字符云\r\n * @desc\r\n * @author  clmtulip(车丽美, clmtulip@gmail.com) liyong(liyong1239@163.com)\r\n */\r\ndefine(function (require) {\r\n    var ChartBase = require('./base');\r\n\r\n    var TextShape = require('zrenderjs/shape/Text');\r\n    var CloudLayout = require('../layout/WordCloud');\r\n\r\n    require('../component/grid');\r\n    require('../component/dataRange');\r\n    var ecConfig = require('../config');\r\n    var ecData = require('../util/ecData');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrColor = require('zrenderjs/tool/color');\r\n\r\n    ecConfig.wordCloud = {\r\n        zlevel: 0,\r\n        z: 2,\r\n        clickable: true,\r\n\r\n        center: ['50%', '50%'],\r\n\r\n        size: ['40%', '40%'],\r\n\r\n        // 字体旋转角度, 随机从指定数组中取\r\n        textRotation: [0, 90],\r\n\r\n        // 字体之间的间隙  单位px 默认为0\r\n        textPadding: 0,\r\n\r\n        // 字体大小 是否自动缩放，使得尽可能的 字体能够显示\r\n        autoSize: {\r\n            enable: true,\r\n            // 字体缩放后的最小大小\r\n            minSize: 12\r\n        },\r\n\r\n        itemStyle: {\r\n            normal: {\r\n                textStyle: {\r\n                    // 默认字体大小跟 data.value 一样\r\n                    fontSize: function (data) {\r\n                        return data.value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function Cloud(ecTheme, messageCenter, zr, option, myChart) {\r\n        ChartBase.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.refresh(option);\r\n    }\r\n\r\n    Cloud.prototype = {\r\n        type: ecConfig.CHART_TYPE_WORDCLOUD,\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh: function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.series = newOption.series;\r\n            }\r\n\r\n            //init data\r\n            this._init();\r\n        },\r\n        /**\r\n         *   初始化数据\r\n         *   @private\r\n         */\r\n        _init: function () {\r\n            var series = this.series;\r\n            this.backupShapeList();\r\n\r\n            var legend = this.component.legend;\r\n            for (var i = 0; i < series.length; i++) {\r\n                if (series[i].type === ecConfig.CHART_TYPE_WORDCLOUD) {\r\n                    series[i] = this.reformOption(series[i]);\r\n                    var serieName = series[i].name || '';\r\n\r\n                    this.selectedMap[serieName] = legend ? legend.isSelected(serieName) : true;\r\n\r\n                    if (! this.selectedMap[serieName]) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.buildMark(i);\r\n\r\n                    this._initSerie(series[i]);\r\n                }\r\n            }\r\n        },\r\n\r\n        _initSerie: function (serie) {\r\n\r\n            var textStyle = serie.itemStyle.normal.textStyle;\r\n\r\n            var size = [\r\n                this.parsePercent(serie.size[0], this.zr.getWidth()) || 200,\r\n                this.parsePercent(serie.size[1], this.zr.getHeight()) || 200\r\n            ]\r\n            var center = this.parseCenter(this.zr, serie.center);\r\n\r\n            var layoutConfig = {\r\n                size: size,\r\n\r\n                wordletype: {\r\n                    autoSizeCal: serie.autoSize,\r\n                },\r\n\r\n                center: center,\r\n\r\n                rotate: serie.textRotation,\r\n                padding: serie.textPadding,\r\n\r\n                font: textStyle.fontFamily,\r\n                fontSize: textStyle.fontSize,\r\n                fontWeight: textStyle.fontWeight,\r\n                fontStyle: textStyle.fontStyle,\r\n\r\n                text: function (d) {\r\n                    return d.name;\r\n                },\r\n\r\n                data: serie.data\r\n            };\r\n\r\n            // 字符云的布局方法\r\n            var clouds = new CloudLayout(layoutConfig);\r\n            var self = this;\r\n\r\n            // 字符位置确定后 执行 以下函数\r\n            clouds.end(function (d) {\r\n                self._buildShapes(d);\r\n            });\r\n\r\n            // 布局算法 开始执行\r\n            clouds.start();\r\n        },\r\n\r\n        /**\r\n         * 通过 data 绘制图形\r\n         * @param data\r\n         * @private\r\n         */\r\n        _buildShapes: function (data) {\r\n            //数据的 再度初始化，使得最终 text 是以自己的坐标为中心。。。\r\n            var len = data.length;\r\n            for (var i = 0; i < len; i++) {\r\n                this._buildTextShape(data[i], 0, i);\r\n            }\r\n\r\n            this.addShapeList();\r\n        },\r\n\r\n        /**\r\n         * 绘制 每个 text\r\n         * @param oneText {Object}\r\n         * @param seriesIndex {int}\r\n         * @param dataIndex {int}\r\n         * @private\r\n         */\r\n        _buildTextShape: function (data, seriesIndex) {\r\n            var series = this.series;\r\n            var serie = series[seriesIndex];\r\n            var serieName = serie.name || '';\r\n            var data = data;\r\n            var dataIndex = data.dataIndex;\r\n            var queryTarget = [\r\n                data,\r\n                serie\r\n            ];\r\n\r\n            // dataRange 选择结束\r\n            var legend = this.component.legend;\r\n            var defaultColor = legend ? legend.getColor(serieName) : this.zr.getColor(seriesIndex);\r\n            // 多级控制\r\n            var normal = this.deepMerge(queryTarget, 'itemStyle.normal') || {};\r\n            var emphasis = this.deepMerge(queryTarget, 'itemStyle.emphasis') || {};\r\n            var normalColor = this.getItemStyleColor(normal.color, seriesIndex, dataIndex, data)\r\n                || defaultColor;\r\n\r\n            var emphasisColor = this.getItemStyleColor(\r\n                emphasis.color, seriesIndex, dataIndex, data\r\n            )\r\n                || (typeof normalColor === 'string'\r\n                    ? zrColor.lift(normalColor, -0.2)\r\n                    : normalColor\r\n                    );\r\n\r\n            var textShape = new TextShape({\r\n                zlevel: serie.zlevel,\r\n                z: serie.z,\r\n                hoverable: true,\r\n                clickable: this.deepQuery(queryTarget, 'clickable'),\r\n                style: {\r\n                    x: 0,\r\n                    y: 0,\r\n                    text: data.text,\r\n                    color: normalColor,\r\n                    textFont: [data.style,\r\n                                data.weight,\r\n                                data.size + 'px',\r\n                                data.font].join(' '),\r\n                    textBaseline: 'alphabetic',\r\n                    textAlign: 'center'\r\n                },\r\n                highlightStyle: {\r\n                    brushType: emphasis.borderWidth ? 'both' : 'fill',\r\n                    color: emphasisColor,\r\n                    lineWidth: emphasis.borderWidth || 0,\r\n                    strokeColor: emphasis.borderColor\r\n                },\r\n                position: [\r\n                    data.x,\r\n                    data.y\r\n                ],\r\n                rotation: [\r\n                    -data.rotate / 180 * Math.PI,\r\n                    0,\r\n                    0\r\n                ]\r\n            });\r\n\r\n            ecData.pack(\r\n                textShape,\r\n                serie, seriesIndex,\r\n                data, dataIndex,\r\n                data.name\r\n            );\r\n\r\n            this.shapeList.push(textShape);\r\n        }\r\n    };\r\n\r\n\r\n    zrUtil.inherits(Cloud, ChartBase);\r\n\r\n    // 图表注册\r\n    require('../chart').define('wordCloud', Cloud);\r\n\r\n    return Cloud;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/chart/wordCloud.js\n// module id = 91\n// module chunks = 0","/**\r\n * @author clmtulip(车丽美, clmtulip@gmail.com) liyong(liyong1239@163.com)\r\n */\r\n\r\n// Modified from d3-cloud\r\n/*\r\nCopyright (c) 2013, Jason Davies.\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n  * Redistributions of source code must retain the above copyright notice, this\r\n    list of conditions and the following disclaimer.\r\n\r\n  * Redistributions in binary form must reproduce the above copyright notice,\r\n    this list of conditions and the following disclaimer in the documentation\r\n    and/or other materials provided with the distribution.\r\n\r\n  * The name Jason Davies may not be used to endorse or promote products\r\n    derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,\r\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\r\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\r\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\ndefine(function (require) {\r\n    var ZeroArray = require('../layout/WordCloudRectZero');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n\r\n    function CloudLayout(option) {\r\n        this._init(option);\r\n    }\r\n\r\n    CloudLayout.prototype = {\r\n        /**\r\n         * 启动计算过程\r\n         */\r\n        start: function () {\r\n            var board = null;\r\n            var maxWit = 0;\r\n            var maxHit = 0;\r\n            var maxArea = 0;\r\n            var i = -1;\r\n            var tags = [];\r\n            var maxBounds = null; /*图片的最大可用边框*/\r\n            // 根据配置 初始化 字符云数组\r\n            var data = this.wordsdata;\r\n            var dfop = this.defaultOption;\r\n            var wordletype = dfop.wordletype;\r\n            var size = dfop.size;\r\n            var that = this;\r\n\r\n            //得到 ZeroArray 传递过来的 初始值 和面积 最大宽度等值\r\n            var zeroArrayObj = new ZeroArray({\r\n                type: wordletype.type,\r\n                width: size[0],\r\n                height: size[1]\r\n            });\r\n\r\n            zeroArrayObj.calculate(function (options) {\r\n                board = options.initarr;\r\n                maxWit = options.maxWit;\r\n                maxHit = options.maxHit;\r\n                maxArea = options.area;\r\n                maxBounds = options.imgboard;\r\n                startStep();\r\n            }, this);\r\n\r\n            return this;\r\n\r\n            function startStep() {\r\n                that.totalArea = maxArea;\r\n                //字体大小的确定，可配置，根据开关 确定是否要根据面积来定。。\r\n                if (wordletype.autoSizeCal.enable) {\r\n                    that._autoCalTextSize(data, maxArea, maxWit, maxHit, wordletype.autoSizeCal.minSize);\r\n                }\r\n\r\n                if (dfop.timer) {\r\n                    clearInterval(dfop.timer);\r\n                }\r\n                dfop.timer = setInterval(step, 0);\r\n                step();\r\n            }\r\n\r\n            function step() {\r\n                var start = +new Date;\r\n                var n = data.length;\r\n                var d;\r\n                while (+new Date - start < dfop.timeInterval && ++i < n && dfop.timer) {\r\n                    d = data[i];\r\n                    // x y 的初始值\r\n                    d.x = size[0] >> 1;\r\n                    d.y = size[1] >> 1;\r\n                    //得到每个 标签所占用的具体的像素点 用 0 1 标记， 每32位作为一个数字\r\n                    that._cloudSprite(d, data, i);\r\n                    //place 放置每个字符， 成功后 以 event 事件通知\r\n                    if (d.hasText && that._place(board, d, maxBounds)) {\r\n\r\n                        tags.push(d);\r\n                        //                        event.word(d);\r\n                        // Temporary hack\r\n                        d.x -= size[0] >> 1;\r\n                        d.y -= size[1] >> 1;\r\n                    }\r\n\r\n                }\r\n                //全部放置完成 停止cloud，并触发 'end'事件\r\n                if (i >= n) {\r\n                    that.stop();\r\n                    that._fixTagPosition(tags);\r\n                    dfop.endcallback(tags);\r\n                }\r\n            }\r\n        },\r\n\r\n        _fixTagPosition: function (tags) {\r\n            var center = this.defaultOption.center;\r\n\r\n            for (var i = 0, len = tags.length; i < len; i++) {\r\n                tags[i].x += center[0];\r\n                tags[i].y += center[1];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 停止计算过程\r\n         */\r\n        stop: function () {\r\n            if (this.defaultOption.timer) {\r\n                clearInterval(this.defaultOption.timer);\r\n                this.defaultOption.timer = null;\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 计算结束后 执行V\r\n         * @param v\r\n         */\r\n        end: function (v) {\r\n            if (v) {\r\n                this.defaultOption.endcallback = v;\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 初始化\r\n         * @param option\r\n         * @private\r\n         */\r\n        _init: function (option) {\r\n            this.defaultOption = {};\r\n\r\n            /*初始化属性*/\r\n            this._initProperty(option);\r\n            /*初始化方法*/\r\n            this._initMethod(option);\r\n            /*初始化 canvas 画板*/\r\n            this._initCanvas();\r\n            /*初始化数据*/\r\n            this._initData(option.data);\r\n        },\r\n\r\n        _initData: function (datas) {\r\n            var that = this;\r\n            var thatop = that.defaultOption;\r\n            this.wordsdata = datas.map(function (d, i) {\r\n                d.dataIndex = i;\r\n\r\n                d.text = thatop.text.call(that, d, i);\r\n\r\n                d.font = thatop.font.call(that, d, i);\r\n                d.style = thatop.fontStyle.call(that, d, i);\r\n                d.weight = thatop.fontWeight.call(that, d, i);\r\n\r\n                // 字体的旋转角度\r\n                d.rotate = thatop.rotate.call(that, d, i);\r\n                // 字体的大小 单位px\r\n                d.size = ~~thatop.fontSize.call(that, d, i);\r\n                // 字体间的间距\r\n                d.padding = thatop.padding.call(that, d, i);\r\n\r\n                return d;\r\n            }).sort(function (a, b) {\r\n                return b.value - a.value;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 默认函数的定义 及初始化过程\r\n         * @private\r\n         */\r\n        _initMethod: function (option) {\r\n            /*数据初始化中要用到的函数*/\r\n            var dfop = this.defaultOption;\r\n            dfop.text = (option.text) ? functor(option.text) : cloudText;\r\n            dfop.font = (option.font) ? functor(option.font) : cloudFont;\r\n            dfop.fontSize = (option.fontSize) ? functor(option.fontSize) : cloudFontSize;\r\n            dfop.fontStyle = (option.fontStyle) ? functor(option.fontStyle) : cloudFontNormal;\r\n            dfop.fontWeight = (option.fontWeight) ? functor(option.fontWeight) : cloudFontNormal;\r\n\r\n            dfop.rotate = (option.rotate) ? newCloudRotate(option.rotate) : cloudRotate;\r\n\r\n            dfop.padding = (option.padding) ? functor(option.padding) : cloudPadding;\r\n\r\n            dfop.center = option.center;\r\n\r\n            /*其它函数*/\r\n            dfop.spiral = archimedeanSpiral;\r\n            dfop.endcallback = function () {\r\n            };\r\n            dfop.rectangularSpiral = rectangularSpiral;\r\n            dfop.archimedeanSpiral = archimedeanSpiral;\r\n\r\n            function cloudText(d) {\r\n                return d.name;\r\n            }\r\n\r\n            function cloudFont() {\r\n                return \"sans-serif\";\r\n            }\r\n\r\n            function cloudFontNormal() {\r\n                return \"normal\";\r\n            }\r\n\r\n            function cloudFontSize(d) {\r\n                return d.value;\r\n            }\r\n\r\n            function cloudRotate() {\r\n                return 0;\r\n            }\r\n\r\n            function newCloudRotate(rotate) {\r\n                return function () {\r\n                    return rotate[Math.round(Math.random() * (rotate.length - 1))]\r\n                }\r\n            }\r\n\r\n            function cloudPadding() {\r\n                return 0;\r\n            }\r\n\r\n            function archimedeanSpiral(size) {\r\n                var e = size[0] / size[1];\r\n                return function (t) {\r\n                    return [\r\n                            e * (t *= .1) * Math.cos(t),\r\n                            t * Math.sin(t)\r\n                    ];\r\n                };\r\n            }\r\n\r\n            function rectangularSpiral(size) {\r\n                var dy = 4;\r\n                var dx = dy * size[0] / size[1];\r\n                var x = 0;\r\n                var y = 0;\r\n                return function (t) {\r\n                    var sign = t < 0 ? -1 : 1;\r\n                    // See triangular numbers: T_n = n * (n + 1) / 2.\r\n                    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\r\n                        case 0:\r\n                            x += dx;\r\n                            break;\r\n                        case 1:\r\n                            y += dy;\r\n                            break;\r\n                        case 2:\r\n                            x -= dx;\r\n                            break;\r\n                        default:\r\n                            y -= dy;\r\n                            break;\r\n                    }\r\n                    return [\r\n                        x,\r\n                        y\r\n                    ];\r\n                };\r\n            }\r\n\r\n            function functor(v) {\r\n                return typeof v === \"function\" ? v : function () {\r\n                    return v;\r\n                };\r\n            }\r\n\r\n        },\r\n\r\n        _initProperty: function (option) {\r\n            var dfop = this.defaultOption;\r\n            //默认值\r\n            dfop.size = option.size || [\r\n                256,\r\n                256\r\n            ];\r\n            dfop.wordletype = option.wordletype;\r\n            dfop.words = option.words || [];\r\n            dfop.timeInterval = Infinity;\r\n            dfop.timer = null;\r\n            dfop.spirals = {\r\n                archimedean: dfop.archimedeanSpiral,\r\n                rectangular: dfop.rectangularSpiral\r\n            };\r\n\r\n            zrUtil.merge(dfop, {\r\n                size: [\r\n                    256,\r\n                    256\r\n                ],\r\n                wordletype: {\r\n                    type: 'RECT',\r\n                    areaPresent: .058,\r\n                    autoSizeCal: {\r\n                        enable: true,\r\n                        minSize: 12\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _initCanvas: function () {\r\n            var cloudRadians = Math.PI / 180;\r\n            var cw = 1 << 11 >> 5;\r\n            var ch = 1 << 11;\r\n            var canvas;\r\n            var ratio = 1;\r\n\r\n            if (typeof document !== \"undefined\") {\r\n                canvas = document.createElement(\"canvas\");\r\n                canvas.width = 1;\r\n                canvas.height = 1;\r\n                ratio = Math.sqrt(\r\n                    canvas.getContext(\"2d\")\r\n                        .getImageData(0, 0, 1, 1)\r\n                        .data.length >> 2\r\n                );\r\n                canvas.width = (cw << 5) / ratio;\r\n                canvas.height = ch / ratio;\r\n            }\r\n            else {\r\n                // Attempt to use node-canvas.\r\n                canvas = new Canvas(cw << 5, ch);\r\n            }\r\n\r\n            var c = canvas.getContext(\"2d\");\r\n            c.fillStyle = c.strokeStyle = \"red\";\r\n            c.textAlign = \"center\";\r\n\r\n            this.defaultOption.c = c;\r\n            this.defaultOption.cw = cw;\r\n            this.defaultOption.ch = ch;\r\n            this.defaultOption.ratio = ratio;\r\n            this.defaultOption.cloudRadians = cloudRadians;\r\n        },\r\n\r\n\r\n        _cloudSprite: function (d, data, di) {\r\n            if (d.sprite) {\r\n                return;\r\n            }\r\n\r\n            var cw = this.defaultOption.cw;\r\n            var ch = this.defaultOption.ch;\r\n            var c = this.defaultOption.c;\r\n            var ratio = this.defaultOption.ratio;\r\n            var cloudRadians = this.defaultOption.cloudRadians;\r\n\r\n            c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\r\n            var x = 0;\r\n            var y = 0;\r\n            var maxh = 0;\r\n            var n = data.length;\r\n            --di;\r\n            while (++di < n) {\r\n                d = data[di];\r\n                c.save();\r\n                c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\r\n                //得到 字体 实际的 宽和高\r\n                var w = c.measureText(d.text + \"m\").width * ratio;\r\n                var h = d.size << 1;\r\n                //得到 d 所占用的具体的宽度 和高度  并取整\r\n                if (d.rotate) {\r\n                    var sr = Math.sin(d.rotate * cloudRadians);\r\n                    var cr = Math.cos(d.rotate * cloudRadians);\r\n                    var wcr = w * cr;\r\n                    var wsr = w * sr;\r\n                    var hcr = h * cr;\r\n                    var hsr = h * sr;\r\n                    w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\r\n                    h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\r\n                }\r\n                else {\r\n                    w = (w + 0x1f) >> 5 << 5;\r\n                }\r\n                if (h > maxh) {\r\n                    maxh = h;\r\n                }\r\n                //如果 字体 超出了 宽度 换更远的一行。。。\r\n                if (x + w >= (cw << 5)) {\r\n                    x = 0;\r\n                    y += maxh;\r\n                    maxh = 0;\r\n                }\r\n                if (y + h >= ch) {\r\n                    break;\r\n                }\r\n                c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\r\n                if (d.rotate) {\r\n                    c.rotate(d.rotate * cloudRadians);\r\n                }\r\n                c.fillText(d.text, 0, 0);\r\n                if (d.padding) {\r\n                    c.lineWidth = 2 * d.padding;\r\n                    c.strokeText(d.text, 0, 0);\r\n                }\r\n                c.restore();\r\n                d.width = w;\r\n                d.height = h;\r\n                // xoff  yoff 为 d在画板中的坐标位置\r\n                d.xoff = x;\r\n                d.yoff = y;\r\n                d.x1 = w >> 1;\r\n                d.y1 = h >> 1;\r\n                d.x0 = -d.x1;\r\n                d.y0 = -d.y1;\r\n                d.hasText = true;\r\n                x += w;\r\n            }\r\n            //得到 所在 区域的 像素值。。进而 确定 其 y的位置。。。\r\n            var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data;\r\n            var sprite = [];\r\n            while (--di >= 0) {\r\n                d = data[di];\r\n                if (!d.hasText) {\r\n                    continue;\r\n                }\r\n                var w = d.width;\r\n                var w32 = w >> 5;\r\n                var h = d.y1 - d.y0;\r\n                // Zero the buffer\r\n                for (var i = 0; i < h * w32; i++) {\r\n                    sprite[i] = 0;\r\n                }\r\n                x = d.xoff;\r\n                if (x == null) {\r\n                    return;\r\n                }\r\n                y = d.yoff;\r\n                var seen = 0;\r\n                var seenRow = -1;\r\n                for (var j = 0; j < h; j++) {\r\n                    for (var i = 0; i < w; i++) {\r\n                        var k = w32 * j + (i >> 5);\r\n                        var m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\r\n                        sprite[k] |= m;\r\n                        seen |= m;\r\n                    }\r\n                    if (seen) {\r\n                        seenRow = j;\r\n                    }\r\n                    else {\r\n                        d.y0++;\r\n                        h--;\r\n                        j--;\r\n                        y++;\r\n                    }\r\n                }\r\n                d.y1 = d.y0 + seenRow;\r\n                d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\r\n            }\r\n        },\r\n\r\n        _place: function (board, tag, maxBounds) {\r\n\r\n            /*判断目前面积总值 是否超过了阈值*/\r\n            /*判断目前该值是否能够放的下*/\r\n            var size = this.defaultOption.size;\r\n            var perimeter = [\r\n                    {x: 0, y: 0},\r\n                    {x: size[0], y: size[1]}\r\n                ];\r\n            var startX = tag.x;\r\n            var startY = tag.y;\r\n            var maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]);\r\n            var s = this.defaultOption.spiral(size);\r\n            var dt = Math.random() < .5 ? 1 : -1;\r\n            var t = -dt;\r\n            var dxdy;\r\n            var dx;\r\n            var dy;\r\n\r\n            while (dxdy = s(t += dt)) {\r\n                dx = ~~dxdy[0];\r\n                dy = ~~dxdy[1];\r\n\r\n                //当dx dy 都大于 maxDelta 即超出了 画板范围， 停止 放置。。 该值舍弃\r\n                if (Math.min(dx, dy) > maxDelta) {\r\n                    break;\r\n                }\r\n\r\n                tag.x = startX + dx;\r\n                tag.y = startY + dy;\r\n\r\n                if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\r\n                    tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) {\r\n                    continue;\r\n                }\r\n                // TODO only check for collisions within current bounds.\r\n                if (!cloudCollide(tag, board, size[0])) {\r\n                    if (collideRects(tag, maxBounds)) {\r\n                        var sprite = tag.sprite;\r\n                        var w = tag.width >> 5;\r\n                        var sw = size[0] >> 5;\r\n                        var lx = tag.x - (w << 4);\r\n                        var sx = lx & 0x7f;\r\n                        var msx = 32 - sx;\r\n                        var h = tag.y1 - tag.y0;\r\n                        var x = (tag.y + tag.y0) * sw + (lx >> 5);// 计算其在画板的 横坐标的位置\r\n                        var last;\r\n\r\n                        //当 该 字能够被正确放置时， 根据该字体的范围 更改标志位范围\r\n                        for (var j = 0; j < h; j++) {\r\n                            last = 0;\r\n                            for (var i = 0; i <= w; i++) {\r\n                                board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\r\n                            }\r\n                            x += sw;\r\n                        }\r\n                        delete tag.sprite;\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n\r\n            function cloudCollide(tag, board, sw) {\r\n                sw >>= 5;\r\n                var sprite = tag.sprite;\r\n                var w = tag.width >> 5;\r\n                var lx = tag.x - (w << 4);\r\n                var sx = lx & 0x7f;\r\n                var msx = 32 - sx;\r\n                var h = tag.y1 - tag.y0;\r\n                var x = (tag.y + tag.y0) * sw + (lx >> 5);\r\n                var last;\r\n                for (var j = 0; j < h; j++) {\r\n                    last = 0;\r\n                    for (var i = 0; i <= w; i++) {\r\n                        if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\r\n                            & board[x + i]) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    x += sw;\r\n                }\r\n                return false;\r\n            }\r\n\r\n            function collideRects(a, maxBounds) {\r\n                return maxBounds.row[a.y] && maxBounds.cloumn[a.x]\r\n                    && a.x >= maxBounds.row[a.y].start\r\n                    && a.x <= maxBounds.row[a.y].end\r\n                    && a.y >= maxBounds.cloumn[a.x].start\r\n                    && a.y <= maxBounds.cloumn[a.x].end;\r\n            }\r\n        },\r\n\r\n        _autoCalTextSize: function (data, shapeArea, maxwidth, maxheight, minSize) {\r\n            //循环\r\n            //面积 归一化\r\n            //计算 每个字体的面积\r\n            var sizesum = sum(data, function (k) {\r\n                    return k.size;\r\n                });\r\n            var i = data.length;\r\n            var maxareapre = .25; /*面积归一化后， 字体占总面积的最大百分比*/\r\n            var minTextSize = minSize; /*字体所能缩放的最小大小。。如果字体面积 依旧无法满足上述约束， 字体将不会再缩小*/\r\n            var cw = this.defaultOption.cw;\r\n            var ch = this.defaultOption.ch;\r\n            var c = this.defaultOption.c;\r\n            var ratio = this.defaultOption.ratio;\r\n            var cloudRadians = this.defaultOption.cloudRadians;\r\n            var d;\r\n            var dpre;\r\n\r\n            while (i--) {\r\n                d = data[i];\r\n                dpre = d.size / sizesum;\r\n                if (maxareapre) {\r\n                    d.areapre = (dpre < maxareapre) ? dpre : maxareapre;\r\n                }\r\n                else {\r\n                    d.areapre = dpre;\r\n                }\r\n\r\n                d.area = shapeArea * d.areapre;\r\n                d.totalarea = shapeArea;\r\n                measureTextWitHitByarea(d);\r\n            }\r\n\r\n            //根据面积 计算字体的 size\r\n            //根据 最大宽度 和最大高度 重新检测 字体的size， 不符合条件 重新计算，若字体大小已经是 最小size，则 取消计算。。。\r\n            function measureTextWitHitByarea(d) {\r\n                c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\r\n                c.save();\r\n                c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\r\n\r\n                //得到 字体 实际的 宽和高\r\n                var w = c.measureText(d.text + \"m\").width * ratio,\r\n                    h = d.size << 1;\r\n\r\n                //得到 d 所占用的具体的宽度 和高度  并取整\r\n                w = (w + 0x1f) >> 5 << 5; //给定了一个最小值 1 即不会存在 宽度为0的情况\r\n\r\n                c.restore();\r\n                d.aw = w;\r\n                d.ah = h;\r\n\r\n\r\n                var k, rw, rh;\r\n\r\n                //如果 有旋转  测试 旋转后的 宽和高 是否 超过了 最大的大小\r\n                if (d.rotate) {\r\n                    var sr = Math.sin(d.rotate * cloudRadians);\r\n                    var cr = Math.cos(d.rotate * cloudRadians);\r\n                    var wcr = w * cr;\r\n                    var wsr = w * sr;\r\n                    var hcr = h * cr;\r\n                    var hsr = h * sr;\r\n\r\n                    rw = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\r\n                    rh = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\r\n                }\r\n\r\n\r\n                //满足条件 不用继续调整的\r\n                // size 为 最小， 或者面积在允许范围内 且 宽和高也在允许范围内\r\n                if (d.size < minTextSize) {\r\n                    d.size = minTextSize;\r\n                    return;\r\n                }\r\n\r\n                if ((d.rotate && w * h <= d.area && rw <= maxwidth && rh <= maxheight)\r\n                    || (w * h <= d.area && w <= maxwidth && h <= maxheight)) {\r\n                    d.area = w * h;\r\n                    return;\r\n                }\r\n\r\n                //如果 超过了 最大宽度 或最大高度。。 继续计算\r\n                if (d.rotate && rw > maxwidth && rh > maxheight) {// 有旋转时，超过了 最大宽度和最大高度\r\n                    k = Math.min(maxwidth / rw, maxheight / rh);\r\n                }\r\n                else if (w > maxwidth || h > maxheight) {// 无旋转时，超过了 最大宽度和最大高度\r\n                    k = Math.min(maxwidth / w, maxheight / h);\r\n                }\r\n                else {                                // 当前 面积 大于 规定的面积时\r\n                    k = Math.sqrt(d.area / (d.aw * d.ah));\r\n                }\r\n\r\n                d.size = ~~(k * d.size);\r\n\r\n                if (d.size < minSize) {\r\n                    d.size = minSize;\r\n                    return;\r\n                }\r\n\r\n                return measureTextWitHitByarea(d);\r\n            }\r\n\r\n            function sum(dts, callback) {\r\n                var j = dts.length;\r\n                var ressum = 0;\r\n                while (j--) {\r\n                    ressum += callback(dts[j]);\r\n                }\r\n\r\n                return ressum;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return CloudLayout;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/layout/WordCloud.js\n// module id = 92\n// module chunks = 0","/**\r\n * @file    主要功能\r\n * @author  clmtulip(车丽美, clmtulip@gmail.com) liyong(liyong1239@163.com)\r\n */\r\ndefine(function (require) {\r\n    function ZeroArray(option) {\r\n        this.defaultOption = {type: 'RECT'};\r\n        this._init(option);\r\n    }\r\n\r\n    ZeroArray.prototype = {\r\n        RECT: '_calculateRect',\r\n\r\n        _init: function (option) {\r\n            this._initOption(option);\r\n            this._initCanvas();\r\n        },\r\n\r\n        _initOption: function (option) {\r\n            for (k in option) {\r\n                this.defaultOption[k] = option[k];\r\n            }\r\n        },\r\n\r\n        _initCanvas: function () {\r\n            var canvas = document.createElement(\"canvas\");\r\n            canvas.width = 1;\r\n            canvas.height = 1;\r\n\r\n            var ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\r\n\r\n            canvas.width = this.defaultOption.width;\r\n            canvas.height = this.defaultOption.height;\r\n\r\n            if (canvas.getContext) {\r\n                var ctx = canvas.getContext('2d');\r\n            }\r\n\r\n            this.canvas = canvas;\r\n            this.ctx = ctx;\r\n            this.ratio = ratio;\r\n        },\r\n\r\n        /**执行计算， 并返回\r\n         *\r\n         * @param callback\r\n         * 返回 {initarr, area, maxHit, maxWit} 给callback\r\n         */\r\n        calculate: function (callback, callbackObj) {\r\n            var calType = this.defaultOption.type,\r\n                calmethod = this[calType];\r\n\r\n            this[calmethod].call(this, callback, callbackObj);\r\n        },\r\n\r\n        /**\r\n         * callback 函数的 正确执行\r\n         * @param result 计算后的结果，{initarr, area, maxHit, maxWit}\r\n         * @param callback  计算成功之后的回调函数\r\n         * @param callbackObj 回调函数的执行作用域\r\n         * @private\r\n         */\r\n        _calculateReturn: function (result, callback, callbackObj) {\r\n            callback.call(callbackObj, result);\r\n        },\r\n\r\n        _calculateRect: function (callback, callbackObj) {\r\n            var result = {},\r\n                width = this.defaultOption.width >> 5 << 5,\r\n                height = this.defaultOption.height;\r\n\r\n            // 初始化数组\r\n            result.initarr = this._rectZeroArray(width * height);\r\n\r\n            // 总面积\r\n            result.area = width * height;\r\n\r\n            // 最大高度\r\n            result.maxHit = height;\r\n\r\n            // 最大宽度\r\n            result.maxWit = width;\r\n\r\n            // 边界\r\n            result.imgboard = this._rectBoard(width, height);\r\n\r\n            this._calculateReturn(result, callback, callbackObj);\r\n        },\r\n\r\n        _rectBoard: function (width, height) {\r\n\r\n            var row = [];\r\n            for (var i = 0; i < height; i++) {\r\n                row.push({\r\n                    y: i,\r\n                    start: 0,\r\n                    end: width\r\n                })\r\n            }\r\n\r\n            var cloumn = [];\r\n            for (var i = 0; i < width; i++) {\r\n                cloumn.push({\r\n                    x: i,\r\n                    start: 0,\r\n                    end: height\r\n                })\r\n            }\r\n\r\n            return {row: row, cloumn: cloumn};\r\n        },\r\n\r\n        _rectZeroArray: function (num) {\r\n            var a = [],\r\n                n = num,\r\n                i = -1;\r\n            while (++i < n) a[i] = 0;\r\n            return a;\r\n        }\r\n    };\r\n\r\n    return ZeroArray;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/layout/WordCloudRectZero.js\n// module id = 93\n// module chunks = 0","/**\r\n * echarts组件： 网格\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n    \r\n    // 图形依赖\r\n    var RectangleShape = require('zrenderjs/shape/Rectangle');\r\n    \r\n    var ecConfig = require('../config');\r\n    // 网格\r\n    ecConfig.grid = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 0,                       // 二级层叠\r\n        x: 80,\r\n        y: 60,\r\n        x2: 80,\r\n        y2: 60,\r\n        // width: {totalWidth} - x - x2,\r\n        // height: {totalHeight} - y - y2,\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 1,\r\n        borderColor: '#ccc'\r\n    };\r\n\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表选项\r\n     *      @param {number=} option.grid.x 直角坐标系内绘图网格起始横坐标，数值单位px\r\n     *      @param {number=} option.grid.y 直角坐标系内绘图网格起始纵坐标，数值单位px\r\n     *      @param {number=} option.grid.width 直角坐标系内绘图网格宽度，数值单位px\r\n     *      @param {number=} option.grid.height 直角坐标系内绘图网格高度，数值单位px\r\n     */\r\n    function Grid(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        this.refresh(option);\r\n    }\r\n    \r\n    Grid.prototype = {\r\n        type: ecConfig.COMPONENT_TYPE_GRID,\r\n\r\n        getX: function () {\r\n            return this._x;\r\n        },\r\n\r\n        getY: function () {\r\n            return this._y;\r\n        },\r\n\r\n        getWidth: function () {\r\n            return this._width;\r\n        },\r\n\r\n        getHeight: function () {\r\n            return this._height;\r\n        },\r\n\r\n        getXend: function () {\r\n            return this._x + this._width;\r\n        },\r\n\r\n        getYend: function () {\r\n            return this._y + this._height;\r\n        },\r\n\r\n        getArea: function () {\r\n            return {\r\n                x: this._x,\r\n                y: this._y,\r\n                width: this._width,\r\n                height: this._height\r\n            };\r\n        },\r\n        \r\n        getBbox: function() {\r\n            return [\r\n                [ this._x, this._y ],\r\n                [ this.getXend(), this.getYend() ]\r\n            ];\r\n        },\r\n        \r\n        /**\r\n         * 实在找不到合适的地方做了，各种粗暴的写法~ -_-\r\n         */\r\n        refixAxisShape: function(component) {\r\n            var zeroX;\r\n            var zeroY;\r\n            var axisList = component.xAxis._axisList.concat(\r\n                component.yAxis ? component.yAxis._axisList : []\r\n            );\r\n            var len = axisList.length;\r\n            var axis;\r\n            while (len--) {\r\n                axis = axisList[len];\r\n                if (axis.type == ecConfig.COMPONENT_TYPE_AXIS_VALUE \r\n                    && axis._min < 0  \r\n                    && axis._max >= 0\r\n                ) {\r\n                    axis.isHorizontal()\r\n                    ? (zeroX = axis.getCoord(0))\r\n                    : (zeroY = axis.getCoord(0));\r\n                }\r\n            }\r\n            if (typeof zeroX != 'undefined' || typeof zeroY != 'undefined') {\r\n                len = axisList.length;\r\n                while (len--) {\r\n                    axisList[len].refixAxisShape(zeroX, zeroY);\r\n                }\r\n            }\r\n        },\r\n        \r\n        refresh: function (newOption) {\r\n            if (newOption\r\n                || this._zrWidth != this.zr.getWidth() \r\n                || this._zrHeight != this.zr.getHeight()\r\n            ) {\r\n                this.clear();\r\n                this.option = newOption || this.option;\r\n                this.option.grid = this.reformOption(this.option.grid);\r\n    \r\n                var gridOption = this.option.grid;\r\n                this._zrWidth = this.zr.getWidth();\r\n                this._zrHeight = this.zr.getHeight();\r\n                this._x = this.parsePercent(gridOption.x, this._zrWidth);\r\n                this._y = this.parsePercent(gridOption.y, this._zrHeight);\r\n                var x2 = this.parsePercent(gridOption.x2, this._zrWidth);\r\n                var y2 = this.parsePercent(gridOption.y2, this._zrHeight);\r\n                \r\n    \r\n                if (typeof gridOption.width == 'undefined') {\r\n                    this._width = this._zrWidth - this._x - x2;\r\n                }\r\n                else {\r\n                    this._width = this.parsePercent(gridOption.width, this._zrWidth);\r\n                }\r\n                this._width = this._width <= 0 ? 10 : this._width;\r\n    \r\n                if (typeof gridOption.height == 'undefined') {\r\n                    this._height = this._zrHeight - this._y - y2;\r\n                }\r\n                else {\r\n                    this._height = this.parsePercent(gridOption.height, this._zrHeight);\r\n                }\r\n                this._height = this._height <= 0 ? 10 : this._height;\r\n                \r\n                this._x = this.subPixelOptimize(this._x, gridOption.borderWidth);\r\n                this._y = this.subPixelOptimize(this._y, gridOption.borderWidth);\r\n    \r\n                this.shapeList.push(new RectangleShape({\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    hoverable: false,\r\n                    style: {\r\n                        x: this._x,\r\n                        y: this._y,\r\n                        width: this._width,\r\n                        height: this._height,\r\n                        brushType: gridOption.borderWidth > 0 ? 'both' : 'fill',\r\n                        color: gridOption.backgroundColor,\r\n                        strokeColor: gridOption.borderColor,\r\n                        lineWidth: gridOption.borderWidth\r\n                        // type: this.option.splitArea.areaStyle.type,\r\n                    }\r\n                }));\r\n                this.zr.addShape(this.shapeList[0]);\r\n            }\r\n        }\r\n    };\r\n    \r\n    zrUtil.inherits(Grid, Base);\r\n    \r\n    require('../component').define('grid', Grid);\r\n    \r\n    return Grid;\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/grid.js\n// module id = 94\n// module chunks = 0","/**\r\n * echarts组件：值域\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n */\r\ndefine(function (require) {\r\n    var Base = require('./base');\r\n\r\n    // 图形依赖\r\n    var TextShape = require('zrenderjs/shape/Text');\r\n    var RectangleShape = require('zrenderjs/shape/Rectangle');\r\n    var HandlePolygonShape = require('../util/shape/HandlePolygon');\r\n\r\n    var ecConfig = require('../config');\r\n    // 值域\r\n    ecConfig.dataRange = {\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 4,                       // 二级层叠\r\n        show: true,\r\n        orient: 'vertical',        // 布局方式，默认为垂直布局，可选为：\r\n                                   // 'horizontal' ¦ 'vertical'\r\n        x: 'left',                 // 水平安放位置，默认为全图左对齐，可选为：\r\n                                   // 'center' ¦ 'left' ¦ 'right'\r\n                                   // ¦ {number}（x坐标，单位px）\r\n        y: 'bottom',               // 垂直安放位置，默认为全图底部，可选为：\r\n                                   // 'top' ¦ 'bottom' ¦ 'center'\r\n                                   // ¦ {number}（y坐标，单位px）\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: '#ccc',       // 值域边框颜色\r\n        borderWidth: 0,            // 值域边框线宽，单位px，默认为0（无边框）\r\n        padding: 5,                // 值域内边距，单位px，默认各方向内边距为5，\r\n                                   // 接受数组分别设定上右下左边距，同css\r\n        itemGap: 10,               // 各个item之间的间隔，单位px，默认为10，\r\n                                   // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n        itemWidth: 20,             // 值域图形宽度，线性渐变水平布局宽度为该值 * 10\r\n        itemHeight: 14,            // 值域图形高度，线性渐变垂直布局高度为该值 * 10\r\n        // min: null,              // 最小值，如果没有指定splitList，则必须指定min和max\r\n        // max: null,              // 最大值，如果没有指定splitList，则必须指定min和max\r\n        precision: 0,              // 小数精度，默认为0，无小数点\r\n        splitNumber: 5,            // 分割段数，默认为5，为0时为线性渐变\r\n        splitList: null,           // 用于用户自定义不等距分割。如果定义了splitList，则splitNumber无效。\r\n                                   // splitList为Array.<Object>，其中每个Object形如：\r\n                                   // {\r\n                                   //   start: 10,          本项的数据范围起点（>=），如果不设置表示负无穷。\r\n                                   //                       如果想本项只对应一个值，那么start和end设同样的数就可以了。\r\n                                   //   end: 90             本项的数据范围终点（<=），如果不设置表示正无穷。\r\n                                   //   label: '10 to 30',  本项的显示标签，缺省则自动生成label。\r\n                                   //   color: '#333'       本项的显示颜色，缺省则自动计算color。\r\n                                   // }\r\n        calculable: false,         // 是否值域漫游，启用后无视splitNumber和splitList，线性渐变\r\n        selectedMode: true,        // 选择模式，默认开启值域开关\r\n        hoverLink: true,\r\n        realtime: true,\r\n        color:['#006edd','#e0ffff'],//颜色\r\n        // formatter: null,\r\n        // text:['高','低'],         // 文本，默认为数值文本\r\n        textStyle: {\r\n            color: '#333'          // 值域文字颜色\r\n        }\r\n    };\r\n\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n    var zrEvent = require('zrenderjs/tool/event');\r\n    var zrArea = require('zrenderjs/tool/area');\r\n    var zrColor = require('zrenderjs/tool/color');\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param {Object} messageCenter echart消息中心\r\n     * @param {ZRender} zr zrender实例\r\n     * @param {Object} option 图表参数\r\n     * @param {Object=} selected 用于状态保持\r\n     */\r\n    function DataRange(ecTheme, messageCenter, zr, option, myChart) {\r\n        Base.call(this, ecTheme, messageCenter, zr, option, myChart);\r\n\r\n        var self = this;\r\n        self._ondrift = function(dx, dy) {\r\n            return self.__ondrift(this, dx, dy);\r\n        };\r\n        self._ondragend = function() {\r\n            return self.__ondragend();\r\n        };\r\n        self._dataRangeSelected = function(param) {\r\n            return self.__dataRangeSelected(param);\r\n        };\r\n        self._dispatchHoverLink = function(param) {\r\n            return self.__dispatchHoverLink(param);\r\n        };\r\n        self._onhoverlink = function(params) {\r\n            return self.__onhoverlink(params);\r\n        };\r\n        this._selectedMap = {};\r\n        this._range = {};\r\n\r\n        this.refresh(option);\r\n\r\n        messageCenter.bind(ecConfig.EVENT.HOVER, this._onhoverlink);\r\n    }\r\n\r\n    DataRange.prototype = {\r\n        type : ecConfig.COMPONENT_TYPE_DATARANGE,\r\n        _textGap : 10, // 非值文字间隔\r\n        _buildShape : function () {\r\n            // 值域元素组的位置参数，通过计算所得x, y, width, height\r\n            this._itemGroupLocation = this._getItemGroupLocation();\r\n            this._buildBackground();\r\n            if (this._isContinuity()) {\r\n                this._buildGradient();\r\n            }\r\n            else {\r\n                this._buildItem();\r\n            }\r\n\r\n            if (this.dataRangeOption.show) {\r\n                for (var i = 0, l = this.shapeList.length; i < l; i++) {\r\n                    this.zr.addShape(this.shapeList[i]);\r\n                }\r\n            }\r\n\r\n            this._syncShapeFromRange();\r\n        },\r\n\r\n        /**\r\n         * 构建图例型的值域元素\r\n         */\r\n        _buildItem : function () {\r\n            var data = this._valueTextList;\r\n            var dataLength = data.length;\r\n            var itemName;\r\n            var itemShape;\r\n            var textShape;\r\n            var font = this.getFont(this.dataRangeOption.textStyle);\r\n\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemWidth = this.dataRangeOption.itemWidth;\r\n            var itemHeight = this.dataRangeOption.itemHeight;\r\n            var itemGap = this.dataRangeOption.itemGap;\r\n            var textHeight = zrArea.getTextHeight('国', font);\r\n            var color;\r\n\r\n            if (this.dataRangeOption.orient == 'vertical'\r\n                && this.dataRangeOption.x == 'right'\r\n            ) {\r\n                lastX = this._itemGroupLocation.x\r\n                        + this._itemGroupLocation.width\r\n                        - itemWidth;\r\n            }\r\n            var needValueText = true;\r\n            if (this.dataRangeOption.text) {\r\n                needValueText = false;\r\n                // 第一个文字\r\n                if (this.dataRangeOption.text[0]) {\r\n                    textShape = this._getTextShape(\r\n                        lastX, lastY, this.dataRangeOption.text[0]\r\n                    );\r\n                    if (this.dataRangeOption.orient == 'horizontal') {\r\n                        lastX += zrArea.getTextWidth(\r\n                                     this.dataRangeOption.text[0],\r\n                                     font\r\n                                 )\r\n                                 + this._textGap;\r\n                    }\r\n                    else {\r\n                        lastY += textHeight + this._textGap;\r\n                        textShape.style.y += textHeight / 2 + this._textGap;\r\n                        textShape.style.textBaseline = 'bottom';\r\n                    }\r\n                    this.shapeList.push(new TextShape(textShape));\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < dataLength; i++) {\r\n                itemName = data[i];\r\n                color = this.getColorByIndex(i);\r\n                // 图形\r\n                itemShape = this._getItemShape(\r\n                    lastX, lastY,\r\n                    itemWidth, itemHeight,\r\n                    (this._selectedMap[i] ? color : '#ccc')\r\n                );\r\n                itemShape._idx = i;\r\n                itemShape.onmousemove = this._dispatchHoverLink;\r\n                if (this.dataRangeOption.selectedMode) {\r\n                    itemShape.clickable = true;\r\n                    itemShape.onclick = this._dataRangeSelected;\r\n                }\r\n                this.shapeList.push(new RectangleShape(itemShape));\r\n\r\n                if (needValueText) {\r\n                    // 文字\r\n                    textShape = {\r\n                        zlevel: this.getZlevelBase(),\r\n                        z: this.getZBase(),\r\n                        style : {\r\n                            x : lastX + itemWidth + 5,\r\n                            y : lastY,\r\n                            color : this._selectedMap[i]\r\n                                    ? this.dataRangeOption.textStyle.color\r\n                                    : '#ccc',\r\n                            text: data[i],\r\n                            textFont: font,\r\n                            textBaseline: 'top'\r\n                        },\r\n                        highlightStyle:{\r\n                            brushType: 'fill'\r\n                        }\r\n                    };\r\n                    if (this.dataRangeOption.orient == 'vertical'\r\n                        && this.dataRangeOption.x == 'right'\r\n                    ) {\r\n                        textShape.style.x -= (itemWidth + 10);\r\n                        textShape.style.textAlign = 'right';\r\n                    }\r\n                    textShape._idx = i;\r\n                    textShape.onmousemove = this._dispatchHoverLink;\r\n                    if (this.dataRangeOption.selectedMode) {\r\n                        textShape.clickable = true;\r\n                        textShape.onclick = this._dataRangeSelected;\r\n                    }\r\n                    this.shapeList.push(new TextShape(textShape));\r\n                }\r\n\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    lastX += itemWidth\r\n                             + (needValueText ? 5 : 0)\r\n                             + (needValueText\r\n                               ? zrArea.getTextWidth(itemName, font)\r\n                               : 0)\r\n                             + itemGap;\r\n                }\r\n                else {\r\n                    lastY += itemHeight + itemGap;\r\n                }\r\n            }\r\n\r\n            if (!needValueText && this.dataRangeOption.text[1]) {\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    lastX = lastX - itemGap + this._textGap;\r\n                }\r\n                else {\r\n                    lastY = lastY - itemGap + this._textGap;\r\n                }\r\n                // 最后一个文字\r\n                textShape = this._getTextShape(\r\n                    lastX, lastY, this.dataRangeOption.text[1]\r\n                );\r\n\r\n                if (this.dataRangeOption.orient != 'horizontal') {\r\n                    textShape.style.y -= 5;\r\n                    textShape.style.textBaseline = 'top';\r\n                }\r\n\r\n                this.shapeList.push(new TextShape(textShape));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建渐变型的值域元素\r\n         */\r\n        _buildGradient : function () {\r\n            var itemShape;\r\n            var textShape;\r\n            var font = this.getFont(this.dataRangeOption.textStyle);\r\n\r\n            var lastX = this._itemGroupLocation.x;\r\n            var lastY = this._itemGroupLocation.y;\r\n            var itemWidth = this.dataRangeOption.itemWidth;\r\n            var itemHeight = this.dataRangeOption.itemHeight;\r\n            var textHeight = zrArea.getTextHeight('国', font);\r\n            var mSize = 10;\r\n\r\n\r\n            var needValueText = true;\r\n            if (this.dataRangeOption.text) {\r\n                needValueText = false;\r\n                // 第一个文字\r\n                if (this.dataRangeOption.text[0]) {\r\n                    textShape = this._getTextShape(\r\n                        lastX, lastY, this.dataRangeOption.text[0]\r\n                    );\r\n                    if (this.dataRangeOption.orient == 'horizontal') {\r\n                        lastX += zrArea.getTextWidth(\r\n                                     this.dataRangeOption.text[0],\r\n                                     font\r\n                                 )\r\n                                 + this._textGap;\r\n                    }\r\n                    else {\r\n                        lastY += textHeight + this._textGap;\r\n                        textShape.style.y += textHeight / 2 + this._textGap;\r\n                        textShape.style.textBaseline = 'bottom';\r\n                    }\r\n                    this.shapeList.push(new TextShape(textShape));\r\n                }\r\n            }\r\n\r\n            var zrColor = require('zrenderjs/tool/color');\r\n            var per = 1 / (this.dataRangeOption.color.length - 1);\r\n            var colorList = [];\r\n            for (var i = 0, l = this.dataRangeOption.color.length; i < l; i++) {\r\n                colorList.push([i * per, this.dataRangeOption.color[i]]);\r\n            }\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                itemShape = {\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style : {\r\n                        x : lastX,\r\n                        y : lastY,\r\n                        width : itemWidth * mSize,\r\n                        height : itemHeight,\r\n                        color : zrColor.getLinearGradient(\r\n                            lastX, lastY, lastX + itemWidth * mSize, lastY,\r\n                            colorList\r\n                        )\r\n                    },\r\n                    hoverable : false\r\n                };\r\n                lastX += itemWidth * mSize + this._textGap;\r\n            }\r\n            else {\r\n                itemShape = {\r\n                    zlevel: this.getZlevelBase(),\r\n                    z: this.getZBase(),\r\n                    style : {\r\n                        x : lastX,\r\n                        y : lastY,\r\n                        width : itemWidth,\r\n                        height : itemHeight * mSize,\r\n                        color : zrColor.getLinearGradient(\r\n                            lastX, lastY, lastX, lastY + itemHeight * mSize,\r\n                            colorList\r\n                        )\r\n                    },\r\n                    hoverable : false\r\n                };\r\n                lastY += itemHeight * mSize + this._textGap;\r\n            }\r\n            this.shapeList.push(new RectangleShape(itemShape));\r\n            // 可计算元素的位置缓存\r\n            this._calculableLocation = itemShape.style;\r\n            if (this.dataRangeOption.calculable) {\r\n                this._buildFiller();\r\n                this._bulidMask();\r\n                this._bulidHandle();\r\n            }\r\n            this._buildIndicator();\r\n\r\n            if (!needValueText && this.dataRangeOption.text[1]) {\r\n                // 最后一个文字\r\n                textShape = this._getTextShape(\r\n                    lastX, lastY, this.dataRangeOption.text[1]\r\n                );\r\n\r\n                this.shapeList.push(new TextShape(textShape));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 构建指示器\r\n         */\r\n        _buildIndicator : function() {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            var size = 5;\r\n            var pointList;\r\n            var textPosition;\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                // 水平\r\n                if (this.dataRangeOption.y != 'bottom') {\r\n                    // 手柄统统在下方\r\n                    pointList = [\r\n                        [x, y + height],\r\n                        [x - size, y + height + size],\r\n                        [x + size, y + height + size]\r\n                    ];\r\n                    textPosition = 'bottom';\r\n                }\r\n                else {\r\n                    // 手柄在上方\r\n                    pointList = [\r\n                        [x, y],\r\n                        [x - size, y - size],\r\n                        [x + size, y - size]\r\n                    ];\r\n                    textPosition = 'top';\r\n                }\r\n            }\r\n            else {\r\n                // 垂直\r\n                if (this.dataRangeOption.x != 'right') {\r\n                    // 手柄统统在右侧\r\n                    pointList = [\r\n                        [x + width, y],\r\n                        [x + width + size, y - size],\r\n                        [x + width + size, y + size]\r\n                    ];\r\n                    textPosition = 'right';\r\n                }\r\n                else {\r\n                    // 手柄在左侧\r\n                    pointList = [\r\n                        [x, y],\r\n                        [x - size, y - size],\r\n                        [x - size, y + size]\r\n                    ];\r\n                    textPosition = 'left';\r\n                }\r\n            }\r\n            this._indicatorShape = {\r\n                style : {\r\n                    pointList : pointList,\r\n                    color : '#fff',\r\n                    __rect : {\r\n                        x : Math.min(pointList[0][0], pointList[1][0]),\r\n                        y : Math.min(pointList[0][1], pointList[1][1]),\r\n                        width : size * (this.dataRangeOption.orient == 'horizontal' ? 2 : 1),\r\n                        height : size * (this.dataRangeOption.orient == 'horizontal' ? 1 : 2)\r\n                    }\r\n                },\r\n                highlightStyle : {\r\n                    brushType : 'fill',\r\n                    textPosition : textPosition,\r\n                    textColor : this.dataRangeOption.textStyle.color\r\n                },\r\n                hoverable: false\r\n            };\r\n            this._indicatorShape = new HandlePolygonShape(this._indicatorShape);\r\n        },\r\n\r\n        /**\r\n         * 构建填充物\r\n         */\r\n        _buildFiller : function () {\r\n            this._fillerShape = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                style : {\r\n                    x : this._calculableLocation.x,\r\n                    y : this._calculableLocation.y,\r\n                    width : this._calculableLocation.width,\r\n                    height : this._calculableLocation.height,\r\n                    color : 'rgba(255,255,255,0)'\r\n                },\r\n                highlightStyle : {\r\n                    strokeColor : 'rgba(255,255,255,0.5)',\r\n                    lineWidth : 1\r\n                },\r\n                draggable : true,\r\n                ondrift : this._ondrift,\r\n                ondragend : this._ondragend,\r\n                onmousemove : this._dispatchHoverLink,\r\n                _type : 'filler'\r\n            };\r\n            this._fillerShape = new RectangleShape(this._fillerShape);\r\n            this.shapeList.push(this._fillerShape);\r\n        },\r\n\r\n        /**\r\n         * 构建拖拽手柄\r\n         */\r\n        _bulidHandle : function () {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            var font = this.getFont(this.dataRangeOption.textStyle);\r\n            var textHeight = zrArea.getTextHeight('国', font);\r\n            var textWidth = Math.max(\r\n                    zrArea.getTextWidth(this._textFormat(this.dataRangeOption.max), font),\r\n                    zrArea.getTextWidth(this._textFormat(this.dataRangeOption.min), font)\r\n                ) + 2;\r\n\r\n            var pointListStart;\r\n            var textXStart;\r\n            var textYStart;\r\n            var coverRectStart;\r\n            var pointListEnd;\r\n            var textXEnd;\r\n            var textYEnd;\r\n            var coverRectEnd;\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                // 水平\r\n                if (this.dataRangeOption.y != 'bottom') {\r\n                    // 手柄统统在下方\r\n                    pointListStart = [\r\n                        [x, y],\r\n                        [x, y + height + textHeight],\r\n                        [x - textHeight, y + height + textHeight],\r\n                        [x - 1, y + height],\r\n                        [x - 1, y]\r\n\r\n                    ];\r\n                    textXStart = x - textWidth / 2 - textHeight;\r\n                    textYStart = y + height + textHeight / 2 + 2;\r\n                    coverRectStart = {\r\n                        x : x - textWidth - textHeight,\r\n                        y : y + height,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n\r\n                    pointListEnd = [\r\n                        [x + width, y],\r\n                        [x + width, y + height + textHeight],\r\n                        [x + width + textHeight, y + height + textHeight],\r\n                        [x + width + 1, y + height],\r\n                        [x + width + 1, y]\r\n                    ];\r\n                    textXEnd = x + width + textWidth / 2 + textHeight;\r\n                    textYEnd = textYStart;\r\n                    coverRectEnd = {\r\n                        x : x + width,\r\n                        y : y + height,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n                }\r\n                else {\r\n                    // 手柄在上方\r\n                    pointListStart = [\r\n                        [x, y + height],\r\n                        [x, y - textHeight],\r\n                        [x - textHeight, y - textHeight],\r\n                        [x - 1, y],\r\n                        [x - 1, y + height]\r\n\r\n                    ];\r\n                    textXStart = x - textWidth / 2 - textHeight;\r\n                    textYStart = y - textHeight / 2 - 2;\r\n                    coverRectStart = {\r\n                        x : x - textWidth - textHeight,\r\n                        y : y - textHeight,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n\r\n                    pointListEnd = [\r\n                        [x + width, y + height],\r\n                        [x + width, y - textHeight],\r\n                        [x + width + textHeight, y - textHeight],\r\n                        [x + width + 1, y],\r\n                        [x + width + 1, y + height]\r\n                    ];\r\n                    textXEnd = x + width + textWidth / 2 + textHeight;\r\n                    textYEnd = textYStart;\r\n                    coverRectEnd = {\r\n                        x : x + width,\r\n                        y : y - textHeight,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n                }\r\n            }\r\n            else {\r\n                textWidth += textHeight;\r\n                // 垂直\r\n                if (this.dataRangeOption.x != 'right') {\r\n                    // 手柄统统在右侧\r\n                    pointListStart = [\r\n                        [x, y],\r\n                        [x + width + textHeight, y],\r\n                        [x + width + textHeight, y - textHeight],\r\n                        [x + width, y - 1],\r\n                        [x, y - 1]\r\n                    ];\r\n                    textXStart = x + width + textWidth / 2 + textHeight / 2;\r\n                    textYStart = y - textHeight / 2;\r\n                    coverRectStart = {\r\n                        x : x + width,\r\n                        y : y - textHeight,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n\r\n                    pointListEnd = [\r\n                        [x, y + height],\r\n                        [x + width + textHeight, y + height],\r\n                        [x + width + textHeight, y + textHeight + height],\r\n                        [x + width, y + 1 + height],\r\n                        [x, y + height + 1]\r\n                    ];\r\n                    textXEnd = textXStart;\r\n                    textYEnd = y  + height + textHeight / 2;\r\n                    coverRectEnd = {\r\n                        x : x + width,\r\n                        y : y + height,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n                }\r\n                else {\r\n                    // 手柄在左侧\r\n                    pointListStart = [\r\n                        [x + width, y],\r\n                        [x - textHeight, y],\r\n                        [x - textHeight, y - textHeight],\r\n                        [x, y - 1],\r\n                        [x + width, y - 1]\r\n                    ];\r\n                    textXStart = x - textWidth / 2 - textHeight / 2;\r\n                    textYStart = y - textHeight / 2;\r\n                    coverRectStart = {\r\n                        x : x - textWidth - textHeight,\r\n                        y : y - textHeight,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n\r\n                    pointListEnd = [\r\n                        [x + width, y + height],\r\n                        [x - textHeight, y + height],\r\n                        [x - textHeight, y + textHeight + height],\r\n                        [x, y + 1 + height],\r\n                        [x + width, y + height + 1]\r\n                    ];\r\n                    textXEnd = textXStart;\r\n                    textYEnd = y  + height + textHeight / 2;\r\n                    coverRectEnd = {\r\n                        x : x - textWidth - textHeight,\r\n                        y : y + height,\r\n                        width : textWidth + textHeight,\r\n                        height : textHeight\r\n                    };\r\n                }\r\n            }\r\n\r\n            this._startShape = {\r\n                style : {\r\n                    pointList : pointListStart,\r\n                    text : this._textFormat(this.dataRangeOption.max),\r\n                    textX : textXStart,\r\n                    textY : textYStart,\r\n                    textFont: font,\r\n                    color : this.getColor(this.dataRangeOption.max),\r\n                    rect : coverRectStart,\r\n                    x : pointListStart[0][0],\r\n                    y : pointListStart[0][1],\r\n                    _x : pointListStart[0][0],   // 拖拽区域控制缓存\r\n                    _y : pointListStart[0][1]\r\n                }\r\n            };\r\n            this._startShape.highlightStyle = {\r\n                strokeColor : this._startShape.style.color,\r\n                lineWidth : 1\r\n            };\r\n\r\n            this._endShape = {\r\n                style : {\r\n                    pointList : pointListEnd,\r\n                    text : this._textFormat(this.dataRangeOption.min),\r\n                    textX : textXEnd,\r\n                    textY : textYEnd,\r\n                    textFont: font,\r\n                    color : this.getColor(this.dataRangeOption.min),\r\n                    rect : coverRectEnd,\r\n                    x : pointListEnd[0][0],\r\n                    y : pointListEnd[0][1],\r\n                    _x : pointListEnd[0][0],   // 拖拽区域控制缓存\r\n                    _y : pointListEnd[0][1]\r\n                }\r\n            };\r\n            this._endShape.highlightStyle = {\r\n                strokeColor : this._endShape.style.color,\r\n                lineWidth : 1\r\n            };\r\n\r\n            // 统一参数\r\n            this._startShape.zlevel              = this._endShape.zlevel    = this.getZlevelBase();\r\n            this._startShape.z                   = this._endShape.z         = this.getZBase() + 1;\r\n            this._startShape.draggable           = this._endShape.draggable = true;\r\n            this._startShape.ondrift             = this._endShape.ondrift   = this._ondrift;\r\n            this._startShape.ondragend           = this._endShape.ondragend = this._ondragend;\r\n\r\n            this._startShape.style.textColor     = this._endShape.style.textColor\r\n                                                            = this.dataRangeOption.textStyle.color;\r\n            this._startShape.style.textAlign     = this._endShape.style.textAlign     = 'center';\r\n            this._startShape.style.textPosition  = this._endShape.style.textPosition  = 'specific';\r\n            this._startShape.style.textBaseline  = this._endShape.style.textBaseline  = 'middle';\r\n            // for ondrif计算统一\r\n            this._startShape.style.width         = this._endShape.style.width         = 0;\r\n            this._startShape.style.height        = this._endShape.style.height        = 0;\r\n            this._startShape.style.textPosition  = this._endShape.style.textPosition  = 'specific';\r\n\r\n            this._startShape = new HandlePolygonShape(this._startShape);\r\n            this._endShape = new HandlePolygonShape(this._endShape);\r\n            this.shapeList.push(this._startShape);\r\n            this.shapeList.push(this._endShape);\r\n        },\r\n\r\n        _bulidMask : function () {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n            this._startMask = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                style : {\r\n                    x : x,\r\n                    y : y,\r\n                    width : this.dataRangeOption.orient == 'horizontal'\r\n                            ? 0 : width,\r\n                    height : this.dataRangeOption.orient == 'horizontal'\r\n                             ? height : 0,\r\n                    color : '#ccc'\r\n                },\r\n                hoverable:false\r\n            };\r\n            this._endMask = {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase() + 1,\r\n                style : {\r\n                    x : this.dataRangeOption.orient == 'horizontal'\r\n                        ? x + width : x,\r\n                    y : this.dataRangeOption.orient == 'horizontal'\r\n                        ? y : y + height,\r\n                    width : this.dataRangeOption.orient == 'horizontal'\r\n                            ? 0 : width,\r\n                    height : this.dataRangeOption.orient == 'horizontal'\r\n                             ? height : 0,\r\n                    color : '#ccc'\r\n                },\r\n                hoverable:false\r\n            };\r\n            this._startMask = new RectangleShape(this._startMask);\r\n            this._endMask = new RectangleShape(this._endMask);\r\n            this.shapeList.push(this._startMask);\r\n            this.shapeList.push(this._endMask);\r\n        },\r\n\r\n        _buildBackground : function () {\r\n            var padding = this.reformCssArray(this.dataRangeOption.padding);\r\n\r\n            this.shapeList.push(new RectangleShape({\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                hoverable :false,\r\n                style : {\r\n                    x : this._itemGroupLocation.x - padding[3],\r\n                    y : this._itemGroupLocation.y - padding[0],\r\n                    width : this._itemGroupLocation.width + padding[3] + padding[1],\r\n                    height : this._itemGroupLocation.height + padding[0] + padding[2],\r\n                    brushType : this.dataRangeOption.borderWidth === 0\r\n                                ? 'fill' : 'both',\r\n                    color : this.dataRangeOption.backgroundColor,\r\n                    strokeColor : this.dataRangeOption.borderColor,\r\n                    lineWidth : this.dataRangeOption.borderWidth\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * 根据选项计算值域实体的位置坐标\r\n         */\r\n        _getItemGroupLocation : function () {\r\n            var data = this._valueTextList;\r\n            var dataLength = data.length;\r\n            var itemGap = this.dataRangeOption.itemGap;\r\n            var itemWidth = this.dataRangeOption.itemWidth;\r\n            var itemHeight = this.dataRangeOption.itemHeight;\r\n            var totalWidth = 0;\r\n            var totalHeight = 0;\r\n            var font = this.getFont(this.dataRangeOption.textStyle);\r\n            var textHeight = zrArea.getTextHeight('国', font);\r\n            var mSize = 10;\r\n\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                // 水平布局，计算总宽度\r\n                if (this.dataRangeOption.text || this._isContinuity()) {\r\n                    // 指定文字或线性渐变\r\n                    totalWidth =\r\n                        (this._isContinuity()\r\n                          ? (itemWidth * mSize + itemGap)\r\n                          : dataLength * (itemWidth + itemGap))\r\n                        + (this.dataRangeOption.text\r\n                           && typeof this.dataRangeOption.text[0] != 'undefined'\r\n                           ? (zrArea.getTextWidth(\r\n                                  this.dataRangeOption.text[0],\r\n                                  font\r\n                              ) + this._textGap)\r\n                           : 0)\r\n                        + (this.dataRangeOption.text\r\n                           && typeof this.dataRangeOption.text[1] != 'undefined'\r\n                           ? (zrArea.getTextWidth(\r\n                                  this.dataRangeOption.text[1],\r\n                                  font\r\n                              ) + this._textGap)\r\n                           : 0);\r\n                }\r\n                else {\r\n                    // 值标签\r\n                    itemWidth += 5;\r\n                    for (var i = 0; i < dataLength; i++) {\r\n                        totalWidth += itemWidth\r\n                                      + zrArea.getTextWidth(\r\n                                            data[i],\r\n                                            font\r\n                                        )\r\n                                      + itemGap;\r\n                    }\r\n                }\r\n                totalWidth -= itemGap;      // 减去最后一个的itemGap\r\n                totalHeight = Math.max(textHeight, itemHeight);\r\n            }\r\n            else {\r\n                // 垂直布局，计算总高度\r\n                var maxWidth;\r\n                if (this.dataRangeOption.text || this._isContinuity()) {\r\n                    // 指定文字或线性渐变\r\n                    totalHeight =\r\n                        (this._isContinuity()\r\n                          ? (itemHeight * mSize + itemGap)\r\n                          : dataLength * (itemHeight + itemGap))\r\n                        + (this.dataRangeOption.text\r\n                           && typeof this.dataRangeOption.text[0] != 'undefined'\r\n                            ? (this._textGap + textHeight)\r\n                            : 0)\r\n                        + (this.dataRangeOption.text\r\n                           && typeof this.dataRangeOption.text[1] != 'undefined'\r\n                            ? (this._textGap + textHeight)\r\n                            : 0);\r\n\r\n                    maxWidth = Math.max(\r\n                        zrArea.getTextWidth(\r\n                            (this.dataRangeOption.text && this.dataRangeOption.text[0])\r\n                            || '',\r\n                            font\r\n                        ),\r\n                        zrArea.getTextWidth(\r\n                            (this.dataRangeOption.text && this.dataRangeOption.text[1])\r\n                            || '',\r\n                            font\r\n                        )\r\n                    );\r\n                    totalWidth = Math.max(itemWidth, maxWidth);\r\n                }\r\n                else {\r\n                    totalHeight = (itemHeight + itemGap) * dataLength;\r\n                    // 值标签\r\n                    itemWidth += 5;\r\n                    maxWidth = 0;\r\n                    for (var i = 0; i < dataLength; i++) {\r\n                        maxWidth = Math.max(\r\n                            maxWidth,\r\n                            zrArea.getTextWidth(\r\n                                data[i],\r\n                                font\r\n                            )\r\n                        );\r\n                    }\r\n                    totalWidth = itemWidth + maxWidth;\r\n                }\r\n                totalHeight -= itemGap;     // 减去最后一个的itemGap;\r\n            }\r\n\r\n            var padding = this.reformCssArray(this.dataRangeOption.padding);\r\n            var x;\r\n            var zrWidth = this.zr.getWidth();\r\n            switch (this.dataRangeOption.x) {\r\n                case 'center' :\r\n                    x = Math.floor((zrWidth - totalWidth) / 2);\r\n                    break;\r\n                case 'left' :\r\n                    x = padding[3] + this.dataRangeOption.borderWidth;\r\n                    break;\r\n                case 'right' :\r\n                    x = zrWidth\r\n                        - totalWidth\r\n                        - padding[1]\r\n                        - this.dataRangeOption.borderWidth;\r\n                    break;\r\n                default :\r\n                    x = this.parsePercent(this.dataRangeOption.x, zrWidth);\r\n                    x = isNaN(x) ? 0 : x;\r\n                    break;\r\n            }\r\n\r\n            var y;\r\n            var zrHeight = this.zr.getHeight();\r\n            switch (this.dataRangeOption.y) {\r\n                case 'top' :\r\n                    y = padding[0] + this.dataRangeOption.borderWidth;\r\n                    break;\r\n                case 'bottom' :\r\n                    y = zrHeight\r\n                        - totalHeight\r\n                        - padding[2]\r\n                        - this.dataRangeOption.borderWidth;\r\n                    break;\r\n                case 'center' :\r\n                    y = Math.floor((zrHeight - totalHeight) / 2);\r\n                    break;\r\n                default :\r\n                    y = this.parsePercent(this.dataRangeOption.y, zrHeight);\r\n                    y = isNaN(y) ? 0 : y;\r\n                    break;\r\n            }\r\n\r\n            if (this.dataRangeOption.calculable) {\r\n                // 留出手柄控件\r\n                var handlerWidth = Math.max(\r\n                    zrArea.getTextWidth(this.dataRangeOption.max, font),\r\n                    zrArea.getTextWidth(this.dataRangeOption.min, font)\r\n                ) + textHeight;\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    if (x < handlerWidth) {\r\n                        x = handlerWidth;\r\n                    }\r\n                    if (x + totalWidth + handlerWidth > zrWidth) {\r\n                        x -= handlerWidth;\r\n                    }\r\n                }\r\n                else {\r\n                    if (y < textHeight) {\r\n                        y = textHeight;\r\n                    }\r\n                    if (y + totalHeight + textHeight > zrHeight) {\r\n                        y -= textHeight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                x : x,\r\n                y : y,\r\n                width : totalWidth,\r\n                height : totalHeight\r\n            };\r\n        },\r\n\r\n        // 指定文本\r\n        _getTextShape : function (x, y, text) {\r\n            return {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style : {\r\n                    x : (this.dataRangeOption.orient == 'horizontal'\r\n                        ? x\r\n                        : this._itemGroupLocation.x\r\n                          + this._itemGroupLocation.width / 2\r\n                        ),\r\n                    y : (this.dataRangeOption.orient == 'horizontal'\r\n                        ? this._itemGroupLocation.y\r\n                          + this._itemGroupLocation.height / 2\r\n                        : y\r\n                        ),\r\n                    color : this.dataRangeOption.textStyle.color,\r\n                    text: text,\r\n                    textFont: this.getFont(this.dataRangeOption.textStyle),\r\n                    textBaseline: (this.dataRangeOption.orient == 'horizontal'\r\n                                   ? 'middle' : 'top'),\r\n                    textAlign: (this.dataRangeOption.orient == 'horizontal'\r\n                               ? 'left' : 'center')\r\n                },\r\n                hoverable : false\r\n            };\r\n        },\r\n\r\n        // 色尺legend item shape\r\n        _getItemShape : function (x, y, width, height, color) {\r\n            return {\r\n                zlevel: this.getZlevelBase(),\r\n                z: this.getZBase(),\r\n                style : {\r\n                    x : x,\r\n                    y : y + 1,\r\n                    width : width,\r\n                    height : height - 2,\r\n                    color : color\r\n                },\r\n                highlightStyle: {\r\n                    strokeColor: color,\r\n                    lineWidth : 1\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * 拖拽范围控制\r\n         */\r\n        __ondrift : function (shape, dx, dy) {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                if (shape.style.x + dx <= x) {\r\n                    shape.style.x = x;\r\n                }\r\n                else if (shape.style.x + dx + shape.style.width >= x + width) {\r\n                    shape.style.x = x + width - shape.style.width;\r\n                }\r\n                else {\r\n                    shape.style.x += dx;\r\n                }\r\n            }\r\n            else {\r\n                if (shape.style.y + dy <= y) {\r\n                    shape.style.y = y;\r\n                }\r\n                else if (shape.style.y + dy + shape.style.height >= y + height) {\r\n                    shape.style.y = y + height - shape.style.height;\r\n                }\r\n                else {\r\n                    shape.style.y += dy;\r\n                }\r\n            }\r\n\r\n            if (shape._type == 'filler') {\r\n                this._syncHandleShape();\r\n            }\r\n            else {\r\n                this._syncFillerShape(shape);\r\n            }\r\n\r\n            if (this.dataRangeOption.realtime) {\r\n                this._dispatchDataRange();\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        __ondragend : function () {\r\n            this.isDragend = true;\r\n        },\r\n\r\n        /**\r\n         * 数据项被拖拽出去\r\n         */\r\n        ondragend : function (param, status) {\r\n            if (!this.isDragend || !param.target) {\r\n                // 没有在当前实例上发生拖拽行为则直接返回\r\n                return;\r\n            }\r\n\r\n            // 别status = {}赋值啊！！\r\n            status.dragOut = true;\r\n            status.dragIn = true;\r\n\r\n            if (!this.dataRangeOption.realtime) {\r\n                this._dispatchDataRange();\r\n            }\r\n\r\n            status.needRefresh = false; // 会有消息触发fresh，不用再刷一遍\r\n            // 处理完拖拽事件后复位\r\n            this.isDragend = false;\r\n\r\n            return;\r\n        },\r\n\r\n        // 外部传入range （calculable为true时有意义）\r\n        _syncShapeFromRange : function () {\r\n            var range = this.dataRangeOption.range || {};\r\n            var optRangeStart = range.start;\r\n            var optRangeEnd = range.end;\r\n            if (optRangeEnd < optRangeStart) {\r\n                optRangeStart = [optRangeEnd, optRangeEnd = optRangeStart][0]; // 反转\r\n            }\r\n\r\n            // 内部使用的_range和option的range的start、end的定义是相反的。\r\n            // 为了支持myChart.setOption(option, true); option中的设置优先。\r\n            this._range.end = optRangeStart != null\r\n                ? optRangeStart\r\n                : (this._range.end != null ? this._range.end : 0);\r\n            this._range.start = optRangeEnd != null\r\n                ? optRangeEnd\r\n                : (this._range.start != null ? this._range.start : 100);\r\n\r\n            if (this._range.start != 100 || this._range.end !== 0) {\r\n                // 非默认满值同步一下图形\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    // 横向\r\n                    var width = this._fillerShape.style.width;\r\n                    this._fillerShape.style.x +=\r\n                        width * (100 - this._range.start) / 100;\r\n                    this._fillerShape.style.width =\r\n                        width * (this._range.start - this._range.end) / 100;\r\n                }\r\n                else {\r\n                    // 纵向\r\n                    var height = this._fillerShape.style.height;\r\n                    this._fillerShape.style.y +=\r\n                        height * (100 - this._range.start) / 100;\r\n                    this._fillerShape.style.height =\r\n                        height * (this._range.start - this._range.end) / 100;\r\n                }\r\n                this.zr.modShape(this._fillerShape.id);\r\n                this._syncHandleShape();\r\n            }\r\n        },\r\n\r\n        _syncHandleShape : function () {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                this._startShape.style.x = this._fillerShape.style.x;\r\n                this._startMask.style.width = this._startShape.style.x - x;\r\n\r\n                this._endShape.style.x = this._fillerShape.style.x\r\n                                    + this._fillerShape.style.width;\r\n                this._endMask.style.x = this._endShape.style.x;\r\n                this._endMask.style.width = x + width - this._endShape.style.x;\r\n\r\n                this._range.start = Math.ceil(\r\n                    100 - (this._startShape.style.x - x) / width * 100\r\n                );\r\n                this._range.end = Math.floor(\r\n                    100 - (this._endShape.style.x - x) / width * 100\r\n                );\r\n            }\r\n            else {\r\n                this._startShape.style.y = this._fillerShape.style.y;\r\n                this._startMask.style.height = this._startShape.style.y - y;\r\n\r\n                this._endShape.style.y = this._fillerShape.style.y\r\n                                    + this._fillerShape.style.height;\r\n                this._endMask.style.y = this._endShape.style.y;\r\n                this._endMask.style.height = y + height - this._endShape.style.y;\r\n\r\n                this._range.start = Math.ceil(\r\n                    100 - (this._startShape.style.y - y) / height * 100\r\n                );\r\n                this._range.end = Math.floor(\r\n                    100 - (this._endShape.style.y - y) / height * 100\r\n                );\r\n            }\r\n\r\n            this._syncShape();\r\n        },\r\n\r\n        _syncFillerShape : function (e) {\r\n            var x = this._calculableLocation.x;\r\n            var y = this._calculableLocation.y;\r\n            var width = this._calculableLocation.width;\r\n            var height = this._calculableLocation.height;\r\n\r\n            var a;\r\n            var b;\r\n            if (this.dataRangeOption.orient == 'horizontal') {\r\n                a = this._startShape.style.x;\r\n                b = this._endShape.style.x;\r\n                if (e.id == this._startShape.id && a >= b) {\r\n                    // _startShape触发\r\n                    b = a;\r\n                    this._endShape.style.x = a;\r\n                }\r\n                else if (e.id == this._endShape.id && a >= b) {\r\n                    // _endShape触发\r\n                    a = b;\r\n                    this._startShape.style.x = a;\r\n                }\r\n                this._fillerShape.style.x = a;\r\n                this._fillerShape.style.width = b - a;\r\n                this._startMask.style.width = a - x;\r\n                this._endMask.style.x = b;\r\n                this._endMask.style.width = x + width - b;\r\n\r\n                this._range.start = Math.ceil(100 - (a - x) / width * 100);\r\n                this._range.end = Math.floor(100 - (b - x) / width * 100);\r\n            }\r\n            else {\r\n                a = this._startShape.style.y;\r\n                b = this._endShape.style.y;\r\n                if (e.id == this._startShape.id && a >= b) {\r\n                    // _startShape触发\r\n                    b = a;\r\n                    this._endShape.style.y = a;\r\n                }\r\n                else if (e.id == this._endShape.id && a >= b) {\r\n                    // _endShape触发\r\n                    a = b;\r\n                    this._startShape.style.y = a;\r\n                }\r\n                this._fillerShape.style.y = a;\r\n                this._fillerShape.style.height = b - a;\r\n                this._startMask.style.height = a - y;\r\n                this._endMask.style.y = b;\r\n                this._endMask.style.height = y + height - b;\r\n\r\n                this._range.start = Math.ceil(100 - (a - y) / height * 100);\r\n                this._range.end = Math.floor(100 - (b - y) / height * 100);\r\n            }\r\n\r\n            this._syncShape();\r\n        },\r\n\r\n        _syncShape : function () {\r\n            this._startShape.position = [\r\n                this._startShape.style.x - this._startShape.style._x,\r\n                this._startShape.style.y - this._startShape.style._y\r\n            ];\r\n\r\n            this._startShape.style.text = this._textFormat(\r\n                this._gap * this._range.start + this.dataRangeOption.min\r\n            );\r\n\r\n            this._startShape.style.color\r\n                = this._startShape.highlightStyle.strokeColor\r\n                = this.getColor(\r\n                    this._gap * this._range.start + this.dataRangeOption.min\r\n                );\r\n\r\n            this._endShape.position = [\r\n                this._endShape.style.x - this._endShape.style._x,\r\n                this._endShape.style.y - this._endShape.style._y\r\n            ];\r\n\r\n            this._endShape.style.text = this._textFormat(\r\n                this._gap * this._range.end + this.dataRangeOption.min\r\n            );\r\n\r\n            this._endShape.style.color\r\n                = this._endShape.highlightStyle.strokeColor\r\n                = this.getColor(\r\n                    this._gap * this._range.end + this.dataRangeOption.min\r\n                );\r\n\r\n            this.zr.modShape(this._startShape.id);\r\n            this.zr.modShape(this._endShape.id);\r\n            this.zr.modShape(this._startMask.id);\r\n            this.zr.modShape(this._endMask.id);\r\n            this.zr.modShape(this._fillerShape.id);\r\n            this.zr.refreshNextFrame();\r\n        },\r\n\r\n        _dispatchDataRange : function () {\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_RANGE,\r\n                null,\r\n                {\r\n                    range : {\r\n                        start : this._range.end,\r\n                        end : this._range.start\r\n                    }\r\n                },\r\n                this.myChart\r\n            );\r\n        },\r\n\r\n\r\n        __dataRangeSelected : function (param) {\r\n            if (this.dataRangeOption.selectedMode === 'single') {\r\n                for (var k in this._selectedMap) {\r\n                    this._selectedMap[k] = false;\r\n                }\r\n            }\r\n            var idx = param.target._idx;\r\n            this._selectedMap[idx] = !this._selectedMap[idx];\r\n\r\n            var valueMax;\r\n            var valueMin;\r\n            if (this._useCustomizedSplit()) {\r\n                valueMax = this._splitList[idx].max;\r\n                valueMin = this._splitList[idx].min;\r\n            }\r\n            else {\r\n                valueMax = (this._colorList.length - idx) * this._gap + this.dataRangeOption.min;\r\n                valueMin = valueMax - this._gap;\r\n            }\r\n\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_RANGE_SELECTED,\r\n                param.event,\r\n                {\r\n                    selected: this._selectedMap,\r\n                    target: idx,\r\n                    valueMax: valueMax,\r\n                    valueMin: valueMin\r\n                },\r\n                this.myChart\r\n            );\r\n\r\n            this.messageCenter.dispatch(ecConfig.EVENT.REFRESH, null, null, this.myChart);\r\n        },\r\n\r\n        /**\r\n         * 产生hover link事件\r\n         */\r\n        __dispatchHoverLink : function(param) {\r\n            var valueMin;\r\n            var valueMax;\r\n            if (this.dataRangeOption.calculable) {\r\n                var totalValue = this.dataRangeOption.max - this.dataRangeOption.min;\r\n                var curValue;\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    curValue = (1 - (zrEvent.getX(param.event) - this._calculableLocation.x)\r\n                               / this._calculableLocation.width)\r\n                               * totalValue;\r\n                }\r\n                else {\r\n                    curValue = (1 - (zrEvent.getY(param.event) - this._calculableLocation.y)\r\n                               / this._calculableLocation.height)\r\n                               * totalValue;\r\n                }\r\n                valueMin = curValue - totalValue * 0.05;\r\n                valueMax = curValue + totalValue * 0.05;\r\n            }\r\n            else if (this._useCustomizedSplit()) {\r\n                var idx = param.target._idx;\r\n                valueMax = this._splitList[idx].max;\r\n                valueMin = this._splitList[idx].min;\r\n            }\r\n            else {\r\n                var idx = param.target._idx;\r\n                valueMax = (this._colorList.length - idx) * this._gap + this.dataRangeOption.min;\r\n                valueMin = valueMax - this._gap;\r\n            }\r\n\r\n            this.messageCenter.dispatch(\r\n                ecConfig.EVENT.DATA_RANGE_HOVERLINK,\r\n                param.event,\r\n                {\r\n                    valueMin : valueMin,\r\n                    valueMax : valueMax\r\n                },\r\n                this.myChart\r\n            );\r\n\r\n            // console.log(param,curValue);\r\n        },\r\n\r\n        __onhoverlink: function(param) {\r\n            if (this.dataRangeOption.show\r\n                && this.dataRangeOption.hoverLink\r\n                && this._indicatorShape\r\n                && param\r\n                && param.seriesIndex != null && param.dataIndex != null\r\n            ) {\r\n                var curValue = param.value;\r\n                if (curValue === '' || isNaN(curValue)) {\r\n                    return;\r\n                }\r\n                if (curValue < this.dataRangeOption.min) {\r\n                    curValue = this.dataRangeOption.min;\r\n                }\r\n                else if (curValue > this.dataRangeOption.max) {\r\n                    curValue = this.dataRangeOption.max;\r\n                }\r\n\r\n                if (this.dataRangeOption.orient == 'horizontal') {\r\n                    this._indicatorShape.position = [\r\n                        (this.dataRangeOption.max - curValue)\r\n                        / (this.dataRangeOption.max - this.dataRangeOption.min)\r\n                        * this._calculableLocation.width,\r\n                        0\r\n                    ];\r\n                }\r\n                else {\r\n                    this._indicatorShape.position = [\r\n                        0,\r\n                        (this.dataRangeOption.max - curValue)\r\n                        / (this.dataRangeOption.max - this.dataRangeOption.min)\r\n                        * this._calculableLocation.height\r\n                    ];\r\n                }\r\n                this._indicatorShape.style.text = this._textFormat(param.value);\r\n                this._indicatorShape.style.color = this.getColor(curValue);\r\n                this.zr.addHoverShape(this._indicatorShape);\r\n            }\r\n        },\r\n\r\n        _textFormat : function(valueStart, valueEnd) {\r\n            var dataRangeOption = this.dataRangeOption;\r\n            if (valueStart !== -Number.MAX_VALUE) {\r\n                valueStart = (+valueStart).toFixed(dataRangeOption.precision);\r\n            }\r\n            if (valueEnd != null && valueEnd !== Number.MAX_VALUE) {\r\n                valueEnd = (+valueEnd).toFixed(dataRangeOption.precision);\r\n            }\r\n            if (dataRangeOption.formatter) {\r\n                if (typeof dataRangeOption.formatter == 'string') {\r\n                    return dataRangeOption.formatter\r\n                        .replace('{value}', valueStart === -Number.MAX_VALUE ? 'min' : valueStart)\r\n                        .replace('{value2}', valueEnd === Number.MAX_VALUE ? 'max' : valueEnd);\r\n                }\r\n                else if (typeof dataRangeOption.formatter == 'function') {\r\n                    return dataRangeOption.formatter.call(\r\n                        this.myChart, valueStart, valueEnd\r\n                    );\r\n                }\r\n            }\r\n\r\n            if (valueEnd == null) {\r\n                return valueStart;\r\n            }\r\n            else {\r\n                if (valueStart === -Number.MAX_VALUE) {\r\n                    return '< ' + valueEnd;\r\n                }\r\n                else if (valueEnd === Number.MAX_VALUE) {\r\n                    return '> ' + valueStart;\r\n                }\r\n                else {\r\n                    return valueStart + ' - ' + valueEnd;\r\n                }\r\n            }\r\n        },\r\n\r\n        _isContinuity: function () {\r\n            var dataRangeOption = this.dataRangeOption;\r\n            return !(\r\n                    dataRangeOption.splitList\r\n                        ? dataRangeOption.splitList.length > 0\r\n                        : dataRangeOption.splitNumber > 0\r\n                )\r\n                || dataRangeOption.calculable;\r\n        },\r\n\r\n        _useCustomizedSplit: function () {\r\n            var dataRangeOption = this.dataRangeOption;\r\n            return dataRangeOption.splitList && dataRangeOption.splitList.length > 0;\r\n        },\r\n\r\n        _buildColorList: function (splitNumber) {\r\n            this._colorList = zrColor.getGradientColors(\r\n                this.dataRangeOption.color,\r\n                Math.max(\r\n                    (splitNumber - this.dataRangeOption.color.length)\r\n                    / (this.dataRangeOption.color.length - 1),\r\n                    0\r\n                ) + 1\r\n            );\r\n\r\n            if (this._colorList.length > splitNumber) {\r\n                var len = this._colorList.length;\r\n                var newColorList = [this._colorList[0]];\r\n                var step = len / (splitNumber - 1);\r\n                for (var i = 1; i < splitNumber - 1; i++) {\r\n                    newColorList.push(this._colorList[Math.floor(i * step)]);\r\n                }\r\n                newColorList.push(this._colorList[len - 1]);\r\n                this._colorList = newColorList;\r\n            }\r\n\r\n            if (this._useCustomizedSplit()) {\r\n                var splitList = this._splitList;\r\n                for (var i = 0, len = splitList.length; i < len; i++) {\r\n                    if (splitList[i].color) {\r\n                        this._colorList[i] = splitList[i].color;\r\n                    }\r\n                }\r\n            }\r\n            // console.log(this._colorList.length)\r\n        },\r\n\r\n        _buildGap: function (splitNumber) {\r\n            if (!this._useCustomizedSplit()) {\r\n                var precision = this.dataRangeOption.precision;\r\n                this._gap = (this.dataRangeOption.max - this.dataRangeOption.min) / splitNumber;\r\n                while (this._gap.toFixed(precision) - 0 != this._gap && precision < 5) {\r\n                    // 精度自适应\r\n                    precision++;\r\n                }\r\n                this.dataRangeOption.precision = precision;\r\n\r\n                this._gap = (\r\n                    (this.dataRangeOption.max - this.dataRangeOption.min) / splitNumber\r\n                ).toFixed(precision) - 0;\r\n            }\r\n        },\r\n\r\n        _buildDataList: function (splitNumber) {\r\n            var valueTextList = this._valueTextList = [];\r\n            var dataRangeOption = this.dataRangeOption;\r\n            var useCustomizedSplit = this._useCustomizedSplit();\r\n\r\n            for (var i = 0; i < splitNumber; i++) {\r\n                this._selectedMap[i] = true;\r\n                var text = '';\r\n\r\n                if (useCustomizedSplit) {\r\n                    var splitListItem = this._splitList[splitNumber - 1 - i];\r\n\r\n                    if (splitListItem.label != null) {\r\n                        text = splitListItem.label;\r\n                    }\r\n                    else if (splitListItem.single != null) {\r\n                        text = this._textFormat(splitListItem.single);\r\n                    }\r\n                    else {\r\n                        text = this._textFormat(splitListItem.min, splitListItem.max);\r\n                    }\r\n                }\r\n                else {\r\n                    text = this._textFormat(\r\n                        i * this._gap + dataRangeOption.min,\r\n                        (i + 1) * this._gap + dataRangeOption.min\r\n                    );\r\n                }\r\n                valueTextList.unshift(text);\r\n            }\r\n        },\r\n\r\n        _buildSplitList: function () {\r\n            if (!this._useCustomizedSplit()) {\r\n                return;\r\n            }\r\n            var splitList = this.dataRangeOption.splitList;\r\n            var splitRangeList = this._splitList = [];\r\n\r\n            for (var i = 0, len = splitList.length; i < len; i++) {\r\n                var splitListItem = splitList[i];\r\n                if (!splitListItem || (splitListItem.start == null && splitListItem.end == null)) {\r\n                    throw new Error('Empty item exists in splitList!');\r\n                }\r\n\r\n                var reformedItem = {\r\n                    label: splitListItem.label,\r\n                    color: splitListItem.color\r\n                };\r\n                reformedItem.min = splitListItem.start;\r\n                reformedItem.max = splitListItem.end;\r\n\r\n                if (reformedItem.min > reformedItem.max) { // Need to be exchanged\r\n                    reformedItem.min = [reformedItem.max, reformedItem.max = reformedItem.min][0];\r\n                }\r\n                if (reformedItem.min === reformedItem.max) {\r\n                    reformedItem.single = reformedItem.max; // Coresponding to single value\r\n                }\r\n                if (reformedItem.min == null) {\r\n                    reformedItem.min = -Number.MAX_VALUE;\r\n                }\r\n                if (reformedItem.max == null) {\r\n                    reformedItem.max = Number.MAX_VALUE;\r\n                }\r\n\r\n                splitRangeList.push(reformedItem);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         */\r\n        refresh : function (newOption) {\r\n            if (newOption) {\r\n                this.option = newOption;\r\n                this.option.dataRange = this.reformOption(this.option.dataRange);\r\n                var dataRangeOption = this.dataRangeOption = this.option.dataRange;\r\n\r\n                if (!this._useCustomizedSplit()\r\n                    && (dataRangeOption.min == null || dataRangeOption.max == null)\r\n                ) {\r\n                    throw new Error('option.dataRange.min or option.dataRange.max has not been defined.');\r\n                }\r\n\r\n                if (!this.myChart.canvasSupported) {\r\n                    // 不支持Canvas的强制关闭实时动画\r\n                    dataRangeOption.realtime = false;\r\n                }\r\n\r\n                var splitNumber = this._isContinuity()\r\n                    ? 100\r\n                    : (this._useCustomizedSplit()\r\n                        ? dataRangeOption.splitList.length\r\n                        : dataRangeOption.splitNumber\r\n                    );\r\n\r\n                this._buildSplitList();\r\n                this._buildColorList(splitNumber);\r\n                this._buildGap(splitNumber);\r\n                this._buildDataList(splitNumber);\r\n            }\r\n\r\n            this.clear();\r\n            this._buildShape();\r\n        },\r\n\r\n        getColor : function (value) {\r\n            if (isNaN(value)) {\r\n                return null;\r\n            }\r\n            var idx;\r\n\r\n            if (!this._useCustomizedSplit()) {\r\n                if (this.dataRangeOption.min == this.dataRangeOption.max) {\r\n                    return this._colorList[0];\r\n                }\r\n\r\n                if (value < this.dataRangeOption.min) {\r\n                    value = this.dataRangeOption.min;\r\n                }\r\n                else if (value > this.dataRangeOption.max) {\r\n                    value = this.dataRangeOption.max;\r\n                }\r\n\r\n                if (this.dataRangeOption.calculable) {\r\n                    if (value - (this._gap * this._range.start + this.dataRangeOption.min) > 0.00005\r\n                        || value - (this._gap * this._range.end + this.dataRangeOption.min) < -0.00005) {\r\n                         return null;\r\n                    }\r\n                }\r\n\r\n                idx = this._colorList.length - Math.ceil(\r\n                    (value - this.dataRangeOption.min)\r\n                    / (this.dataRangeOption.max - this.dataRangeOption.min)\r\n                    * this._colorList.length\r\n                );\r\n                if (idx == this._colorList.length) {\r\n                    idx--;\r\n                }\r\n            }\r\n            else {\r\n                var splitRangeList = this._splitList;\r\n                for (var i = 0, len = splitRangeList.length; i < len; i++) {\r\n                    if (splitRangeList[i].min <= value && splitRangeList[i].max >= value) {\r\n                        idx = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //console.log(value, idx,this._colorList[idx])\r\n            if (this._selectedMap[idx]) {\r\n                return this._colorList[idx];\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        getColorByIndex : function (idx) {\r\n            if (idx >= this._colorList.length) {\r\n                idx = this._colorList.length - 1;\r\n            }\r\n            else if (idx < 0) {\r\n                idx = 0;\r\n            }\r\n            return this._colorList[idx];\r\n        },\r\n\r\n        /**\r\n         * 释放后实例不可用\r\n         */\r\n        onbeforDispose : function () {\r\n            this.messageCenter.unbind(ecConfig.EVENT.HOVER, this._onhoverlink);\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(DataRange, Base);\r\n\r\n    require('../component').define('dataRange', DataRange);\r\n\r\n    return DataRange;\r\n});\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/component/dataRange.js\n// module id = 95\n// module chunks = 0","/**\r\n * zrender\r\n *\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *\r\n * shape类：handlePolygon，dataRange手柄\r\n */\r\ndefine(function (require) {\r\n    var Base = require('zrenderjs/shape/Base');\r\n    var PolygonShape = require('zrenderjs/shape/Polygon');\r\n    var zrUtil = require('zrenderjs/tool/util');\r\n\r\n    function HandlePolygon(options) {\r\n        Base.call(this, options);\r\n    }\r\n\r\n    HandlePolygon.prototype = {\r\n        type : 'handle-polygon',\r\n        /**\r\n         * 创建多边形路径\r\n         * @param {Context2D} ctx Canvas 2D上下文\r\n         * @param {Object} style 样式\r\n         */\r\n        buildPath : function (ctx, style) {\r\n            PolygonShape.prototype.buildPath(\r\n                ctx, style\r\n            );\r\n        },\r\n        isCover : function (x, y) {\r\n            var originPos = this.transformCoordToLocal(x, y);\r\n            x = originPos[0];\r\n            y = originPos[1];\r\n\r\n            // 不能缓存rect！\r\n            var rect = this.style.rect;\r\n            if (x >= rect.x\r\n                && x <= (rect.x + rect.width)\r\n                && y >= rect.y\r\n                && y <= (rect.y + rect.height)\r\n            ) {\r\n                // 矩形内\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    zrUtil.inherits(HandlePolygon, Base);\r\n\r\n    return HandlePolygon;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/util/shape/HandlePolygon.js\n// module id = 96\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('div',{staticClass:\"chart\",style:(_vm.setChartContainer)})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-21f2da39\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/lib/VueEchartWordcloud.vue\n// module id = 97\n// module chunks = 0"],"sourceRoot":""}